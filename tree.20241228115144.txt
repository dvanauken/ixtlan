+-- .angular
|   \-- cache
+-- dist
|   \-- ixtlan
|       +-- components
|       |   +-- ixt-accordian
|       |   |   --- ixt-accordian.component.d.ts: import * as i0 from "@angular/core"; export interface AccordionPanel { title: string; content: string; isOpen?: boolean; } export declare class IxtAccordianComponent { panels: AccordionPanel[]; allowMultiple: boolean; togglePanel(index: number): void; static ɵfac: i0.ɵɵFactoryDeclaration<IxtAccordianComponent, never>; static ɵcmp: i0.ɵɵComponentDeclaration<IxtAccordianComponent, "ixt-accordian", never, { "panels": { "alias": "panels"; "required": false; }; "allowMultiple": { "alias": "allowMultiple"; "required": false; }; }, {}, never, never, false, never>; }
|       |   |   --- ixt-accordian.index.d.ts: export * from './ixt-accordian.component'; export * from './ixt-accordian.module'; export interface AccordionPanel { title: string; content: string; isOpen?: boolean; }
|       |   |   --- ixt-accordian.module.d.ts: import * as i0 from "@angular/core"; import * as i1 from "./ixt-accordian.component"; import * as i2 from "@angular/common"; import * as i3 from "@angular/platform-browser/animations"; export declare class IxtAccordianModule { static ɵfac: i0.ɵɵFactoryDeclaration<IxtAccordianModule, never>; static ɵmod: i0.ɵɵNgModuleDeclaration<IxtAccordianModule, [typeof i1.IxtAccordianComponent], [typeof i2.CommonModule, typeof i3.BrowserAnimationsModule], [typeof i1.IxtAccordianComponent]>; static ɵinj: i0.ɵɵInjectorDeclaration<IxtAccordianModule>; }
|       |   +-- ixt-button
|       |   |   --- ixt-button.component.d.ts: import { EventEmitter } from '@angular/core'; import { ThemeVariant, ThemeColors } from '../theme/theme.types'; import * as i0 from "@angular/core"; export type ButtonSize = 'sm' | 'md' | 'lg'; export declare class IxtButtonComponent { variant: ThemeVariant; size: ButtonSize; disabled: boolean; type: 'button' | 'submit' | 'reset'; theme: ThemeColors; onClick: EventEmitter<MouseEvent>; protected isHovered: boolean; protected isActive: boolean; protected get buttonStyles(): Record<string, string>; static ɵfac: i0.ɵɵFactoryDeclaration<IxtButtonComponent, never>; static ɵcmp: i0.ɵɵComponentDeclaration<IxtButtonComponent, "ixt-button", never, { "variant": { "alias": "variant"; "required": false; }; "size": { "alias": "size"; "required": false; }; "disabled": { "alias": "disabled"; "required": false; }; "type": { "alias": "type"; "required": false; }; "theme": { "alias": "theme"; "required": false; }; }, { "onClick": "onClick"; }, never, ["[prefix]", "*", "[suffix]"], false, never>; }
|       |   |   --- ixt-button.index.d.ts: export { IxtButtonComponent } from './ixt-button.component'; export { IxtButtonModule } from './ixt-button.module'; export type { ButtonSize } from './ixt-button.component';
|       |   |   --- ixt-button.module.d.ts: import * as i0 from "@angular/core"; import * as i1 from "./ixt-button.component"; import * as i2 from "@angular/common"; import * as i3 from "@angular/material/button"; import * as i4 from "@angular/material/icon"; export declare class IxtButtonModule { static ɵfac: i0.ɵɵFactoryDeclaration<IxtButtonModule, never>; static ɵmod: i0.ɵɵNgModuleDeclaration<IxtButtonModule, [typeof i1.IxtButtonComponent], [typeof i2.CommonModule, typeof i3.MatButtonModule, typeof i4.MatIconModule], [typeof i1.IxtButtonComponent]>; static ɵinj: i0.ɵɵInjectorDeclaration<IxtButtonModule>; }
|       |   +-- ixt-calendar
|       |   |   +-- calculators
|       |   |   |   --- indian-holidays.d.ts: import { Holiday } from "../models/holiday.interface"; import { HolidayCalculator } from '../models/holiday-calculator'; export declare class IndianHolidayCalculator extends HolidayCalculator { getHolidays(year: number): Holiday[]; private calculateDiwali; private calculateHoli; }
|       |   |   |   --- islamic-holidays.d.ts: import { Holiday } from "../models/holiday.interface"; import { HolidayCalculator } from '../models/holiday-calculator'; export declare class IslamicHolidayCalculator extends HolidayCalculator { getHolidays(year: number): Holiday[]; private calculateEidAlFitr; private calculateEidAlAdha; private calculateIslamicNewYear; }
|       |   |   |   --- usa-holidays.d.ts: import { Holiday } from '../models/holiday.interface'; import { HolidayCalculator } from '../models/holiday-calculator'; export declare class USAHolidayCalculator extends HolidayCalculator { getHolidays(year: number): Holiday[]; private calculateEaster; }
|       |   |   +-- models
|       |   |   |   --- holiday-calculator.d.ts: import { Holiday } from "./holiday.interface"; export declare abstract class HolidayCalculator { abstract getHolidays(year: number): Holiday[]; protected nthWeekdayOfMonth(year: number, month: number, weekday: number, n: number): Date; protected lastWeekdayOfMonth(year: number, month: number, weekday: number): Date; }
|       |   |   |   --- holiday.interface.d.ts: export interface Holiday { name: string; date: Date; type: 'federal' | 'religious' | 'cultural'; }
|       |   |   --- ixt-calendar.component.d.ts: import { OnInit } from '@angular/core'; import { FormControl } from '@angular/forms'; import { CalendarDay } from './ixt-calendar.interfaces'; import * as i0 from "@angular/core"; export declare class IxtCalendarComponent implements OnInit { private holidayCalculators; months: string[]; weekDays: string[]; calendarDays: CalendarDay[]; monthControl: FormControl<number | null>; yearControl: FormControl<number | null>; private holidays; ngOnInit(): void; private updateHolidays; generateCalendar(): void; private createCalendarDay; previousMonth(): void; nextMonth(): void; validateYear(): void; static ɵfac: i0.ɵɵFactoryDeclaration<IxtCalendarComponent, never>; static ɵcmp: i0.ɵɵComponentDeclaration<IxtCalendarComponent, "ixt-calendar", never, {}, {}, never, never, false, never>; }
|       |   |   --- ixt-calendar.index.d.ts: export * from './ixt-calendar.component'; export * from './ixt-calendar.module'; export interface CalendarDay { date: Date; isWeekend: boolean; holidays: Holiday[]; } export interface Holiday { name: string; date: Date; type: 'federal' | 'religious' | 'cultural'; } export * from './calculators/usa-holidays'; export * from './calculators/indian-holidays'; export * from './calculators/islamic-holidays';
|       |   |   --- ixt-calendar.interfaces.d.ts: import { Holiday } from "./models/holiday.interface"; export interface CalendarDay { date: Date; isWeekend: boolean; holidays: Holiday[]; }
|       |   |   --- ixt-calendar.module.d.ts: import * as i0 from "@angular/core"; import * as i1 from "./ixt-calendar.component"; import * as i2 from "@angular/common"; import * as i3 from "@angular/forms"; export declare class IxtCalendarModule { static ɵfac: i0.ɵɵFactoryDeclaration<IxtCalendarModule, never>; static ɵmod: i0.ɵɵNgModuleDeclaration<IxtCalendarModule, [typeof i1.IxtCalendarComponent], [typeof i2.CommonModule, typeof i3.ReactiveFormsModule], [typeof i1.IxtCalendarComponent]>; static ɵinj: i0.ɵɵInjectorDeclaration<IxtCalendarModule>; }
|       |   +-- ixt-canvas
|       |   |   --- ixt-canvas.component.d.ts: import { AfterViewInit } from '@angular/core'; import * as i0 from "@angular/core"; export declare class IxtCanvasComponent implements AfterViewInit { private canvasRef; private ctx; private isDrawing; private lastPoint; private lineWidth; private strokeStyle; ngAfterViewInit(): void; private resizeCanvas; private initializeCanvas; onMouseDown(event: MouseEvent): void; onMouseMove(event: MouseEvent): void; onMouseUp(): void; private getMousePos; private draw; setColor(color: string): void; setLineWidth(width: number): void; clear(): void; static ɵfac: i0.ɵɵFactoryDeclaration<IxtCanvasComponent, never>; static ɵcmp: i0.ɵɵComponentDeclaration<IxtCanvasComponent, "ixt-canvas", never, {}, {}, never, never, false, never>; }
|       |   |   --- ixt-canvas.index.d.ts: export * from './ixt-canvas.component'; export * from './ixt-canvas.module'; export interface DrawingConfig { color?: string; lineWidth?: number; }
|       |   |   --- ixt-canvas.module.d.ts: import * as i0 from "@angular/core"; import * as i1 from "./ixt-canvas.component"; import * as i2 from "@angular/common"; export declare class IxtCanvasModule { static ɵfac: i0.ɵɵFactoryDeclaration<IxtCanvasModule, never>; static ɵmod: i0.ɵɵNgModuleDeclaration<IxtCanvasModule, [typeof i1.IxtCanvasComponent], [typeof i2.CommonModule], [typeof i1.IxtCanvasComponent]>; static ɵinj: i0.ɵɵInjectorDeclaration<IxtCanvasModule>; }
|       |   +-- ixt-diagram
|       |   |   +-- types
|       |   |   |   +-- EBNF
|       |   |   |   |   --- ixt-ebnf.diagram.d.ts: import { ElementRef, OnInit } from '@angular/core'; import * as i0 from "@angular/core"; interface Node { id: string; x: number; y: number; width: number; height: number; isDragging: boolean; type: 'terminal' | 'nonterminal' | 'operator'; label: string; } interface Edge { from: string; to: string; type: 'sequence' | 'alternative' | 'optional' | 'repetition'; } export declare class IxtEbnfDiagram implements OnInit { canvasRef: ElementRef<HTMLCanvasElement>; private ctx; width: number; height: number; nodes: Node[]; edges: Edge[]; private draggedNode; private lastX; private lastY; ngOnInit(): void; private drawNodes; private drawEdges; private calculateEdgePoints; private drawArrow; private drawEdgeType; private roundRect; onMouseDown(event: MouseEvent): void; onMouseMove(event: MouseEvent): void; onMouseUp(): void; autoLayout(): void; private applyHierarchicalConstraints; private minimizeCrossings; private getLevels; exportLayout(): string; importLayout(layoutStr: string): void; private scale; zoomIn(): void; zoomOut(): void; private applyZoom; private selectedNode; selectNode(event: MouseEvent): void; private drawSelectedNode; private draw; private getMidPoint; private getPointOnCurve; static ɵfac: i0.ɵɵFactoryDeclaration<IxtEbnfDiagram, never>; static ɵcmp: i0.ɵɵComponentDeclaration<IxtEbnfDiagram, "ixt-ebnf", never, {}, {}, never, never, false, never>; } export {};
|       |   |   |   |   --- ixt-ebnf.module.d.ts: import * as i0 from "@angular/core"; import * as i1 from "./ixt-ebnf.diagram"; import * as i2 from "@angular/common"; export declare class IxtEbnfModule { static ɵfac: i0.ɵɵFactoryDeclaration<IxtEbnfModule, never>; static ɵmod: i0.ɵɵNgModuleDeclaration<IxtEbnfModule, [typeof i1.IxtEbnfDiagram], [typeof i2.CommonModule], [typeof i1.IxtEbnfDiagram]>; static ɵinj: i0.ɵɵInjectorDeclaration<IxtEbnfModule>; }
|       |   |   |   |   --- ixt-ebnf.types.d.ts: /** * Represents the type of node in the EBNF diagram */ export type NodeType = 'terminal' | 'nonterminal' | 'operator'; /** * Represents the type of edge connection in the EBNF diagram */ export type EdgeType = 'sequence' | 'alternative' | 'optional' | 'repetition'; /** * Represents a position in the 2D space */ export interface Point { x: number; y: number; } /** * Represents the dimensions of a node */ export interface Dimensions { width: number; height: number; } /** * Represents a node in the EBNF diagram */ export interface EbnfNode extends Point, Dimensions { id: string; label: string; type: NodeType; isDragging: boolean; selected?: boolean; data?: Record<string, any>; } /** * Represents an edge connecting two nodes in the EBNF diagram */ export interface EbnfEdge { id: string; from: string; to: string; type: EdgeType; label?: string; points?: Point[]; selected?: boolean; } /** * Configuration options for the EBNF diagram */ export interface EbnfConfig { width: number; height: number; nodePadding: number; levelSpacing: number; nodeSpacing: number; edgeRadius: number; fontSize: number; fontFamily: string; colors: EbnfColors; animation: EbnfAnimationConfig; } /** * Color configuration for the diagram */ export interface EbnfColors { terminal: { fill: string; stroke: string; text: string; }; nonterminal: { fill: string; stroke: string; text: string; }; operator: { fill: string; stroke: string; text: string; }; edge: { line: string; text: string; arrow: string; }; selection: { fill: string; stroke: string; }; } /** * Animation configuration */ export interface EbnfAnimationConfig { duration: number; easing: 'linear' | 'easeIn' | 'easeOut' | 'easeInOut'; } /** * Layout options for the diagram */ export interface LayoutOptions { type: 'hierarchical' | 'force-directed' | 'radial'; direction?: 'LR' | 'RL' | 'TB' | 'BT'; alignGrid?: boolean; minimizeCrossings?: boolean; nodeSpacing?: number; rankSpacing?: number; } /** * Complete diagram state */ export interface DiagramState { nodes: EbnfNode[]; edges: EbnfEdge[]; config: EbnfConfig; layout: LayoutOptions; selectedItems: { nodes: string[]; edges: string[]; }; } /** * Event types for diagram interactions */ export type DiagramEventType = 'nodeClick' | 'nodeDoubleClick' | 'nodeDragStart' | 'nodeDrag' | 'nodeDragEnd' | 'edgeClick' | 'canvasClick' | 'selectionChange' | 'layoutChange'; /** * Base event interface for diagram events */ export interface DiagramEvent { type: DiagramEventType; timestamp: number; } /** * Node-specific event interface */ export interface NodeEvent extends DiagramEvent { node: EbnfNode; position: Point; } /** * Edge-specific event interface */ export interface EdgeEvent extends DiagramEvent { edge: EbnfEdge; position: Point; } /** * Selection change event interface */ export interface SelectionChangeEvent extends DiagramEvent { selectedNodes: string[]; selectedEdges: string[]; previousSelection: { nodes: string[]; edges: string[]; }; } /** * Layout change event interface */ export interface LayoutChangeEvent extends DiagramEvent { previousLayout: LayoutOptions; newLayout: LayoutOptions; } /** * View state for handling zoom and pan */ export interface ViewState { scale: number; translation: Point; bounds: { minX: number; minY: number; maxX: number; maxY: number; }; } /** * Service interface for the EBNF diagram */ export interface IxtEbnfService { getLayout(): DiagramState; updateLayout(options: Partial<LayoutOptions>): void; addNode(node: Omit<EbnfNode, 'x' | 'y'>): EbnfNode; removeNode(nodeId: string): void; addEdge(edge: Omit<EbnfEdge, 'id'>): EbnfEdge; removeEdge(edgeId: string): void; selectItems(nodes: string[], edges: string[]): void; exportDiagram(): string; importDiagram(data: string): void; getViewState(): ViewState; setViewState(state: Partial<ViewState>): void; }
|       |   |   |   |   --- ixt.ebnf.index.d.ts: export * from './ixt-ebnf.diagram'; export * from './ixt-ebnf.module'; export interface EbnfNode { id: string; x: number; y: number; width: number; height: number; isDragging: boolean; type: 'terminal' | 'nonterminal' | 'operator'; label: string; } export interface EbnfEdge { from: string; to: string; type: 'sequence' | 'alternative' | 'optional' | 'repetition'; } export interface EbnfLayout { nodes: EbnfNode[]; edges: EbnfEdge[]; } export * from './ixt-ebnf.types';
|       |   |   |   +-- clazz
|       |   |   |   |   --- ixt-clazz.diagram.d.ts: import { ElementRef, AfterViewInit, OnDestroy } from '@angular/core'; import * as i0 from "@angular/core"; export declare class IxtClazzDiagram implements AfterViewInit, OnDestroy { canvasRef: ElementRef<HTMLCanvasElement>; private ctx; private classes; private relationships; private isDragging; private selectedClass; private dragOffset; private animationFrameId; ngAfterViewInit(): void; ngOnDestroy(): void; private resizeCanvas; private draw; private drawClass; private drawRelationships; private getConnectionPoint; private getAngle; private drawInheritanceArrow; private drawImplementationArrow; private drawCompositionDiamond; onMouseDown(event: MouseEvent): void; onMouseMove(event: MouseEvent): void; onMouseUp(): void; applyForceDirectedLayout(): void; private calculateBounds; static ɵfac: i0.ɵɵFactoryDeclaration<IxtClazzDiagram, never>; static ɵcmp: i0.ɵɵComponentDeclaration<IxtClazzDiagram, "ixt-clazz", never, {}, {}, never, never, false, never>; }
|       |   |   |   |   --- ixt-clazz.index.d.ts: export * from './ixt-clazz.diagram'; export * from './ixt-clazz.module'; export interface UMLClass { id: string; name: string; attributes: string[]; methods: string[]; x: number; y: number; width: number; height: number; } export interface Relationship { from: string; to: string; type: 'inheritance' | 'implementation' | 'association' | 'composition'; }
|       |   |   |   |   --- ixt-clazz.module.d.ts: import * as i0 from "@angular/core"; import * as i1 from "./ixt-clazz.diagram"; import * as i2 from "@angular/common"; export declare class IxtClazzModule { static ɵfac: i0.ɵɵFactoryDeclaration<IxtClazzModule, never>; static ɵmod: i0.ɵɵNgModuleDeclaration<IxtClazzModule, [typeof i1.IxtClazzDiagram], [typeof i2.CommonModule], [typeof i1.IxtClazzDiagram]>; static ɵinj: i0.ɵɵInjectorDeclaration<IxtClazzModule>; }
|       |   |   |   +-- deployment
|       |   |   |   |   --- ixt-deployment.diagram.d.ts: import { ElementRef, OnInit } from '@angular/core'; import { DeploymentNode, Connection } from './ixt-deployment.types'; import * as i0 from "@angular/core"; export declare class IxtDeploymentDiagram implements OnInit { canvasRef: ElementRef<HTMLCanvasElement>; private ctx; width: number; height: number; nodes: DeploymentNode[]; connections: Connection[]; private draggedNode; private dragStartX; private dragStartY; private nodeOffsetX; private nodeOffsetY; private readonly REPULSION; private readonly ATTRACTION; private readonly DAMPING; private readonly MIN_DISTANCE; ngOnInit(): void; private draw; private drawNode; private drawServer; private drawDatabase; private drawService; private drawContainer; private drawConnections; private calculateConnectionPoints; private drawArrow; onMouseDown(event: MouseEvent): void; onMouseMove(event: MouseEvent): void; onMouseUp(): void; autoLayout(): void; private resolveOverlaps; private isOverlapping; saveLayout(): string; loadLayout(layoutJson: string): void; static ɵfac: i0.ɵɵFactoryDeclaration<IxtDeploymentDiagram, never>; static ɵcmp: i0.ɵɵComponentDeclaration<IxtDeploymentDiagram, "ixt-deployment", never, {}, {}, never, never, false, never>; }
|       |   |   |   |   --- ixt-deployment.index.d.ts: export * from './ixt-deployment.diagram'; export * from './ixt-deployment.module'; export * from './ixt-deployment.types';
|       |   |   |   |   --- ixt-deployment.module.d.ts: import * as i0 from "@angular/core"; import * as i1 from "./ixt-deployment.diagram"; import * as i2 from "@angular/common"; export declare class IxtDeploymentModule { static ɵfac: i0.ɵɵFactoryDeclaration<IxtDeploymentModule, never>; static ɵmod: i0.ɵɵNgModuleDeclaration<IxtDeploymentModule, [typeof i1.IxtDeploymentDiagram], [typeof i2.CommonModule], [typeof i1.IxtDeploymentDiagram]>; static ɵinj: i0.ɵɵInjectorDeclaration<IxtDeploymentModule>; }
|       |   |   |   |   --- ixt-deployment.types.d.ts: export interface DeploymentNode { id: string; type: 'server' | 'database' | 'service' | 'container'; x: number; y: number; width: number; height: number; label: string; } export interface Connection { from: string; to: string; type: 'deploys' | 'depends' | 'communicates'; } export interface DeploymentDiagramConfig { width?: number; height?: number; minDistance?: number; repulsionForce?: number; attractionForce?: number; dampingFactor?: number; }
|       |   |   |   +-- flow
|       |   |   |   |   --- ixt-flow.diagram.d.ts: import { ElementRef, OnInit, AfterViewInit } from '@angular/core'; import * as i0 from "@angular/core"; export declare class IxtFlowDiagram implements OnInit, AfterViewInit { canvasRef: ElementRef<HTMLCanvasElement>; private ctx; private nodes; private edges; private selectedNode; private dragOffset; private readonly REPULSION; private readonly ATTRACTION; private readonly DAMPING; private readonly MIN_DISTANCE; constructor(); ngOnInit(): void; ngAfterViewInit(): void; private initializeGraph; private draw; private drawNode; private drawEdge; private calculateEdgePoints; private drawArrow; private getMidPoint; onMouseDown(event: MouseEvent): void; onMouseMove(event: MouseEvent): void; onMouseUp(): void; autoLayout(): void; static ɵfac: i0.ɵɵFactoryDeclaration<IxtFlowDiagram, never>; static ɵcmp: i0.ɵɵComponentDeclaration<IxtFlowDiagram, "ixt-flow", never, {}, {}, never, never, false, never>; }
|       |   |   |   |   --- ixt-flow.index.d.ts: export * from './ixt-flow.module'; export * from './ixt-flow.diagram'; export interface FlowNode { id: string; x: number; y: number; width: number; height: number; type: 'rectangle' | 'diamond' | 'circle'; label: string; isDragging: boolean; } export interface FlowEdge { from: string; to: string; label?: string; } export interface IxtFlowConfig { canvasWidth?: number; canvasHeight?: number; nodeDefaults?: { width: number; height: number; padding: number; }; layout?: { repulsion: number; attraction: number; damping: number; minDistance: number; }; style?: { nodeFill: string; nodeStroke: string; edgeColor: string; textColor: string; fontFamily: string; fontSize: number; }; }
|       |   |   |   |   --- ixt-flow.module.d.ts: import * as i0 from "@angular/core"; import * as i1 from "./ixt-flow.diagram"; import * as i2 from "@angular/common"; export declare class IxtFlowModule { static forRoot(): { ngModule: typeof IxtFlowModule; providers: never[]; }; static forChild(): { ngModule: typeof IxtFlowModule; providers: never[]; }; static ɵfac: i0.ɵɵFactoryDeclaration<IxtFlowModule, never>; static ɵmod: i0.ɵɵNgModuleDeclaration<IxtFlowModule, [typeof i1.IxtFlowDiagram], [typeof i2.CommonModule], [typeof i1.IxtFlowDiagram]>; static ɵinj: i0.ɵɵInjectorDeclaration<IxtFlowModule>; }
|       |   |   |   +-- gannt
|       |   |   |   |   --- gannt.diagram.d.ts: import { OnInit, ElementRef, AfterViewInit } from '@angular/core'; import * as i0 from "@angular/core"; export declare class IxtGanntDiagram implements OnInit, AfterViewInit { canvasRef: ElementRef<HTMLCanvasElement>; private ctx; private flights; canvasWidth: number; canvasHeight: number; private readonly HOUR_WIDTH; private readonly LANE_HEIGHT; private readonly MIN_FLIGHT_DURATION; private readonly MAX_FLIGHT_DURATION; private readonly MIN_GROUND_TIME; private isDragging; private selectedPuck; private dragOffsetX; private dragOffsetY; private isResizing; private resizeEdge; private airports; constructor(); ngOnInit(): void; ngAfterViewInit(): void; private generateSampleFlights; private timeToX; private calculateWidth; private draw; private drawGrid; private drawTimeline; private drawFlights; onMouseDown(event: MouseEvent): void; onMouseMove(event: MouseEvent): void; onMouseUp(): void; private findClickedPuck; private hasConflict; static ɵfac: i0.ɵɵFactoryDeclaration<IxtGanntDiagram, never>; static ɵcmp: i0.ɵɵComponentDeclaration<IxtGanntDiagram, "gannt-diagram", never, {}, {}, never, never, false, never>; }
|       |   |   |   |   --- gannt.index.d.ts: export * from './gannt.diagram'; export * from './gannt.module';
|       |   |   |   |   --- gannt.module.d.ts: import * as i0 from "@angular/core"; import * as i1 from "./gannt.diagram"; import * as i2 from "@angular/common"; export declare class IxtGanntModule { static ɵfac: i0.ɵɵFactoryDeclaration<IxtGanntModule, never>; static ɵmod: i0.ɵɵNgModuleDeclaration<IxtGanntModule, [typeof i1.IxtGanntDiagram], [typeof i2.CommonModule], [typeof i1.IxtGanntDiagram]>; static ɵinj: i0.ɵɵInjectorDeclaration<IxtGanntModule>; }
|       |   |   |   +-- network
|       |   |   |   |   --- ixt-network.diagram.d.ts: import { ElementRef, AfterViewInit, OnDestroy } from '@angular/core'; import * as i0 from "@angular/core"; interface NetworkNode { id: string; label: string; type: 'service' | 'database' | 'loadbalancer' | 'gateway' | 'cache'; x: number; y: number; width: number; height: number; vx: number; vy: number; } interface NetworkEdge { from: string; to: string; type: 'sync' | 'async' | 'depends'; } export declare class IxtNetworkDiagram implements AfterViewInit, OnDestroy { canvasRef: ElementRef<HTMLCanvasElement>; private ctx; private animationFrameId; private isDragging; private selectedNode; private mouseOffset; width: number; height: number; nodes: NetworkNode[]; edges: NetworkEdge[]; private subscriptions; ngAfterViewInit(): void; ngOnDestroy(): void; private draw; private drawNode; private drawEdges; private calculateEdgePoints; private drawArrow; onMouseDown(event: MouseEvent): void; onMouseMove(event: MouseEvent): void; onMouseUp(): void; applyForceDirectedLayout(): void; private calculateForces; static ɵfac: i0.ɵɵFactoryDeclaration<IxtNetworkDiagram, never>; static ɵcmp: i0.ɵɵComponentDeclaration<IxtNetworkDiagram, "ixt-network-diagram", never, {}, {}, never, never, false, never>; } export {};
|       |   |   |   |   --- ixt-network.index.d.ts: export * from './ixt-network.diagram'; export * from './ixt-network.module';
|       |   |   |   |   --- ixt-network.module.d.ts: import * as i0 from "@angular/core"; import * as i1 from "./ixt-network.diagram"; import * as i2 from "@angular/common"; export declare class IxtNetworkModule { static ɵfac: i0.ɵɵFactoryDeclaration<IxtNetworkModule, never>; static ɵmod: i0.ɵɵNgModuleDeclaration<IxtNetworkModule, [typeof i1.IxtNetworkDiagram], [typeof i2.CommonModule], [typeof i1.IxtNetworkDiagram]>; static ɵinj: i0.ɵɵInjectorDeclaration<IxtNetworkModule>; }
|       |   |   |   +-- sankey
|       |   |   |   |   --- ixt-sankey.diagram.d.ts: import { ElementRef, OnInit } from '@angular/core'; import * as i0 from "@angular/core"; export declare class IxtSankeyDiagram implements OnInit { canvas: ElementRef<HTMLCanvasElement>; private ctx; private nodes; private links; private readonly PADDING; private readonly NODE_WIDTH; private readonly NODE_SPACING; private readonly COLORS; ngOnInit(): void; private initializeCanvas; private drawSankey; private calculateNodeColumns; private calculateNodePositions; private drawNode; private drawLink; static ɵfac: i0.ɵɵFactoryDeclaration<IxtSankeyDiagram, never>; static ɵcmp: i0.ɵɵComponentDeclaration<IxtSankeyDiagram, "ixt-sankey-diagram", never, {}, {}, never, never, false, never>; }
|       |   |   |   |   --- ixt-sankey.index.d.ts: export * from './ixt-sankey.diagram'; export * from './ixt-sankey.module';
|       |   |   |   |   --- ixt-sankey.module.d.ts: import * as i0 from "@angular/core"; import * as i1 from "./ixt-sankey.diagram"; import * as i2 from "@angular/common"; export declare class IxtSankeyModule { static ɵfac: i0.ɵɵFactoryDeclaration<IxtSankeyModule, never>; static ɵmod: i0.ɵɵNgModuleDeclaration<IxtSankeyModule, [typeof i1.IxtSankeyDiagram], [typeof i2.CommonModule], [typeof i1.IxtSankeyDiagram]>; static ɵinj: i0.ɵɵInjectorDeclaration<IxtSankeyModule>; }
|       |   |   |   \-- wireframe
|       |   |   |       --- ixt-wireframe.diagram.d.ts: import { ElementRef, OnInit } from '@angular/core'; import * as i0 from "@angular/core"; export declare class IxtWireframeDiagram implements OnInit { mainCanvas: ElementRef<HTMLCanvasElement>; topRuler: ElementRef<HTMLCanvasElement>; leftRuler: ElementRef<HTMLCanvasElement>; private ctx; private shapes; private selectedShapes; private isDragging; private dragStart; private dragOffset; private scale; private panOffset; private showGrid; private snapEnabled; private gridSize; availableShapes: { name: string; type: string; defaultWidth: number; defaultHeight: number; }[]; ngOnInit(): void; private initializeCanvas; private resizeCanvas; private initializeRulers; private drawRulers; private draw; private drawGrid; private drawShape; private drawButton; private drawTextField; onDragStart(event: DragEvent, shape: any): void; onMouseDown(event: MouseEvent): void; onMouseMove(event: MouseEvent): void; onMouseUp(_event: MouseEvent): void; onWheel(event: WheelEvent): void; private getCanvasPosition; private findShapeAtPosition; toggleGrid(): void; toggleSnap(): void; resetZoom(): void; alignSelected(alignment: string): void; onDrop(event: DragEvent): void; onDoubleClick(event: MouseEvent): void; private initializeResizeHandles; bringToFront(): void; sendToBack(): void; private sortShapesByLayer; saveToJSON(): string; loadFromJSON(json: string): void; exportAsPNG(): string; private undoStack; private redoStack; private saveState; undo(): void; redo(): void; static ɵfac: i0.ɵɵFactoryDeclaration<IxtWireframeDiagram, never>; static ɵcmp: i0.ɵɵComponentDeclaration<IxtWireframeDiagram, "ixt-wireframe", never, {}, {}, never, never, false, never>; }
|       |   |   |       --- ixt-wireframe.index.d.ts: export * from './ixt-wireframe.module'; export * from './ixt-wireframe.diagram';
|       |   |   |       --- ixt-wireframe.module.d.ts: import * as i0 from "@angular/core"; import * as i1 from "./ixt-wireframe.diagram"; import * as i2 from "@angular/common"; import * as i3 from "@angular/forms"; import * as i4 from "@angular/cdk/drag-drop"; export declare class IxtWireframeModule { static forRoot(): { ngModule: typeof IxtWireframeModule; providers: never[]; }; static ɵfac: i0.ɵɵFactoryDeclaration<IxtWireframeModule, never>; static ɵmod: i0.ɵɵNgModuleDeclaration<IxtWireframeModule, [typeof i1.IxtWireframeDiagram], [typeof i2.CommonModule, typeof i3.FormsModule, typeof i4.DragDropModule], [typeof i1.IxtWireframeDiagram]>; static ɵinj: i0.ɵɵInjectorDeclaration<IxtWireframeModule>; } export interface IxtWireframeConfig { gridSize?: number; snapThreshold?: number; defaultShapes?: Array<{ name: string; type: string; defaultWidth: number; defaultHeight: number; }>; maxUndoSteps?: number; } export interface IxtWireframeService { saveTemplate(name: string, template: any): Promise<void>; loadTemplate(name: string): Promise<any>; listTemplates(): Promise<string[]>; }
|       |   |   --- ixt-diagram.component.d.ts: import { OnInit } from '@angular/core'; import * as i0 from "@angular/core"; export declare class IxtDiagramComponent implements OnInit { private canvas; private ctx; private participants; private activations; private messages; ngOnInit(): void; private initializeCanvas; private drawDiagram; private clearCanvas; private drawParticipants; private drawActor; private drawComponent; private drawLifelines; private drawMessages; private drawReturnMessage; private drawSelfMessage; private drawLabel; private getParticipantX; private drawActivations; private drawArrowhead; private drawSyncMessage; static ɵfac: i0.ɵɵFactoryDeclaration<IxtDiagramComponent, never>; static ɵcmp: i0.ɵɵComponentDeclaration<IxtDiagramComponent, "ixt-diagram", never, {}, {}, never, never, false, never>; }
|       |   |   --- ixt-diagram.index.d.ts: export * from './ixt-diagram.component'; export * from './ixt-diagram.module';
|       |   |   --- ixt-diagram.module.d.ts: import * as i0 from "@angular/core"; import * as i1 from "./ixt-diagram.component"; import * as i2 from "@angular/common"; export declare class IxtDiagramModule { static ɵfac: i0.ɵɵFactoryDeclaration<IxtDiagramModule, never>; static ɵmod: i0.ɵɵNgModuleDeclaration<IxtDiagramModule, [typeof i1.IxtDiagramComponent], [typeof i2.CommonModule], [typeof i1.IxtDiagramComponent]>; static ɵinj: i0.ɵɵInjectorDeclaration<IxtDiagramModule>; }
|       |   +-- ixt-dialog
|       |   |   +-- types
|       |   |   |   \-- success
|       |   |   |       --- ixt-success-dialog.component.d.ts: import { ThemeColors, ThemeVariant } from '../../../theme/theme.types'; import * as i0 from "@angular/core"; export declare class SuccessDialogComponent { message?: string; variant: ThemeVariant; theme: ThemeColors; get themeStyles(): { 'background-color': string; color: string; 'border-color': string; }; static ɵfac: i0.ɵɵFactoryDeclaration<SuccessDialogComponent, never>; static ɵcmp: i0.ɵɵComponentDeclaration<SuccessDialogComponent, "ixt-success-dialog", never, { "message": { "alias": "message"; "required": false; }; "variant": { "alias": "variant"; "required": false; }; "theme": { "alias": "theme"; "required": false; }; }, {}, never, never, false, never>; }
|       |   |   --- ixt-dialog.component.d.ts: import { ElementRef, EventEmitter, ViewContainerRef } from '@angular/core'; import { ThemeVariant, ThemeColors } from './../theme/theme.types'; import * as i0 from "@angular/core"; export declare class IxtDialogComponent { dialog: ElementRef<HTMLDialogElement>; contentHost: ViewContainerRef; modal: boolean; title: string; variant: ThemeVariant; theme: ThemeColors; close: EventEmitter<boolean>; constructor(); open(): void; closeDialog(result: boolean): void; get themeStyles(): { 'background-color': string; color: string; '--theme-hover': string; '--theme-active': string; '--theme-text': string; }; static ɵfac: i0.ɵɵFactoryDeclaration<IxtDialogComponent, never>; static ɵcmp: i0.ɵɵComponentDeclaration<IxtDialogComponent, "ixt-dialog", never, { "modal": { "alias": "modal"; "required": false; }; "title": { "alias": "title"; "required": false; }; "variant": { "alias": "variant"; "required": false; }; "theme": { "alias": "theme"; "required": false; }; }, { "close": "close"; }, never, never, false, never>; }
|       |   |   --- ixt-dialog.index.d.ts: export * from './ixt-dialog.module'; export { IxtDialogComponent } from './ixt-dialog.component'; export { IxtDialogService } from './ixt-dialog.service';
|       |   |   --- ixt-dialog.module.d.ts: import * as i0 from "@angular/core"; import * as i1 from "./ixt-dialog.component"; import * as i2 from "./types/success/ixt-success-dialog.component"; import * as i3 from "@angular/common"; import * as i4 from "@angular/material/button"; import * as i5 from "@angular/material/icon"; import * as i6 from "@angular/forms"; export declare class IxtDialogModule { static ɵfac: i0.ɵɵFactoryDeclaration<IxtDialogModule, never>; static ɵmod: i0.ɵɵNgModuleDeclaration<IxtDialogModule, [typeof i1.IxtDialogComponent, typeof i2.SuccessDialogComponent], [typeof i3.CommonModule, typeof i4.MatButtonModule, typeof i5.MatIconModule, typeof i6.FormsModule], [typeof i1.IxtDialogComponent]>; static ɵinj: i0.ɵɵInjectorDeclaration<IxtDialogModule>; }
|       |   |   --- ixt-dialog.service.d.ts: import { ApplicationRef, ComponentFactoryResolver, Injector, Type } from '@angular/core'; import * as i0 from "@angular/core"; export declare class IxtDialogService { private componentFactoryResolver; private appRef; private injector; private dialogComponentRef; constructor(componentFactoryResolver: ComponentFactoryResolver, appRef: ApplicationRef, injector: Injector); openDialog(component: Type<any>, title: string, message: string, modal?: boolean): Promise<boolean>; closeDialog(result: boolean): void; success(message: string, title: string): Promise<boolean>; static ɵfac: i0.ɵɵFactoryDeclaration<IxtDialogService, never>; static ɵprov: i0.ɵɵInjectableDeclaration<IxtDialogService>; }
|       |   +-- ixt-expression-builder
|       |   |   --- ixt-expression-builder.component.d.ts: import { EventEmitter, OnInit } from '@angular/core'; import { Field, Operator, Expression, ExpressionGroup } from './ixt-expression-builder.interfaces'; import * as i0 from "@angular/core"; export declare class IxtExpressionBuilderComponent implements OnInit { group: ExpressionGroup; level: number; groupChange: EventEmitter<ExpressionGroup>; fields: Field[]; operators: Record<string, Operator[]>; get rootGroup(): ExpressionGroup; ngOnInit(): void; addExpression(): void; addGroup(): void; removeExpression(index: number): void; getOperators(fieldId: string): Operator[]; getOperatorType(operatorId: string): 'single' | 'multiple' | null; addValue(expression: Expression): void; removeValue(expression: Expression, index: number): void; onChildGroupChange(index: number, childGroup: ExpressionGroup): void; toJsonLogic(): any; private convertToJsonLogic; private emitChange; updateValue(expression: Expression, index: number, value: string): void; static ɵfac: i0.ɵɵFactoryDeclaration<IxtExpressionBuilderComponent, never>; static ɵcmp: i0.ɵɵComponentDeclaration<IxtExpressionBuilderComponent, "ixt-expression-builder", never, { "group": { "alias": "group"; "required": false; }; "level": { "alias": "level"; "required": false; }; }, { "groupChange": "groupChange"; }, never, never, false, never>; }
|       |   |   --- ixt-expression-builder.index.d.ts: export * from './ixt-expression-builder.component'; export * from './ixt-expression-builder.module'; export interface ExpressionNode { id: string; field: string; operator: string; value: string; type: 'expression'; values: string[]; } export interface ExpressionGroup { type: 'group'; operator: 'and' | 'or'; children: (Expression | ExpressionGroup)[]; } export interface Expression { type: 'expression'; field: string; operator: string; value: string; values: string[]; }
|       |   |   --- ixt-expression-builder.interfaces.d.ts: export interface Field { id: string; label: string; type: string; } export interface Operator { id: string; label: string; type: 'single' | 'multiple'; } export interface Expression { type: 'expression'; field: string; operator: string; value: string; values: string[]; } export interface ExpressionGroup { type: 'group'; operator: 'and' | 'or'; children: (Expression | ExpressionGroup)[]; }
|       |   |   --- ixt-expression-builder.module.d.ts: import * as i0 from "@angular/core"; import * as i1 from "./ixt-expression-builder.component"; import * as i2 from "@angular/common"; import * as i3 from "@angular/forms"; export declare class IxtExpressionBuilderModule { static ɵfac: i0.ɵɵFactoryDeclaration<IxtExpressionBuilderModule, never>; static ɵmod: i0.ɵɵNgModuleDeclaration<IxtExpressionBuilderModule, [typeof i1.IxtExpressionBuilderComponent], [typeof i2.CommonModule, typeof i3.FormsModule], [typeof i1.IxtExpressionBuilderComponent]>; static ɵinj: i0.ɵɵInjectorDeclaration<IxtExpressionBuilderModule>; }
|       |   +-- ixt-layer-manager
|       |   |   --- ixt-layer-manager.component.d.ts: import { OnInit, EventEmitter } from '@angular/core'; import { CdkDragDrop } from '@angular/cdk/drag-drop'; import * as i0 from "@angular/core"; export interface Layer { id: string; name: string; visible: boolean; fillColor: string; strokeColor: string; strokeStyle: 'solid' | 'dashed' | 'dotted'; order: number; } export declare class IxtLayerManagerComponent implements OnInit { layers: Layer[]; layerChange: EventEmitter<Layer[]>; layerOrderChange: EventEmitter<Layer[]>; selectedLayer: Layer | null; showColorPicker: boolean; activeProperty: 'fill' | 'stroke' | null; showStrokeStylePicker: boolean; strokeStyles: Array<Layer['strokeStyle']>; ngOnInit(): void; sortLayers(): void; onDrop(event: CdkDragDrop<Layer[]>): void; toggleVisibility(layer: Layer): void; openColorPicker(layer: Layer, property: 'fill' | 'stroke'): void; openStrokeStylePicker(layer: Layer): void; onColorSelect(color: string): void; onStrokeStyleSelect(style: Layer['strokeStyle']): void; closeColorPicker(): void; closeStrokeStylePicker(): void; static ɵfac: i0.ɵɵFactoryDeclaration<IxtLayerManagerComponent, never>; static ɵcmp: i0.ɵɵComponentDeclaration<IxtLayerManagerComponent, "ixt-layer-manager", never, { "layers": { "alias": "layers"; "required": false; }; }, { "layerChange": "layerChange"; "layerOrderChange": "layerOrderChange"; }, never, never, false, never>; }
|       |   |   --- ixt-layer-manager.index.d.ts: export * from './ixt-layer-manager.component'; export * from './ixt-layer-manager.module'; export interface Layer { id: string; name: string; visible: boolean; fillColor: string; strokeColor: string; strokeStyle: 'solid' | 'dashed' | 'dotted'; order: number; }
|       |   |   --- ixt-layer-manager.module.d.ts: import * as i0 from "@angular/core"; import * as i1 from "./ixt-layer-manager.component"; import * as i2 from "@angular/common"; import * as i3 from "@angular/cdk/drag-drop"; export declare class IxtLayerManagerModule { static ɵfac: i0.ɵɵFactoryDeclaration<IxtLayerManagerModule, never>; static ɵmod: i0.ɵɵNgModuleDeclaration<IxtLayerManagerModule, [typeof i1.IxtLayerManagerComponent], [typeof i2.CommonModule, typeof i3.DragDropModule], [typeof i1.IxtLayerManagerComponent]>; static ɵinj: i0.ɵɵInjectorDeclaration<IxtLayerManagerModule>; }
|       |   +-- ixt-map
|       |   |   --- geo-processing.service.d.ts: import { Feature } from 'geojson'; import { GeoProcessingOptions } from './geo.types'; import * as i0 from "@angular/core"; export declare class GeoProcessingService { processFeatures(features: Feature[], options?: GeoProcessingOptions): Feature[]; private interpolateRoutes; private filterFeatures; private createFilterFunction; static ɵfac: i0.ɵɵFactoryDeclaration<GeoProcessingService, never>; static ɵprov: i0.ɵɵInjectableDeclaration<GeoProcessingService>; }
|       |   |   --- geo.types.d.ts: export interface GeoFeatureProperties { [key: string]: any; } export interface GeoProcessingOptions { interpolateRoutes?: boolean; pointsPerRoute?: number; minPointsPerRoute?: number; filterExpression?: string; }
|       |   |   --- ixt-layer.component.d.ts: import { EventEmitter, ElementRef, ChangeDetectorRef, SimpleChanges } from '@angular/core'; import * as d3 from 'd3'; import { IxtMapComponent } from './ixt-map.component'; import { GeoProcessingService } from './geo-processing.service'; import { LayerRenderService } from './layer-render.service'; import { LayerEventService } from './layer-event.service'; import { LayerStateService } from './layer-state.service'; import * as i0 from "@angular/core"; export declare class IxtLayerComponent { private mapComponent; private elementRef; private cdr; private geoProcessingService; private layerRenderService; private layerEventService; private layerStateService; src: string; stroke: string; fill: string; click: EventEmitter<MouseEvent>; hover: EventEmitter<MouseEvent>; private initialized; private pathGenerator; private filterExpression; constructor(mapComponent: IxtMapComponent, elementRef: ElementRef, cdr: ChangeDetectorRef, geoProcessingService: GeoProcessingService, layerRenderService: LayerRenderService, layerEventService: LayerEventService, layerStateService: LayerStateService); ngOnChanges(changes: SimpleChanges): void; ngAfterContentInit(): void; setProjection(pathGenerator: d3.GeoPath): void; initializeLayer(): Promise<void>; private validateContainer; private loadGeoJsonData; private renderLayer; private createEventHandlers; ngOnDestroy(): void; static ɵfac: i0.ɵɵFactoryDeclaration<IxtLayerComponent, [{ host: true; }, null, null, null, null, null, null]>; static ɵcmp: i0.ɵɵComponentDeclaration<IxtLayerComponent, "ixt-layer", never, { "src": { "alias": "src"; "required": false; }; "stroke": { "alias": "stroke"; "required": false; }; "fill": { "alias": "fill"; "required": false; }; }, { "click": "click"; "hover": "hover"; }, never, ["*"], false, never>; }
|       |   |   --- ixt-map.component.d.ts: import { ElementRef, QueryList, AfterContentInit, OnDestroy, ChangeDetectorRef } from '@angular/core'; import { IxtLayerComponent } from './ixt-layer.component'; import { GeoPath } from 'd3'; import { MapService } from './map.service'; import { MapContainer } from './map.types'; import * as i0 from "@angular/core"; export declare class IxtMapComponent implements AfterContentInit, OnDestroy { private cdr; private mapService; width: string | number; height: string | number; scale: string | number; translate: string; mapSvg: ElementRef<SVGSVGElement>; mapGroup: MapContainer; layers: QueryList<IxtLayerComponent>; private projection; private pathGenerator; private selectedElement; private mapSubscriptions; private projectionReady; projectionReady$: import("rxjs").Observable<boolean>; constructor(cdr: ChangeDetectorRef, mapService: MapService); private getDimensions; getViewBox(): string; private initializeMap; getContainer(): MapContainer; getPathGenerator(): GeoPath; clearSelection(): void; setSelection(element: SVGPathElement | null): void; ngAfterContentInit(): void; ngOnDestroy(): void; static ɵfac: i0.ɵɵFactoryDeclaration<IxtMapComponent, never>; static ɵcmp: i0.ɵɵComponentDeclaration<IxtMapComponent, "ixt-map", never, { "width": { "alias": "width"; "required": false; }; "height": { "alias": "height"; "required": false; }; "scale": { "alias": "scale"; "required": false; }; "translate": { "alias": "translate"; "required": false; }; }, {}, ["layers"], ["*"], false, never>; }
|       |   |   --- ixt-map.index.d.ts: export * from './ixt-map.component'; export * from './ixt-layer.component';
|       |   |   --- layer-event.service.d.ts: import { MapService } from './map.service'; import * as i0 from "@angular/core"; export interface LayerEventHandlers { onClick: (event: MouseEvent, datum: any) => void; onMouseOver: (event: MouseEvent) => void; onMouseOut: () => void; onMouseMove: (event: MouseEvent) => void; } export declare class LayerEventService { private mapService; private hoveredElement; constructor(mapService: MapService); handleClick(event: MouseEvent, mapRef: any): void; handleMouseOver(event: MouseEvent, mapRef: any): void; handleMouseOut(): void; private applyHoverEffect; private clearHoverState; static ɵfac: i0.ɵɵFactoryDeclaration<LayerEventService, never>; static ɵprov: i0.ɵɵInjectableDeclaration<LayerEventService>; }
|       |   |   --- layer-render.service.d.ts: import * as d3 from 'd3'; import { Feature } from 'geojson'; import { MapService } from './map.service'; import * as i0 from "@angular/core"; export interface LayerRenderOptions { stroke: string; fill: string; } export declare class LayerRenderService { private mapService; constructor(mapService: MapService); createLayer(container: d3.Selection<any, any, any, any>, features: Feature[], options: LayerRenderOptions, eventHandlers: { onClick: (event: MouseEvent, datum: any) => void; onMouseOver: (event: MouseEvent) => void; onMouseOut: (event: MouseEvent) => void; onMouseMove: (event: MouseEvent) => void; }): d3.Selection<any, any, any, any>; static ɵfac: i0.ɵɵFactoryDeclaration<LayerRenderService, never>; static ɵprov: i0.ɵɵInjectableDeclaration<LayerRenderService>; }
|       |   |   --- layer-state.service.d.ts: import { Observable } from 'rxjs'; import * as i0 from "@angular/core"; export interface LayerState { hoveredElement: SVGPathElement | null; selections: d3.Selection<any, any, any, any>[]; } export declare class LayerStateService { private state; state$: Observable<LayerState>; setHoveredElement(element: SVGPathElement | null): void; addSelection(selection: d3.Selection<any, any, any, any>): void; clearSelections(): void; private updateState; ngOnDestroy(): void; static ɵfac: i0.ɵɵFactoryDeclaration<LayerStateService, never>; static ɵprov: i0.ɵɵInjectableDeclaration<LayerStateService>; }
|       |   |   --- map-error.service.d.ts: import { Observable } from 'rxjs'; import * as i0 from "@angular/core"; export interface MapError { code: MapErrorCode; message: string; timestamp: Date; context?: any; } export declare enum MapErrorCode { INITIALIZATION_FAILED = "INIT_FAILED", PROJECTION_FAILED = "PROJ_FAILED", DATA_LOAD_FAILED = "DATA_LOAD_FAILED", SELECTION_FAILED = "SELECT_FAILED", INVALID_DIMENSIONS = "INVALID_DIMS" } export declare class MapErrorService { private errorSubject; private retryAttemptsMap; readonly maxRetryAttempts = 3; readonly errors$: Observable<MapError | null>; reportError(code: MapErrorCode, message: string, context?: any): void; clearError(): void; shouldRetry(operationKey: string): boolean; resetRetryCount(operationKey: string): void; static ɵfac: i0.ɵɵFactoryDeclaration<MapErrorService, never>; static ɵprov: i0.ɵɵInjectableDeclaration<MapErrorService>; }
|       |   |   --- map.service.d.ts: import * as d3 from 'd3'; import { GeoProjection, GeoPath } from 'd3'; import { Observable } from 'rxjs'; import { MapError, MapErrorCode, MapErrorService } from './map-error.service'; import * as i0 from "@angular/core"; export interface MapDimensions { width: number; height: number; } export interface MapState { projection: GeoProjection; pathGenerator: GeoPath; dimensions: MapDimensions; } export declare class MapService { private errorService; private projection; private pathGenerator; private selectedElementSource; private dimensions; readonly selectedElement$: Observable<SVGPathElement | null>; readonly dimensions$: Observable<MapDimensions>; private errorSubject; private retryAttemptsMap; readonly maxRetryAttempts = 3; readonly errors$: Observable<MapError | null>; constructor(errorService: MapErrorService); initializeProjection(width: number, height: number): { projection: GeoProjection; pathGenerator: d3.GeoPath; }; getProjection(): GeoProjection; getPathGenerator(): GeoPath; getDimensions(): MapDimensions; setSelection(element: SVGPathElement | null): void; clearSelection(): void; getBaseDimension(value: string | number): number; reportError(code: MapErrorCode, message: string, context?: any): void; clearError(): void; shouldRetry(operationKey: string): boolean; resetRetryCount(operationKey: string): void; static ɵfac: i0.ɵɵFactoryDeclaration<MapService, never>; static ɵprov: i0.ɵɵInjectableDeclaration<MapService>; }
|       |   |   --- map.types.d.ts: import { GeoProjection, GeoPath } from 'd3'; import { ElementRef } from '@angular/core'; export interface MapDimensions { width: number; height: number; scale: number; translate: string; } export interface MapState { projection: GeoProjection; pathGenerator: GeoPath; dimensions: MapDimensions; } export interface MapSelection extends d3.Selection<SVGGElement, unknown, null, undefined> { } export interface PathSelection extends d3.Selection<SVGPathElement, unknown, null, undefined> { } export interface MapContainer extends ElementRef<SVGGElement> { }
|       |   +-- ixt-menu
|       |   |   --- ixt-menu.component.d.ts: import { OnInit, EventEmitter } from '@angular/core'; import { HttpClient } from '@angular/common/http'; import { ThemeVariant, ThemeColors } from '../theme/theme.types'; import * as i0 from "@angular/core"; interface MenuItem { name: string; link: string; } export declare class IxtMenuComponent implements OnInit { private http; linkAlignment: string; src: string; brandName: string; brandLogo?: string; brandLink: string; showSearch: boolean; searchPlaceholder: string; variant: ThemeVariant; theme: ThemeColors; searchSubmitted: EventEmitter<string>; menuItems: MenuItem[]; searchTerm: string; get themeStyles(): { 'background-color': string; color: string; '--theme-hover': string; '--theme-active': string; }; constructor(http: HttpClient); ngOnInit(): void; loadMenu(): void; onSearch(event: Event): void; static ɵfac: i0.ɵɵFactoryDeclaration<IxtMenuComponent, never>; static ɵcmp: i0.ɵɵComponentDeclaration<IxtMenuComponent, "ixt-menu", never, { "linkAlignment": { "alias": "linkAlignment"; "required": false; }; "src": { "alias": "src"; "required": false; }; "brandName": { "alias": "brandName"; "required": false; }; "brandLogo": { "alias": "brandLogo"; "required": false; }; "brandLink": { "alias": "brandLink"; "required": false; }; "showSearch": { "alias": "showSearch"; "required": false; }; "searchPlaceholder": { "alias": "searchPlaceholder"; "required": false; }; "variant": { "alias": "variant"; "required": false; }; "theme": { "alias": "theme"; "required": false; }; }, { "searchSubmitted": "searchSubmitted"; }, never, never, false, never>; } export {};
|       |   |   --- ixt-menu.index.d.ts: export * from './ixt-menu.component'; export * from './ixt-menu.module'; export interface MenuItem { name: string; link: string; } export interface MenuConfig { items: MenuItem[]; brandName?: string; brandLogo?: string; brandLink?: string; showSearch?: boolean; searchPlaceholder?: string; linkAlignment?: 'start' | 'center' | 'end'; }
|       |   |   --- ixt-menu.module.d.ts: import * as i0 from "@angular/core"; import * as i1 from "./ixt-menu.component"; import * as i2 from "@angular/common"; import * as i3 from "@angular/forms"; import * as i4 from "@angular/router"; export declare class IxtMenuModule { static ɵfac: i0.ɵɵFactoryDeclaration<IxtMenuModule, never>; static ɵmod: i0.ɵɵNgModuleDeclaration<IxtMenuModule, [typeof i1.IxtMenuComponent], [typeof i2.CommonModule, typeof i3.FormsModule, typeof i4.RouterModule], [typeof i1.IxtMenuComponent]>; static ɵinj: i0.ɵɵInjectorDeclaration<IxtMenuModule>; }
|       |   +-- ixt-panel
|       |   |   --- ixt-panel.component.d.ts: import * as i0 from "@angular/core"; export declare class IxtPanelComponent { title?: string; caption?: string; padding: boolean; bordered: boolean; elevated: boolean; static ɵfac: i0.ɵɵFactoryDeclaration<IxtPanelComponent, never>; static ɵcmp: i0.ɵɵComponentDeclaration<IxtPanelComponent, "ixt-panel", never, { "title": { "alias": "title"; "required": false; }; "caption": { "alias": "caption"; "required": false; }; "padding": { "alias": "padding"; "required": false; }; "bordered": { "alias": "bordered"; "required": false; }; "elevated": { "alias": "elevated"; "required": false; }; }, {}, never, ["*"], false, never>; }
|       |   |   --- ixt-panel.index.d.ts: export * from './ixt-panel.component'; export * from './ixt-panel.module';
|       |   |   --- ixt-panel.module.d.ts: import * as i0 from "@angular/core"; import * as i1 from "./ixt-panel.component"; import * as i2 from "@angular/common"; import * as i3 from "@angular/forms"; export declare class IxtPanelModule { static ɵfac: i0.ɵɵFactoryDeclaration<IxtPanelModule, never>; static ɵmod: i0.ɵɵNgModuleDeclaration<IxtPanelModule, [typeof i1.IxtPanelComponent], [typeof i2.CommonModule, typeof i3.FormsModule], [typeof i1.IxtPanelComponent]>; static ɵinj: i0.ɵɵInjectorDeclaration<IxtPanelModule>; }
|       |   +-- ixt-splitpane
|       |   |   --- index.d.ts: export * from './ixt-split-pane.component'; export * from './ixt-split-pane.module';
|       |   |   --- ixt-split-pane.component.d.ts: import { ElementRef } from '@angular/core'; import * as i0 from "@angular/core"; export declare class IxtSplitPaneComponent { firstPanelSize: number; isDragging: boolean; startPosition: number; startSize: number; divider: ElementRef; startResize(e: MouseEvent): void; resize(e: MouseEvent): void; stopResize(): void; static ɵfac: i0.ɵɵFactoryDeclaration<IxtSplitPaneComponent, never>; static ɵcmp: i0.ɵɵComponentDeclaration<IxtSplitPaneComponent, "ixt-split-pane", never, {}, {}, never, [".left-pane", ".right-pane"], false, never>; }
|       |   |   --- ixt-split-pane.module.d.ts: import * as i0 from "@angular/core"; import * as i1 from "./ixt-split-pane.component"; import * as i2 from "@angular/common"; export declare class IxtSplitPaneModule { static ɵfac: i0.ɵɵFactoryDeclaration<IxtSplitPaneModule, never>; static ɵmod: i0.ɵɵNgModuleDeclaration<IxtSplitPaneModule, [typeof i1.IxtSplitPaneComponent], [typeof i2.CommonModule], [typeof i1.IxtSplitPaneComponent]>; static ɵinj: i0.ɵɵInjectorDeclaration<IxtSplitPaneModule>; }
|       |   +-- ixt-table
|       |   |   +-- editors
|       |   |   |   +-- airport-code
|       |   |   |   |   --- airport-code-editor.component.d.ts: import { OnInit, Type } from '@angular/core'; import { ControlValueAccessor, FormControl } from '@angular/forms'; import { IxtDialogService } from '../../../ixt-dialog/ixt-dialog.service'; import { MatrixEditor, MatrixEditorConfig } from '../editor.interface'; import * as i0 from "@angular/core"; export declare class AirportCodeEditorComponent implements ControlValueAccessor, OnInit, MatrixEditor { private dialogService; config?: MatrixEditorConfig; existingCodes: string[]; field: string; inputControl: FormControl<string | null>; hasError: boolean; errorMessage: string; component: Type<any>; onChanged: (value: string) => void; onTouched: () => void; constructor(dialogService: IxtDialogService); ngOnInit(): void; getEditConfig(): MatrixEditorConfig; getDefaultValue(): string; validate(value: any): boolean; format(value: any): string; private setupValueChanges; private validateValue; writeValue(value: string): void; registerOnChange(fn: (value: string) => void): void; registerOnTouched(fn: () => void): void; setDisabledState(isDisabled: boolean): void; static ɵfac: i0.ɵɵFactoryDeclaration<AirportCodeEditorComponent, never>; static ɵcmp: i0.ɵɵComponentDeclaration<AirportCodeEditorComponent, "airport-code-editor", never, { "config": { "alias": "config"; "required": false; }; "existingCodes": { "alias": "existingCodes"; "required": false; }; "field": { "alias": "field"; "required": false; }; }, {}, never, never, false, never>; }
|       |   |   |   +-- binary-editor
|       |   |   |   |   --- binary-editor.component.d.ts: import { EventEmitter, Type } from '@angular/core'; import { ControlValueAccessor, FormControl } from '@angular/forms'; import { MatrixEditor, MatrixEditorConfig } from '../editor.interface'; import * as i0 from "@angular/core"; interface BinaryConfig extends MatrixEditorConfig { trueValue?: any; falseValue?: any; trueDisplay?: string; falseDisplay?: string; rowData?: any; rowIndex?: number; } interface SelectionEvent { selected: boolean; rowData?: any; rowIndex?: number; } export declare class BinaryEditorComponent implements ControlValueAccessor, MatrixEditor { config: BinaryConfig; selectionChange: EventEmitter<SelectionEvent>; inputControl: FormControl<boolean | null>; component: Type<any>; showLabel: boolean; isChecked: boolean; private onChange; private onTouch; constructor(); ngOnInit(): void; private setupDefaults; private setupValueChanges; onCheckboxChange(event: Event): void; getEditConfig(): BinaryConfig; writeValue(value: any): void; registerOnChange(fn: any): void; registerOnTouched(fn: any): void; setDisabledState(isDisabled: boolean): void; static ɵfac: i0.ɵɵFactoryDeclaration<BinaryEditorComponent, never>; static ɵcmp: i0.ɵɵComponentDeclaration<BinaryEditorComponent, "binary-editor", never, { "config": { "alias": "config"; "required": false; }; }, { "selectionChange": "selectionChange"; }, never, never, false, never>; } export {};
|       |   |   |   +-- coordinate
|       |   |   |   |   --- coordinate-editor.component.d.ts: import { OnInit, Type } from '@angular/core'; import { ControlValueAccessor, FormControl } from '@angular/forms'; import { IxtDialogService } from '../../../ixt-dialog/ixt-dialog.service'; import { MatrixEditor, MatrixEditorConfig } from '../editor.interface'; import * as i0 from "@angular/core"; export declare class CoordinateEditorComponent implements ControlValueAccessor, OnInit, MatrixEditor { private dialogService; config?: MatrixEditorConfig; inputControl: FormControl<string | null>; hasError: boolean; errorMessage: string; component: Type<any>; private onChange; private onTouch; constructor(dialogService: IxtDialogService); ngOnInit(): void; getEditConfig(): MatrixEditorConfig; validate(value: any): boolean; setupValueChanges(): void; private validateValue; writeValue(value: number): void; registerOnChange(fn: any): void; registerOnTouched(fn: any): void; onBlur(): void; static ɵfac: i0.ɵɵFactoryDeclaration<CoordinateEditorComponent, never>; static ɵcmp: i0.ɵɵComponentDeclaration<CoordinateEditorComponent, "coordinate-editor", never, { "config": { "alias": "config"; "required": false; }; }, {}, never, never, false, never>; }
|       |   |   |   --- editor.interface.d.ts: import { Type } from "@angular/core"; export interface MatrixEditorConfig { existingValues?: any[]; validators?: any[]; field?: string; [key: string]: any; } export interface MatrixEditor { component: Type<any>; getEditConfig(): any; validate?(value: any): boolean; format?(value: any): string; getDefaultValue?(): any; }
|       |   |   +-- services
|       |   |   |   +-- edit
|       |   |   |   |   --- edit.model.d.ts: import { FormControl } from '@angular/forms'; export interface RowChanges { [key: string]: any; } export interface EditState { editingRows: Set<number>; newRows: any[]; rowChanges: Map<number, RowChanges>; editControls: Map<string, FormControl>; } export interface EditEvent { rowIndex: number; field: string; value: any; }
|       |   |   |   |   --- edit.service.d.ts: import { FormControl } from '@angular/forms'; import { EditState, RowChanges, EditEvent } from './edit.model'; import { ColumnConfig } from '../../ixt-table.interfaces'; import * as i0 from "@angular/core"; export declare class EditService { private readonly initialState; private state; state$: import("rxjs").Observable<EditState>; private getDefaultValueForType; addNewRow(columnConfigs: Record<string, ColumnConfig>): void; startEditing(rowIndex: number): void; cancelEditing(rowIndex: number): void; onValueChange(event: EditEvent): void; getEditControl(rowIndex: number, field: string): FormControl; saveChanges(data: any[]): any[]; isNewRow(index: number): boolean; isEditing(rowIndex: number): boolean; hasChanges(): boolean; getNewRows(): any[]; getRowChanges(rowIndex: number): RowChanges | undefined; getRowIndex(displayIndex: number): number; clearEditing(): void; static ɵfac: i0.ɵɵFactoryDeclaration<EditService, never>; static ɵprov: i0.ɵɵInjectableDeclaration<EditService>; }
|       |   |   |   +-- filter
|       |   |   |   |   --- filter.model.d.ts: import { FormControl } from '@angular/forms'; export type FilterOperator = 'equals' | 'startsWith' | 'contains' | 'between' | '>' | '<' | '>=' | '<=' | '!='; export interface FilterState { field: string; operator: FilterOperator; value: any; secondaryValue?: any; } export interface FilterControls { value: FormControl; operator?: FormControl<string>; }
|       |   |   |   |   --- filter.service.d.ts: import { Observable } from 'rxjs'; import { FormControl } from '@angular/forms'; import { FilterState } from './filter.model'; import { ColumnConfig } from '../../ixt-table.interfaces'; import * as i0 from "@angular/core"; export declare class FilterService { private activeFilters; private filterControls; private activeFilterColumn?; private showFilters; private filtersChanged; filtersChanged$: Observable<Map<string, FilterState>>; initializeFilter(field: string, config: ColumnConfig): void; getFilterControl(field: string): FormControl | undefined; getOperatorControl(field: string): FormControl<string> | undefined; onFilterChange(field: string, value: any, config?: ColumnConfig): void; onOperatorChange(field: string): void; clearAllFilters(): void; toggleFilters(column: string): void; matchesFilter(item: any, filter: FilterState): boolean; private handleNumericComparison; get isShowingFilters(): boolean; get activeColumn(): string | undefined; getActiveFilters(): Map<string, FilterState>; hasActiveFilters(): boolean; static ɵfac: i0.ɵɵFactoryDeclaration<FilterService, never>; static ɵprov: i0.ɵɵInjectableDeclaration<FilterService>; }
|       |   |   |   +-- selection
|       |   |   |   |   --- selection.model.d.ts: export interface SelectionState { selectedRows: Set<number>; allSelected: boolean; }
|       |   |   |   |   --- selection.service.d.ts: import { SelectionState } from './selection.model'; import * as i0 from "@angular/core"; export declare class SelectionService { private state; state$: import("rxjs").Observable<SelectionState>; selectRow(index: number, selected?: boolean): void; toggleAllRows(selected: boolean, totalRows: number): void; clearSelection(): void; getSelectedRows(): Set<number>; isSelected(index: number): boolean; isAllSelected(): boolean; getSelectedCount(): number; setSelectedRows(indices: number[]): void; isPartiallySelected(totalRows: number): boolean; static ɵfac: i0.ɵɵFactoryDeclaration<SelectionService, never>; static ɵprov: i0.ɵɵInjectableDeclaration<SelectionService>; }
|       |   |   |   +-- sort
|       |   |   |   |   --- sort.model.d.ts: export type SortDirection = 'asc' | 'desc' | null; export interface SortState { column: string | null; direction: SortDirection; }
|       |   |   |   |   --- sort.service.d.ts: import { SortState, SortDirection } from './sort.model'; import * as i0 from "@angular/core"; export declare class SortService { private readonly initialState; private state; state$: import("rxjs").Observable<SortState>; toggleSort(column: string): void; getSortIcon(column: string): string; sortData<T>(data: T[]): T[]; clearSort(): void; getCurrentSort(): SortState; isColumnSorted(column: string): boolean; getSortDirection(column: string): SortDirection; static ɵfac: i0.ɵɵFactoryDeclaration<SortService, never>; static ɵprov: i0.ɵɵInjectableDeclaration<SortService>; }
|       |   |   |   --- pagination.model.d.ts: export interface PaginationState { currentPage: number; pageSize: number | 'all'; totalItems: number; } export interface PageSize { value: number | 'all'; label: string; }
|       |   |   |   --- pagination.service.d.ts: import { Observable } from 'rxjs'; import { PageSize, PaginationState } from './pagination.model'; import * as i0 from "@angular/core"; export declare class PaginationService { private readonly DEFAULT_PAGE_SIZES; private readonly MINIMUM_ROWS_FOR_PAGINATION; private state; state$: Observable<PaginationState>; initialize(totalItems: number): void; shouldShowPagination(): boolean; getCurrentPage(): number; getPageSize(): number | 'all'; getPageSizes(): PageSize[]; getTotalPages(): number; getVisiblePages(): number[]; onPageChange(page: number): void; onPageSizeChange(newSize: number | 'all'): void; getPaginatedData<T>(data: T[]): T[]; private updateState; static ɵfac: i0.ɵɵFactoryDeclaration<PaginationService, never>; static ɵprov: i0.ɵɵInjectableDeclaration<PaginationService>; }
|       |   |   --- ixt-table.component.d.ts: import { ChangeDetectorRef, OnInit, TemplateRef } from '@angular/core'; import { FormControl } from '@angular/forms'; import { ColumnConfig, MatrixNode, PageSize } from './ixt-table.interfaces'; import { IxtDialogService } from '../ixt-dialog/ixt-dialog.index'; import { PaginationService } from './services/pagination.service'; import { FilterService } from './services/filter/filter.service'; import { SortService } from './services/sort/sort.service'; import { SelectionService } from './services/selection/selection.service'; import { EditService } from './services/edit/edit.service'; import { MatrixEditor } from './editors/editor.interface'; import { AirportCodeEditorComponent, CoordinateEditorComponent } from './ixt-table.index'; import * as i0 from "@angular/core"; export type SortDirection = 'asc' | 'desc' | null; export declare class IxtTableComponent implements OnInit { private dialogService; private changeDetectorRef; private paginationService; private filterService; private sortService; private selectionService; private editService; data: MatrixNode[]; columnConfigs?: Record<string, ColumnConfig>; noDataTemplate: TemplateRef<any>; customEditorTpl: TemplateRef<any>; columns: string[]; pageSizeControl: FormControl<number | "all" | null>; readonly AirportCodeEditorComponent: typeof AirportCodeEditorComponent; readonly CoordinateEditorComponent: typeof CoordinateEditorComponent; constructor(dialogService: IxtDialogService, changeDetectorRef: ChangeDetectorRef, paginationService: PaginationService, filterService: FilterService, sortService: SortService, selectionService: SelectionService, editService: EditService); ngOnInit(): void; addNewRow(): void; cancelEditing(rowIndex: number): void; getEditorComponent(type: any): MatrixEditor | null; getEditorType(type: any): string; getEditControl(rowIndex: number, field: string): FormControl; getRowIndex(displayIndex: number): number; get hasChanges(): boolean; isEditing(index: number): boolean; isNewRow(displayIndex: number): boolean; get newRowsLength(): number; onValueChange(rowIndex: number, field: string, value: any): void; saveChanges(): void; startEditing(rowIndex: number): void; get activeFilterColumn(): string | undefined; getFilterControl(col: string): FormControl<any>; getOperatorControl(col: string): FormControl<string>; onOperatorChange(field: string): void; get showFilters(): boolean; toggleFilters(col: string): void; get currentPage(): number; onPageChange(page: number): void; onPageSizeChange(size: number | 'all'): void; get paginatedData(): MatrixNode[]; get pageSizes(): PageSize[]; get showPagination(): boolean; get totalPages(): number; get visiblePages(): number[]; get allSelected(): boolean; set allSelected(value: boolean); getSelectedRows(): MatrixNode[]; get hasSelectedRows(): boolean; isRowSelected(index: number): boolean; selectRow(index: number, selected?: boolean): void; setSelectedRows(indices: number[]): void; toggleAllRows(selected: boolean): void; getSortIcon(column: string): string; toggleSort(column: string): void; formatCoordinate(value: number): string; getCodes(data: MatrixNode[]): string[]; getColumns(data: MatrixNode[]): string[]; get hasData(): boolean; static ɵfac: i0.ɵɵFactoryDeclaration<IxtTableComponent, never>; static ɵcmp: i0.ɵɵComponentDeclaration<IxtTableComponent, "ixt-table", never, { "data": { "alias": "data"; "required": false; }; "columnConfigs": { "alias": "columnConfigs"; "required": false; }; }, {}, never, never, false, never>; }
|       |   |   --- ixt-table.index.d.ts: export * from './ixt-table.component'; export * from './ixt-table.interfaces'; export * from './ixt-table.module'; export interface MatrixNode { [key: string]: any; children?: MatrixNode[]; } export * from './editors/airport-code/airport-code-editor.component'; export * from './editors/binary-editor/binary-editor.component'; export * from './editors/coordinate/coordinate-editor.component';
|       |   |   --- ixt-table.interfaces.d.ts: import { Type } from "@angular/core"; import { MatrixEditor } from "./editors/editor.interface"; export interface MatrixNode { code?: string; [key: string]: any; } export interface PageSize { value: number | 'all'; label: string; } export type FilterOperator = 'equals' | 'startsWith' | 'contains' | 'between' | '>' | '<' | '>=' | '<=' | '!='; export interface FilterState { field: string; operator: FilterOperator; value: any; secondaryValue?: any; } export interface ColumnConfig { type: 'text' | 'number' | 'enum' | Type<MatrixEditor> | MatrixEditor; field: string; label?: string; operator?: FilterOperator; enumValues?: { value: any; label: string; }[]; placeholder?: string; debounceTime?: number; editable?: boolean; config?: any; } export interface RowChanges { [key: string]: any; } export type ColumnConfigs = Record<string, ColumnConfig>;
|       |   |   --- ixt-table.module.d.ts: import * as i0 from "@angular/core"; import * as i1 from "./ixt-table.component"; import * as i2 from "./editors/airport-code/airport-code-editor.component"; import * as i3 from "./editors/coordinate/coordinate-editor.component"; import * as i4 from "./editors/binary-editor/binary-editor.component"; import * as i5 from "@angular/common"; import * as i6 from "@angular/forms"; import * as i7 from "@angular/material/icon"; import * as i8 from "@angular/material/autocomplete"; export declare class IxtTableModule { static ɵfac: i0.ɵɵFactoryDeclaration<IxtTableModule, never>; static ɵmod: i0.ɵɵNgModuleDeclaration<IxtTableModule, [typeof i1.IxtTableComponent, typeof i2.AirportCodeEditorComponent, typeof i3.CoordinateEditorComponent, typeof i4.BinaryEditorComponent], [typeof i5.CommonModule, typeof i6.FormsModule, typeof i6.ReactiveFormsModule, typeof i7.MatIconModule, typeof i8.MatAutocompleteModule], [typeof i1.IxtTableComponent]>; static ɵinj: i0.ɵɵInjectorDeclaration<IxtTableModule>; }
|       |   +-- ixt-tabset
|       |   |   --- ixt-tab.component.d.ts: import { TemplateRef } from '@angular/core'; import * as i0 from "@angular/core"; export declare class IxtTabComponent { title: string; implicitContent: TemplateRef<any>; static ɵfac: i0.ɵɵFactoryDeclaration<IxtTabComponent, never>; static ɵcmp: i0.ɵɵComponentDeclaration<IxtTabComponent, "ixt-tab", never, { "title": { "alias": "title"; "required": false; }; }, {}, never, ["*"], false, never>; }
|       |   |   --- ixt-tabset.component.d.ts: import { QueryList, AfterContentInit } from '@angular/core'; import { IxtTabComponent } from './ixt-tab.component'; import * as i0 from "@angular/core"; export declare class IxtTabsetComponent implements AfterContentInit { tabs: QueryList<IxtTabComponent>; selectedIndex: number; notificationText: string; ngAfterContentInit(): void; selectTab(tab: IxtTabComponent): void; static ɵfac: i0.ɵɵFactoryDeclaration<IxtTabsetComponent, never>; static ɵcmp: i0.ɵɵComponentDeclaration<IxtTabsetComponent, "ixt-tabset", never, {}, {}, ["tabs"], never, false, never>; }
|       |   |   --- ixt-tabset.index.d.ts: export * from './ixt-tabset.component'; export * from './ixt-tab.component'; export * from './ixt-tabset.interfaces'; export * from './ixt-tabset.module';
|       |   |   --- ixt-tabset.interfaces.d.ts: export interface ITabContent { id: string; title: string; content: string; active: boolean; } export interface ITabsetConfig { notificationText?: string; showNotificationBand?: boolean; animationDuration?: number; }
|       |   |   --- ixt-tabset.module.d.ts: import * as i0 from "@angular/core"; import * as i1 from "./ixt-tabset.component"; import * as i2 from "./ixt-tab.component"; import * as i3 from "@angular/common"; export declare class IxtTabsetModule { static ɵfac: i0.ɵɵFactoryDeclaration<IxtTabsetModule, never>; static ɵmod: i0.ɵɵNgModuleDeclaration<IxtTabsetModule, [typeof i1.IxtTabsetComponent, typeof i2.IxtTabComponent], [typeof i3.CommonModule], [typeof i1.IxtTabsetComponent, typeof i2.IxtTabComponent]>; static ɵinj: i0.ɵɵInjectorDeclaration<IxtTabsetModule>; }
|       |   +-- ixt-tree
|       |   |   --- ixt-tree.component.d.ts: import { EventEmitter } from '@angular/core'; import * as i0 from "@angular/core"; export interface TreeNode { id: string; label: string; expanded?: boolean; children?: TreeNode[]; isLeaf?: boolean; } export declare class IxtTreeComponent { nodes: TreeNode[]; nodeExpanded: EventEmitter<TreeNode>; nodeCollapsed: EventEmitter<TreeNode>; nodeSelected: EventEmitter<TreeNode>; toggleNode(node: TreeNode, event: Event): void; selectNode(node: TreeNode, event: Event): void; trackByFn(index: number, item: TreeNode): string; static ɵfac: i0.ɵɵFactoryDeclaration<IxtTreeComponent, never>; static ɵcmp: i0.ɵɵComponentDeclaration<IxtTreeComponent, "ixt-tree", never, { "nodes": { "alias": "nodes"; "required": false; }; }, { "nodeExpanded": "nodeExpanded"; "nodeCollapsed": "nodeCollapsed"; "nodeSelected": "nodeSelected"; }, never, never, false, never>; }
|       |   |   --- ixt-tree.index.d.ts: export * from './ixt-tree.component'; export * from './ixt-tree.module'; export interface TreeNode { id: string; label: string; expanded?: boolean; children?: TreeNode[]; isLeaf?: boolean; }
|       |   |   --- ixt-tree.module.d.ts: import * as i0 from "@angular/core"; import * as i1 from "./ixt-tree.component"; import * as i2 from "@angular/common"; import * as i3 from "@angular/forms"; export declare class IxtTreeModule { static ɵfac: i0.ɵɵFactoryDeclaration<IxtTreeModule, never>; static ɵmod: i0.ɵɵNgModuleDeclaration<IxtTreeModule, [typeof i1.IxtTreeComponent], [typeof i2.CommonModule, typeof i3.FormsModule], [typeof i1.IxtTreeComponent]>; static ɵinj: i0.ɵɵInjectorDeclaration<IxtTreeModule>; }
|       |   +-- ixt-viewport
|       |   |   --- ixt-viewport.component.d.ts: import { AfterViewInit } from '@angular/core'; import * as i0 from "@angular/core"; export declare class IxtViewportComponent implements AfterViewInit { private canvasRef; private ctx; private isDrawing; private lastPoint; private isZooming; private zoomStart; private zoomRect; private transform; private lineWidth; private strokeStyle; ngAfterViewInit(): void; private drawTestGraphics; private drawGrid; private drawStar; private resizeCanvas; private initializeCanvas; onMouseDown(event: MouseEvent): void; onMouseMove(event: MouseEvent): void; onMouseUp(event: MouseEvent): void; onMouseLeave(): void; private drawRubberBand; private getMousePos; private draw; setColor(color: string): void; setLineWidth(width: number): void; clear(): void; resetZoom(): void; static ɵfac: i0.ɵɵFactoryDeclaration<IxtViewportComponent, never>; static ɵcmp: i0.ɵɵComponentDeclaration<IxtViewportComponent, "ixt-viewport", never, {}, {}, never, never, false, never>; }
|       |   |   --- ixt-viewport.index.d.ts: export * from './ixt-viewport.component'; export * from './ixt-viewport.module';
|       |   |   --- ixt-viewport.module.d.ts: import * as i0 from "@angular/core"; import * as i1 from "./ixt-viewport.component"; import * as i2 from "@angular/common"; export declare class IxtViewportModule { static ɵfac: i0.ɵɵFactoryDeclaration<IxtViewportModule, never>; static ɵmod: i0.ɵɵNgModuleDeclaration<IxtViewportModule, [typeof i1.IxtViewportComponent], [typeof i2.CommonModule], [typeof i1.IxtViewportComponent]>; static ɵinj: i0.ɵɵInjectorDeclaration<IxtViewportModule>; }
|       |   \-- theme
|       |       --- theme.colors.d.ts: import { ThemeColors } from "./theme.types"; export declare const baseThemeColors: ThemeColors; export declare const unitedThemeColors: ThemeColors;
|       |       --- theme.types.d.ts: export type ThemeVariant = 'primary' | 'secondary' | 'tertiary' | 'success' | 'danger' | 'warning' | 'info' | 'light' | 'dark' | 'default'; export interface ThemeColor { base: string; hover: string; active: string; text: string; } export type ThemeColors = Record<ThemeVariant, ThemeColor>;
|       +-- esm2022
|       |   +-- components
|       |   |   +-- ixt-accordian
|       |   |   |   --- ixt-accordian.component.mjs: // ixt-accordian.component.ts import { Component, Input } from '@angular/core'; import { animate, state, style, transition, trigger } from '@angular/animations'; import * as i0 from "@angular/core"; import * as i1 from "@angular/common"; export class IxtAccordianComponent { constructor() { this.panels = []; this.allowMultiple = false; } togglePanel(index) { if (!this.allowMultiple) { this.panels.forEach((panel, i) => { if (i !== index) panel.isOpen = false; }); } this.panels[index].isOpen = !this.panels[index].isOpen; } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtAccordianComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); } static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: IxtAccordianComponent, selector: "ixt-accordian", inputs: { panels: "panels", allowMultiple: "allowMultiple" }, ngImport: i0, template: "<!-- ixt-accordian.component.html -->\r\n<div class=\"ixt-accordion\">\r\n <div class=\"accordion-panel\" *ngFor=\"let panel of panels; let i = index\">\r\n <div class=\"panel-header\" (click)=\"togglePanel(i)\">\r\n <span class=\"panel-title\">{{panel.title}}</span>\r\n <span class=\"material-icons\" [class.open]=\"panel.isOpen\">\r\n expand_more\r\n </span>\r\n </div>\r\n <div class=\"panel-content\" [@slideInOut]=\"panel.isOpen ? 'open' : 'closed'\">\r\n {{panel.content}}\r\n </div>\r\n </div>\r\n </div>", styles: [".ixt-accordion{width:100%;border:1px solid #e0e0e0;border-radius:4px;overflow:hidden}.accordion-panel{border-bottom:1px solid #e0e0e0}.accordion-panel:last-child{border-bottom:none}.panel-header{display:flex;justify-content:space-between;align-items:center;padding:16px;background-color:#fff;cursor:pointer;transition:background-color .2s ease}.panel-header:hover{background-color:#f5f5f5}.panel-title{font-size:16px;font-weight:500}.material-icons{color:#4169e1;transition:transform .2s ease}.material-icons.open{transform:rotate(180deg)}.panel-content{padding:0 16px;background-color:#fff;overflow:hidden}\n"], dependencies: [{ kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }], animations: [ trigger('slideInOut', [ state('open', style({ height: '*', opacity: 1 })), state('closed', style({ height: '0', opacity: 0 })), transition('closed <=> open', [ animate('200ms ease-in-out') ]) ]) ] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtAccordianComponent, decorators: [{ type: Component, args: [{ selector: 'ixt-accordian', animations: [ trigger('slideInOut', [ state('open', style({ height: '*', opacity: 1 })), state('closed', style({ height: '0', opacity: 0 })), transition('closed <=> open', [ animate('200ms ease-in-out') ]) ]) ], template: "<!-- ixt-accordian.component.html -->\r\n<div class=\"ixt-accordion\">\r\n <div class=\"accordion-panel\" *ngFor=\"let panel of panels; let i = index\">\r\n <div class=\"panel-header\" (click)=\"togglePanel(i)\">\r\n <span class=\"panel-title\">{{panel.title}}</span>\r\n <span class=\"material-icons\" [class.open]=\"panel.isOpen\">\r\n expand_more\r\n </span>\r\n </div>\r\n <div class=\"panel-content\" [@slideInOut]=\"panel.isOpen ? 'open' : 'closed'\">\r\n {{panel.content}}\r\n </div>\r\n </div>\r\n </div>", styles: [".ixt-accordion{width:100%;border:1px solid #e0e0e0;border-radius:4px;overflow:hidden}.accordion-panel{border-bottom:1px solid #e0e0e0}.accordion-panel:last-child{border-bottom:none}.panel-header{display:flex;justify-content:space-between;align-items:center;padding:16px;background-color:#fff;cursor:pointer;transition:background-color .2s ease}.panel-header:hover{background-color:#f5f5f5}.panel-title{font-size:16px;font-weight:500}.material-icons{color:#4169e1;transition:transform .2s ease}.material-icons.open{transform:rotate(180deg)}.panel-content{padding:0 16px;background-color:#fff;overflow:hidden}\n"] }] }], propDecorators: { panels: [{ type: Input }], allowMultiple: [{ type: Input }] } }); //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXh0LWFjY29yZGlhbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9peHQtYWNjb3JkaWFuL2l4dC1hY2NvcmRpYW4uY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvaXh0LWFjY29yZGlhbi9peHQtYWNjb3JkaWFuLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDZCQUE2QjtBQUM3QixPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNqRCxPQUFPLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLE9BQU8sRUFBRSxNQUFNLHFCQUFxQixDQUFDOzs7QUE0QmpGLE1BQU0sT0FBTyxxQkFBcUI7SUFwQmxDO1FBcUJXLFdBQU0sR0FBcUIsRUFBRSxDQUFDO1FBQzlCLGtCQUFhLEdBQUcsS0FBSyxDQUFDO0tBVWhDO0lBUkMsV0FBVyxDQUFDLEtBQWE7UUFDdkIsSUFBSSxDQUFDLElBQUksQ0FBQyxhQUFhLEVBQUU7WUFDdkIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxFQUFFLEVBQUU7Z0JBQy9CLElBQUksQ0FBQyxLQUFLLEtBQUs7b0JBQUUsS0FBSyxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7WUFDeEMsQ0FBQyxDQUFDLENBQUM7U0FDSjtRQUNELElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUMsTUFBTSxHQUFHLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxNQUFNLENBQUM7SUFDekQsQ0FBQzsrR0FYVSxxQkFBcUI7bUdBQXJCLHFCQUFxQixtSEM5QmxDLGtrQkFhUSwwd0JEQ007WUFDVixPQUFPLENBQUMsWUFBWSxFQUFFO2dCQUNwQixLQUFLLENBQUMsTUFBTSxFQUFFLEtBQUssQ0FBQztvQkFDbEIsTUFBTSxFQUFFLEdBQUc7b0JBQ1gsT0FBTyxFQUFFLENBQUM7aUJBQ1gsQ0FBQyxDQUFDO2dCQUNILEtBQUssQ0FBQyxRQUFRLEVBQUUsS0FBSyxDQUFDO29CQUNwQixNQUFNLEVBQUUsR0FBRztvQkFDWCxPQUFPLEVBQUUsQ0FBQztpQkFDWCxDQUFDLENBQUM7Z0JBQ0gsVUFBVSxDQUFDLGlCQUFpQixFQUFFO29CQUM1QixPQUFPLENBQUMsbUJBQW1CLENBQUM7aUJBQzdCLENBQUM7YUFDSCxDQUFDO1NBQ0g7OzRGQUVVLHFCQUFxQjtrQkFwQmpDLFNBQVM7K0JBQ0UsZUFBZSxjQUdiO3dCQUNWLE9BQU8sQ0FBQyxZQUFZLEVBQUU7NEJBQ3BCLEtBQUssQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFDO2dDQUNsQixNQUFNLEVBQUUsR0FBRztnQ0FDWCxPQUFPLEVBQUUsQ0FBQzs2QkFDWCxDQUFDLENBQUM7NEJBQ0gsS0FBSyxDQUFDLFFBQVEsRUFBRSxLQUFLLENBQUM7Z0NBQ3BCLE1BQU0sRUFBRSxHQUFHO2dDQUNYLE9BQU8sRUFBRSxDQUFDOzZCQUNYLENBQUMsQ0FBQzs0QkFDSCxVQUFVLENBQUMsaUJBQWlCLEVBQUU7Z0NBQzVCLE9BQU8sQ0FBQyxtQkFBbUIsQ0FBQzs2QkFDN0IsQ0FBQzt5QkFDSCxDQUFDO3FCQUNIOzhCQUdRLE1BQU07c0JBQWQsS0FBSztnQkFDRyxhQUFhO3NCQUFyQixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiLy8gaXh0LWFjY29yZGlhbi5jb21wb25lbnQudHNcclxuaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBhbmltYXRlLCBzdGF0ZSwgc3R5bGUsIHRyYW5zaXRpb24sIHRyaWdnZXIgfSBmcm9tICdAYW5ndWxhci9hbmltYXRpb25zJztcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgQWNjb3JkaW9uUGFuZWwge1xyXG4gIHRpdGxlOiBzdHJpbmc7XHJcbiAgY29udGVudDogc3RyaW5nO1xyXG4gIGlzT3Blbj86IGJvb2xlYW47XHJcbn1cclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnaXh0LWFjY29yZGlhbicsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL2l4dC1hY2NvcmRpYW4uY29tcG9uZW50Lmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL2l4dC1hY2NvcmRpYW4uY29tcG9uZW50LnNjc3MnXSxcclxuICBhbmltYXRpb25zOiBbXHJcbiAgICB0cmlnZ2VyKCdzbGlkZUluT3V0JywgW1xyXG4gICAgICBzdGF0ZSgnb3BlbicsIHN0eWxlKHtcclxuICAgICAgICBoZWlnaHQ6ICcqJyxcclxuICAgICAgICBvcGFjaXR5OiAxXHJcbiAgICAgIH0pKSxcclxuICAgICAgc3RhdGUoJ2Nsb3NlZCcsIHN0eWxlKHtcclxuICAgICAgICBoZWlnaHQ6ICcwJyxcclxuICAgICAgICBvcGFjaXR5OiAwXHJcbiAgICAgIH0pKSxcclxuICAgICAgdHJhbnNpdGlvbignY2xvc2VkIDw9PiBvcGVuJywgW1xyXG4gICAgICAgIGFuaW1hdGUoJzIwMG1zIGVhc2UtaW4tb3V0JylcclxuICAgICAgXSlcclxuICAgIF0pXHJcbiAgXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgSXh0QWNjb3JkaWFuQ29tcG9uZW50IHtcclxuICBASW5wdXQoKSBwYW5lbHM6IEFjY29yZGlvblBhbmVsW10gPSBbXTtcclxuICBASW5wdXQoKSBhbGxvd011bHRpcGxlID0gZmFsc2U7XHJcblxyXG4gIHRvZ2dsZVBhbmVsKGluZGV4OiBudW1iZXIpOiB2b2lkIHtcclxuICAgIGlmICghdGhpcy5hbGxvd011bHRpcGxlKSB7XHJcbiAgICAgIHRoaXMucGFuZWxzLmZvckVhY2goKHBhbmVsLCBpKSA9PiB7XHJcbiAgICAgICAgaWYgKGkgIT09IGluZGV4KSBwYW5lbC5pc09wZW4gPSBmYWxzZTtcclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICB0aGlzLnBhbmVsc1tpbmRleF0uaXNPcGVuID0gIXRoaXMucGFuZWxzW2luZGV4XS5pc09wZW47XHJcbiAgfVxyXG59IiwiPCEtLSBpeHQtYWNjb3JkaWFuLmNvbXBvbmVudC5odG1sIC0tPlxyXG48ZGl2IGNsYXNzPVwiaXh0LWFjY29yZGlvblwiPlxyXG4gICAgPGRpdiBjbGFzcz1cImFjY29yZGlvbi1wYW5lbFwiICpuZ0Zvcj1cImxldCBwYW5lbCBvZiBwYW5lbHM7IGxldCBpID0gaW5kZXhcIj5cclxuICAgICAgPGRpdiBjbGFzcz1cInBhbmVsLWhlYWRlclwiIChjbGljayk9XCJ0b2dnbGVQYW5lbChpKVwiPlxyXG4gICAgICAgIDxzcGFuIGNsYXNzPVwicGFuZWwtdGl0bGVcIj57e3BhbmVsLnRpdGxlfX08L3NwYW4+XHJcbiAgICAgICAgPHNwYW4gY2xhc3M9XCJtYXRlcmlhbC1pY29uc1wiIFtjbGFzcy5vcGVuXT1cInBhbmVsLmlzT3BlblwiPlxyXG4gICAgICAgICAgZXhwYW5kX21vcmVcclxuICAgICAgICA8L3NwYW4+XHJcbiAgICAgIDwvZGl2PlxyXG4gICAgICA8ZGl2IGNsYXNzPVwicGFuZWwtY29udGVudFwiIFtAc2xpZGVJbk91dF09XCJwYW5lbC5pc09wZW4gPyAnb3BlbicgOiAnY2xvc2VkJ1wiPlxyXG4gICAgICAgIHt7cGFuZWwuY29udGVudH19XHJcbiAgICAgIDwvZGl2PlxyXG4gICAgPC9kaXY+XHJcbiAgPC9kaXY+Il19
|       |   |   |   --- ixt-accordian.index.mjs: // src/components/ixt-accordian/ixt-accordian.index.ts export * from './ixt-accordian.component'; export * from './ixt-accordian.module'; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXh0LWFjY29yZGlhbi5pbmRleC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL2l4dC1hY2NvcmRpYW4vaXh0LWFjY29yZGlhbi5pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxzREFBc0Q7QUFDdEQsY0FBYywyQkFBMkIsQ0FBQztBQUMxQyxjQUFjLHdCQUF3QixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2NvbXBvbmVudHMvaXh0LWFjY29yZGlhbi9peHQtYWNjb3JkaWFuLmluZGV4LnRzXHJcbmV4cG9ydCAqIGZyb20gJy4vaXh0LWFjY29yZGlhbi5jb21wb25lbnQnO1xyXG5leHBvcnQgKiBmcm9tICcuL2l4dC1hY2NvcmRpYW4ubW9kdWxlJztcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgQWNjb3JkaW9uUGFuZWwge1xyXG4gIHRpdGxlOiBzdHJpbmc7XHJcbiAgY29udGVudDogc3RyaW5nO1xyXG4gIGlzT3Blbj86IGJvb2xlYW47XHJcbn0iXX0=
|       |   |   |   --- ixt-accordian.module.mjs: import { NgModule } from '@angular/core'; import { CommonModule } from '@angular/common'; import { BrowserAnimationsModule } from '@angular/platform-browser/animations'; import { IxtAccordianComponent } from './ixt-accordian.component'; import * as i0 from "@angular/core"; export class IxtAccordianModule { static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtAccordianModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); } static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "16.2.12", ngImport: i0, type: IxtAccordianModule, declarations: [IxtAccordianComponent], imports: [CommonModule, BrowserAnimationsModule], exports: [IxtAccordianComponent] }); } static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtAccordianModule, imports: [CommonModule, BrowserAnimationsModule] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtAccordianModule, decorators: [{ type: NgModule, args: [{ declarations: [ IxtAccordianComponent ], imports: [ CommonModule, BrowserAnimationsModule ], exports: [ IxtAccordianComponent ] }] }] }); //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXh0LWFjY29yZGlhbi5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9peHQtYWNjb3JkaWFuL2l4dC1hY2NvcmRpYW4ubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLHNDQUFzQyxDQUFDO0FBQy9FLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLDJCQUEyQixDQUFDOztBQWNsRSxNQUFNLE9BQU8sa0JBQWtCOytHQUFsQixrQkFBa0I7Z0hBQWxCLGtCQUFrQixpQkFWM0IscUJBQXFCLGFBR3JCLFlBQVk7WUFDWix1QkFBdUIsYUFHdkIscUJBQXFCO2dIQUdaLGtCQUFrQixZQVAzQixZQUFZO1lBQ1osdUJBQXVCOzs0RkFNZCxrQkFBa0I7a0JBWjlCLFFBQVE7bUJBQUM7b0JBQ1IsWUFBWSxFQUFFO3dCQUNaLHFCQUFxQjtxQkFDdEI7b0JBQ0QsT0FBTyxFQUFFO3dCQUNQLFlBQVk7d0JBQ1osdUJBQXVCO3FCQUN4QjtvQkFDRCxPQUFPLEVBQUU7d0JBQ1AscUJBQXFCO3FCQUN0QjtpQkFDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XHJcbmltcG9ydCB7IEJyb3dzZXJBbmltYXRpb25zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvcGxhdGZvcm0tYnJvd3Nlci9hbmltYXRpb25zJztcclxuaW1wb3J0IHsgSXh0QWNjb3JkaWFuQ29tcG9uZW50IH0gZnJvbSAnLi9peHQtYWNjb3JkaWFuLmNvbXBvbmVudCc7XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGRlY2xhcmF0aW9uczogW1xyXG4gICAgSXh0QWNjb3JkaWFuQ29tcG9uZW50XHJcbiAgXSxcclxuICBpbXBvcnRzOiBbXHJcbiAgICBDb21tb25Nb2R1bGUsXHJcbiAgICBCcm93c2VyQW5pbWF0aW9uc01vZHVsZVxyXG4gIF0sXHJcbiAgZXhwb3J0czogW1xyXG4gICAgSXh0QWNjb3JkaWFuQ29tcG9uZW50XHJcbiAgXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgSXh0QWNjb3JkaWFuTW9kdWxlIHsgfSJdfQ==
|       |   |   +-- ixt-button
|       |   |   |   --- ixt-button.component.mjs: // button.component.ts import { Component, Input, Output, EventEmitter } from '@angular/core'; import { baseThemeColors } from '../theme/theme.colors'; import * as i0 from "@angular/core"; import * as i1 from "@angular/common"; export class IxtButtonComponent { constructor() { this.variant = 'primary'; this.size = 'md'; this.disabled = false; this.type = 'button'; this.theme = baseThemeColors; this.onClick = new EventEmitter(); this.isHovered = false; this.isActive = false; } get buttonStyles() { const variantColors = this.theme[this.variant]; let backgroundColor = variantColors.base; if (this.isActive) { backgroundColor = variantColors.active; } else if (this.isHovered) { backgroundColor = variantColors.hover; } const padding = { sm: '0.25rem 0.5rem', md: '0.5rem 1rem', lg: '0.75rem 1.5rem' }[this.size]; const fontSize = { sm: '0.875rem', md: '1rem', lg: '1.125rem' }[this.size]; return { backgroundColor, color: variantColors.text, padding, fontSize }; } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtButtonComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); } static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: IxtButtonComponent, selector: "ixt-button", inputs: { variant: "variant", size: "size", disabled: "disabled", type: "type", theme: "theme" }, outputs: { onClick: "onClick" }, ngImport: i0, template: ` <button [attr.type]="type" [disabled]="disabled" [ngStyle]="buttonStyles" (click)="onClick.emit($event)" (mouseenter)="isHovered = true" (mouseleave)="isHovered = false" (mousedown)="isActive = true" (mouseup)="isActive = false" (blur)="isActive = false; isHovered = false" > <ng-content select="[prefix]"></ng-content> <ng-content></ng-content> <ng-content select="[suffix]"></ng-content> </button> `, isInline: true, styles: [":host{display:inline-block}button{font-family:inherit;border:none;border-radius:4px;cursor:pointer;display:inline-flex;align-items:center;gap:.5rem;padding:.5rem 1rem;transition:background-color .2s,opacity .2s}button:disabled{cursor:not-allowed;opacity:.65}\n"], dependencies: [{ kind: "directive", type: i1.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtButtonComponent, decorators: [{ type: Component, args: [{ selector: 'ixt-button', template: ` <button [attr.type]="type" [disabled]="disabled" [ngStyle]="buttonStyles" (click)="onClick.emit($event)" (mouseenter)="isHovered = true" (mouseleave)="isHovered = false" (mousedown)="isActive = true" (mouseup)="isActive = false" (blur)="isActive = false; isHovered = false" > <ng-content select="[prefix]"></ng-content> <ng-content></ng-content> <ng-content select="[suffix]"></ng-content> </button> `, styles: [":host{display:inline-block}button{font-family:inherit;border:none;border-radius:4px;cursor:pointer;display:inline-flex;align-items:center;gap:.5rem;padding:.5rem 1rem;transition:background-color .2s,opacity .2s}button:disabled{cursor:not-allowed;opacity:.65}\n"] }] }], propDecorators: { variant: [{ type: Input }], size: [{ type: Input }], disabled: [{ type: Input }], type: [{ type: Input }], theme: [{ type: Input }], onClick: [{ type: Output }] } }); //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXh0LWJ1dHRvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9peHQtYnV0dG9uL2l4dC1idXR0b24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNCQUFzQjtBQUN0QixPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3ZFLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQzs7O0FBK0N4RCxNQUFNLE9BQU8sa0JBQWtCO0lBMUMvQjtRQTJDVyxZQUFPLEdBQWlCLFNBQVMsQ0FBQztRQUNsQyxTQUFJLEdBQWUsSUFBSSxDQUFDO1FBQ3hCLGFBQVEsR0FBRyxLQUFLLENBQUM7UUFDakIsU0FBSSxHQUFrQyxRQUFRLENBQUM7UUFDL0MsVUFBSyxHQUFnQixlQUFlLENBQUM7UUFDcEMsWUFBTyxHQUFHLElBQUksWUFBWSxFQUFjLENBQUM7UUFFekMsY0FBUyxHQUFHLEtBQUssQ0FBQztRQUNsQixhQUFRLEdBQUcsS0FBSyxDQUFDO0tBK0I1QjtJQTdCQyxJQUFjLFlBQVk7UUFDeEIsTUFBTSxhQUFhLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7UUFFL0MsSUFBSSxlQUFlLEdBQUcsYUFBYSxDQUFDLElBQUksQ0FBQztRQUN6QyxJQUFJLElBQUksQ0FBQyxRQUFRLEVBQUU7WUFDakIsZUFBZSxHQUFHLGFBQWEsQ0FBQyxNQUFNLENBQUM7U0FDeEM7YUFBTSxJQUFJLElBQUksQ0FBQyxTQUFTLEVBQUU7WUFDekIsZUFBZSxHQUFHLGFBQWEsQ0FBQyxLQUFLLENBQUM7U0FDdkM7UUFFRCxNQUFNLE9BQU8sR0FBRztZQUNkLEVBQUUsRUFBRSxnQkFBZ0I7WUFDcEIsRUFBRSxFQUFFLGFBQWE7WUFDakIsRUFBRSxFQUFFLGdCQUFnQjtTQUNyQixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUViLE1BQU0sUUFBUSxHQUFHO1lBQ2YsRUFBRSxFQUFFLFVBQVU7WUFDZCxFQUFFLEVBQUUsTUFBTTtZQUNWLEVBQUUsRUFBRSxVQUFVO1NBQ2YsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFFYixPQUFPO1lBQ0wsZUFBZTtZQUNmLEtBQUssRUFBRSxhQUFhLENBQUMsSUFBSTtZQUN6QixPQUFPO1lBQ1AsUUFBUTtTQUNULENBQUM7SUFDSixDQUFDOytHQXZDVSxrQkFBa0I7bUdBQWxCLGtCQUFrQixxTEF4Q25COzs7Ozs7Ozs7Ozs7Ozs7O0dBZ0JUOzs0RkF3QlUsa0JBQWtCO2tCQTFDOUIsU0FBUzsrQkFDRSxZQUFZLFlBQ1o7Ozs7Ozs7Ozs7Ozs7Ozs7R0FnQlQ7OEJBeUJRLE9BQU87c0JBQWYsS0FBSztnQkFDRyxJQUFJO3NCQUFaLEtBQUs7Z0JBQ0csUUFBUTtzQkFBaEIsS0FBSztnQkFDRyxJQUFJO3NCQUFaLEtBQUs7Z0JBQ0csS0FBSztzQkFBYixLQUFLO2dCQUNJLE9BQU87c0JBQWhCLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyIvLyBidXR0b24uY29tcG9uZW50LnRzXHJcbmltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE91dHB1dCwgRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IGJhc2VUaGVtZUNvbG9ycyB9IGZyb20gJy4uL3RoZW1lL3RoZW1lLmNvbG9ycyc7XHJcbmltcG9ydCB7IFRoZW1lVmFyaWFudCwgVGhlbWVDb2xvcnMgfSBmcm9tICcuLi90aGVtZS90aGVtZS50eXBlcyc7XHJcblxyXG5leHBvcnQgdHlwZSBCdXR0b25TaXplID0gJ3NtJyB8ICdtZCcgfCAnbGcnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdpeHQtYnV0dG9uJyxcclxuICB0ZW1wbGF0ZTogYFxyXG4gICAgPGJ1dHRvblxyXG4gICAgICBbYXR0ci50eXBlXT1cInR5cGVcIlxyXG4gICAgICBbZGlzYWJsZWRdPVwiZGlzYWJsZWRcIlxyXG4gICAgICBbbmdTdHlsZV09XCJidXR0b25TdHlsZXNcIlxyXG4gICAgICAoY2xpY2spPVwib25DbGljay5lbWl0KCRldmVudClcIlxyXG4gICAgICAobW91c2VlbnRlcik9XCJpc0hvdmVyZWQgPSB0cnVlXCJcclxuICAgICAgKG1vdXNlbGVhdmUpPVwiaXNIb3ZlcmVkID0gZmFsc2VcIlxyXG4gICAgICAobW91c2Vkb3duKT1cImlzQWN0aXZlID0gdHJ1ZVwiXHJcbiAgICAgIChtb3VzZXVwKT1cImlzQWN0aXZlID0gZmFsc2VcIlxyXG4gICAgICAoYmx1cik9XCJpc0FjdGl2ZSA9IGZhbHNlOyBpc0hvdmVyZWQgPSBmYWxzZVwiXHJcbiAgICA+XHJcbiAgICAgIDxuZy1jb250ZW50IHNlbGVjdD1cIltwcmVmaXhdXCI+PC9uZy1jb250ZW50PlxyXG4gICAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XHJcbiAgICAgIDxuZy1jb250ZW50IHNlbGVjdD1cIltzdWZmaXhdXCI+PC9uZy1jb250ZW50PlxyXG4gICAgPC9idXR0b24+XHJcbiAgYCxcclxuICBzdHlsZXM6IFtgXHJcbiAgICA6aG9zdCB7XHJcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIH1cclxuXHJcbiAgICBidXR0b24ge1xyXG4gICAgICBmb250LWZhbWlseTogaW5oZXJpdDtcclxuICAgICAgYm9yZGVyOiBub25lO1xyXG4gICAgICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgICAgZGlzcGxheTogaW5saW5lLWZsZXg7XHJcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgIGdhcDogMC41cmVtO1xyXG4gICAgICBwYWRkaW5nOiAwLjVyZW0gMXJlbTtcclxuICAgICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjJzLCBvcGFjaXR5IDAuMnM7XHJcbiAgICAgIFxyXG4gICAgICAmOmRpc2FibGVkIHtcclxuICAgICAgICBjdXJzb3I6IG5vdC1hbGxvd2VkO1xyXG4gICAgICAgIG9wYWNpdHk6IDAuNjU7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICBgXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgSXh0QnV0dG9uQ29tcG9uZW50IHtcclxuICBASW5wdXQoKSB2YXJpYW50OiBUaGVtZVZhcmlhbnQgPSAncHJpbWFyeSc7XHJcbiAgQElucHV0KCkgc2l6ZTogQnV0dG9uU2l6ZSA9ICdtZCc7XHJcbiAgQElucHV0KCkgZGlzYWJsZWQgPSBmYWxzZTtcclxuICBASW5wdXQoKSB0eXBlOiAnYnV0dG9uJyB8ICdzdWJtaXQnIHwgJ3Jlc2V0JyA9ICdidXR0b24nO1xyXG4gIEBJbnB1dCgpIHRoZW1lOiBUaGVtZUNvbG9ycyA9IGJhc2VUaGVtZUNvbG9ycztcclxuICBAT3V0cHV0KCkgb25DbGljayA9IG5ldyBFdmVudEVtaXR0ZXI8TW91c2VFdmVudD4oKTtcclxuXHJcbiAgcHJvdGVjdGVkIGlzSG92ZXJlZCA9IGZhbHNlO1xyXG4gIHByb3RlY3RlZCBpc0FjdGl2ZSA9IGZhbHNlO1xyXG5cclxuICBwcm90ZWN0ZWQgZ2V0IGJ1dHRvblN0eWxlcygpOiBSZWNvcmQ8c3RyaW5nLCBzdHJpbmc+IHtcclxuICAgIGNvbnN0IHZhcmlhbnRDb2xvcnMgPSB0aGlzLnRoZW1lW3RoaXMudmFyaWFudF07XHJcbiAgICBcclxuICAgIGxldCBiYWNrZ3JvdW5kQ29sb3IgPSB2YXJpYW50Q29sb3JzLmJhc2U7XHJcbiAgICBpZiAodGhpcy5pc0FjdGl2ZSkge1xyXG4gICAgICBiYWNrZ3JvdW5kQ29sb3IgPSB2YXJpYW50Q29sb3JzLmFjdGl2ZTtcclxuICAgIH0gZWxzZSBpZiAodGhpcy5pc0hvdmVyZWQpIHtcclxuICAgICAgYmFja2dyb3VuZENvbG9yID0gdmFyaWFudENvbG9ycy5ob3ZlcjtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBwYWRkaW5nID0ge1xyXG4gICAgICBzbTogJzAuMjVyZW0gMC41cmVtJyxcclxuICAgICAgbWQ6ICcwLjVyZW0gMXJlbScsXHJcbiAgICAgIGxnOiAnMC43NXJlbSAxLjVyZW0nXHJcbiAgICB9W3RoaXMuc2l6ZV07XHJcblxyXG4gICAgY29uc3QgZm9udFNpemUgPSB7XHJcbiAgICAgIHNtOiAnMC44NzVyZW0nLFxyXG4gICAgICBtZDogJzFyZW0nLFxyXG4gICAgICBsZzogJzEuMTI1cmVtJ1xyXG4gICAgfVt0aGlzLnNpemVdO1xyXG5cclxuICAgIHJldHVybiB7XHJcbiAgICAgIGJhY2tncm91bmRDb2xvcixcclxuICAgICAgY29sb3I6IHZhcmlhbnRDb2xvcnMudGV4dCxcclxuICAgICAgcGFkZGluZyxcclxuICAgICAgZm9udFNpemVcclxuICAgIH07XHJcbiAgfVxyXG59Il19
|       |   |   |   --- ixt-button.index.mjs: // index.ts export { IxtButtonComponent } from './ixt-button.component'; export { IxtButtonModule } from './ixt-button.module'; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXh0LWJ1dHRvbi5pbmRleC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL2l4dC1idXR0b24vaXh0LWJ1dHRvbi5pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxXQUFXO0FBQ1gsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDNUQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHFCQUFxQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gaW5kZXgudHNcclxuZXhwb3J0IHsgSXh0QnV0dG9uQ29tcG9uZW50IH0gZnJvbSAnLi9peHQtYnV0dG9uLmNvbXBvbmVudCc7XHJcbmV4cG9ydCB7IEl4dEJ1dHRvbk1vZHVsZSB9IGZyb20gJy4vaXh0LWJ1dHRvbi5tb2R1bGUnO1xyXG5leHBvcnQgdHlwZSB7IEJ1dHRvblNpemUgfSBmcm9tICcuL2l4dC1idXR0b24uY29tcG9uZW50JztcclxuXHJcbiJdfQ==
|       |   |   |   --- ixt-button.module.mjs: // ixt-button.module.ts import { NgModule } from '@angular/core'; import { CommonModule } from '@angular/common'; import { MatButtonModule } from '@angular/material/button'; import { MatIconModule } from '@angular/material/icon'; import { IxtButtonComponent } from './ixt-button.component'; import * as i0 from "@angular/core"; export class IxtButtonModule { static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtButtonModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); } static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "16.2.12", ngImport: i0, type: IxtButtonModule, declarations: [IxtButtonComponent], imports: [CommonModule, MatButtonModule, MatIconModule], exports: [IxtButtonComponent] }); } static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtButtonModule, imports: [CommonModule, MatButtonModule, MatIconModule] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtButtonModule, decorators: [{ type: NgModule, args: [{ declarations: [IxtButtonComponent], imports: [ CommonModule, MatButtonModule, MatIconModule, ], exports: [IxtButtonComponent] }] }] }); //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXh0LWJ1dHRvbi5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9peHQtYnV0dG9uL2l4dC1idXR0b24ubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHVCQUF1QjtBQUN2QixPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDM0QsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHdCQUF3QixDQUFDOztBQVc1RCxNQUFNLE9BQU8sZUFBZTsrR0FBZixlQUFlO2dIQUFmLGVBQWUsaUJBUlgsa0JBQWtCLGFBRS9CLFlBQVk7WUFDWixlQUFlO1lBQ2YsYUFBYSxhQUVMLGtCQUFrQjtnSEFFakIsZUFBZSxZQU54QixZQUFZO1lBQ1osZUFBZTtZQUNmLGFBQWE7OzRGQUlKLGVBQWU7a0JBVDNCLFFBQVE7bUJBQUM7b0JBQ1IsWUFBWSxFQUFFLENBQUMsa0JBQWtCLENBQUM7b0JBQ2xDLE9BQU8sRUFBRTt3QkFDUCxZQUFZO3dCQUNaLGVBQWU7d0JBQ2YsYUFBYTtxQkFDZDtvQkFDRCxPQUFPLEVBQUUsQ0FBQyxrQkFBa0IsQ0FBQztpQkFDOUIiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpeHQtYnV0dG9uLm1vZHVsZS50c1xyXG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xyXG5pbXBvcnQgeyBNYXRCdXR0b25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9idXR0b24nO1xyXG5pbXBvcnQgeyBNYXRJY29uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvaWNvbic7XHJcbmltcG9ydCB7IEl4dEJ1dHRvbkNvbXBvbmVudCB9IGZyb20gJy4vaXh0LWJ1dHRvbi5jb21wb25lbnQnO1xyXG5cclxuQE5nTW9kdWxlKHtcclxuICBkZWNsYXJhdGlvbnM6IFtJeHRCdXR0b25Db21wb25lbnRdLFxyXG4gIGltcG9ydHM6IFtcclxuICAgIENvbW1vbk1vZHVsZSxcclxuICAgIE1hdEJ1dHRvbk1vZHVsZSxcclxuICAgIE1hdEljb25Nb2R1bGUsXHJcbiAgXSxcclxuICBleHBvcnRzOiBbSXh0QnV0dG9uQ29tcG9uZW50XVxyXG59KVxyXG5leHBvcnQgY2xhc3MgSXh0QnV0dG9uTW9kdWxlIHsgfSJdfQ==
|       |   |   +-- ixt-calendar
|       |   |   |   +-- calculators
|       |   |   |   |   --- indian-holidays.mjs: import { HolidayCalculator } from '../models/holiday-calculator'; export class IndianHolidayCalculator extends HolidayCalculator { getHolidays(year) { return [ { name: "Diwali", date: this.calculateDiwali(year), type: 'cultural' }, { name: "Holi", date: this.calculateHoli(year), type: 'cultural' }, { name: "Republic Day", date: new Date(year, 0, 26), type: 'cultural' }, { name: "Independence Day", date: new Date(year, 7, 15), type: 'cultural' } ]; } calculateDiwali(year) { // Placeholder - needs proper lunar calendar calculation return new Date(year, 9, 24); } calculateHoli(year) { // Placeholder - needs proper lunar calendar calculation return new Date(year, 2, 8); } } //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kaWFuLWhvbGlkYXlzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvaXh0LWNhbGVuZGFyL2NhbGN1bGF0b3JzL2luZGlhbi1ob2xpZGF5cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUVqRSxNQUFNLE9BQU8sdUJBQXdCLFNBQVEsaUJBQWlCO0lBQzFELFdBQVcsQ0FBQyxJQUFZO1FBQ3RCLE9BQU87WUFDTCxFQUFFLElBQUksRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRTtZQUN0RSxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRTtZQUNsRSxFQUFFLElBQUksRUFBRSxjQUFjLEVBQUUsSUFBSSxFQUFFLElBQUksSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRTtZQUN2RSxFQUFFLElBQUksRUFBRSxrQkFBa0IsRUFBRSxJQUFJLEVBQUUsSUFBSSxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsVUFBVSxFQUFFO1NBQzVFLENBQUM7SUFDSixDQUFDO0lBRU8sZUFBZSxDQUFDLElBQVk7UUFDbEMsd0RBQXdEO1FBQ3hELE9BQU8sSUFBSSxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUMvQixDQUFDO0lBRU8sYUFBYSxDQUFDLElBQVk7UUFDaEMsd0RBQXdEO1FBQ3hELE9BQU8sSUFBSSxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUM5QixDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBIb2xpZGF5IH0gZnJvbSBcIi4uL21vZGVscy9ob2xpZGF5LmludGVyZmFjZVwiO1xyXG5pbXBvcnQgeyBIb2xpZGF5Q2FsY3VsYXRvciB9IGZyb20gJy4uL21vZGVscy9ob2xpZGF5LWNhbGN1bGF0b3InO1xyXG5cclxuZXhwb3J0IGNsYXNzIEluZGlhbkhvbGlkYXlDYWxjdWxhdG9yIGV4dGVuZHMgSG9saWRheUNhbGN1bGF0b3Ige1xyXG4gICAgZ2V0SG9saWRheXMoeWVhcjogbnVtYmVyKTogSG9saWRheVtdIHtcclxuICAgICAgcmV0dXJuIFtcclxuICAgICAgICB7IG5hbWU6IFwiRGl3YWxpXCIsIGRhdGU6IHRoaXMuY2FsY3VsYXRlRGl3YWxpKHllYXIpLCB0eXBlOiAnY3VsdHVyYWwnIH0sXHJcbiAgICAgICAgeyBuYW1lOiBcIkhvbGlcIiwgZGF0ZTogdGhpcy5jYWxjdWxhdGVIb2xpKHllYXIpLCB0eXBlOiAnY3VsdHVyYWwnIH0sXHJcbiAgICAgICAgeyBuYW1lOiBcIlJlcHVibGljIERheVwiLCBkYXRlOiBuZXcgRGF0ZSh5ZWFyLCAwLCAyNiksIHR5cGU6ICdjdWx0dXJhbCcgfSxcclxuICAgICAgICB7IG5hbWU6IFwiSW5kZXBlbmRlbmNlIERheVwiLCBkYXRlOiBuZXcgRGF0ZSh5ZWFyLCA3LCAxNSksIHR5cGU6ICdjdWx0dXJhbCcgfVxyXG4gICAgICBdO1xyXG4gICAgfVxyXG4gIFxyXG4gICAgcHJpdmF0ZSBjYWxjdWxhdGVEaXdhbGkoeWVhcjogbnVtYmVyKTogRGF0ZSB7XHJcbiAgICAgIC8vIFBsYWNlaG9sZGVyIC0gbmVlZHMgcHJvcGVyIGx1bmFyIGNhbGVuZGFyIGNhbGN1bGF0aW9uXHJcbiAgICAgIHJldHVybiBuZXcgRGF0ZSh5ZWFyLCA5LCAyNCk7XHJcbiAgICB9XHJcbiAgXHJcbiAgICBwcml2YXRlIGNhbGN1bGF0ZUhvbGkoeWVhcjogbnVtYmVyKTogRGF0ZSB7XHJcbiAgICAgIC8vIFBsYWNlaG9sZGVyIC0gbmVlZHMgcHJvcGVyIGx1bmFyIGNhbGVuZGFyIGNhbGN1bGF0aW9uXHJcbiAgICAgIHJldHVybiBuZXcgRGF0ZSh5ZWFyLCAyLCA4KTtcclxuICAgIH1cclxuICB9Il19
|       |   |   |   |   --- islamic-holidays.mjs: import { HolidayCalculator } from '../models/holiday-calculator'; export class IslamicHolidayCalculator extends HolidayCalculator { getHolidays(year) { // Note: Islamic holidays follow lunar calendar - this needs more complex calculation return [ { name: "Eid al-Fitr", date: this.calculateEidAlFitr(year), type: 'religious' }, { name: "Eid al-Adha", date: this.calculateEidAlAdha(year), type: 'religious' }, { name: "Islamic New Year", date: this.calculateIslamicNewYear(year), type: 'religious' } ]; } calculateEidAlFitr(year) { // Placeholder - needs proper Islamic calendar calculation return new Date(year, 5, 15); } calculateEidAlAdha(year) { // Placeholder - needs proper Islamic calendar calculation return new Date(year, 7, 22); } calculateIslamicNewYear(year) { // Placeholder - needs proper Islamic calendar calculation return new Date(year, 8, 1); } } //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXNsYW1pYy1ob2xpZGF5cy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL2l4dC1jYWxlbmRhci9jYWxjdWxhdG9ycy9pc2xhbWljLWhvbGlkYXlzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBRWpFLE1BQU0sT0FBTyx3QkFBeUIsU0FBUSxpQkFBaUI7SUFDM0QsV0FBVyxDQUFDLElBQVk7UUFDdEIscUZBQXFGO1FBQ3JGLE9BQU87WUFDTCxFQUFFLElBQUksRUFBRSxhQUFhLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsRUFBRSxJQUFJLEVBQUUsV0FBVyxFQUFFO1lBQy9FLEVBQUUsSUFBSSxFQUFFLGFBQWEsRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLGtCQUFrQixDQUFDLElBQUksQ0FBQyxFQUFFLElBQUksRUFBRSxXQUFXLEVBQUU7WUFDL0UsRUFBRSxJQUFJLEVBQUUsa0JBQWtCLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyx1QkFBdUIsQ0FBQyxJQUFJLENBQUMsRUFBRSxJQUFJLEVBQUUsV0FBVyxFQUFFO1NBQzFGLENBQUM7SUFDSixDQUFDO0lBRU8sa0JBQWtCLENBQUMsSUFBWTtRQUNyQywwREFBMEQ7UUFDMUQsT0FBTyxJQUFJLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQy9CLENBQUM7SUFFTyxrQkFBa0IsQ0FBQyxJQUFZO1FBQ3JDLDBEQUEwRDtRQUMxRCxPQUFPLElBQUksSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFDL0IsQ0FBQztJQUVPLHVCQUF1QixDQUFDLElBQVk7UUFDMUMsMERBQTBEO1FBQzFELE9BQU8sSUFBSSxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUM5QixDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBIb2xpZGF5IH0gZnJvbSBcIi4uL21vZGVscy9ob2xpZGF5LmludGVyZmFjZVwiO1xyXG5pbXBvcnQgeyBIb2xpZGF5Q2FsY3VsYXRvciB9IGZyb20gJy4uL21vZGVscy9ob2xpZGF5LWNhbGN1bGF0b3InO1xyXG5cclxuZXhwb3J0IGNsYXNzIElzbGFtaWNIb2xpZGF5Q2FsY3VsYXRvciBleHRlbmRzIEhvbGlkYXlDYWxjdWxhdG9yIHtcclxuICAgIGdldEhvbGlkYXlzKHllYXI6IG51bWJlcik6IEhvbGlkYXlbXSB7XHJcbiAgICAgIC8vIE5vdGU6IElzbGFtaWMgaG9saWRheXMgZm9sbG93IGx1bmFyIGNhbGVuZGFyIC0gdGhpcyBuZWVkcyBtb3JlIGNvbXBsZXggY2FsY3VsYXRpb25cclxuICAgICAgcmV0dXJuIFtcclxuICAgICAgICB7IG5hbWU6IFwiRWlkIGFsLUZpdHJcIiwgZGF0ZTogdGhpcy5jYWxjdWxhdGVFaWRBbEZpdHIoeWVhciksIHR5cGU6ICdyZWxpZ2lvdXMnIH0sXHJcbiAgICAgICAgeyBuYW1lOiBcIkVpZCBhbC1BZGhhXCIsIGRhdGU6IHRoaXMuY2FsY3VsYXRlRWlkQWxBZGhhKHllYXIpLCB0eXBlOiAncmVsaWdpb3VzJyB9LFxyXG4gICAgICAgIHsgbmFtZTogXCJJc2xhbWljIE5ldyBZZWFyXCIsIGRhdGU6IHRoaXMuY2FsY3VsYXRlSXNsYW1pY05ld1llYXIoeWVhciksIHR5cGU6ICdyZWxpZ2lvdXMnIH1cclxuICAgICAgXTtcclxuICAgIH1cclxuICBcclxuICAgIHByaXZhdGUgY2FsY3VsYXRlRWlkQWxGaXRyKHllYXI6IG51bWJlcik6IERhdGUge1xyXG4gICAgICAvLyBQbGFjZWhvbGRlciAtIG5lZWRzIHByb3BlciBJc2xhbWljIGNhbGVuZGFyIGNhbGN1bGF0aW9uXHJcbiAgICAgIHJldHVybiBuZXcgRGF0ZSh5ZWFyLCA1LCAxNSk7XHJcbiAgICB9XHJcbiAgXHJcbiAgICBwcml2YXRlIGNhbGN1bGF0ZUVpZEFsQWRoYSh5ZWFyOiBudW1iZXIpOiBEYXRlIHtcclxuICAgICAgLy8gUGxhY2Vob2xkZXIgLSBuZWVkcyBwcm9wZXIgSXNsYW1pYyBjYWxlbmRhciBjYWxjdWxhdGlvblxyXG4gICAgICByZXR1cm4gbmV3IERhdGUoeWVhciwgNywgMjIpO1xyXG4gICAgfVxyXG4gIFxyXG4gICAgcHJpdmF0ZSBjYWxjdWxhdGVJc2xhbWljTmV3WWVhcih5ZWFyOiBudW1iZXIpOiBEYXRlIHtcclxuICAgICAgLy8gUGxhY2Vob2xkZXIgLSBuZWVkcyBwcm9wZXIgSXNsYW1pYyBjYWxlbmRhciBjYWxjdWxhdGlvblxyXG4gICAgICByZXR1cm4gbmV3IERhdGUoeWVhciwgOCwgMSk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIFxyXG4iXX0=
|       |   |   |   |   --- usa-holidays.mjs: import { HolidayCalculator } from '../models/holiday-calculator'; export class USAHolidayCalculator extends HolidayCalculator { getHolidays(year) { return [ { name: "New Year's Day", date: new Date(year, 0, 1), type: 'federal' }, { name: "Martin Luther King Jr. Day", date: this.nthWeekdayOfMonth(year, 0, 1, 3), type: 'federal' }, { name: "Presidents Day", date: this.nthWeekdayOfMonth(year, 1, 1, 3), type: 'federal' }, { name: "Easter", date: this.calculateEaster(year), type: 'federal' }, { name: "Memorial Day", date: this.lastWeekdayOfMonth(year, 4, 1), type: 'federal' }, { name: "Independence Day", date: new Date(year, 6, 4), type: 'federal' }, { name: "Labor Day", date: this.nthWeekdayOfMonth(year, 8, 1, 1), type: 'federal' }, { name: "Columbus Day", date: this.nthWeekdayOfMonth(year, 9, 1, 2), type: 'federal' }, { name: "Veterans Day", date: new Date(year, 10, 11), type: 'federal' }, { name: "Thanksgiving", date: this.nthWeekdayOfMonth(year, 10, 4, 4), type: 'federal' }, { name: "Christmas", date: new Date(year, 11, 25), type: 'federal' } ]; } calculateEaster(year) { const a = year % 19; const b = Math.floor(year / 100); const c = year % 100; const d = Math.floor(b / 4); const e = b % 4; const f = Math.floor((b + 8) / 25); const g = Math.floor((b - f + 1) / 3); const h = (19 * a + b - d - g + 15) % 30; const i = Math.floor(c / 4); const k = c % 4; const l = (32 + 2 * e + 2 * i - h - k) % 7; const m = Math.floor((a + 11 * h + 22 * l) / 451); const month = Math.floor((h + l - 7 * m + 114) / 31) - 1; const day = ((h + l - 7 * m + 114) % 31) + 1; return new Date(year, month, day); } } //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNhLWhvbGlkYXlzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvaXh0LWNhbGVuZGFyL2NhbGN1bGF0b3JzL3VzYS1ob2xpZGF5cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUVqRSxNQUFNLE9BQU8sb0JBQXFCLFNBQVEsaUJBQWlCO0lBQ3pELFdBQVcsQ0FBQyxJQUFZO1FBQ3RCLE9BQU87WUFDTCxFQUFFLElBQUksRUFBRSxnQkFBZ0IsRUFBRSxJQUFJLEVBQUUsSUFBSSxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFO1lBQ3ZFLEVBQUUsSUFBSSxFQUFFLDRCQUE0QixFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsaUJBQWlCLENBQUMsSUFBSSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRTtZQUNwRyxFQUFFLElBQUksRUFBRSxnQkFBZ0IsRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLGlCQUFpQixDQUFDLElBQUksRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUU7WUFDeEYsRUFBRSxJQUFJLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUU7WUFDckUsRUFBRSxJQUFJLEVBQUUsY0FBYyxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsa0JBQWtCLENBQUMsSUFBSSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFO1lBQ3BGLEVBQUUsSUFBSSxFQUFFLGtCQUFrQixFQUFFLElBQUksRUFBRSxJQUFJLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUU7WUFDekUsRUFBRSxJQUFJLEVBQUUsV0FBVyxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsaUJBQWlCLENBQUMsSUFBSSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRTtZQUNuRixFQUFFLElBQUksRUFBRSxjQUFjLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFO1lBQ3RGLEVBQUUsSUFBSSxFQUFFLGNBQWMsRUFBRSxJQUFJLEVBQUUsSUFBSSxJQUFJLENBQUMsSUFBSSxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFO1lBQ3ZFLEVBQUUsSUFBSSxFQUFFLGNBQWMsRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLGlCQUFpQixDQUFDLElBQUksRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUU7WUFDdkYsRUFBRSxJQUFJLEVBQUUsV0FBVyxFQUFFLElBQUksRUFBRSxJQUFJLElBQUksQ0FBQyxJQUFJLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUU7U0FDckUsQ0FBQztJQUNKLENBQUM7SUFFTyxlQUFlLENBQUMsSUFBWTtRQUNsQyxNQUFNLENBQUMsR0FBRyxJQUFJLEdBQUcsRUFBRSxDQUFDO1FBQ3BCLE1BQU0sQ0FBQyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxHQUFHLEdBQUcsQ0FBQyxDQUFDO1FBQ2pDLE1BQU0sQ0FBQyxHQUFHLElBQUksR0FBRyxHQUFHLENBQUM7UUFDckIsTUFBTSxDQUFDLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7UUFDNUIsTUFBTSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNoQixNQUFNLENBQUMsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDO1FBQ25DLE1BQU0sQ0FBQyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO1FBQ3RDLE1BQU0sQ0FBQyxHQUFHLENBQUMsRUFBRSxHQUFHLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsR0FBRyxFQUFFLENBQUMsR0FBRyxFQUFFLENBQUM7UUFDekMsTUFBTSxDQUFDLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7UUFDNUIsTUFBTSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNoQixNQUFNLENBQUMsR0FBRyxDQUFDLEVBQUUsR0FBRyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUMzQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxHQUFHLEVBQUUsR0FBRyxDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDO1FBQ2xELE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLEdBQUcsR0FBRyxDQUFDLEdBQUcsRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ3pELE1BQU0sR0FBRyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLEdBQUcsR0FBRyxDQUFDLEdBQUcsRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBRTdDLE9BQU8sSUFBSSxJQUFJLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSxHQUFHLENBQUMsQ0FBQztJQUNwQyxDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBIb2xpZGF5IH0gZnJvbSAnLi4vbW9kZWxzL2hvbGlkYXkuaW50ZXJmYWNlJztcclxuaW1wb3J0IHsgSG9saWRheUNhbGN1bGF0b3IgfSBmcm9tICcuLi9tb2RlbHMvaG9saWRheS1jYWxjdWxhdG9yJztcclxuXHJcbmV4cG9ydCBjbGFzcyBVU0FIb2xpZGF5Q2FsY3VsYXRvciBleHRlbmRzIEhvbGlkYXlDYWxjdWxhdG9yIHtcclxuICBnZXRIb2xpZGF5cyh5ZWFyOiBudW1iZXIpOiBIb2xpZGF5W10ge1xyXG4gICAgcmV0dXJuIFtcclxuICAgICAgeyBuYW1lOiBcIk5ldyBZZWFyJ3MgRGF5XCIsIGRhdGU6IG5ldyBEYXRlKHllYXIsIDAsIDEpLCB0eXBlOiAnZmVkZXJhbCcgfSxcclxuICAgICAgeyBuYW1lOiBcIk1hcnRpbiBMdXRoZXIgS2luZyBKci4gRGF5XCIsIGRhdGU6IHRoaXMubnRoV2Vla2RheU9mTW9udGgoeWVhciwgMCwgMSwgMyksIHR5cGU6ICdmZWRlcmFsJyB9LFxyXG4gICAgICB7IG5hbWU6IFwiUHJlc2lkZW50cyBEYXlcIiwgZGF0ZTogdGhpcy5udGhXZWVrZGF5T2ZNb250aCh5ZWFyLCAxLCAxLCAzKSwgdHlwZTogJ2ZlZGVyYWwnIH0sXHJcbiAgICAgIHsgbmFtZTogXCJFYXN0ZXJcIiwgZGF0ZTogdGhpcy5jYWxjdWxhdGVFYXN0ZXIoeWVhciksIHR5cGU6ICdmZWRlcmFsJyB9LFxyXG4gICAgICB7IG5hbWU6IFwiTWVtb3JpYWwgRGF5XCIsIGRhdGU6IHRoaXMubGFzdFdlZWtkYXlPZk1vbnRoKHllYXIsIDQsIDEpLCB0eXBlOiAnZmVkZXJhbCcgfSxcclxuICAgICAgeyBuYW1lOiBcIkluZGVwZW5kZW5jZSBEYXlcIiwgZGF0ZTogbmV3IERhdGUoeWVhciwgNiwgNCksIHR5cGU6ICdmZWRlcmFsJyB9LFxyXG4gICAgICB7IG5hbWU6IFwiTGFib3IgRGF5XCIsIGRhdGU6IHRoaXMubnRoV2Vla2RheU9mTW9udGgoeWVhciwgOCwgMSwgMSksIHR5cGU6ICdmZWRlcmFsJyB9LFxyXG4gICAgICB7IG5hbWU6IFwiQ29sdW1idXMgRGF5XCIsIGRhdGU6IHRoaXMubnRoV2Vla2RheU9mTW9udGgoeWVhciwgOSwgMSwgMiksIHR5cGU6ICdmZWRlcmFsJyB9LFxyXG4gICAgICB7IG5hbWU6IFwiVmV0ZXJhbnMgRGF5XCIsIGRhdGU6IG5ldyBEYXRlKHllYXIsIDEwLCAxMSksIHR5cGU6ICdmZWRlcmFsJyB9LFxyXG4gICAgICB7IG5hbWU6IFwiVGhhbmtzZ2l2aW5nXCIsIGRhdGU6IHRoaXMubnRoV2Vla2RheU9mTW9udGgoeWVhciwgMTAsIDQsIDQpLCB0eXBlOiAnZmVkZXJhbCcgfSxcclxuICAgICAgeyBuYW1lOiBcIkNocmlzdG1hc1wiLCBkYXRlOiBuZXcgRGF0ZSh5ZWFyLCAxMSwgMjUpLCB0eXBlOiAnZmVkZXJhbCcgfVxyXG4gICAgXTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgY2FsY3VsYXRlRWFzdGVyKHllYXI6IG51bWJlcik6IERhdGUge1xyXG4gICAgY29uc3QgYSA9IHllYXIgJSAxOTtcclxuICAgIGNvbnN0IGIgPSBNYXRoLmZsb29yKHllYXIgLyAxMDApO1xyXG4gICAgY29uc3QgYyA9IHllYXIgJSAxMDA7XHJcbiAgICBjb25zdCBkID0gTWF0aC5mbG9vcihiIC8gNCk7XHJcbiAgICBjb25zdCBlID0gYiAlIDQ7XHJcbiAgICBjb25zdCBmID0gTWF0aC5mbG9vcigoYiArIDgpIC8gMjUpO1xyXG4gICAgY29uc3QgZyA9IE1hdGguZmxvb3IoKGIgLSBmICsgMSkgLyAzKTtcclxuICAgIGNvbnN0IGggPSAoMTkgKiBhICsgYiAtIGQgLSBnICsgMTUpICUgMzA7XHJcbiAgICBjb25zdCBpID0gTWF0aC5mbG9vcihjIC8gNCk7XHJcbiAgICBjb25zdCBrID0gYyAlIDQ7XHJcbiAgICBjb25zdCBsID0gKDMyICsgMiAqIGUgKyAyICogaSAtIGggLSBrKSAlIDc7XHJcbiAgICBjb25zdCBtID0gTWF0aC5mbG9vcigoYSArIDExICogaCArIDIyICogbCkgLyA0NTEpO1xyXG4gICAgY29uc3QgbW9udGggPSBNYXRoLmZsb29yKChoICsgbCAtIDcgKiBtICsgMTE0KSAvIDMxKSAtIDE7XHJcbiAgICBjb25zdCBkYXkgPSAoKGggKyBsIC0gNyAqIG0gKyAxMTQpICUgMzEpICsgMTtcclxuICAgIFxyXG4gICAgcmV0dXJuIG5ldyBEYXRlKHllYXIsIG1vbnRoLCBkYXkpO1xyXG4gIH1cclxufSJdfQ==
|       |   |   |   +-- models
|       |   |   |   |   --- holiday-calculator.mjs: export class HolidayCalculator { nthWeekdayOfMonth(year, month, weekday, n) { const date = new Date(year, month, 1); while (date.getDay() !== weekday) { date.setDate(date.getDate() + 1); } date.setDate(date.getDate() + (n - 1) * 7); return date; } lastWeekdayOfMonth(year, month, weekday) { const date = new Date(year, month + 1, 0); while (date.getDay() !== weekday) { date.setDate(date.getDate() - 1); } return date; } } //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaG9saWRheS1jYWxjdWxhdG9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvaXh0LWNhbGVuZGFyL21vZGVscy9ob2xpZGF5LWNhbGN1bGF0b3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUUsTUFBTSxPQUFnQixpQkFBaUI7SUFHM0IsaUJBQWlCLENBQUMsSUFBWSxFQUFFLEtBQWEsRUFBRSxPQUFlLEVBQUUsQ0FBUztRQUNqRixNQUFNLElBQUksR0FBRyxJQUFJLElBQUksQ0FBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQ3RDLE9BQU8sSUFBSSxDQUFDLE1BQU0sRUFBRSxLQUFLLE9BQU8sRUFBRTtZQUNoQyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQztTQUNsQztRQUNELElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO1FBQzNDLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVTLGtCQUFrQixDQUFDLElBQVksRUFBRSxLQUFhLEVBQUUsT0FBZTtRQUN2RSxNQUFNLElBQUksR0FBRyxJQUFJLElBQUksQ0FBQyxJQUFJLEVBQUUsS0FBSyxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUMxQyxPQUFPLElBQUksQ0FBQyxNQUFNLEVBQUUsS0FBSyxPQUFPLEVBQUU7WUFDaEMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUM7U0FDbEM7UUFDRCxPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEhvbGlkYXkgfSBmcm9tIFwiLi9ob2xpZGF5LmludGVyZmFjZVwiO1xyXG5cclxuICBleHBvcnQgYWJzdHJhY3QgY2xhc3MgSG9saWRheUNhbGN1bGF0b3Ige1xyXG4gICAgYWJzdHJhY3QgZ2V0SG9saWRheXMoeWVhcjogbnVtYmVyKTogSG9saWRheVtdO1xyXG4gICAgXHJcbiAgICBwcm90ZWN0ZWQgbnRoV2Vla2RheU9mTW9udGgoeWVhcjogbnVtYmVyLCBtb250aDogbnVtYmVyLCB3ZWVrZGF5OiBudW1iZXIsIG46IG51bWJlcik6IERhdGUge1xyXG4gICAgICBjb25zdCBkYXRlID0gbmV3IERhdGUoeWVhciwgbW9udGgsIDEpO1xyXG4gICAgICB3aGlsZSAoZGF0ZS5nZXREYXkoKSAhPT0gd2Vla2RheSkge1xyXG4gICAgICAgIGRhdGUuc2V0RGF0ZShkYXRlLmdldERhdGUoKSArIDEpO1xyXG4gICAgICB9XHJcbiAgICAgIGRhdGUuc2V0RGF0ZShkYXRlLmdldERhdGUoKSArIChuIC0gMSkgKiA3KTtcclxuICAgICAgcmV0dXJuIGRhdGU7XHJcbiAgICB9XHJcbiAgXHJcbiAgICBwcm90ZWN0ZWQgbGFzdFdlZWtkYXlPZk1vbnRoKHllYXI6IG51bWJlciwgbW9udGg6IG51bWJlciwgd2Vla2RheTogbnVtYmVyKTogRGF0ZSB7XHJcbiAgICAgIGNvbnN0IGRhdGUgPSBuZXcgRGF0ZSh5ZWFyLCBtb250aCArIDEsIDApO1xyXG4gICAgICB3aGlsZSAoZGF0ZS5nZXREYXkoKSAhPT0gd2Vla2RheSkge1xyXG4gICAgICAgIGRhdGUuc2V0RGF0ZShkYXRlLmdldERhdGUoKSAtIDEpO1xyXG4gICAgICB9XHJcbiAgICAgIHJldHVybiBkYXRlO1xyXG4gICAgfVxyXG4gIH1cclxuICBcclxuIl19
|       |   |   |   |   --- holiday.interface.mjs: export {}; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaG9saWRheS5pbnRlcmZhY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9peHQtY2FsZW5kYXIvbW9kZWxzL2hvbGlkYXkuaW50ZXJmYWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiIiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgaW50ZXJmYWNlIEhvbGlkYXkge1xyXG4gICAgbmFtZTogc3RyaW5nO1xyXG4gICAgZGF0ZTogRGF0ZTtcclxuICAgIHR5cGU6ICdmZWRlcmFsJyB8ICdyZWxpZ2lvdXMnIHwgJ2N1bHR1cmFsJztcclxuICB9Il19
|       |   |   |   --- ixt-calendar.component.mjs: import { Component } from '@angular/core'; import { FormControl } from '@angular/forms'; import { USAHolidayCalculator } from './calculators/usa-holidays'; import { IndianHolidayCalculator } from './calculators/indian-holidays'; import { IslamicHolidayCalculator } from './calculators/islamic-holidays'; import * as i0 from "@angular/core"; import * as i1 from "@angular/common"; import * as i2 from "@angular/forms"; export class IxtCalendarComponent { constructor() { this.holidayCalculators = [ new USAHolidayCalculator(), new IslamicHolidayCalculator(), new IndianHolidayCalculator() ]; this.months = [ 'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December' ]; this.weekDays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']; this.calendarDays = []; this.monthControl = new FormControl(0); this.yearControl = new FormControl(new Date().getFullYear()); this.holidays = []; } ngOnInit() { this.monthControl.valueChanges.subscribe(() => this.generateCalendar()); this.yearControl.valueChanges.subscribe(() => { this.updateHolidays(); this.generateCalendar(); }); this.updateHolidays(); this.generateCalendar(); } updateHolidays() { this.holidays = this.holidayCalculators.flatMap(calc => calc.getHolidays(this.yearControl.value)); } generateCalendar() { const year = this.yearControl.value; const month = this.monthControl.value; const firstDay = new Date(year, month, 1); const lastDay = new Date(year, month + 1, 0); this.calendarDays = []; // Add padding days from previous month for (let i = 0; i < firstDay.getDay(); i++) { const date = new Date(year, month, -i); this.calendarDays.unshift(this.createCalendarDay(date)); } // Add days of current month for (let date = new Date(firstDay); date <= lastDay; date.setDate(date.getDate() + 1)) { this.calendarDays.push(this.createCalendarDay(new Date(date))); } // Add padding days from next month const remainingDays = 42 - this.calendarDays.length; for (let i = 1; i <= remainingDays; i++) { const date = new Date(year, month + 1, i); this.calendarDays.push(this.createCalendarDay(date)); } } createCalendarDay(date) { return { date, isWeekend: date.getDay() === 0 || date.getDay() === 6, holidays: this.holidays.filter(h => h.date.getDate() === date.getDate() && h.date.getMonth() === date.getMonth()) }; } previousMonth() { if (this.monthControl.value === 0) { this.monthControl.setValue(11); this.yearControl.setValue(this.yearControl.value - 1); } else { this.monthControl.setValue(this.monthControl.value - 1); } } nextMonth() { if (this.monthControl.value === 11) { this.monthControl.setValue(0); this.yearControl.setValue(this.yearControl.value + 1); } else { this.monthControl.setValue(this.monthControl.value + 1); } } validateYear() { const year = this.yearControl.value; if (year < 0) this.yearControl.setValue(0); if (year > 2100) this.yearControl.setValue(2100); } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtCalendarComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); } static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: IxtCalendarComponent, selector: "ixt-calendar", ngImport: i0, template: "<div class=\"calendar-container\">\r\n <div class=\"calendar-controls\">\r\n <button (click)=\"previousMonth()\">&lt;</button>\r\n <select [formControl]=\"monthControl\">\r\n <option *ngFor=\"let month of months; let i = index\" [value]=\"i\">\r\n {{month}}\r\n </option>\r\n </select>\r\n <input \r\n type=\"number\" \r\n [formControl]=\"yearControl\"\r\n [min]=\"0\"\r\n [max]=\"2100\"\r\n (blur)=\"validateYear()\"\r\n >\r\n <button (click)=\"nextMonth()\">&gt;</button>\r\n </div>\r\n \r\n <div class=\"calendar-grid\">\r\n <div class=\"weekday-header\" *ngFor=\"let day of weekDays\">{{day}}</div>\r\n <div \r\n *ngFor=\"let day of calendarDays\" \r\n class=\"calendar-day\"\r\n [class.weekend]=\"day.isWeekend\"\r\n [class.holiday]=\"day.holidays.length > 0\"\r\n >\r\n <div class=\"date\">{{day.date.getDate()}}</div>\r\n <div class=\"holiday-name\" *ngFor=\"let holiday of day.holidays\">\r\n {{holiday.name}}\r\n </div>\r\n </div>\r\n </div>\r\n </div>\r\n ", styles: [".calendar-container{max-width:800px;margin:0 auto}.calendar-controls{display:flex;gap:1rem;margin-bottom:1rem;align-items:center}.calendar-grid{display:grid;grid-template-columns:repeat(7,1fr);gap:4px}.weekday-header{padding:.5rem;text-align:center;font-weight:700}.calendar-day{aspect-ratio:1;padding:.5rem;border:1px solid #ccc;min-height:80px}.weekend{background-color:#f5f5f5}.holiday{background-color:#e8f4f8}.holiday-name{font-size:.8rem;color:#666}.date{font-weight:700}\n"], dependencies: [{ kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i2.NgSelectOption, selector: "option", inputs: ["ngValue", "value"] }, { kind: "directive", type: i2.ɵNgSelectMultipleOption, selector: "option", inputs: ["ngValue", "value"] }, { kind: "directive", type: i2.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i2.NumberValueAccessor, selector: "input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]" }, { kind: "directive", type: i2.SelectControlValueAccessor, selector: "select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]", inputs: ["compareWith"] }, { kind: "directive", type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i2.MinValidator, selector: "input[type=number][min][formControlName],input[type=number][min][formControl],input[type=number][min][ngModel]", inputs: ["min"] }, { kind: "directive", type: i2.MaxValidator, selector: "input[type=number][max][formControlName],input[type=number][max][formControl],input[type=number][max][ngModel]", inputs: ["max"] }, { kind: "directive", type: i2.FormControlDirective, selector: "[formControl]", inputs: ["formControl", "disabled", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtCalendarComponent, decorators: [{ type: Component, args: [{ selector: 'ixt-calendar', template: "<div class=\"calendar-container\">\r\n <div class=\"calendar-controls\">\r\n <button (click)=\"previousMonth()\">&lt;</button>\r\n <select [formControl]=\"monthControl\">\r\n <option *ngFor=\"let month of months; let i = index\" [value]=\"i\">\r\n {{month}}\r\n </option>\r\n </select>\r\n <input \r\n type=\"number\" \r\n [formControl]=\"yearControl\"\r\n [min]=\"0\"\r\n [max]=\"2100\"\r\n (blur)=\"validateYear()\"\r\n >\r\n <button (click)=\"nextMonth()\">&gt;</button>\r\n </div>\r\n \r\n <div class=\"calendar-grid\">\r\n <div class=\"weekday-header\" *ngFor=\"let day of weekDays\">{{day}}</div>\r\n <div \r\n *ngFor=\"let day of calendarDays\" \r\n class=\"calendar-day\"\r\n [class.weekend]=\"day.isWeekend\"\r\n [class.holiday]=\"day.holidays.length > 0\"\r\n >\r\n <div class=\"date\">{{day.date.getDate()}}</div>\r\n <div class=\"holiday-name\" *ngFor=\"let holiday of day.holidays\">\r\n {{holiday.name}}\r\n </div>\r\n </div>\r\n </div>\r\n </div>\r\n ", styles: [".calendar-container{max-width:800px;margin:0 auto}.calendar-controls{display:flex;gap:1rem;margin-bottom:1rem;align-items:center}.calendar-grid{display:grid;grid-template-columns:repeat(7,1fr);gap:4px}.weekday-header{padding:.5rem;text-align:center;font-weight:700}.calendar-day{aspect-ratio:1;padding:.5rem;border:1px solid #ccc;min-height:80px}.weekend{background-color:#f5f5f5}.holiday{background-color:#e8f4f8}.holiday-name{font-size:.8rem;color:#666}.date{font-weight:700}\n"] }] }] }); //# sourceMappingURL=data:application/json;base64,
|       |   |   |   --- ixt-calendar.index.mjs: // ixt-calendar.index.ts export * from './ixt-calendar.component'; export * from './ixt-calendar.module'; export * from './calculators/usa-holidays'; export * from './calculators/indian-holidays'; export * from './calculators/islamic-holidays'; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXh0LWNhbGVuZGFyLmluZGV4LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvaXh0LWNhbGVuZGFyL2l4dC1jYWxlbmRhci5pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3QkFBd0I7QUFDeEIsY0FBYywwQkFBMEIsQ0FBQztBQUN6QyxjQUFjLHVCQUF1QixDQUFDO0FBY3RDLGNBQWMsNEJBQTRCLENBQUM7QUFDM0MsY0FBYywrQkFBK0IsQ0FBQztBQUM5QyxjQUFjLGdDQUFnQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gaXh0LWNhbGVuZGFyLmluZGV4LnRzXHJcbmV4cG9ydCAqIGZyb20gJy4vaXh0LWNhbGVuZGFyLmNvbXBvbmVudCc7XHJcbmV4cG9ydCAqIGZyb20gJy4vaXh0LWNhbGVuZGFyLm1vZHVsZSc7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIENhbGVuZGFyRGF5IHtcclxuICBkYXRlOiBEYXRlO1xyXG4gIGlzV2Vla2VuZDogYm9vbGVhbjtcclxuICBob2xpZGF5czogSG9saWRheVtdO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIEhvbGlkYXkge1xyXG4gIG5hbWU6IHN0cmluZztcclxuICBkYXRlOiBEYXRlO1xyXG4gIHR5cGU6ICdmZWRlcmFsJyB8ICdyZWxpZ2lvdXMnIHwgJ2N1bHR1cmFsJztcclxufVxyXG5cclxuZXhwb3J0ICogZnJvbSAnLi9jYWxjdWxhdG9ycy91c2EtaG9saWRheXMnO1xyXG5leHBvcnQgKiBmcm9tICcuL2NhbGN1bGF0b3JzL2luZGlhbi1ob2xpZGF5cyc7XHJcbmV4cG9ydCAqIGZyb20gJy4vY2FsY3VsYXRvcnMvaXNsYW1pYy1ob2xpZGF5cyc7Il19
|       |   |   |   --- ixt-calendar.interfaces.mjs: export {}; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXh0LWNhbGVuZGFyLmludGVyZmFjZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9peHQtY2FsZW5kYXIvaXh0LWNhbGVuZGFyLmludGVyZmFjZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEhvbGlkYXkgfSBmcm9tIFwiLi9tb2RlbHMvaG9saWRheS5pbnRlcmZhY2VcIjtcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgQ2FsZW5kYXJEYXkge1xyXG4gIGRhdGU6IERhdGU7XHJcbiAgaXNXZWVrZW5kOiBib29sZWFuO1xyXG4gIGhvbGlkYXlzOiBIb2xpZGF5W107XHJcbn1cclxuIl19
|       |   |   |   --- ixt-calendar.module.mjs: // ixt-calendar.module.ts import { NgModule } from '@angular/core'; import { CommonModule } from '@angular/common'; import { ReactiveFormsModule } from '@angular/forms'; import { IxtCalendarComponent } from './ixt-calendar.component'; import * as i0 from "@angular/core"; export class IxtCalendarModule { static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtCalendarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); } static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "16.2.12", ngImport: i0, type: IxtCalendarModule, declarations: [IxtCalendarComponent], imports: [CommonModule, ReactiveFormsModule], exports: [IxtCalendarComponent] }); } static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtCalendarModule, imports: [CommonModule, ReactiveFormsModule] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtCalendarModule, decorators: [{ type: NgModule, args: [{ declarations: [IxtCalendarComponent], imports: [CommonModule, ReactiveFormsModule], exports: [IxtCalendarComponent] }] }] }); //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXh0LWNhbGVuZGFyLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL2l4dC1jYWxlbmRhci9peHQtY2FsZW5kYXIubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHlCQUF5QjtBQUN6QixPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUNyRCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQzs7QUFPaEUsTUFBTSxPQUFPLGlCQUFpQjsrR0FBakIsaUJBQWlCO2dIQUFqQixpQkFBaUIsaUJBSmIsb0JBQW9CLGFBQ3pCLFlBQVksRUFBRSxtQkFBbUIsYUFDakMsb0JBQW9CO2dIQUVuQixpQkFBaUIsWUFIbEIsWUFBWSxFQUFFLG1CQUFtQjs7NEZBR2hDLGlCQUFpQjtrQkFMN0IsUUFBUTttQkFBQztvQkFDUixZQUFZLEVBQUUsQ0FBQyxvQkFBb0IsQ0FBQztvQkFDcEMsT0FBTyxFQUFFLENBQUMsWUFBWSxFQUFFLG1CQUFtQixDQUFDO29CQUM1QyxPQUFPLEVBQUUsQ0FBQyxvQkFBb0IsQ0FBQztpQkFDaEMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpeHQtY2FsZW5kYXIubW9kdWxlLnRzXHJcbmltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XHJcbmltcG9ydCB7IFJlYWN0aXZlRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XHJcbmltcG9ydCB7IEl4dENhbGVuZGFyQ29tcG9uZW50IH0gZnJvbSAnLi9peHQtY2FsZW5kYXIuY29tcG9uZW50JztcclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgZGVjbGFyYXRpb25zOiBbSXh0Q2FsZW5kYXJDb21wb25lbnRdLFxyXG4gIGltcG9ydHM6IFtDb21tb25Nb2R1bGUsIFJlYWN0aXZlRm9ybXNNb2R1bGVdLFxyXG4gIGV4cG9ydHM6IFtJeHRDYWxlbmRhckNvbXBvbmVudF1cclxufSlcclxuZXhwb3J0IGNsYXNzIEl4dENhbGVuZGFyTW9kdWxlIHsgfSJdfQ==
|       |   |   +-- ixt-canvas
|       |   |   |   --- ixt-canvas.component.mjs: // ixt-canvas.component.ts import { Component, ViewChild, HostListener } from '@angular/core'; import * as i0 from "@angular/core"; export class IxtCanvasComponent { constructor() { this.isDrawing = false; this.lastPoint = null; // Drawing settings this.lineWidth = 2; this.strokeStyle = '#000000'; } ngAfterViewInit() { const canvas = this.canvasRef.nativeElement; this.ctx = canvas.getContext('2d'); // Set canvas size to match container this.resizeCanvas(); // Initialize canvas settings this.initializeCanvas(); } resizeCanvas() { const canvas = this.canvasRef.nativeElement; canvas.width = canvas.offsetWidth; canvas.height = canvas.offsetHeight; this.initializeCanvas(); } initializeCanvas() { this.ctx.lineWidth = this.lineWidth; this.ctx.strokeStyle = this.strokeStyle; this.ctx.lineCap = 'round'; this.ctx.lineJoin = 'round'; } onMouseDown(event) { this.isDrawing = true; this.lastPoint = this.getMousePos(event); } onMouseMove(event) { if (!this.isDrawing) return; const currentPoint = this.getMousePos(event); this.draw(this.lastPoint, currentPoint); this.lastPoint = currentPoint; } onMouseUp() { this.isDrawing = false; this.lastPoint = null; } getMousePos(event) { const rect = this.canvasRef.nativeElement.getBoundingClientRect(); return { x: event.clientX - rect.left, y: event.clientY - rect.top }; } draw(start, end) { this.ctx.beginPath(); this.ctx.moveTo(start.x, start.y); this.ctx.lineTo(end.x, end.y); this.ctx.stroke(); this.ctx.closePath(); } // Public methods for external control setColor(color) { this.strokeStyle = color; this.ctx.strokeStyle = color; } setLineWidth(width) { this.lineWidth = width; this.ctx.lineWidth = width; } clear() { const canvas = this.canvasRef.nativeElement; this.ctx.clearRect(0, 0, canvas.width, canvas.height); } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtCanvasComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); } static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: IxtCanvasComponent, selector: "ixt-canvas", host: { listeners: { "window:resize": "resizeCanvas()", "mousedown": "onMouseDown($event)", "mousemove": "onMouseMove($event)", "mouseup": "onMouseUp()", "mouseleave": "onMouseUp()" } }, viewQueries: [{ propertyName: "canvasRef", first: true, predicate: ["canvas"], descendants: true }], ngImport: i0, template: "IxtCanvas Template\r\n\r\n<!-- ixt-canvas.component.html -->\r\n<div class=\"canvas-container\">\r\n <canvas #canvas></canvas>\r\n</div>", styles: [".canvas-container{width:100%;height:100%;min-height:400px;background-color:#fff;border:1px solid #cccccc}.canvas-container canvas{width:100%;height:100%;cursor:crosshair}\n"] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtCanvasComponent, decorators: [{ type: Component, args: [{ selector: 'ixt-canvas', template: "IxtCanvas Template\r\n\r\n<!-- ixt-canvas.component.html -->\r\n<div class=\"canvas-container\">\r\n <canvas #canvas></canvas>\r\n</div>", styles: [".canvas-container{width:100%;height:100%;min-height:400px;background-color:#fff;border:1px solid #cccccc}.canvas-container canvas{width:100%;height:100%;cursor:crosshair}\n"] }] }], propDecorators: { canvasRef: [{ type: ViewChild, args: ['canvas'] }], resizeCanvas: [{ type: HostListener, args: ['window:resize'] }], onMouseDown: [{ type: HostListener, args: ['mousedown', ['$event']] }], onMouseMove: [{ type: HostListener, args: ['mousemove', ['$event']] }], onMouseUp: [{ type: HostListener, args: ['mouseup'] }, { type: HostListener, args: ['mouseleave'] }] } }); //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXh0LWNhbnZhcy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9peHQtY2FudmFzL2l4dC1jYW52YXMuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvaXh0LWNhbnZhcy9peHQtY2FudmFzLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDBCQUEwQjtBQUMxQixPQUFPLEVBQUUsU0FBUyxFQUFjLFNBQVMsRUFBaUIsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDOztBQVk5RixNQUFNLE9BQU8sa0JBQWtCO0lBTC9CO1FBU1UsY0FBUyxHQUFHLEtBQUssQ0FBQztRQUNsQixjQUFTLEdBQWlCLElBQUksQ0FBQztRQUV2QyxtQkFBbUI7UUFDWCxjQUFTLEdBQUcsQ0FBQyxDQUFDO1FBQ2QsZ0JBQVcsR0FBRyxTQUFTLENBQUM7S0FpRmpDO0lBL0VDLGVBQWU7UUFDYixNQUFNLE1BQU0sR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLGFBQWEsQ0FBQztRQUM1QyxJQUFJLENBQUMsR0FBRyxHQUFHLE1BQU0sQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFFLENBQUM7UUFFcEMscUNBQXFDO1FBQ3JDLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQztRQUVwQiw2QkFBNkI7UUFDN0IsSUFBSSxDQUFDLGdCQUFnQixFQUFFLENBQUM7SUFDMUIsQ0FBQztJQUdPLFlBQVk7UUFDbEIsTUFBTSxNQUFNLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxhQUFhLENBQUM7UUFDNUMsTUFBTSxDQUFDLEtBQUssR0FBRyxNQUFNLENBQUMsV0FBVyxDQUFDO1FBQ2xDLE1BQU0sQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDLFlBQVksQ0FBQztRQUNwQyxJQUFJLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQztJQUMxQixDQUFDO0lBRU8sZ0JBQWdCO1FBQ3RCLElBQUksQ0FBQyxHQUFHLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUM7UUFDcEMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQztRQUN4QyxJQUFJLENBQUMsR0FBRyxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7UUFDM0IsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLEdBQUcsT0FBTyxDQUFDO0lBQzlCLENBQUM7SUFHRCxXQUFXLENBQUMsS0FBaUI7UUFDM0IsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUM7UUFDdEIsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzNDLENBQUM7SUFHRCxXQUFXLENBQUMsS0FBaUI7UUFDM0IsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTO1lBQUUsT0FBTztRQUU1QixNQUFNLFlBQVksR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQzdDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVUsRUFBRSxZQUFZLENBQUMsQ0FBQztRQUN6QyxJQUFJLENBQUMsU0FBUyxHQUFHLFlBQVksQ0FBQztJQUNoQyxDQUFDO0lBSUQsU0FBUztRQUNQLElBQUksQ0FBQyxTQUFTLEdBQUcsS0FBSyxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDO0lBQ3hCLENBQUM7SUFFTyxXQUFXLENBQUMsS0FBaUI7UUFDbkMsTUFBTSxJQUFJLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxhQUFhLENBQUMscUJBQXFCLEVBQUUsQ0FBQztRQUNsRSxPQUFPO1lBQ0wsQ0FBQyxFQUFFLEtBQUssQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLElBQUk7WUFDNUIsQ0FBQyxFQUFFLEtBQUssQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLEdBQUc7U0FDNUIsQ0FBQztJQUNKLENBQUM7SUFFTyxJQUFJLENBQUMsS0FBWSxFQUFFLEdBQVU7UUFDbkMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxTQUFTLEVBQUUsQ0FBQztRQUNyQixJQUFJLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNsQyxJQUFJLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUM5QixJQUFJLENBQUMsR0FBRyxDQUFDLE1BQU0sRUFBRSxDQUFDO1FBQ2xCLElBQUksQ0FBQyxHQUFHLENBQUMsU0FBUyxFQUFFLENBQUM7SUFDdkIsQ0FBQztJQUVELHNDQUFzQztJQUN0QyxRQUFRLENBQUMsS0FBYTtRQUNwQixJQUFJLENBQUMsV0FBVyxHQUFHLEtBQUssQ0FBQztRQUN6QixJQUFJLENBQUMsR0FBRyxDQUFDLFdBQVcsR0FBRyxLQUFLLENBQUM7SUFDL0IsQ0FBQztJQUVELFlBQVksQ0FBQyxLQUFhO1FBQ3hCLElBQUksQ0FBQyxTQUFTLEdBQUcsS0FBSyxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxHQUFHLENBQUMsU0FBUyxHQUFHLEtBQUssQ0FBQztJQUM3QixDQUFDO0lBRUQsS0FBSztRQUNILE1BQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsYUFBYSxDQUFDO1FBQzVDLElBQUksQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsTUFBTSxDQUFDLEtBQUssRUFBRSxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDeEQsQ0FBQzsrR0F6RlUsa0JBQWtCO21HQUFsQixrQkFBa0Isa1ZDYi9CLDJJQUtNOzs0RkRRTyxrQkFBa0I7a0JBTDlCLFNBQVM7K0JBQ0UsWUFBWTs4QkFLTyxTQUFTO3NCQUFyQyxTQUFTO3VCQUFDLFFBQVE7Z0JBc0JYLFlBQVk7c0JBRG5CLFlBQVk7dUJBQUMsZUFBZTtnQkFnQjdCLFdBQVc7c0JBRFYsWUFBWTt1QkFBQyxXQUFXLEVBQUUsQ0FBQyxRQUFRLENBQUM7Z0JBT3JDLFdBQVc7c0JBRFYsWUFBWTt1QkFBQyxXQUFXLEVBQUUsQ0FBQyxRQUFRLENBQUM7Z0JBV3JDLFNBQVM7c0JBRlIsWUFBWTt1QkFBQyxTQUFTOztzQkFDdEIsWUFBWTt1QkFBQyxZQUFZIiwic291cmNlc0NvbnRlbnQiOlsiLy8gaXh0LWNhbnZhcy5jb21wb25lbnQudHNcclxuaW1wb3J0IHsgQ29tcG9uZW50LCBFbGVtZW50UmVmLCBWaWV3Q2hpbGQsIEFmdGVyVmlld0luaXQsIEhvc3RMaXN0ZW5lciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuaW50ZXJmYWNlIFBvaW50IHtcclxuICB4OiBudW1iZXI7XHJcbiAgeTogbnVtYmVyO1xyXG59XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2l4dC1jYW52YXMnLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9peHQtY2FudmFzLmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9peHQtY2FudmFzLmNvbXBvbmVudC5zY3NzJ11cclxufSlcclxuZXhwb3J0IGNsYXNzIEl4dENhbnZhc0NvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQge1xyXG4gIEBWaWV3Q2hpbGQoJ2NhbnZhcycpIHByaXZhdGUgY2FudmFzUmVmITogRWxlbWVudFJlZjxIVE1MQ2FudmFzRWxlbWVudD47XHJcbiAgXHJcbiAgcHJpdmF0ZSBjdHghOiBDYW52YXNSZW5kZXJpbmdDb250ZXh0MkQ7XHJcbiAgcHJpdmF0ZSBpc0RyYXdpbmcgPSBmYWxzZTtcclxuICBwcml2YXRlIGxhc3RQb2ludDogUG9pbnQgfCBudWxsID0gbnVsbDtcclxuICBcclxuICAvLyBEcmF3aW5nIHNldHRpbmdzXHJcbiAgcHJpdmF0ZSBsaW5lV2lkdGggPSAyO1xyXG4gIHByaXZhdGUgc3Ryb2tlU3R5bGUgPSAnIzAwMDAwMCc7XHJcbiAgXHJcbiAgbmdBZnRlclZpZXdJbml0KCkge1xyXG4gICAgY29uc3QgY2FudmFzID0gdGhpcy5jYW52YXNSZWYubmF0aXZlRWxlbWVudDtcclxuICAgIHRoaXMuY3R4ID0gY2FudmFzLmdldENvbnRleHQoJzJkJykhO1xyXG4gICAgXHJcbiAgICAvLyBTZXQgY2FudmFzIHNpemUgdG8gbWF0Y2ggY29udGFpbmVyXHJcbiAgICB0aGlzLnJlc2l6ZUNhbnZhcygpO1xyXG4gICAgXHJcbiAgICAvLyBJbml0aWFsaXplIGNhbnZhcyBzZXR0aW5nc1xyXG4gICAgdGhpcy5pbml0aWFsaXplQ2FudmFzKCk7XHJcbiAgfVxyXG4gIFxyXG4gIEBIb3N0TGlzdGVuZXIoJ3dpbmRvdzpyZXNpemUnKVxyXG4gIHByaXZhdGUgcmVzaXplQ2FudmFzKCkge1xyXG4gICAgY29uc3QgY2FudmFzID0gdGhpcy5jYW52YXNSZWYubmF0aXZlRWxlbWVudDtcclxuICAgIGNhbnZhcy53aWR0aCA9IGNhbnZhcy5vZmZzZXRXaWR0aDtcclxuICAgIGNhbnZhcy5oZWlnaHQgPSBjYW52YXMub2Zmc2V0SGVpZ2h0O1xyXG4gICAgdGhpcy5pbml0aWFsaXplQ2FudmFzKCk7XHJcbiAgfVxyXG4gIFxyXG4gIHByaXZhdGUgaW5pdGlhbGl6ZUNhbnZhcygpIHtcclxuICAgIHRoaXMuY3R4LmxpbmVXaWR0aCA9IHRoaXMubGluZVdpZHRoO1xyXG4gICAgdGhpcy5jdHguc3Ryb2tlU3R5bGUgPSB0aGlzLnN0cm9rZVN0eWxlO1xyXG4gICAgdGhpcy5jdHgubGluZUNhcCA9ICdyb3VuZCc7XHJcbiAgICB0aGlzLmN0eC5saW5lSm9pbiA9ICdyb3VuZCc7XHJcbiAgfVxyXG4gIFxyXG4gIEBIb3N0TGlzdGVuZXIoJ21vdXNlZG93bicsIFsnJGV2ZW50J10pXHJcbiAgb25Nb3VzZURvd24oZXZlbnQ6IE1vdXNlRXZlbnQpIHtcclxuICAgIHRoaXMuaXNEcmF3aW5nID0gdHJ1ZTtcclxuICAgIHRoaXMubGFzdFBvaW50ID0gdGhpcy5nZXRNb3VzZVBvcyhldmVudCk7XHJcbiAgfVxyXG4gIFxyXG4gIEBIb3N0TGlzdGVuZXIoJ21vdXNlbW92ZScsIFsnJGV2ZW50J10pXHJcbiAgb25Nb3VzZU1vdmUoZXZlbnQ6IE1vdXNlRXZlbnQpIHtcclxuICAgIGlmICghdGhpcy5pc0RyYXdpbmcpIHJldHVybjtcclxuICAgIFxyXG4gICAgY29uc3QgY3VycmVudFBvaW50ID0gdGhpcy5nZXRNb3VzZVBvcyhldmVudCk7XHJcbiAgICB0aGlzLmRyYXcodGhpcy5sYXN0UG9pbnQhLCBjdXJyZW50UG9pbnQpO1xyXG4gICAgdGhpcy5sYXN0UG9pbnQgPSBjdXJyZW50UG9pbnQ7XHJcbiAgfVxyXG4gIFxyXG4gIEBIb3N0TGlzdGVuZXIoJ21vdXNldXAnKVxyXG4gIEBIb3N0TGlzdGVuZXIoJ21vdXNlbGVhdmUnKVxyXG4gIG9uTW91c2VVcCgpIHtcclxuICAgIHRoaXMuaXNEcmF3aW5nID0gZmFsc2U7XHJcbiAgICB0aGlzLmxhc3RQb2ludCA9IG51bGw7XHJcbiAgfVxyXG4gIFxyXG4gIHByaXZhdGUgZ2V0TW91c2VQb3MoZXZlbnQ6IE1vdXNlRXZlbnQpOiBQb2ludCB7XHJcbiAgICBjb25zdCByZWN0ID0gdGhpcy5jYW52YXNSZWYubmF0aXZlRWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIHg6IGV2ZW50LmNsaWVudFggLSByZWN0LmxlZnQsXHJcbiAgICAgIHk6IGV2ZW50LmNsaWVudFkgLSByZWN0LnRvcFxyXG4gICAgfTtcclxuICB9XHJcbiAgXHJcbiAgcHJpdmF0ZSBkcmF3KHN0YXJ0OiBQb2ludCwgZW5kOiBQb2ludCkge1xyXG4gICAgdGhpcy5jdHguYmVnaW5QYXRoKCk7XHJcbiAgICB0aGlzLmN0eC5tb3ZlVG8oc3RhcnQueCwgc3RhcnQueSk7XHJcbiAgICB0aGlzLmN0eC5saW5lVG8oZW5kLngsIGVuZC55KTtcclxuICAgIHRoaXMuY3R4LnN0cm9rZSgpO1xyXG4gICAgdGhpcy5jdHguY2xvc2VQYXRoKCk7XHJcbiAgfVxyXG4gIFxyXG4gIC8vIFB1YmxpYyBtZXRob2RzIGZvciBleHRlcm5hbCBjb250cm9sXHJcbiAgc2V0Q29sb3IoY29sb3I6IHN0cmluZykge1xyXG4gICAgdGhpcy5zdHJva2VTdHlsZSA9IGNvbG9yO1xyXG4gICAgdGhpcy5jdHguc3Ryb2tlU3R5bGUgPSBjb2xvcjtcclxuICB9XHJcbiAgXHJcbiAgc2V0TGluZVdpZHRoKHdpZHRoOiBudW1iZXIpIHtcclxuICAgIHRoaXMubGluZVdpZHRoID0gd2lkdGg7XHJcbiAgICB0aGlzLmN0eC5saW5lV2lkdGggPSB3aWR0aDtcclxuICB9XHJcbiAgXHJcbiAgY2xlYXIoKSB7XHJcbiAgICBjb25zdCBjYW52YXMgPSB0aGlzLmNhbnZhc1JlZi5uYXRpdmVFbGVtZW50O1xyXG4gICAgdGhpcy5jdHguY2xlYXJSZWN0KDAsIDAsIGNhbnZhcy53aWR0aCwgY2FudmFzLmhlaWdodCk7XHJcbiAgfVxyXG59IiwiSXh0Q2FudmFzIFRlbXBsYXRlXHJcblxyXG48IS0tIGl4dC1jYW52YXMuY29tcG9uZW50Lmh0bWwgLS0+XHJcbjxkaXYgY2xhc3M9XCJjYW52YXMtY29udGFpbmVyXCI+XHJcbiAgPGNhbnZhcyAjY2FudmFzPjwvY2FudmFzPlxyXG48L2Rpdj4iXX0=
|       |   |   |   --- ixt-canvas.index.mjs: // ixt-canvas.index.ts export * from './ixt-canvas.component'; export * from './ixt-canvas.module'; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXh0LWNhbnZhcy5pbmRleC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL2l4dC1jYW52YXMvaXh0LWNhbnZhcy5pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxzQkFBc0I7QUFDdEIsY0FBYyx3QkFBd0IsQ0FBQztBQUN2QyxjQUFjLHFCQUFxQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gaXh0LWNhbnZhcy5pbmRleC50c1xyXG5leHBvcnQgKiBmcm9tICcuL2l4dC1jYW52YXMuY29tcG9uZW50JztcclxuZXhwb3J0ICogZnJvbSAnLi9peHQtY2FudmFzLm1vZHVsZSc7XHJcblxyXG4vLyBZb3UgbWlnaHQgd2FudCB0byBleHBvcnQgaW50ZXJmYWNlcy90eXBlcyBpZiB0aGV5J3JlIG5lZWRlZCBlbHNld2hlcmVcclxuZXhwb3J0IGludGVyZmFjZSBEcmF3aW5nQ29uZmlnIHtcclxuICBjb2xvcj86IHN0cmluZztcclxuICBsaW5lV2lkdGg/OiBudW1iZXI7XHJcbn0iXX0=
|       |   |   |   --- ixt-canvas.module.mjs: // ixt-canvas.module.ts import { NgModule } from '@angular/core'; import { CommonModule } from '@angular/common'; import { IxtCanvasComponent } from './ixt-canvas.component'; import * as i0 from "@angular/core"; export class IxtCanvasModule { static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtCanvasModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); } static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "16.2.12", ngImport: i0, type: IxtCanvasModule, declarations: [IxtCanvasComponent], imports: [CommonModule], exports: [IxtCanvasComponent] }); } static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtCanvasModule, imports: [CommonModule] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtCanvasModule, decorators: [{ type: NgModule, args: [{ declarations: [ IxtCanvasComponent ], imports: [ CommonModule ], exports: [ IxtCanvasComponent ] }] }] }); //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXh0LWNhbnZhcy5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9peHQtY2FudmFzL2l4dC1jYW52YXMubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHVCQUF1QjtBQUN2QixPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQzs7QUFhNUQsTUFBTSxPQUFPLGVBQWU7K0dBQWYsZUFBZTtnSEFBZixlQUFlLGlCQVR4QixrQkFBa0IsYUFHbEIsWUFBWSxhQUdaLGtCQUFrQjtnSEFHVCxlQUFlLFlBTnhCLFlBQVk7OzRGQU1ILGVBQWU7a0JBWDNCLFFBQVE7bUJBQUM7b0JBQ1IsWUFBWSxFQUFFO3dCQUNaLGtCQUFrQjtxQkFDbkI7b0JBQ0QsT0FBTyxFQUFFO3dCQUNQLFlBQVk7cUJBQ2I7b0JBQ0QsT0FBTyxFQUFFO3dCQUNQLGtCQUFrQjtxQkFDbkI7aUJBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpeHQtY2FudmFzLm1vZHVsZS50c1xyXG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xyXG5pbXBvcnQgeyBJeHRDYW52YXNDb21wb25lbnQgfSBmcm9tICcuL2l4dC1jYW52YXMuY29tcG9uZW50JztcclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgZGVjbGFyYXRpb25zOiBbXHJcbiAgICBJeHRDYW52YXNDb21wb25lbnRcclxuICBdLFxyXG4gIGltcG9ydHM6IFtcclxuICAgIENvbW1vbk1vZHVsZVxyXG4gIF0sXHJcbiAgZXhwb3J0czogW1xyXG4gICAgSXh0Q2FudmFzQ29tcG9uZW50XHJcbiAgXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgSXh0Q2FudmFzTW9kdWxlIHsgfSJdfQ==
|       |   |   +-- ixt-diagram
|       |   |   |   +-- types
|       |   |   |   |   +-- EBNF
|       |   |   |   |   |   --- ixt-ebnf.diagram.mjs: // ixt-ebnf.diagram.ts import { Component, ViewChild } from '@angular/core'; import * as i0 from "@angular/core"; export class IxtEbnfDiagram { constructor() { this.width = 1200; this.height = 800; this.nodes = [ // Git command grammar nodes { id: 'git', x: 50, y: 50, width: 80, height: 40, isDragging: false, type: 'terminal', label: 'git' }, { id: 'command', x: 200, y: 50, width: 120, height: 40, isDragging: false, type: 'nonterminal', label: 'command' }, { id: 'commit', x: 400, y: 50, width: 100, height: 40, isDragging: false, type: 'terminal', label: 'commit' }, { id: 'push', x: 400, y: 150, width: 100, height: 40, isDragging: false, type: 'terminal', label: 'push' }, { id: 'pull', x: 400, y: 250, width: 100, height: 40, isDragging: false, type: 'terminal', label: 'pull' }, { id: 'branch', x: 400, y: 350, width: 100, height: 40, isDragging: false, type: 'terminal', label: 'branch' }, { id: 'options', x: 600, y: 50, width: 120, height: 40, isDragging: false, type: 'nonterminal', label: 'options' }, { id: 'args', x: 800, y: 50, width: 100, height: 40, isDragging: false, type: 'nonterminal', label: 'args' } ]; this.edges = [ { from: 'git', to: 'command', type: 'sequence' }, { from: 'command', to: 'commit', type: 'alternative' }, { from: 'command', to: 'push', type: 'alternative' }, { from: 'command', to: 'pull', type: 'alternative' }, { from: 'command', to: 'branch', type: 'alternative' }, { from: 'commit', to: 'options', type: 'sequence' }, { from: 'options', to: 'args', type: 'optional' } ]; this.draggedNode = null; this.lastX = 0; this.lastY = 0; // Add zoom functionality this.scale = 1; // Add node selection and highlighting this.selectedNode = null; } ngOnInit() { this.ctx = this.canvasRef.nativeElement.getContext('2d'); this.draw(); } drawNodes() { this.nodes.forEach(node => { this.ctx.beginPath(); // Different styles for different node types switch (node.type) { case 'terminal': this.ctx.rect(node.x, node.y, node.width, node.height); break; case 'nonterminal': this.roundRect(node.x, node.y, node.width, node.height, 10); break; case 'operator': this.ctx.ellipse(node.x + node.width / 2, node.y + node.height / 2, node.width / 2, node.height / 2, 0, 0, Math.PI * 2); break; } this.ctx.strokeStyle = '#333'; this.ctx.lineWidth = 2; this.ctx.stroke(); // Draw label this.ctx.fillStyle = '#000'; this.ctx.font = '14px Arial'; this.ctx.textAlign = 'center'; this.ctx.textBaseline = 'middle'; this.ctx.fillText(node.label, node.x + node.width / 2, node.y + node.height / 2); }); } drawEdges() { this.edges.forEach(edge => { const fromNode = this.nodes.find(n => n.id === edge.from); const toNode = this.nodes.find(n => n.id === edge.to); // Calculate connection points using smart routing const points = this.calculateEdgePoints(fromNode, toNode); this.ctx.beginPath(); this.ctx.moveTo(points[0].x, points[0].y); // Draw curved lines for better aesthetics if (points.length === 3) { this.ctx.quadraticCurveTo(points[1].x, points[1].y, points[2].x, points[2].y); } this.ctx.strokeStyle = '#666'; this.ctx.lineWidth = 1.5; this.ctx.stroke(); // Draw arrow this.drawArrow(points[points.length - 2], points[points.length - 1]); // Draw edge type indicator if (edge.type !== 'sequence') { const midPoint = this.getMidPoint(points); this.drawEdgeType(edge.type, midPoint); } }); } calculateEdgePoints(from, to) { // Smart routing algorithm to avoid crossing nodes const points = []; const fromCenter = { x: from.x + from.width / 2, y: from.y + from.height / 2 }; const toCenter = { x: to.x + to.width / 2, y: to.y + to.height / 2 }; // Add intermediate points for better routing if (Math.abs(fromCenter.y - toCenter.y) > 100) { points.push({ x: fromCenter.x + from.width / 2, y: fromCenter.y }, { x: (fromCenter.x + toCenter.x) / 2, y: fromCenter.y }, { x: (fromCenter.x + toCenter.x) / 2, y: toCenter.y }, { x: toCenter.x - to.width / 2, y: toCenter.y }); } else { points.push({ x: fromCenter.x + from.width / 2, y: fromCenter.y }, { x: (fromCenter.x + toCenter.x) / 2, y: (fromCenter.y + toCenter.y) / 2 }, { x: toCenter.x - to.width / 2, y: toCenter.y }); } return points; } drawArrow(from, to) { const angle = Math.atan2(to.y - from.y, to.x - from.x); const length = 10; this.ctx.beginPath(); this.ctx.moveTo(to.x, to.y); this.ctx.lineTo(to.x - length * Math.cos(angle - Math.PI / 6), to.y - length * Math.sin(angle - Math.PI / 6)); this.ctx.moveTo(to.x, to.y); this.ctx.lineTo(to.x - length * Math.cos(angle + Math.PI / 6), to.y - length * Math.sin(angle + Math.PI / 6)); this.ctx.stroke(); } drawEdgeType(type, point) { this.ctx.fillStyle = '#fff'; this.ctx.strokeStyle = '#666'; switch (type) { case 'alternative': this.ctx.beginPath(); this.ctx.arc(point.x, point.y, 8, 0, Math.PI * 2); this.ctx.fill(); this.ctx.stroke(); this.ctx.fillStyle = '#666'; this.ctx.fillText('|', point.x, point.y + 1); break; case 'optional': this.ctx.beginPath(); this.ctx.arc(point.x, point.y, 8, 0, Math.PI * 2); this.ctx.fill(); this.ctx.stroke(); this.ctx.fillStyle = '#666'; this.ctx.fillText('?', point.x, point.y + 1); break; case 'repetition': this.ctx.beginPath(); this.ctx.arc(point.x, point.y, 8, 0, Math.PI * 2); this.ctx.fill(); this.ctx.stroke(); this.ctx.fillStyle = '#666'; this.ctx.fillText('*', point.x, point.y + 1); break; } } roundRect(x, y, width, height, radius) { this.ctx.beginPath(); this.ctx.moveTo(x + radius, y); this.ctx.lineTo(x + width - radius, y); this.ctx.arcTo(x + width, y, x + width, y + radius, radius); this.ctx.lineTo(x + width, y + height - radius); this.ctx.arcTo(x + width, y + height, x + width - radius, y + height, radius); this.ctx.lineTo(x + radius, y + height); this.ctx.arcTo(x, y + height, x, y + height - radius, radius); this.ctx.lineTo(x, y + radius); this.ctx.arcTo(x, y, x + radius, y, radius); this.ctx.closePath(); } onMouseDown(event) { const rect = this.canvasRef.nativeElement.getBoundingClientRect(); const x = event.clientX - rect.left; const y = event.clientY - rect.top; this.nodes.forEach(node => { if (x >= node.x && x <= node.x + node.width && y >= node.y && y <= node.y + node.height) { node.isDragging = true; this.draggedNode = node; this.lastX = x; this.lastY = y; } }); } onMouseMove(event) { if (!this.draggedNode) return; const rect = this.canvasRef.nativeElement.getBoundingClientRect(); const x = event.clientX - rect.left; const y = event.clientY - rect.top; const dx = x - this.lastX; const dy = y - this.lastY; this.draggedNode.x += dx; this.draggedNode.y += dy; this.lastX = x; this.lastY = y; this.draw(); } onMouseUp() { if (this.draggedNode) { this.draggedNode.isDragging = false; this.draggedNode = null; } } autoLayout() { // Force-directed layout with hierarchical constraints const iterations = 100; const k = 100; // Spring constant const c = 200; // Repulsion constant for (let i = 0; i < iterations; i++) { // Calculate forces this.nodes.forEach(node1 => { let fx = 0; let fy = 0; // Repulsion between nodes this.nodes.forEach(node2 => { if (node1 !== node2) { const dx = node1.x - node2.x; const dy = node1.y - node2.y; const distance = Math.sqrt(dx * dx + dy * dy); if (distance < 200) { fx += (c / (distance * distance)) * dx / distance; fy += (c / (distance * distance)) * dy / distance; } } }); // Spring forces for edges this.edges.forEach(edge => { if (edge.from === node1.id || edge.to === node1.id) { const other = this.nodes.find(n => n.id === (edge.from === node1.id ? edge.to : edge.from)); const dx = node1.x - other.x; const dy = node1.y - other.y; const distance = Math.sqrt(dx * dx + dy * dy); fx -= k * dx / distance; fy -= k * dy / distance; } }); // Apply forces with damping const damping = 0.9; node1.x += fx * damping; node1.y += fy * damping; // Keep nodes within bounds node1.x = Math.max(node1.width / 2, Math.min(this.width - node1.width / 2, node1.x)); node1.y = Math.max(node1.height / 2, Math.min(this.height - node1.height / 2, node1.y)); }); } } applyHierarchicalConstraints() { // Group nodes by their levels const levels = {}; const visited = new Set(); const assignLevel = (nodeId, level) => { if (visited.has(nodeId)) return; visited.add(nodeId); const node = this.nodes.find(n => n.id === nodeId); levels[level] = levels[level] || []; levels[level].push(node); // Process children this.edges .filter(e => e.from === nodeId) .forEach(e => assignLevel(e.to, level + 1)); }; // Start with root nodes (nodes with no incoming edges) const rootNodes = this.nodes.filter(node => !this.edges.some(e => e.to === node.id)); rootNodes.forEach(node => assignLevel(node.id, 0)); // Adjust vertical positions based on levels Object.entries(levels).forEach(([level, nodes]) => { const levelY = Number(level) * 150 + 50; const levelWidth = this.width - 100; const spacing = levelWidth / (nodes.length + 1); nodes.forEach((node, index) => { node.y = levelY; node.x = spacing * (index + 1); }); }); } minimizeCrossings() { // Barycentric method to reduce edge crossings const levels = this.getLevels(); for (let i = 1; i < Object.keys(levels).length; i++) { const currentLevel = levels[i]; const upperLevel = levels[i - 1]; currentLevel.forEach(node => { // Calculate barycenter const incomingEdges = this.edges.filter(e => e.to === node.id); if (incomingEdges.length > 0) { const avgX = incomingEdges.reduce((sum, edge) => { const sourceNode = upperLevel.find(n => n.id === edge.from); return sum + sourceNode.x; }, 0) / incomingEdges.length; node.x = avgX; } }); // Sort nodes horizontally within level currentLevel.sort((a, b) => a.x - b.x); // Space nodes evenly const levelWidth = this.width - 100; const spacing = levelWidth / (currentLevel.length + 1); currentLevel.forEach((node, index) => { node.x = spacing * (index + 1); }); } } getLevels() { const levels = {}; const visited = new Set(); const getNodeLevel = (nodeId) => { if (visited.has(nodeId)) return -1; visited.add(nodeId); const incomingEdges = this.edges.filter(e => e.to === nodeId); if (incomingEdges.length === 0) return 0; const parentLevels = incomingEdges.map(e => getNodeLevel(e.from)); return Math.max(...parentLevels) + 1; }; this.nodes.forEach(node => { visited.clear(); const level = getNodeLevel(node.id); levels[level] = levels[level] || []; levels[level].push(node); }); return levels; } // Add export functionality exportLayout() { const layout = { nodes: this.nodes.map(node => ({ id: node.id, x: node.x, y: node.y, type: node.type, label: node.label })), edges: this.edges }; return JSON.stringify(layout, null, 2); } // Add import functionality importLayout(layoutStr) { try { const layout = JSON.parse(layoutStr); // Update node positions layout.nodes.forEach((importedNode) => { const node = this.nodes.find(n => n.id === importedNode.id); if (node) { node.x = importedNode.x; node.y = importedNode.y; } }); this.draw(); } catch (error) { console.error('Failed to import layout:', error); } } zoomIn() { this.scale = Math.min(this.scale * 1.2, 3); this.applyZoom(); } zoomOut() { this.scale = Math.max(this.scale / 1.2, 0.3); this.applyZoom(); } applyZoom() { this.ctx.setTransform(1, 0, 0, 1, 0, 0); this.ctx.clearRect(0, 0, this.width, this.height); this.ctx.setTransform(this.scale, 0, 0, this.scale, 0, 0); this.draw(); } selectNode(event) { const rect = this.canvasRef.nativeElement.getBoundingClientRect(); const x = (event.clientX - rect.left) / this.scale; const y = (event.clientY - rect.top) / this.scale; this.selectedNode = null; for (const node of this.nodes) { if (x >= node.x && x <= node.x + node.width && y >= node.y && y <= node.y + node.height) { this.selectedNode = node; break; } } this.draw(); } drawSelectedNode() { if (!this.selectedNode) return; this.ctx.strokeStyle = '#4a90e2'; this.ctx.lineWidth = 3; this.ctx.strokeRect(this.selectedNode.x - 2, this.selectedNode.y - 2, this.selectedNode.width + 4, this.selectedNode.height + 4); } // Override the original draw method to include selection draw() { this.ctx.clearRect(0, 0, this.width / this.scale, this.height / this.scale); this.drawEdges(); this.drawNodes(); if (this.selectedNode) { this.drawSelectedNode(); } } getMidPoint(points) { if (!points || points.length === 0) { return { x: 0, y: 0 }; } if (points.length === 1) { return points[0]; } const midIndex = Math.floor((points.length - 1) / 2); if (points.length % 2 === 0) { // Even number of points - average the two middle points const point1 = points[midIndex]; const point2 = points[midIndex + 1]; return { x: (point1.x + point2.x) / 2, y: (point1.y + point2.y) / 2 }; } else { // Odd number of points - return the middle point return points[midIndex]; } } getPointOnCurve(points, t) { if (points.length === 2) { // Linear interpolation return { x: points[0].x + (points[1].x - points[0].x) * t, y: points[0].y + (points[1].y - points[0].y) * t }; } else if (points.length === 3) { // Quadratic bezier const mt = 1 - t; return { x: mt * mt * points[0].x + 2 * mt * t * points[1].x + t * t * points[2].x, y: mt * mt * points[0].y + 2 * mt * t * points[1].y + t * t * points[2].y }; } else if (points.length === 4) { // Cubic bezier const mt = 1 - t; return { x: mt * mt * mt * points[0].x + 3 * mt * mt * t * points[1].x + 3 * mt * t * t * points[2].x + t * t * t * points[3].x, y: mt * mt * mt * points[0].y + 3 * mt * mt * t * points[1].y + 3 * mt * t * t * points[2].y + t * t * t * points[3].y }; } // Fall back to linear interpolation between first and last points return this.getPointOnCurve([points[0], points[points.length - 1]], t); } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtEbnfDiagram, deps: [], target: i0.ɵɵFactoryTarget.Component }); } static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: IxtEbnfDiagram, selector: "ixt-ebnf", viewQueries: [{ propertyName: "canvasRef", first: true, predicate: ["canvas"], descendants: true, static: true }], ngImport: i0, template: ` <div class="diagram-container"> <canvas #canvas (mousedown)="onMouseDown($event)" (mousemove)="onMouseMove($event)" (mouseup)="onMouseUp()" [width]="width" [height]="height"> </canvas> <button class="auto-layout-btn" (click)="autoLayout()">Auto Layout</button> </div> `, isInline: true, styles: [".diagram-container{position:relative;border:1px solid #ccc}.auto-layout-btn{position:absolute;top:10px;right:10px;padding:8px 16px;background:#4a90e2;color:#fff;border:none;border-radius:4px;cursor:pointer}\n"] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtEbnfDiagram, decorators: [{ type: Component, args: [{ selector: 'ixt-ebnf', template: ` <div class="diagram-container"> <canvas #canvas (mousedown)="onMouseDown($event)" (mousemove)="onMouseMove($event)" (mouseup)="onMouseUp()" [width]="width" [height]="height"> </canvas> <button class="auto-layout-btn" (click)="autoLayout()">Auto Layout</button> </div> `, styles: [".diagram-container{position:relative;border:1px solid #ccc}.auto-layout-btn{position:absolute;top:10px;right:10px;padding:8px 16px;background:#4a90e2;color:#fff;border:none;border-radius:4px;cursor:pointer}\n"] }] }], propDecorators: { canvasRef: [{ type: ViewChild, args: ['canvas', { static: true }] }] } }); //# sourceMappingURL=data:application/json;base64,
|       |   |   |   |   |   --- ixt-ebnf.module.mjs: // ixt-ebnf.module.ts import { NgModule } from '@angular/core'; import { CommonModule } from '@angular/common'; import { IxtEbnfDiagram } from './ixt-ebnf.diagram'; import * as i0 from "@angular/core"; export class IxtEbnfModule { static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtEbnfModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); } static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "16.2.12", ngImport: i0, type: IxtEbnfModule, declarations: [IxtEbnfDiagram], imports: [CommonModule], exports: [IxtEbnfDiagram] }); } static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtEbnfModule, imports: [CommonModule] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtEbnfModule, decorators: [{ type: NgModule, args: [{ declarations: [ IxtEbnfDiagram ], imports: [ CommonModule ], exports: [ IxtEbnfDiagram ] }] }] }); //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXh0LWVibmYubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvaXh0LWRpYWdyYW0vdHlwZXMvRUJORi9peHQtZWJuZi5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEscUJBQXFCO0FBQ3JCLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQzs7QUFhcEQsTUFBTSxPQUFPLGFBQWE7K0dBQWIsYUFBYTtnSEFBYixhQUFhLGlCQVR0QixjQUFjLGFBR2QsWUFBWSxhQUdaLGNBQWM7Z0hBR0wsYUFBYSxZQU50QixZQUFZOzs0RkFNSCxhQUFhO2tCQVh6QixRQUFRO21CQUFDO29CQUNSLFlBQVksRUFBRTt3QkFDWixjQUFjO3FCQUNmO29CQUNELE9BQU8sRUFBRTt3QkFDUCxZQUFZO3FCQUNiO29CQUNELE9BQU8sRUFBRTt3QkFDUCxjQUFjO3FCQUNmO2lCQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLy8gaXh0LWVibmYubW9kdWxlLnRzXHJcbmltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XHJcbmltcG9ydCB7IEl4dEVibmZEaWFncmFtIH0gZnJvbSAnLi9peHQtZWJuZi5kaWFncmFtJztcclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgZGVjbGFyYXRpb25zOiBbXHJcbiAgICBJeHRFYm5mRGlhZ3JhbVxyXG4gIF0sXHJcbiAgaW1wb3J0czogW1xyXG4gICAgQ29tbW9uTW9kdWxlXHJcbiAgXSxcclxuICBleHBvcnRzOiBbXHJcbiAgICBJeHRFYm5mRGlhZ3JhbVxyXG4gIF1cclxufSlcclxuZXhwb3J0IGNsYXNzIEl4dEVibmZNb2R1bGUge31cclxuXHJcbiJdfQ==
|       |   |   |   |   |   --- ixt-ebnf.types.mjs: // ixt-ebnf.types.ts export {}; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXh0LWVibmYudHlwZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9peHQtZGlhZ3JhbS90eXBlcy9FQk5GL2l4dC1lYm5mLnR5cGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQiIsInNvdXJjZXNDb250ZW50IjpbIi8vIGl4dC1lYm5mLnR5cGVzLnRzXHJcblxyXG4vKipcclxuICogUmVwcmVzZW50cyB0aGUgdHlwZSBvZiBub2RlIGluIHRoZSBFQk5GIGRpYWdyYW1cclxuICovXHJcbmV4cG9ydCB0eXBlIE5vZGVUeXBlID0gJ3Rlcm1pbmFsJyB8ICdub250ZXJtaW5hbCcgfCAnb3BlcmF0b3InO1xyXG5cclxuLyoqXHJcbiAqIFJlcHJlc2VudHMgdGhlIHR5cGUgb2YgZWRnZSBjb25uZWN0aW9uIGluIHRoZSBFQk5GIGRpYWdyYW1cclxuICovXHJcbmV4cG9ydCB0eXBlIEVkZ2VUeXBlID0gJ3NlcXVlbmNlJyB8ICdhbHRlcm5hdGl2ZScgfCAnb3B0aW9uYWwnIHwgJ3JlcGV0aXRpb24nO1xyXG5cclxuLyoqXHJcbiAqIFJlcHJlc2VudHMgYSBwb3NpdGlvbiBpbiB0aGUgMkQgc3BhY2VcclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgUG9pbnQge1xyXG4gIHg6IG51bWJlcjtcclxuICB5OiBudW1iZXI7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBSZXByZXNlbnRzIHRoZSBkaW1lbnNpb25zIG9mIGEgbm9kZVxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBEaW1lbnNpb25zIHtcclxuICB3aWR0aDogbnVtYmVyO1xyXG4gIGhlaWdodDogbnVtYmVyO1xyXG59XHJcblxyXG4vKipcclxuICogUmVwcmVzZW50cyBhIG5vZGUgaW4gdGhlIEVCTkYgZGlhZ3JhbVxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBFYm5mTm9kZSBleHRlbmRzIFBvaW50LCBEaW1lbnNpb25zIHtcclxuICBpZDogc3RyaW5nO1xyXG4gIGxhYmVsOiBzdHJpbmc7XHJcbiAgdHlwZTogTm9kZVR5cGU7XHJcbiAgaXNEcmFnZ2luZzogYm9vbGVhbjtcclxuICBzZWxlY3RlZD86IGJvb2xlYW47XHJcbiAgZGF0YT86IFJlY29yZDxzdHJpbmcsIGFueT47ICAvLyBPcHRpb25hbCBjdXN0b20gZGF0YVxyXG59XHJcblxyXG4vKipcclxuICogUmVwcmVzZW50cyBhbiBlZGdlIGNvbm5lY3RpbmcgdHdvIG5vZGVzIGluIHRoZSBFQk5GIGRpYWdyYW1cclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgRWJuZkVkZ2Uge1xyXG4gIGlkOiBzdHJpbmc7XHJcbiAgZnJvbTogc3RyaW5nO1xyXG4gIHRvOiBzdHJpbmc7XHJcbiAgdHlwZTogRWRnZVR5cGU7XHJcbiAgbGFiZWw/OiBzdHJpbmc7XHJcbiAgcG9pbnRzPzogUG9pbnRbXTsgIC8vIENvbnRyb2wgcG9pbnRzIGZvciBlZGdlIHJvdXRpbmdcclxuICBzZWxlY3RlZD86IGJvb2xlYW47XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBDb25maWd1cmF0aW9uIG9wdGlvbnMgZm9yIHRoZSBFQk5GIGRpYWdyYW1cclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgRWJuZkNvbmZpZyB7XHJcbiAgd2lkdGg6IG51bWJlcjtcclxuICBoZWlnaHQ6IG51bWJlcjtcclxuICBub2RlUGFkZGluZzogbnVtYmVyO1xyXG4gIGxldmVsU3BhY2luZzogbnVtYmVyO1xyXG4gIG5vZGVTcGFjaW5nOiBudW1iZXI7XHJcbiAgZWRnZVJhZGl1czogbnVtYmVyO1xyXG4gIGZvbnRTaXplOiBudW1iZXI7XHJcbiAgZm9udEZhbWlseTogc3RyaW5nO1xyXG4gIGNvbG9yczogRWJuZkNvbG9ycztcclxuICBhbmltYXRpb246IEVibmZBbmltYXRpb25Db25maWc7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBDb2xvciBjb25maWd1cmF0aW9uIGZvciB0aGUgZGlhZ3JhbVxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBFYm5mQ29sb3JzIHtcclxuICB0ZXJtaW5hbDoge1xyXG4gICAgZmlsbDogc3RyaW5nO1xyXG4gICAgc3Ryb2tlOiBzdHJpbmc7XHJcbiAgICB0ZXh0OiBzdHJpbmc7XHJcbiAgfTtcclxuICBub250ZXJtaW5hbDoge1xyXG4gICAgZmlsbDogc3RyaW5nO1xyXG4gICAgc3Ryb2tlOiBzdHJpbmc7XHJcbiAgICB0ZXh0OiBzdHJpbmc7XHJcbiAgfTtcclxuICBvcGVyYXRvcjoge1xyXG4gICAgZmlsbDogc3RyaW5nO1xyXG4gICAgc3Ryb2tlOiBzdHJpbmc7XHJcbiAgICB0ZXh0OiBzdHJpbmc7XHJcbiAgfTtcclxuICBlZGdlOiB7XHJcbiAgICBsaW5lOiBzdHJpbmc7XHJcbiAgICB0ZXh0OiBzdHJpbmc7XHJcbiAgICBhcnJvdzogc3RyaW5nO1xyXG4gIH07XHJcbiAgc2VsZWN0aW9uOiB7XHJcbiAgICBmaWxsOiBzdHJpbmc7XHJcbiAgICBzdHJva2U6IHN0cmluZztcclxuICB9O1xyXG59XHJcblxyXG4vKipcclxuICogQW5pbWF0aW9uIGNvbmZpZ3VyYXRpb25cclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgRWJuZkFuaW1hdGlvbkNvbmZpZyB7XHJcbiAgZHVyYXRpb246IG51bWJlcjtcclxuICBlYXNpbmc6ICdsaW5lYXInIHwgJ2Vhc2VJbicgfCAnZWFzZU91dCcgfCAnZWFzZUluT3V0JztcclxufVxyXG5cclxuLyoqXHJcbiAqIExheW91dCBvcHRpb25zIGZvciB0aGUgZGlhZ3JhbVxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBMYXlvdXRPcHRpb25zIHtcclxuICB0eXBlOiAnaGllcmFyY2hpY2FsJyB8ICdmb3JjZS1kaXJlY3RlZCcgfCAncmFkaWFsJztcclxuICBkaXJlY3Rpb24/OiAnTFInIHwgJ1JMJyB8ICdUQicgfCAnQlQnO1xyXG4gIGFsaWduR3JpZD86IGJvb2xlYW47XHJcbiAgbWluaW1pemVDcm9zc2luZ3M/OiBib29sZWFuO1xyXG4gIG5vZGVTcGFjaW5nPzogbnVtYmVyO1xyXG4gIHJhbmtTcGFjaW5nPzogbnVtYmVyO1xyXG59XHJcblxyXG4vKipcclxuICogQ29tcGxldGUgZGlhZ3JhbSBzdGF0ZVxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBEaWFncmFtU3RhdGUge1xyXG4gIG5vZGVzOiBFYm5mTm9kZVtdO1xyXG4gIGVkZ2VzOiBFYm5mRWRnZVtdO1xyXG4gIGNvbmZpZzogRWJuZkNvbmZpZztcclxuICBsYXlvdXQ6IExheW91dE9wdGlvbnM7XHJcbiAgc2VsZWN0ZWRJdGVtczoge1xyXG4gICAgbm9kZXM6IHN0cmluZ1tdO1xyXG4gICAgZWRnZXM6IHN0cmluZ1tdO1xyXG4gIH07XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBFdmVudCB0eXBlcyBmb3IgZGlhZ3JhbSBpbnRlcmFjdGlvbnNcclxuICovXHJcbmV4cG9ydCB0eXBlIERpYWdyYW1FdmVudFR5cGUgPSBcclxuICB8ICdub2RlQ2xpY2snXHJcbiAgfCAnbm9kZURvdWJsZUNsaWNrJ1xyXG4gIHwgJ25vZGVEcmFnU3RhcnQnXHJcbiAgfCAnbm9kZURyYWcnXHJcbiAgfCAnbm9kZURyYWdFbmQnXHJcbiAgfCAnZWRnZUNsaWNrJ1xyXG4gIHwgJ2NhbnZhc0NsaWNrJ1xyXG4gIHwgJ3NlbGVjdGlvbkNoYW5nZSdcclxuICB8ICdsYXlvdXRDaGFuZ2UnO1xyXG5cclxuLyoqXHJcbiAqIEJhc2UgZXZlbnQgaW50ZXJmYWNlIGZvciBkaWFncmFtIGV2ZW50c1xyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBEaWFncmFtRXZlbnQge1xyXG4gIHR5cGU6IERpYWdyYW1FdmVudFR5cGU7XHJcbiAgdGltZXN0YW1wOiBudW1iZXI7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBOb2RlLXNwZWNpZmljIGV2ZW50IGludGVyZmFjZVxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBOb2RlRXZlbnQgZXh0ZW5kcyBEaWFncmFtRXZlbnQge1xyXG4gIG5vZGU6IEVibmZOb2RlO1xyXG4gIHBvc2l0aW9uOiBQb2ludDtcclxufVxyXG5cclxuLyoqXHJcbiAqIEVkZ2Utc3BlY2lmaWMgZXZlbnQgaW50ZXJmYWNlXHJcbiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIEVkZ2VFdmVudCBleHRlbmRzIERpYWdyYW1FdmVudCB7XHJcbiAgZWRnZTogRWJuZkVkZ2U7XHJcbiAgcG9zaXRpb246IFBvaW50O1xyXG59XHJcblxyXG4vKipcclxuICogU2VsZWN0aW9uIGNoYW5nZSBldmVudCBpbnRlcmZhY2VcclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgU2VsZWN0aW9uQ2hhbmdlRXZlbnQgZXh0ZW5kcyBEaWFncmFtRXZlbnQge1xyXG4gIHNlbGVjdGVkTm9kZXM6IHN0cmluZ1tdO1xyXG4gIHNlbGVjdGVkRWRnZXM6IHN0cmluZ1tdO1xyXG4gIHByZXZpb3VzU2VsZWN0aW9uOiB7XHJcbiAgICBub2Rlczogc3RyaW5nW107XHJcbiAgICBlZGdlczogc3RyaW5nW107XHJcbiAgfTtcclxufVxyXG5cclxuLyoqXHJcbiAqIExheW91dCBjaGFuZ2UgZXZlbnQgaW50ZXJmYWNlXHJcbiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIExheW91dENoYW5nZUV2ZW50IGV4dGVuZHMgRGlhZ3JhbUV2ZW50IHtcclxuICBwcmV2aW91c0xheW91dDogTGF5b3V0T3B0aW9ucztcclxuICBuZXdMYXlvdXQ6IExheW91dE9wdGlvbnM7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBWaWV3IHN0YXRlIGZvciBoYW5kbGluZyB6b29tIGFuZCBwYW5cclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgVmlld1N0YXRlIHtcclxuICBzY2FsZTogbnVtYmVyO1xyXG4gIHRyYW5zbGF0aW9uOiBQb2ludDtcclxuICBib3VuZHM6IHtcclxuICAgIG1pblg6IG51bWJlcjtcclxuICAgIG1pblk6IG51bWJlcjtcclxuICAgIG1heFg6IG51bWJlcjtcclxuICAgIG1heFk6IG51bWJlcjtcclxuICB9O1xyXG59XHJcblxyXG4vKipcclxuICogU2VydmljZSBpbnRlcmZhY2UgZm9yIHRoZSBFQk5GIGRpYWdyYW1cclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgSXh0RWJuZlNlcnZpY2Uge1xyXG4gIGdldExheW91dCgpOiBEaWFncmFtU3RhdGU7XHJcbiAgdXBkYXRlTGF5b3V0KG9wdGlvbnM6IFBhcnRpYWw8TGF5b3V0T3B0aW9ucz4pOiB2b2lkO1xyXG4gIGFkZE5vZGUobm9kZTogT21pdDxFYm5mTm9kZSwgJ3gnIHwgJ3knPik6IEVibmZOb2RlO1xyXG4gIHJlbW92ZU5vZGUobm9kZUlkOiBzdHJpbmcpOiB2b2lkO1xyXG4gIGFkZEVkZ2UoZWRnZTogT21pdDxFYm5mRWRnZSwgJ2lkJz4pOiBFYm5mRWRnZTtcclxuICByZW1vdmVFZGdlKGVkZ2VJZDogc3RyaW5nKTogdm9pZDtcclxuICBzZWxlY3RJdGVtcyhub2Rlczogc3RyaW5nW10sIGVkZ2VzOiBzdHJpbmdbXSk6IHZvaWQ7XHJcbiAgZXhwb3J0RGlhZ3JhbSgpOiBzdHJpbmc7XHJcbiAgaW1wb3J0RGlhZ3JhbShkYXRhOiBzdHJpbmcpOiB2b2lkO1xyXG4gIGdldFZpZXdTdGF0ZSgpOiBWaWV3U3RhdGU7XHJcbiAgc2V0Vmlld1N0YXRlKHN0YXRlOiBQYXJ0aWFsPFZpZXdTdGF0ZT4pOiB2b2lkO1xyXG59Il19
|       |   |   |   |   |   --- ixt.ebnf.index.mjs: // ixt-ebnf.index.ts export * from './ixt-ebnf.diagram'; export * from './ixt-ebnf.module'; // Update ixt-ebnf.index.ts to include types export * from './ixt-ebnf.types'; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXh0LmVibmYuaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9peHQtZGlhZ3JhbS90eXBlcy9FQk5GL2l4dC5lYm5mLmluZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQixjQUFjLG9CQUFvQixDQUFDO0FBQ25DLGNBQWMsbUJBQW1CLENBQUM7QUEwQmxDLDRDQUE0QztBQUM1QyxjQUFjLGtCQUFrQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gaXh0LWVibmYuaW5kZXgudHNcclxuZXhwb3J0ICogZnJvbSAnLi9peHQtZWJuZi5kaWFncmFtJztcclxuZXhwb3J0ICogZnJvbSAnLi9peHQtZWJuZi5tb2R1bGUnO1xyXG5cclxuLy8gT3B0aW9uYWw6IFlvdSBtaWdodCBhbHNvIHdhbnQgaW50ZXJmYWNlcyBmb3IgdGhlIGNvbXBvbmVudFxyXG4vLyBpeHQtZWJuZi50eXBlcy50c1xyXG5leHBvcnQgaW50ZXJmYWNlIEVibmZOb2RlIHtcclxuICBpZDogc3RyaW5nO1xyXG4gIHg6IG51bWJlcjtcclxuICB5OiBudW1iZXI7XHJcbiAgd2lkdGg6IG51bWJlcjtcclxuICBoZWlnaHQ6IG51bWJlcjtcclxuICBpc0RyYWdnaW5nOiBib29sZWFuO1xyXG4gIHR5cGU6ICd0ZXJtaW5hbCcgfCAnbm9udGVybWluYWwnIHwgJ29wZXJhdG9yJztcclxuICBsYWJlbDogc3RyaW5nO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIEVibmZFZGdlIHtcclxuICBmcm9tOiBzdHJpbmc7XHJcbiAgdG86IHN0cmluZztcclxuICB0eXBlOiAnc2VxdWVuY2UnIHwgJ2FsdGVybmF0aXZlJyB8ICdvcHRpb25hbCcgfCAncmVwZXRpdGlvbic7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgRWJuZkxheW91dCB7XHJcbiAgbm9kZXM6IEVibmZOb2RlW107XHJcbiAgZWRnZXM6IEVibmZFZGdlW107XHJcbn1cclxuXHJcbi8vIFVwZGF0ZSBpeHQtZWJuZi5pbmRleC50cyB0byBpbmNsdWRlIHR5cGVzXHJcbmV4cG9ydCAqIGZyb20gJy4vaXh0LWVibmYudHlwZXMnOyJdfQ==
|       |   |   |   |   +-- clazz
|       |   |   |   |   |   --- ixt-clazz.diagram.mjs: // uml-diagram.component.ts import { Component, ViewChild } from '@angular/core'; import * as i0 from "@angular/core"; export class IxtClazzDiagram { constructor() { this.classes = [ { id: 'book', name: 'Book', attributes: ['- isbn: string', '- title: string', '- author: string'], methods: ['+ getDetails(): string'], x: 100, y: 100, width: 200, height: 150 }, { id: 'library', name: 'Library', attributes: ['- name: string', '- books: Book[]'], methods: ['+ addBook(book: Book): void', '+ removeBook(isbn: string): void'], x: 400, y: 100, width: 200, height: 150 }, // Add more classes as needed ]; this.relationships = [ { from: 'library', to: 'book', type: 'composition' } ]; this.isDragging = false; this.selectedClass = null; this.dragOffset = { x: 0, y: 0 }; this.animationFrameId = null; } ngAfterViewInit() { const canvas = this.canvasRef.nativeElement; this.ctx = canvas.getContext('2d'); this.resizeCanvas(); this.draw(); window.addEventListener('resize', this.resizeCanvas.bind(this)); } ngOnDestroy() { window.removeEventListener('resize', this.resizeCanvas.bind(this)); if (this.animationFrameId) { cancelAnimationFrame(this.animationFrameId); } } resizeCanvas() { const canvas = this.canvasRef.nativeElement; canvas.width = canvas.offsetWidth; canvas.height = canvas.offsetHeight; } draw() { const canvas = this.canvasRef.nativeElement; this.ctx.clearRect(0, 0, canvas.width, canvas.height); // Draw relationships first (so they appear under the classes) this.drawRelationships(); // Draw classes this.classes.forEach(cls => this.drawClass(cls)); this.animationFrameId = requestAnimationFrame(() => this.draw()); } drawClass(cls) { // Draw class box this.ctx.strokeStyle = '#000'; this.ctx.fillStyle = '#fff'; this.ctx.lineWidth = 1; // Main rectangle this.ctx.beginPath(); this.ctx.rect(cls.x, cls.y, cls.width, cls.height); this.ctx.fill(); this.ctx.stroke(); // Class name section this.ctx.font = 'bold 14px Arial'; this.ctx.textAlign = 'center'; this.ctx.fillStyle = '#000'; this.ctx.fillText(cls.name, cls.x + cls.width / 2, cls.y + 25); // Separator lines const attributesY = cls.y + 35; const methodsY = attributesY + (cls.attributes.length * 20) + 10; this.ctx.beginPath(); this.ctx.moveTo(cls.x, attributesY); this.ctx.lineTo(cls.x + cls.width, attributesY); this.ctx.stroke(); // Draw attributes this.ctx.font = '12px Arial'; this.ctx.textAlign = 'left'; cls.attributes.forEach((attr, index) => { this.ctx.fillText(attr, cls.x + 10, attributesY + 20 + (index * 20)); }); // Draw methods this.ctx.beginPath(); this.ctx.moveTo(cls.x, methodsY); this.ctx.lineTo(cls.x + cls.width, methodsY); this.ctx.stroke(); cls.methods.forEach((method, index) => { this.ctx.fillText(method, cls.x + 10, methodsY + 20 + (index * 20)); }); } drawRelationships() { this.relationships.forEach(rel => { const fromClass = this.classes.find(c => c.id === rel.from); const toClass = this.classes.find(c => c.id === rel.to); if (!fromClass || !toClass) return; // Calculate connection points const start = this.getConnectionPoint(fromClass, toClass); const end = this.getConnectionPoint(toClass, fromClass); this.ctx.beginPath(); this.ctx.moveTo(start.x, start.y); this.ctx.lineTo(end.x, end.y); // Draw different arrow heads based on relationship type if (rel.type === 'inheritance') { this.drawInheritanceArrow(end.x, end.y, this.getAngle(start, end)); } else if (rel.type === 'implementation') { this.drawImplementationArrow(end.x, end.y, this.getAngle(start, end)); } else if (rel.type === 'composition') { this.drawCompositionDiamond(end.x, end.y, this.getAngle(start, end)); } this.ctx.stroke(); }); } getConnectionPoint(from, to) { // Calculate center points const fromCenter = { x: from.x + from.width / 2, y: from.y + from.height / 2 }; const toCenter = { x: to.x + to.width / 2, y: to.y + to.height / 2 }; // Calculate angle between centers const angle = Math.atan2(toCenter.y - fromCenter.y, toCenter.x - fromCenter.x); // Calculate intersection with rectangle const cos = Math.cos(angle); const sin = Math.sin(angle); let x, y; if (Math.abs(cos) > Math.abs(sin)) { // Intersect with vertical sides x = cos > 0 ? from.x + from.width : from.x; y = fromCenter.y + (x - fromCenter.x) * sin / cos; } else { // Intersect with horizontal sides y = sin > 0 ? from.y + from.height : from.y; x = fromCenter.x + (y - fromCenter.y) * cos / sin; } return { x, y }; } getAngle(start, end) { return Math.atan2(end.y - start.y, end.x - start.x); } drawInheritanceArrow(x, y, angle) { const size = 15; const angleLeft = angle + Math.PI * 0.8; const angleRight = angle - Math.PI * 0.8; this.ctx.beginPath(); this.ctx.moveTo(x, y); this.ctx.lineTo(x - size * Math.cos(angleLeft), y - size * Math.sin(angleLeft)); this.ctx.lineTo(x - size * Math.cos(angleRight), y - size * Math.sin(angleRight)); this.ctx.closePath(); this.ctx.fillStyle = '#fff'; this.ctx.fill(); this.ctx.stroke(); } drawImplementationArrow(x, y, angle) { // Similar to inheritance but with dashed line this.ctx.setLineDash([5, 5]); this.drawInheritanceArrow(x, y, angle); this.ctx.setLineDash([]); } drawCompositionDiamond(x, y, angle) { const size = 10; this.ctx.beginPath(); this.ctx.moveTo(x, y); this.ctx.lineTo(x - size * Math.cos(angle + Math.PI / 4), y - size * Math.sin(angle + Math.PI / 4)); this.ctx.lineTo(x - size * 2 * Math.cos(angle), y - size * 2 * Math.sin(angle)); this.ctx.lineTo(x - size * Math.cos(angle - Math.PI / 4), y - size * Math.sin(angle - Math.PI / 4)); this.ctx.closePath(); this.ctx.fillStyle = '#000'; this.ctx.fill(); } onMouseDown(event) { const rect = this.canvasRef.nativeElement.getBoundingClientRect(); const x = event.clientX - rect.left; const y = event.clientY - rect.top; // Check if click is inside any class this.selectedClass = this.classes.find(cls => x >= cls.x && x <= cls.x + cls.width && y >= cls.y && y <= cls.y + cls.height) || null; if (this.selectedClass) { this.isDragging = true; this.dragOffset = { x: x - this.selectedClass.x, y: y - this.selectedClass.y }; } } onMouseMove(event) { if (this.isDragging && this.selectedClass) { const rect = this.canvasRef.nativeElement.getBoundingClientRect(); this.selectedClass.x = event.clientX - rect.left - this.dragOffset.x; this.selectedClass.y = event.clientY - rect.top - this.dragOffset.y; } } onMouseUp() { this.isDragging = false; this.selectedClass = null; } applyForceDirectedLayout() { const REPULSION = 50000; // Repulsion force between nodes const ATTRACTION = 0.01; // Attraction force for relationships const DAMPING = 0.95; // Damping factor to prevent oscillation const ITERATIONS = 50; // Number of iterations for the algorithm // Initialize velocities const velocities = new Map(this.classes.map(cls => [cls.id, { x: 0, y: 0 }])); for (let i = 0; i < ITERATIONS; i++) { // Calculate forces this.classes.forEach(cls1 => { let fx = 0; let fy = 0; // Repulsion between all classes this.classes.forEach(cls2 => { if (cls1 !== cls2) { const dx = cls1.x - cls2.x; const dy = cls1.y - cls2.y; const distance = Math.sqrt(dx * dx + dy * dy); if (distance > 0) { const force = REPULSION / (distance * distance); fx += (dx / distance) * force; fy += (dy / distance) * force; } } }); // Attraction for related classes this.relationships.forEach(rel => { if (rel.from === cls1.id || rel.to === cls1.id) { const other = this.classes.find(c => c.id === (rel.from === cls1.id ? rel.to : rel.from)); if (other) { const dx = cls1.x - other.x; const dy = cls1.y - other.y; const distance = Math.sqrt(dx * dx + dy * dy); fx -= dx * ATTRACTION; fy -= dy * ATTRACTION; } } }); // Update velocity const velocity = velocities.get(cls1.id); velocity.x = (velocity.x + fx) * DAMPING; velocity.y = (velocity.y + fy) * DAMPING; // Update position cls1.x += velocity.x; cls1.y += velocity.y; }); } // Center the diagram const bounds = this.calculateBounds(); const centerX = this.canvasRef.nativeElement.width / 2; const centerY = this.canvasRef.nativeElement.height / 2; const offsetX = centerX - (bounds.maxX + bounds.minX) / 2; const offsetY = centerY - (bounds.maxY + bounds.minY) / 2; this.classes.forEach(cls => { cls.x += offsetX; cls.y += offsetY; }); } calculateBounds() { const bounds = { minX: Infinity, minY: Infinity, maxX: -Infinity, maxY: -Infinity }; this.classes.forEach(cls => { bounds.minX = Math.min(bounds.minX, cls.x); bounds.minY = Math.min(bounds.minY, cls.y); bounds.maxX = Math.max(bounds.maxX, cls.x + cls.width); bounds.maxY = Math.max(bounds.maxY, cls.y + cls.height); }); return bounds; } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtClazzDiagram, deps: [], target: i0.ɵɵFactoryTarget.Component }); } static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: IxtClazzDiagram, selector: "ixt-clazz", viewQueries: [{ propertyName: "canvasRef", first: true, predicate: ["canvas"], descendants: true }], ngImport: i0, template: ` <div class="container"> <button (click)="applyForceDirectedLayout()">Auto Layout</button> <canvas #canvas (mousedown)="onMouseDown($event)" (mousemove)="onMouseMove($event)" (mouseup)="onMouseUp()"> </canvas> </div> `, isInline: true, styles: [".container{width:100%;height:100vh;overflow:hidden}canvas{border:1px solid #ccc}\n"] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtClazzDiagram, decorators: [{ type: Component, args: [{ selector: 'ixt-clazz', template: ` <div class="container"> <button (click)="applyForceDirectedLayout()">Auto Layout</button> <canvas #canvas (mousedown)="onMouseDown($event)" (mousemove)="onMouseMove($event)" (mouseup)="onMouseUp()"> </canvas> </div> `, styles: [".container{width:100%;height:100vh;overflow:hidden}canvas{border:1px solid #ccc}\n"] }] }], propDecorators: { canvasRef: [{ type: ViewChild, args: ['canvas'] }] } }); //# sourceMappingURL=data:application/json;base64,
|       |   |   |   |   |   --- ixt-clazz.index.mjs: // ixt-clazz.index.ts export * from './ixt-clazz.diagram'; export * from './ixt-clazz.module'; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXh0LWNsYXp6LmluZGV4LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvaXh0LWRpYWdyYW0vdHlwZXMvY2xhenovaXh0LWNsYXp6LmluZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHFCQUFxQjtBQUNyQixjQUFjLHFCQUFxQixDQUFDO0FBQ3BDLGNBQWMsb0JBQW9CLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpeHQtY2xhenouaW5kZXgudHNcclxuZXhwb3J0ICogZnJvbSAnLi9peHQtY2xhenouZGlhZ3JhbSc7XHJcbmV4cG9ydCAqIGZyb20gJy4vaXh0LWNsYXp6Lm1vZHVsZSc7XHJcblxyXG4vLyBZb3UgbWlnaHQgYWxzbyB3YW50IHRvIGV4cG9ydCB5b3VyIGludGVyZmFjZXNcclxuZXhwb3J0IGludGVyZmFjZSBVTUxDbGFzcyB7XHJcbiAgaWQ6IHN0cmluZztcclxuICBuYW1lOiBzdHJpbmc7XHJcbiAgYXR0cmlidXRlczogc3RyaW5nW107XHJcbiAgbWV0aG9kczogc3RyaW5nW107XHJcbiAgeDogbnVtYmVyO1xyXG4gIHk6IG51bWJlcjtcclxuICB3aWR0aDogbnVtYmVyO1xyXG4gIGhlaWdodDogbnVtYmVyO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFJlbGF0aW9uc2hpcCB7XHJcbiAgZnJvbTogc3RyaW5nO1xyXG4gIHRvOiBzdHJpbmc7XHJcbiAgdHlwZTogJ2luaGVyaXRhbmNlJyB8ICdpbXBsZW1lbnRhdGlvbicgfCAnYXNzb2NpYXRpb24nIHwgJ2NvbXBvc2l0aW9uJztcclxufSJdfQ==
|       |   |   |   |   |   --- ixt-clazz.module.mjs: // ixt-clazz.module.ts import { NgModule } from '@angular/core'; import { CommonModule } from '@angular/common'; import { IxtClazzDiagram } from './ixt-clazz.diagram'; import * as i0 from "@angular/core"; export class IxtClazzModule { static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtClazzModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); } static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "16.2.12", ngImport: i0, type: IxtClazzModule, declarations: [IxtClazzDiagram], imports: [CommonModule], exports: [IxtClazzDiagram] }); } static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtClazzModule, imports: [CommonModule] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtClazzModule, decorators: [{ type: NgModule, args: [{ declarations: [ IxtClazzDiagram ], imports: [ CommonModule ], exports: [ IxtClazzDiagram ] }] }] }); //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXh0LWNsYXp6Lm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL2l4dC1kaWFncmFtL3R5cGVzL2NsYXp6L2l4dC1jbGF6ei5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0Esc0JBQXNCO0FBQ3RCLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQzs7QUFhdEQsTUFBTSxPQUFPLGNBQWM7K0dBQWQsY0FBYztnSEFBZCxjQUFjLGlCQVR2QixlQUFlLGFBR2YsWUFBWSxhQUdaLGVBQWU7Z0hBR04sY0FBYyxZQU52QixZQUFZOzs0RkFNSCxjQUFjO2tCQVgxQixRQUFRO21CQUFDO29CQUNSLFlBQVksRUFBRTt3QkFDWixlQUFlO3FCQUNoQjtvQkFDRCxPQUFPLEVBQUU7d0JBQ1AsWUFBWTtxQkFDYjtvQkFDRCxPQUFPLEVBQUU7d0JBQ1AsZUFBZTtxQkFDaEI7aUJBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuLy8gaXh0LWNsYXp6Lm1vZHVsZS50c1xyXG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xyXG5pbXBvcnQgeyBJeHRDbGF6ekRpYWdyYW0gfSBmcm9tICcuL2l4dC1jbGF6ei5kaWFncmFtJztcclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgZGVjbGFyYXRpb25zOiBbXHJcbiAgICBJeHRDbGF6ekRpYWdyYW1cclxuICBdLFxyXG4gIGltcG9ydHM6IFtcclxuICAgIENvbW1vbk1vZHVsZVxyXG4gIF0sXHJcbiAgZXhwb3J0czogW1xyXG4gICAgSXh0Q2xhenpEaWFncmFtXHJcbiAgXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgSXh0Q2xhenpNb2R1bGUgeyB9XHJcbiJdfQ==
|       |   |   |   |   +-- deployment
|       |   |   |   |   |   --- ixt-deployment.diagram.mjs: import { Component, ViewChild } from '@angular/core'; import * as i0 from "@angular/core"; export class IxtDeploymentDiagram { constructor() { this.width = 800; this.height = 600; this.nodes = [ { id: '1', type: 'server', x: 100, y: 100, width: 120, height: 80, label: 'Web Server' }, { id: '2', type: 'database', x: 400, y: 100, width: 100, height: 100, label: 'Database' }, { id: '3', type: 'service', x: 250, y: 300, width: 150, height: 70, label: 'Message Queue' }, { id: '4', type: 'container', x: 500, y: 300, width: 130, height: 90, label: 'Docker Container' } ]; this.connections = [ { from: '1', to: '2', type: 'communicates' }, { from: '1', to: '3', type: 'depends' }, { from: '3', to: '4', type: 'deploys' } ]; this.draggedNode = null; this.dragStartX = 0; this.dragStartY = 0; this.nodeOffsetX = 0; this.nodeOffsetY = 0; // Force-directed layout parameters this.REPULSION = 8000; // Repulsion force between nodes this.ATTRACTION = 0.06; // Attraction force along connections this.DAMPING = 0.9; // Velocity damping factor this.MIN_DISTANCE = 150; // Minimum distance between nodes } ngOnInit() { const canvas = this.canvasRef.nativeElement; this.ctx = canvas.getContext('2d'); this.draw(); } draw() { const ctx = this.ctx; ctx.clearRect(0, 0, this.width, this.height); // Draw connections first (under nodes) this.drawConnections(); // Draw nodes this.nodes.forEach(node => this.drawNode(node)); } drawNode(node) { const ctx = this.ctx; ctx.save(); // Shadow ctx.shadowColor = 'rgba(0, 0, 0, 0.2)'; ctx.shadowBlur = 5; ctx.shadowOffsetX = 2; ctx.shadowOffsetY = 2; // Node shape ctx.beginPath(); switch (node.type) { case 'server': this.drawServer(node); break; case 'database': this.drawDatabase(node); break; case 'service': this.drawService(node); break; case 'container': this.drawContainer(node); break; } // Label ctx.fillStyle = '#333'; ctx.font = '12px Arial'; ctx.textAlign = 'center'; ctx.textBaseline = 'middle'; ctx.fillText(node.label, node.x + node.width / 2, node.y + node.height / 2); ctx.restore(); } drawServer(node) { const ctx = this.ctx; ctx.fillStyle = '#e8f4f8'; ctx.strokeStyle = '#4a90e2'; ctx.lineWidth = 2; // Main rectangle ctx.fillRect(node.x, node.y, node.width, node.height); ctx.strokeRect(node.x, node.y, node.width, node.height); // Server rack lines for (let i = 1; i < 4; i++) { const y = node.y + (node.height * i / 4); ctx.beginPath(); ctx.moveTo(node.x, y); ctx.lineTo(node.x + node.width, y); ctx.stroke(); } } drawDatabase(node) { const ctx = this.ctx; ctx.fillStyle = '#f8e8f4'; ctx.strokeStyle = '#9c27b0'; ctx.lineWidth = 2; // Cylinder shape const cylinderHeight = node.height * 0.8; const ellipseHeight = node.height * 0.2; // Draw cylinder body ctx.beginPath(); ctx.moveTo(node.x, node.y + ellipseHeight); ctx.lineTo(node.x, node.y + cylinderHeight); ctx.bezierCurveTo(node.x, node.y + node.height, node.x + node.width, node.y + node.height, node.x + node.width, node.y + cylinderHeight); ctx.lineTo(node.x + node.width, node.y + ellipseHeight); ctx.fill(); ctx.stroke(); // Draw top ellipse ctx.beginPath(); ctx.ellipse(node.x + node.width / 2, node.y + ellipseHeight, node.width / 2, ellipseHeight, 0, 0, 2 * Math.PI); ctx.fill(); ctx.stroke(); } drawService(node) { const ctx = this.ctx; ctx.fillStyle = '#f4f8e8'; ctx.strokeStyle = '#8bc34a'; ctx.lineWidth = 2; // Hexagon const side = node.width / 4; ctx.beginPath(); ctx.moveTo(node.x + side, node.y); ctx.lineTo(node.x + node.width - side, node.y); ctx.lineTo(node.x + node.width, node.y + node.height / 2); ctx.lineTo(node.x + node.width - side, node.y + node.height); ctx.lineTo(node.x + side, node.y + node.height); ctx.lineTo(node.x, node.y + node.height / 2); ctx.closePath(); ctx.fill(); ctx.stroke(); } drawContainer(node) { const ctx = this.ctx; ctx.fillStyle = '#f8f0e8'; ctx.strokeStyle = '#ff9800'; ctx.lineWidth = 2; // Container shape with docker-like waves ctx.fillRect(node.x, node.y, node.width, node.height); ctx.strokeRect(node.x, node.y, node.width, node.height); // Wave pattern const waveHeight = 8; const waveWidth = node.width / 4; ctx.beginPath(); for (let x = node.x; x < node.x + node.width; x += waveWidth) { ctx.bezierCurveTo(x + waveWidth / 3, node.y + waveHeight, x + 2 * waveWidth / 3, node.y - waveHeight, x + waveWidth, node.y); } ctx.stroke(); } drawConnections() { const ctx = this.ctx; ctx.save(); this.connections.forEach(conn => { const fromNode = this.nodes.find(n => n.id === conn.from); const toNode = this.nodes.find(n => n.id === conn.to); // Calculate connection points using smart routing const points = this.calculateConnectionPoints(fromNode, toNode); ctx.beginPath(); ctx.moveTo(points[0].x, points[0].y); // Draw connection line with different styles based on type switch (conn.type) { case 'deploys': ctx.setLineDash([5, 5]); ctx.strokeStyle = '#4a90e2'; break; case 'depends': ctx.setLineDash([]); ctx.strokeStyle = '#ff9800'; break; case 'communicates': ctx.setLineDash([10, 3]); ctx.strokeStyle = '#8bc34a'; break; } ctx.lineWidth = 2; // Draw connection using bezier curves for smooth routing if (points.length === 4) { ctx.bezierCurveTo(points[1].x, points[1].y, points[2].x, points[2].y, points[3].x, points[3].y); } else { points.slice(1).forEach(point => { ctx.lineTo(point.x, point.y); }); } ctx.stroke(); // Draw arrow this.drawArrow(points[points.length - 2], points[points.length - 1]); }); ctx.restore(); } calculateConnectionPoints(from, to) { // Smart routing algorithm to avoid crossing nodes const fromCenter = { x: from.x + from.width / 2, y: from.y + from.height / 2 }; const toCenter = { x: to.x + to.width / 2, y: to.y + to.height / 2 }; // Calculate intermediate points for bezier curve const dx = toCenter.x - fromCenter.x; const dy = toCenter.y - fromCenter.y; const distance = Math.sqrt(dx * dx + dy * dy); return [ fromCenter, { x: fromCenter.x + dx / 3, y: fromCenter.y + dy / 3 }, { x: fromCenter.x + 2 * dx / 3, y: fromCenter.y + 2 * dy / 3 }, toCenter ]; } drawArrow(from, to) { const ctx = this.ctx; const angle = Math.atan2(to.y - from.y, to.x - from.x); const arrowLength = 10; ctx.beginPath(); ctx.moveTo(to.x, to.y); ctx.lineTo(to.x - arrowLength * Math.cos(angle - Math.PI / 6), to.y - arrowLength * Math.sin(angle - Math.PI / 6)); ctx.moveTo(to.x, to.y); ctx.lineTo(to.x - arrowLength * Math.cos(angle + Math.PI / 6), to.y - arrowLength * Math.sin(angle + Math.PI / 6)); ctx.stroke(); } onMouseDown(event) { const rect = this.canvasRef.nativeElement.getBoundingClientRect(); const x = event.clientX - rect.left; const y = event.clientY - rect.top; // Find clicked node this.draggedNode = this.nodes.find(node => x >= node.x && x <= node.x + node.width && y >= node.y && y <= node.y + node.height) || null; if (this.draggedNode) { this.dragStartX = x; this.dragStartY = y; this.nodeOffsetX = x - this.draggedNode.x; this.nodeOffsetY = y - this.draggedNode.y; } } onMouseMove(event) { if (!this.draggedNode) return; const rect = this.canvasRef.nativeElement.getBoundingClientRect(); const x = event.clientX - rect.left; const y = event.clientY - rect.top; this.draggedNode.x = x - this.nodeOffsetX; this.draggedNode.y = y - this.nodeOffsetY; // Keep node within canvas bounds this.draggedNode.x = Math.max(0, Math.min(this.width - this.draggedNode.width, this.draggedNode.x)); this.draggedNode.y = Math.max(0, Math.min(this.height - this.draggedNode.height, this.draggedNode.y)); this.draw(); } onMouseUp() { this.draggedNode = null; } autoLayout() { const iterations = 50; const nodeVelocities = this.nodes.map(() => ({ x: 0, y: 0 })); // Run force-directed layout algorithm for (let i = 0; i < iterations; i++) { // Calculate forces this.nodes.forEach((node1, i) => { let fx = 0; let fy = 0; // Repulsion between all nodes this.nodes.forEach((node2, j) => { if (i === j) return; const dx = node2.x - node1.x; const dy = node2.y - node1.y; const distance = Math.sqrt(dx * dx + dy * dy); if (distance < this.MIN_DISTANCE) { const force = this.REPULSION / (distance * distance); fx -= (dx / distance) * force; fy -= (dy / distance) * force; } }); // Attraction along connections this.connections.forEach(conn => { if (conn.from === node1.id || conn.to === node1.id) { const other = this.nodes.find(n => n.id === (conn.from === node1.id ? conn.to : conn.from)); const dx = other.x - node1.x; const dy = other.y - node1.y; const distance = Math.sqrt(dx * dx + dy * dy); fx += dx * this.ATTRACTION; fy += dy * this.ATTRACTION; } }); // Update velocities with damping nodeVelocities[i].x = (nodeVelocities[i].x + fx) * this.DAMPING; nodeVelocities[i].y = (nodeVelocities[i].y + fy) * this.DAMPING; }); // Update positions this.nodes.forEach((node, i) => { node.x += nodeVelocities[i].x; node.y += nodeVelocities[i].y; // Keep nodes within bounds node.x = Math.max(0, Math.min(this.width - node.width, node.x)); node.y = Math.max(0, Math.min(this.height - node.height, node.y)); }); } // Check for overlaps and adjust if necessary this.resolveOverlaps(); this.draw(); } resolveOverlaps() { const padding = 20; // Minimum space between nodes let hasOverlap = true; let iterations = 0; const maxIterations = 100; while (hasOverlap && iterations < maxIterations) { hasOverlap = false; iterations++; for (let i = 0; i < this.nodes.length; i++) { for (let j = i + 1; j < this.nodes.length; j++) { const node1 = this.nodes[i]; const node2 = this.nodes[j]; // Check for overlap if (this.isOverlapping(node1, node2, padding)) { hasOverlap = true; // Calculate overlap resolution vector const dx = node2.x - node1.x; const dy = node2.y - node1.y; const distance = Math.sqrt(dx * dx + dy * dy); // Minimum distance needed const minDistance = Math.sqrt(Math.pow(node1.width / 2 + node2.width / 2 + padding, 2) + Math.pow(node1.height / 2 + node2.height / 2 + padding, 2)); // Move nodes apart const moveX = (dx / distance) * (minDistance - distance) / 2; const moveY = (dy / distance) * (minDistance - distance) / 2; node1.x -= moveX; node1.y -= moveY; node2.x += moveX; node2.y += moveY; // Keep within bounds this.nodes.forEach(node => { node.x = Math.max(0, Math.min(this.width - node.width, node.x)); node.y = Math.max(0, Math.min(this.height - node.height, node.y)); }); } } } } } isOverlapping(node1, node2, padding) { return !(node1.x + node1.width + padding < node2.x || node2.x + node2.width + padding < node1.x || node1.y + node1.height + padding < node2.y || node2.y + node2.height + padding < node1.y); } // Optional: Add capability to save/load layouts saveLayout() { return JSON.stringify({ nodes: this.nodes, connections: this.connections }); } loadLayout(layoutJson) { const layout = JSON.parse(layoutJson); this.nodes = layout.nodes; this.connections = layout.connections; this.draw(); } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtDeploymentDiagram, deps: [], target: i0.ɵɵFactoryTarget.Component }); } static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: IxtDeploymentDiagram, selector: "ixt-deployment", viewQueries: [{ propertyName: "canvasRef", first: true, predicate: ["canvas"], descendants: true, static: true }], ngImport: i0, template: ` <div class="diagram-container"> <canvas #canvas (mousedown)="onMouseDown($event)" (mousemove)="onMouseMove($event)" (mouseup)="onMouseUp()" [width]="width" [height]="height"> </canvas> <button (click)="autoLayout()" class="auto-layout-btn">Auto Layout</button> </div> `, isInline: true, styles: [".diagram-container{position:relative;border:1px solid #ccc}.auto-layout-btn{position:absolute;top:10px;right:10px;padding:8px 16px;background:#4a90e2;color:#fff;border:none;border-radius:4px;cursor:pointer}canvas{cursor:move}\n"] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtDeploymentDiagram, decorators: [{ type: Component, args: [{ selector: 'ixt-deployment', template: ` <div class="diagram-container"> <canvas #canvas (mousedown)="onMouseDown($event)" (mousemove)="onMouseMove($event)" (mouseup)="onMouseUp()" [width]="width" [height]="height"> </canvas> <button (click)="autoLayout()" class="auto-layout-btn">Auto Layout</button> </div> `, styles: [".diagram-container{position:relative;border:1px solid #ccc}.auto-layout-btn{position:absolute;top:10px;right:10px;padding:8px 16px;background:#4a90e2;color:#fff;border:none;border-radius:4px;cursor:pointer}canvas{cursor:move}\n"] }] }], propDecorators: { canvasRef: [{ type: ViewChild, args: ['canvas', { static: true }] }] } }); //# sourceMappingURL=data:application/json;base64,
|       |   |   |   |   |   --- ixt-deployment.index.mjs: // ixt-deployment.index.ts export * from './ixt-deployment.diagram'; export * from './ixt-deployment.module'; export * from './ixt-deployment.types'; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXh0LWRlcGxveW1lbnQuaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9peHQtZGlhZ3JhbS90eXBlcy9kZXBsb3ltZW50L2l4dC1kZXBsb3ltZW50LmluZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDBCQUEwQjtBQUMxQixjQUFjLDBCQUEwQixDQUFDO0FBQ3pDLGNBQWMseUJBQXlCLENBQUM7QUFDeEMsY0FBYyx3QkFBd0IsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGl4dC1kZXBsb3ltZW50LmluZGV4LnRzXHJcbmV4cG9ydCAqIGZyb20gJy4vaXh0LWRlcGxveW1lbnQuZGlhZ3JhbSc7XHJcbmV4cG9ydCAqIGZyb20gJy4vaXh0LWRlcGxveW1lbnQubW9kdWxlJztcclxuZXhwb3J0ICogZnJvbSAnLi9peHQtZGVwbG95bWVudC50eXBlcyc7Il19
|       |   |   |   |   |   --- ixt-deployment.module.mjs: // ixt-deployment.module.ts import { NgModule } from '@angular/core'; import { CommonModule } from '@angular/common'; import { IxtDeploymentDiagram } from './ixt-deployment.diagram'; import * as i0 from "@angular/core"; export class IxtDeploymentModule { static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtDeploymentModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); } static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "16.2.12", ngImport: i0, type: IxtDeploymentModule, declarations: [IxtDeploymentDiagram], imports: [CommonModule], exports: [IxtDeploymentDiagram] }); } static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtDeploymentModule, imports: [CommonModule] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtDeploymentModule, decorators: [{ type: NgModule, args: [{ declarations: [ IxtDeploymentDiagram ], imports: [ CommonModule ], exports: [ IxtDeploymentDiagram ] }] }] }); //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXh0LWRlcGxveW1lbnQubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvaXh0LWRpYWdyYW0vdHlwZXMvZGVwbG95bWVudC9peHQtZGVwbG95bWVudC5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsMkJBQTJCO0FBQzNCLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLDBCQUEwQixDQUFDOztBQWFoRSxNQUFNLE9BQU8sbUJBQW1COytHQUFuQixtQkFBbUI7Z0hBQW5CLG1CQUFtQixpQkFUNUIsb0JBQW9CLGFBR3BCLFlBQVksYUFHWixvQkFBb0I7Z0hBR1gsbUJBQW1CLFlBTjVCLFlBQVk7OzRGQU1ILG1CQUFtQjtrQkFYL0IsUUFBUTttQkFBQztvQkFDUixZQUFZLEVBQUU7d0JBQ1osb0JBQW9CO3FCQUNyQjtvQkFDRCxPQUFPLEVBQUU7d0JBQ1AsWUFBWTtxQkFDYjtvQkFDRCxPQUFPLEVBQUU7d0JBQ1Asb0JBQW9CO3FCQUNyQjtpQkFDRiIsInNvdXJjZXNDb250ZW50IjpbIi8vIGl4dC1kZXBsb3ltZW50Lm1vZHVsZS50c1xyXG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xyXG5pbXBvcnQgeyBJeHREZXBsb3ltZW50RGlhZ3JhbSB9IGZyb20gJy4vaXh0LWRlcGxveW1lbnQuZGlhZ3JhbSc7XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGRlY2xhcmF0aW9uczogW1xyXG4gICAgSXh0RGVwbG95bWVudERpYWdyYW1cclxuICBdLFxyXG4gIGltcG9ydHM6IFtcclxuICAgIENvbW1vbk1vZHVsZVxyXG4gIF0sXHJcbiAgZXhwb3J0czogW1xyXG4gICAgSXh0RGVwbG95bWVudERpYWdyYW1cclxuICBdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBJeHREZXBsb3ltZW50TW9kdWxlIHsgfVxyXG5cclxuIl19
|       |   |   |   |   |   --- ixt-deployment.types.mjs: export {}; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXh0LWRlcGxveW1lbnQudHlwZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9peHQtZGlhZ3JhbS90eXBlcy9kZXBsb3ltZW50L2l4dC1kZXBsb3ltZW50LnR5cGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiIiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgaW50ZXJmYWNlIERlcGxveW1lbnROb2RlIHtcclxuICAgIGlkOiBzdHJpbmc7XHJcbiAgICB0eXBlOiAnc2VydmVyJyB8ICdkYXRhYmFzZScgfCAnc2VydmljZScgfCAnY29udGFpbmVyJztcclxuICAgIHg6IG51bWJlcjtcclxuICAgIHk6IG51bWJlcjtcclxuICAgIHdpZHRoOiBudW1iZXI7XHJcbiAgICBoZWlnaHQ6IG51bWJlcjtcclxuICAgIGxhYmVsOiBzdHJpbmc7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgQ29ubmVjdGlvbiB7XHJcbiAgICBmcm9tOiBzdHJpbmc7XHJcbiAgICB0bzogc3RyaW5nO1xyXG4gICAgdHlwZTogJ2RlcGxveXMnIHwgJ2RlcGVuZHMnIHwgJ2NvbW11bmljYXRlcyc7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgRGVwbG95bWVudERpYWdyYW1Db25maWcge1xyXG4gICAgd2lkdGg/OiBudW1iZXI7XHJcbiAgICBoZWlnaHQ/OiBudW1iZXI7XHJcbiAgICBtaW5EaXN0YW5jZT86IG51bWJlcjtcclxuICAgIHJlcHVsc2lvbkZvcmNlPzogbnVtYmVyO1xyXG4gICAgYXR0cmFjdGlvbkZvcmNlPzogbnVtYmVyO1xyXG4gICAgZGFtcGluZ0ZhY3Rvcj86IG51bWJlcjtcclxufSJdfQ==
|       |   |   |   |   +-- flow
|       |   |   |   |   |   --- ixt-flow.diagram.mjs: // ixt-flow-diagram.component.ts import { Component, ViewChild } from '@angular/core'; import * as i0 from "@angular/core"; export class IxtFlowDiagram { constructor() { this.nodes = []; this.edges = []; this.selectedNode = null; this.dragOffset = { x: 0, y: 0 }; // Force-directed layout parameters this.REPULSION = 8000; // Node repulsion force this.ATTRACTION = 0.1; // Edge attraction force this.DAMPING = 0.9; // Velocity damping this.MIN_DISTANCE = 150; // Minimum distance between nodes // Initialize sample deployment pipeline this.initializeGraph(); } ngOnInit() { } ngAfterViewInit() { const canvas = this.canvasRef.nativeElement; this.ctx = canvas.getContext('2d'); this.draw(); } initializeGraph() { // Initialize nodes with random positions this.nodes = [ { id: 'source', x: 100, y: 100, width: 120, height: 60, type: 'rectangle', label: 'Source Code', isDragging: false }, { id: 'build', x: 300, y: 100, width: 120, height: 60, type: 'rectangle', label: 'Build', isDragging: false }, { id: 'test', x: 500, y: 100, width: 100, height: 100, type: 'diamond', label: 'Tests', isDragging: false }, { id: 'staging', x: 700, y: 100, width: 120, height: 60, type: 'rectangle', label: 'Staging', isDragging: false }, { id: 'approval', x: 900, y: 100, width: 80, height: 80, type: 'circle', label: 'Approval', isDragging: false }, { id: 'prod', x: 1100, y: 100, width: 120, height: 60, type: 'rectangle', label: 'Production', isDragging: false } ]; // Define relationships this.edges = [ { from: 'source', to: 'build', label: 'commit' }, { from: 'build', to: 'test', label: 'artifact' }, { from: 'test', to: 'staging', label: 'passed' }, { from: 'staging', to: 'approval', label: 'deploy' }, { from: 'approval', to: 'prod', label: 'approved' } ]; } draw() { const canvas = this.canvasRef.nativeElement; this.ctx.clearRect(0, 0, canvas.width, canvas.height); // Draw edges first (so they appear behind nodes) this.edges.forEach(edge => this.drawEdge(edge)); // Draw nodes this.nodes.forEach(node => this.drawNode(node)); } drawNode(node) { this.ctx.save(); this.ctx.fillStyle = node.isDragging ? '#e0e0e0' : '#ffffff'; this.ctx.strokeStyle = '#333333'; this.ctx.lineWidth = 2; switch (node.type) { case 'rectangle': this.ctx.beginPath(); this.ctx.rect(node.x, node.y, node.width, node.height); break; case 'diamond': this.ctx.beginPath(); this.ctx.moveTo(node.x + node.width / 2, node.y); this.ctx.lineTo(node.x + node.width, node.y + node.height / 2); this.ctx.lineTo(node.x + node.width / 2, node.y + node.height); this.ctx.lineTo(node.x, node.y + node.height / 2); this.ctx.closePath(); break; case 'circle': this.ctx.beginPath(); this.ctx.arc(node.x + node.width / 2, node.y + node.height / 2, Math.min(node.width, node.height) / 2, 0, Math.PI * 2); break; } this.ctx.fill(); this.ctx.stroke(); // Draw label this.ctx.fillStyle = '#000000'; this.ctx.font = '14px Arial'; this.ctx.textAlign = 'center'; this.ctx.textBaseline = 'middle'; this.ctx.fillText(node.label, node.x + node.width / 2, node.y + node.height / 2); this.ctx.restore(); } drawEdge(edge) { const fromNode = this.nodes.find(n => n.id === edge.from); const toNode = this.nodes.find(n => n.id === edge.to); // Calculate edge points using smart routing const points = this.calculateEdgePoints(fromNode, toNode); this.ctx.save(); this.ctx.strokeStyle = '#666666'; this.ctx.lineWidth = 2; // Draw path this.ctx.beginPath(); this.ctx.moveTo(points[0].x, points[0].y); // Draw curved path using bezier curves if (points.length === 4) { this.ctx.bezierCurveTo(points[1].x, points[1].y, points[2].x, points[2].y, points[3].x, points[3].y); } this.ctx.stroke(); // Draw arrow this.drawArrow(points[points.length - 2], points[points.length - 1]); // Draw label if exists if (edge.label) { const midPoint = this.getMidPoint(points); this.ctx.fillStyle = '#000000'; this.ctx.font = '12px Arial'; this.ctx.textAlign = 'center'; this.ctx.textBaseline = 'middle'; this.ctx.fillText(edge.label, midPoint.x, midPoint.y - 10); } this.ctx.restore(); } calculateEdgePoints(from, to) { const fromCenter = { x: from.x + from.width / 2, y: from.y + from.height / 2 }; const toCenter = { x: to.x + to.width / 2, y: to.y + to.height / 2 }; // Calculate control points for bezier curve const dx = toCenter.x - fromCenter.x; const dy = toCenter.y - fromCenter.y; const distance = Math.sqrt(dx * dx + dy * dy); const control1 = { x: fromCenter.x + dx / 3, y: fromCenter.y + dy / 3 }; const control2 = { x: fromCenter.x + 2 * dx / 3, y: fromCenter.y + 2 * dy / 3 }; return [fromCenter, control1, control2, toCenter]; } drawArrow(from, to) { const headLength = 10; const angle = Math.atan2(to.y - from.y, to.x - from.x); this.ctx.beginPath(); this.ctx.moveTo(to.x, to.y); this.ctx.lineTo(to.x - headLength * Math.cos(angle - Math.PI / 6), to.y - headLength * Math.sin(angle - Math.PI / 6)); this.ctx.moveTo(to.x, to.y); this.ctx.lineTo(to.x - headLength * Math.cos(angle + Math.PI / 6), to.y - headLength * Math.sin(angle + Math.PI / 6)); this.ctx.stroke(); } getMidPoint(points) { const mid = Math.floor(points.length / 2); return points[mid]; } // Mouse event handlers onMouseDown(event) { const rect = this.canvasRef.nativeElement.getBoundingClientRect(); const x = event.clientX - rect.left; const y = event.clientY - rect.top; // Find clicked node this.selectedNode = this.nodes.find(node => x >= node.x && x <= node.x + node.width && y >= node.y && y <= node.y + node.height) || null; if (this.selectedNode) { this.selectedNode.isDragging = true; this.dragOffset = { x: x - this.selectedNode.x, y: y - this.selectedNode.y }; } } onMouseMove(event) { if (this.selectedNode?.isDragging) { const rect = this.canvasRef.nativeElement.getBoundingClientRect(); const x = event.clientX - rect.left; const y = event.clientY - rect.top; this.selectedNode.x = x - this.dragOffset.x; this.selectedNode.y = y - this.dragOffset.y; this.draw(); } } onMouseUp() { if (this.selectedNode) { this.selectedNode.isDragging = false; this.selectedNode = null; } } // Auto layout implementation using force-directed algorithm autoLayout() { const iterations = 100; const velocities = this.nodes.map(() => ({ x: 0, y: 0 })); for (let i = 0; i < iterations; i++) { // Calculate forces this.nodes.forEach((node1, i) => { velocities[i] = { x: 0, y: 0 }; // Repulsion forces between nodes this.nodes.forEach((node2, j) => { if (i !== j) { const dx = node2.x - node1.x; const dy = node2.y - node1.y; const distance = Math.sqrt(dx * dx + dy * dy); if (distance < this.MIN_DISTANCE) { const force = this.REPULSION / (distance * distance); velocities[i].x -= (dx / distance) * force; velocities[i].y -= (dy / distance) * force; } } }); // Attraction forces along edges this.edges.forEach(edge => { if (edge.from === node1.id) { const node2 = this.nodes.find(n => n.id === edge.to); const dx = node2.x - node1.x; const dy = node2.y - node1.y; const distance = Math.sqrt(dx * dx + dy * dy); velocities[i].x += dx * this.ATTRACTION; velocities[i].y += dy * this.ATTRACTION; } }); }); // Apply velocities with damping this.nodes.forEach((node, i) => { node.x += velocities[i].x * this.DAMPING; node.y += velocities[i].y * this.DAMPING; }); } this.draw(); } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtFlowDiagram, deps: [], target: i0.ɵɵFactoryTarget.Component }); } static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: IxtFlowDiagram, selector: "ixt-flow", viewQueries: [{ propertyName: "canvasRef", first: true, predicate: ["canvas"], descendants: true }], ngImport: i0, template: ` <div class="flow-diagram-container"> <canvas #canvas (mousedown)="onMouseDown($event)" (mousemove)="onMouseMove($event)" (mouseup)="onMouseUp()" width="1200" height="800"> </canvas> <button (click)="autoLayout()" class="auto-layout-btn">Auto Layout</button> </div> `, isInline: true, styles: [".flow-diagram-container{position:relative;border:1px solid #ccc}.auto-layout-btn{position:absolute;top:10px;right:10px;padding:8px 16px;background:#4caf50;color:#fff;border:none;border-radius:4px;cursor:pointer}.auto-layout-btn:hover{background:#45a049}\n"] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtFlowDiagram, decorators: [{ type: Component, args: [{ selector: 'ixt-flow', template: ` <div class="flow-diagram-container"> <canvas #canvas (mousedown)="onMouseDown($event)" (mousemove)="onMouseMove($event)" (mouseup)="onMouseUp()" width="1200" height="800"> </canvas> <button (click)="autoLayout()" class="auto-layout-btn">Auto Layout</button> </div> `, styles: [".flow-diagram-container{position:relative;border:1px solid #ccc}.auto-layout-btn{position:absolute;top:10px;right:10px;padding:8px 16px;background:#4caf50;color:#fff;border:none;border-radius:4px;cursor:pointer}.auto-layout-btn:hover{background:#45a049}\n"] }] }], ctorParameters: function () { return []; }, propDecorators: { canvasRef: [{ type: ViewChild, args: ['canvas'] }] } }); //# sourceMappingURL=data:application/json;base64,
|       |   |   |   |   |   --- ixt-flow.index.mjs: // ixt-flow.index.ts export * from './ixt-flow.module'; export * from './ixt-flow.diagram'; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXh0LWZsb3cuaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9peHQtZGlhZ3JhbS90eXBlcy9mbG93L2l4dC1mbG93LmluZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQixjQUFjLG1CQUFtQixDQUFDO0FBQ2xDLGNBQWMsb0JBQW9CLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpeHQtZmxvdy5pbmRleC50c1xyXG5leHBvcnQgKiBmcm9tICcuL2l4dC1mbG93Lm1vZHVsZSc7XHJcbmV4cG9ydCAqIGZyb20gJy4vaXh0LWZsb3cuZGlhZ3JhbSc7XHJcblxyXG4vLyBZb3UgbWlnaHQgYWxzbyB3YW50IHRvIGV4cG9ydCB0aGVzZSBpbnRlcmZhY2VzIGZvciBleHRlcm5hbCB1c2VcclxuZXhwb3J0IGludGVyZmFjZSBGbG93Tm9kZSB7XHJcbiAgaWQ6IHN0cmluZztcclxuICB4OiBudW1iZXI7XHJcbiAgeTogbnVtYmVyO1xyXG4gIHdpZHRoOiBudW1iZXI7XHJcbiAgaGVpZ2h0OiBudW1iZXI7XHJcbiAgdHlwZTogJ3JlY3RhbmdsZScgfCAnZGlhbW9uZCcgfCAnY2lyY2xlJztcclxuICBsYWJlbDogc3RyaW5nO1xyXG4gIGlzRHJhZ2dpbmc6IGJvb2xlYW47XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgRmxvd0VkZ2Uge1xyXG4gIGZyb206IHN0cmluZztcclxuICB0bzogc3RyaW5nO1xyXG4gIGxhYmVsPzogc3RyaW5nO1xyXG59XHJcblxyXG4vLyBleHBvcnQgaW50ZXJmYWNlIFBvaW50IHtcclxuLy8gICB4OiBudW1iZXI7XHJcbi8vICAgeTogbnVtYmVyO1xyXG4vLyB9XHJcblxyXG4vLyBPcHRpb25hbDogQWRkIGNvbmZpZ3VyYXRpb24gaW50ZXJmYWNlIGlmIHlvdSB3YW50IHRvIGFsbG93IGN1c3RvbWl6YXRpb25cclxuZXhwb3J0IGludGVyZmFjZSBJeHRGbG93Q29uZmlnIHtcclxuICBjYW52YXNXaWR0aD86IG51bWJlcjtcclxuICBjYW52YXNIZWlnaHQ/OiBudW1iZXI7XHJcbiAgbm9kZURlZmF1bHRzPzoge1xyXG4gICAgd2lkdGg6IG51bWJlcjtcclxuICAgIGhlaWdodDogbnVtYmVyO1xyXG4gICAgcGFkZGluZzogbnVtYmVyO1xyXG4gIH07XHJcbiAgbGF5b3V0Pzoge1xyXG4gICAgcmVwdWxzaW9uOiBudW1iZXI7XHJcbiAgICBhdHRyYWN0aW9uOiBudW1iZXI7XHJcbiAgICBkYW1waW5nOiBudW1iZXI7XHJcbiAgICBtaW5EaXN0YW5jZTogbnVtYmVyO1xyXG4gIH07XHJcbiAgc3R5bGU/OiB7XHJcbiAgICBub2RlRmlsbDogc3RyaW5nO1xyXG4gICAgbm9kZVN0cm9rZTogc3RyaW5nO1xyXG4gICAgZWRnZUNvbG9yOiBzdHJpbmc7XHJcbiAgICB0ZXh0Q29sb3I6IHN0cmluZztcclxuICAgIGZvbnRGYW1pbHk6IHN0cmluZztcclxuICAgIGZvbnRTaXplOiBudW1iZXI7XHJcbiAgfTtcclxufSJdfQ==
|       |   |   |   |   |   --- ixt-flow.module.mjs: // ixt-flow.module.ts import { NgModule } from '@angular/core'; import { CommonModule } from '@angular/common'; import { IxtFlowDiagram } from './ixt-flow.diagram'; import * as i0 from "@angular/core"; export class IxtFlowModule { static forRoot() { return { ngModule: IxtFlowModule, providers: [] }; } static forChild() { return { ngModule: IxtFlowModule, providers: [] }; } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtFlowModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); } static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "16.2.12", ngImport: i0, type: IxtFlowModule, declarations: [IxtFlowDiagram], imports: [CommonModule], exports: [IxtFlowDiagram] }); } static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtFlowModule, imports: [CommonModule] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtFlowModule, decorators: [{ type: NgModule, args: [{ declarations: [ IxtFlowDiagram ], imports: [ CommonModule ], exports: [ IxtFlowDiagram ], providers: [] }] }] }); //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXh0LWZsb3cubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvaXh0LWRpYWdyYW0vdHlwZXMvZmxvdy9peHQtZmxvdy5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEscUJBQXFCO0FBQ3JCLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQzs7QUFjcEQsTUFBTSxPQUFPLGFBQWE7SUFDeEIsTUFBTSxDQUFDLE9BQU87UUFDWixPQUFPO1lBQ0wsUUFBUSxFQUFFLGFBQWE7WUFDdkIsU0FBUyxFQUFFLEVBQUU7U0FDZCxDQUFDO0lBQ0osQ0FBQztJQUVELE1BQU0sQ0FBQyxRQUFRO1FBQ2IsT0FBTztZQUNMLFFBQVEsRUFBRSxhQUFhO1lBQ3ZCLFNBQVMsRUFBRSxFQUFFO1NBQ2QsQ0FBQztJQUNKLENBQUM7K0dBYlUsYUFBYTtnSEFBYixhQUFhLGlCQVZ0QixjQUFjLGFBR2QsWUFBWSxhQUdaLGNBQWM7Z0hBSUwsYUFBYSxZQVB0QixZQUFZOzs0RkFPSCxhQUFhO2tCQVp6QixRQUFRO21CQUFDO29CQUNSLFlBQVksRUFBRTt3QkFDWixjQUFjO3FCQUNmO29CQUNELE9BQU8sRUFBRTt3QkFDUCxZQUFZO3FCQUNiO29CQUNELE9BQU8sRUFBRTt3QkFDUCxjQUFjO3FCQUNmO29CQUNELFNBQVMsRUFBRSxFQUFFO2lCQUNkIiwic291cmNlc0NvbnRlbnQiOlsiLy8gaXh0LWZsb3cubW9kdWxlLnRzXHJcbmltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XHJcbmltcG9ydCB7IEl4dEZsb3dEaWFncmFtIH0gZnJvbSAnLi9peHQtZmxvdy5kaWFncmFtJztcclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgZGVjbGFyYXRpb25zOiBbXHJcbiAgICBJeHRGbG93RGlhZ3JhbVxyXG4gIF0sXHJcbiAgaW1wb3J0czogW1xyXG4gICAgQ29tbW9uTW9kdWxlXHJcbiAgXSxcclxuICBleHBvcnRzOiBbXHJcbiAgICBJeHRGbG93RGlhZ3JhbVxyXG4gIF0sXHJcbiAgcHJvdmlkZXJzOiBbXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgSXh0Rmxvd01vZHVsZSB7XHJcbiAgc3RhdGljIGZvclJvb3QoKSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBuZ01vZHVsZTogSXh0Rmxvd01vZHVsZSxcclxuICAgICAgcHJvdmlkZXJzOiBbXVxyXG4gICAgfTtcclxuICB9XHJcbiAgXHJcbiAgc3RhdGljIGZvckNoaWxkKCkge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgbmdNb2R1bGU6IEl4dEZsb3dNb2R1bGUsXHJcbiAgICAgIHByb3ZpZGVyczogW11cclxuICAgIH07XHJcbiAgfVxyXG59XHJcblxyXG4iXX0=
|       |   |   |   |   +-- gannt
|       |   |   |   |   |   --- gannt.diagram.mjs: // ixt-gannt.diagram.ts import { Component, ViewChild } from '@angular/core'; import * as i0 from "@angular/core"; export class IxtGanntDiagram { constructor() { this.flights = []; // Canvas dimensions this.canvasWidth = 2400; // 24 hours * 100 pixels per hour this.canvasHeight = 500; // 5 aircraft lanes * 100 pixels height // Layout constants this.HOUR_WIDTH = 100; this.LANE_HEIGHT = 100; this.MIN_FLIGHT_DURATION = 60; // 1 hour in minutes this.MAX_FLIGHT_DURATION = 240; // 4 hours in minutes this.MIN_GROUND_TIME = 30; // 30 minutes between flights // Drag state this.isDragging = false; this.selectedPuck = null; this.dragOffsetX = 0; this.dragOffsetY = 0; this.isResizing = false; this.resizeEdge = null; // Sample airports for domestic routes this.airports = ['ORD', 'LAX', 'SFO', 'EWR', 'DEN', 'IAH', 'DFW']; this.generateSampleFlights(); } ngOnInit() { } ngAfterViewInit() { this.ctx = this.canvasRef.nativeElement.getContext('2d'); this.draw(); } generateSampleFlights() { // Generate sample flights for each aircraft for (let aircraft = 0; aircraft < 5; aircraft++) { let startTime = new Date(); startTime.setHours(6, 0, 0, 0); // Start at 6 AM // Generate 2-3 flights per aircraft const numFlights = 2 + Math.floor(Math.random() * 2); for (let i = 0; i < numFlights; i++) { const duration = 60 + Math.floor(Math.random() * 180); // 1-4 hours const fromStation = this.airports[Math.floor(Math.random() * this.airports.length)]; let toStation; do { toStation = this.airports[Math.floor(Math.random() * this.airports.length)]; } while (toStation === fromStation); const endTime = new Date(startTime.getTime() + duration * 60000); this.flights.push({ id: `${aircraft}-${i}`, startTime: new Date(startTime), endTime: new Date(endTime), aircraft, fromStation, toStation, x: this.timeToX(startTime), y: aircraft * this.LANE_HEIGHT, width: this.calculateWidth(startTime, endTime) }); // Add ground time for next flight startTime = new Date(endTime.getTime() + this.MIN_GROUND_TIME * 60000); } } } timeToX(time) { const hours = time.getHours() + time.getMinutes() / 60; return hours * this.HOUR_WIDTH; } calculateWidth(start, end) { const durationHours = (end.getTime() - start.getTime()) / (1000 * 60 * 60); return durationHours * this.HOUR_WIDTH; } draw() { this.ctx.clearRect(0, 0, this.canvasWidth, this.canvasHeight); this.drawGrid(); this.drawTimeline(); this.drawFlights(); } drawGrid() { this.ctx.strokeStyle = '#ddd'; this.ctx.lineWidth = 1; // Draw horizontal lines (aircraft lanes) for (let i = 0; i <= 5; i++) { const y = i * this.LANE_HEIGHT; this.ctx.beginPath(); this.ctx.moveTo(0, y); this.ctx.lineTo(this.canvasWidth, y); this.ctx.stroke(); } // Draw vertical lines (hour markers) for (let i = 0; i <= 24; i++) { const x = i * this.HOUR_WIDTH; this.ctx.beginPath(); this.ctx.moveTo(x, 0); this.ctx.lineTo(x, this.canvasHeight); this.ctx.stroke(); } } drawTimeline() { this.ctx.fillStyle = '#333'; this.ctx.font = '12px Arial'; this.ctx.textAlign = 'center'; for (let i = 0; i <= 24; i++) { const x = i * this.HOUR_WIDTH; const timeStr = i === 0 || i === 24 ? '12 MN' : i === 12 ? '12 NN' : i > 12 ? `${i - 12} PM` : `${i} AM`; this.ctx.fillText(timeStr, x, 20); } } drawFlights() { this.flights.forEach(flight => { // Draw flight puck this.ctx.fillStyle = '#4a90e2'; this.ctx.strokeStyle = '#2171c7'; this.ctx.lineWidth = 2; const puckHeight = 60; const y = flight.y + (this.LANE_HEIGHT - puckHeight) / 2; // Draw rounded rectangle this.ctx.beginPath(); this.ctx.roundRect(flight.x, y, flight.width, puckHeight, 10); this.ctx.fill(); this.ctx.stroke(); // Draw flight information this.ctx.fillStyle = 'white'; this.ctx.font = '12px Arial'; this.ctx.textAlign = 'center'; const startTime = flight.startTime.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }); const endTime = flight.endTime.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }); const flightInfo = `${flight.fromStation} - ${flight.toStation}`; this.ctx.fillText(flightInfo, flight.x + flight.width / 2, y + puckHeight / 2); this.ctx.fillText(`${startTime} - ${endTime}`, flight.x + flight.width / 2, y + puckHeight / 2 + 15); }); } onMouseDown(event) { const rect = this.canvasRef.nativeElement.getBoundingClientRect(); const x = event.clientX - rect.left; const y = event.clientY - rect.top; // Check if clicked on a flight puck const clickedPuck = this.findClickedPuck(x, y); if (clickedPuck) { this.selectedPuck = clickedPuck; this.isDragging = true; this.dragOffsetX = x - clickedPuck.x; this.dragOffsetY = y - clickedPuck.y; } } onMouseMove(event) { if (!this.isDragging || !this.selectedPuck) return; const rect = this.canvasRef.nativeElement.getBoundingClientRect(); const x = event.clientX - rect.left - this.dragOffsetX; const y = event.clientY - rect.top - this.dragOffsetY; // Snap to lanes const newAircraft = Math.floor((y + this.LANE_HEIGHT / 2) / this.LANE_HEIGHT); if (newAircraft >= 0 && newAircraft < 5) { this.selectedPuck.aircraft = newAircraft; this.selectedPuck.y = newAircraft * this.LANE_HEIGHT; } // Update x position (time) const minX = 0; const maxX = this.canvasWidth - this.selectedPuck.width; this.selectedPuck.x = Math.max(minX, Math.min(x, maxX)); // Check for conflicts if (this.hasConflict(this.selectedPuck)) { // Revert position if conflict detected this.selectedPuck.x = this.timeToX(this.selectedPuck.startTime); } else { // Update times based on new position const hourOffset = this.selectedPuck.x / this.HOUR_WIDTH; const newStartTime = new Date(); newStartTime.setHours(Math.floor(hourOffset)); newStartTime.setMinutes((hourOffset % 1) * 60); this.selectedPuck.startTime = newStartTime; this.selectedPuck.endTime = new Date(newStartTime.getTime() + (this.selectedPuck.width / this.HOUR_WIDTH) * 60 * 60 * 1000); } this.draw(); } onMouseUp() { this.isDragging = false; this.selectedPuck = null; this.resizeEdge = null; } findClickedPuck(x, y) { return this.flights.find(flight => x >= flight.x && x <= flight.x + flight.width && y >= flight.y && y <= flight.y + this.LANE_HEIGHT) || null; } hasConflict(puck) { return this.flights.some(flight => { if (flight === puck) return false; if (flight.aircraft !== puck.aircraft) return false; const puckStart = puck.x / this.HOUR_WIDTH; const puckEnd = (puck.x + puck.width) / this.HOUR_WIDTH; const flightStart = flight.x / this.HOUR_WIDTH; const flightEnd = (flight.x + flight.width) / this.HOUR_WIDTH; // Check if there's less than minimum ground time between flights return !(puckEnd + (this.MIN_GROUND_TIME / 60) <= flightStart || flightEnd + (this.MIN_GROUND_TIME / 60) <= puckStart); }); } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtGanntDiagram, deps: [], target: i0.ɵɵFactoryTarget.Component }); } static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: IxtGanntDiagram, selector: "gannt-diagram", viewQueries: [{ propertyName: "canvasRef", first: true, predicate: ["schedulerCanvas"], descendants: true }], ngImport: i0, template: ` <div class="scheduler-container" (mousemove)="onMouseMove($event)" (mouseup)="onMouseUp()"> <canvas #schedulerCanvas [width]="canvasWidth" [height]="canvasHeight" (mousedown)="onMouseDown($event)"> </canvas> </div> `, isInline: true, styles: [".scheduler-container{width:100%;height:600px;overflow:auto;position:relative;background:#f5f5f5}canvas{cursor:default}\n"] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtGanntDiagram, decorators: [{ type: Component, args: [{ selector: 'gannt-diagram', template: ` <div class="scheduler-container" (mousemove)="onMouseMove($event)" (mouseup)="onMouseUp()"> <canvas #schedulerCanvas [width]="canvasWidth" [height]="canvasHeight" (mousedown)="onMouseDown($event)"> </canvas> </div> `, styles: [".scheduler-container{width:100%;height:600px;overflow:auto;position:relative;background:#f5f5f5}canvas{cursor:default}\n"] }] }], ctorParameters: function () { return []; }, propDecorators: { canvasRef: [{ type: ViewChild, args: ['schedulerCanvas'] }] } }); //# sourceMappingURL=data:application/json;base64,
|       |   |   |   |   |   --- gannt.index.mjs: // ixt-gannt.index.ts export * from './gannt.diagram'; export * from './gannt.module'; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2FubnQuaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9peHQtZGlhZ3JhbS90eXBlcy9nYW5udC9nYW5udC5pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxxQkFBcUI7QUFDckIsY0FBYyxpQkFBaUIsQ0FBQztBQUNoQyxjQUFjLGdCQUFnQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiXHJcblxyXG4vLyBpeHQtZ2FubnQuaW5kZXgudHNcclxuZXhwb3J0ICogZnJvbSAnLi9nYW5udC5kaWFncmFtJztcclxuZXhwb3J0ICogZnJvbSAnLi9nYW5udC5tb2R1bGUnOyJdfQ==
|       |   |   |   |   |   --- gannt.module.mjs: // ixt-gannt.module.ts import { NgModule } from '@angular/core'; import { CommonModule } from '@angular/common'; import { IxtGanntDiagram } from './gannt.diagram'; import * as i0 from "@angular/core"; export class IxtGanntModule { static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtGanntModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); } static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "16.2.12", ngImport: i0, type: IxtGanntModule, declarations: [IxtGanntDiagram], imports: [CommonModule], exports: [IxtGanntDiagram] }); } static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtGanntModule, imports: [CommonModule] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtGanntModule, decorators: [{ type: NgModule, args: [{ declarations: [ IxtGanntDiagram ], imports: [ CommonModule ], exports: [ IxtGanntDiagram ] }] }] }); //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2FubnQubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvaXh0LWRpYWdyYW0vdHlwZXMvZ2FubnQvZ2FubnQubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNCQUFzQjtBQUN0QixPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0saUJBQWlCLENBQUM7O0FBYWxELE1BQU0sT0FBTyxjQUFjOytHQUFkLGNBQWM7Z0hBQWQsY0FBYyxpQkFUdkIsZUFBZSxhQUdmLFlBQVksYUFHWixlQUFlO2dIQUdOLGNBQWMsWUFOdkIsWUFBWTs7NEZBTUgsY0FBYztrQkFYMUIsUUFBUTttQkFBQztvQkFDUixZQUFZLEVBQUU7d0JBQ1osZUFBZTtxQkFDaEI7b0JBQ0QsT0FBTyxFQUFFO3dCQUNQLFlBQVk7cUJBQ2I7b0JBQ0QsT0FBTyxFQUFFO3dCQUNQLGVBQWU7cUJBQ2hCO2lCQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLy8gaXh0LWdhbm50Lm1vZHVsZS50c1xyXG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xyXG5pbXBvcnQgeyBJeHRHYW5udERpYWdyYW0gfSBmcm9tICcuL2dhbm50LmRpYWdyYW0nO1xyXG5cclxuQE5nTW9kdWxlKHtcclxuICBkZWNsYXJhdGlvbnM6IFtcclxuICAgIEl4dEdhbm50RGlhZ3JhbVxyXG4gIF0sXHJcbiAgaW1wb3J0czogW1xyXG4gICAgQ29tbW9uTW9kdWxlXHJcbiAgXSxcclxuICBleHBvcnRzOiBbXHJcbiAgICBJeHRHYW5udERpYWdyYW1cclxuICBdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBJeHRHYW5udE1vZHVsZSB7IH0iXX0=
|       |   |   |   |   +-- network
|       |   |   |   |   |   --- ixt-network.diagram.mjs: import { Component, ViewChild } from '@angular/core'; import { Subscription } from 'rxjs'; import * as i0 from "@angular/core"; export class IxtNetworkDiagram { constructor() { this.animationFrameId = 0; this.isDragging = false; this.selectedNode = null; this.mouseOffset = { x: 0, y: 0 }; this.width = 1200; this.height = 800; // Sample network configuration this.nodes = [ { id: 'api', label: 'API Gateway', type: 'gateway', x: 200, y: 200, width: 120, height: 60, vx: 0, vy: 0 }, { id: 'auth', label: 'Auth Service', type: 'service', x: 400, y: 150, width: 120, height: 60, vx: 0, vy: 0 }, { id: 'users', label: 'User Service', type: 'service', x: 600, y: 200, width: 120, height: 60, vx: 0, vy: 0 }, { id: 'userdb', label: 'User DB', type: 'database', x: 800, y: 200, width: 100, height: 60, vx: 0, vy: 0 }, { id: 'cache', label: 'Redis Cache', type: 'cache', x: 400, y: 300, width: 100, height: 60, vx: 0, vy: 0 }, { id: 'lb', label: 'Load Balancer', type: 'loadbalancer', x: 200, y: 100, width: 120, height: 60, vx: 0, vy: 0 } ]; this.edges = [ { from: 'lb', to: 'api', type: 'sync' }, { from: 'api', to: 'auth', type: 'sync' }, { from: 'api', to: 'users', type: 'sync' }, { from: 'users', to: 'userdb', type: 'sync' }, { from: 'auth', to: 'cache', type: 'async' }, { from: 'users', to: 'cache', type: 'async' } ]; this.subscriptions = new Subscription(); } ngAfterViewInit() { const canvas = this.canvasRef.nativeElement; this.ctx = canvas.getContext('2d'); // Set up high DPI canvas const dpr = window.devicePixelRatio || 1; canvas.width = this.width * dpr; canvas.height = this.height * dpr; canvas.style.width = `${this.width}px`; canvas.style.height = `${this.height}px`; this.ctx.scale(dpr, dpr); this.draw(); } ngOnDestroy() { if (this.animationFrameId) { cancelAnimationFrame(this.animationFrameId); } this.subscriptions.unsubscribe(); } draw() { this.ctx.clearRect(0, 0, this.width, this.height); // Draw edges first (so they appear under nodes) this.drawEdges(); // Draw nodes this.nodes.forEach(node => this.drawNode(node)); this.animationFrameId = requestAnimationFrame(() => this.draw()); } drawNode(node) { const { x, y, width, height, label, type } = node; // Draw shadow this.ctx.shadowColor = 'rgba(0, 0, 0, 0.2)'; this.ctx.shadowBlur = 10; this.ctx.shadowOffsetX = 3; this.ctx.shadowOffsetY = 3; // Draw node background this.ctx.beginPath(); this.ctx.roundRect(x, y, width, height, 8); // Different colors for different node types const colors = { service: '#4a90e2', database: '#50b83c', loadbalancer: '#8c4a9e', gateway: '#f5a623', cache: '#e2725b' }; this.ctx.fillStyle = colors[type]; this.ctx.fill(); // Reset shadow this.ctx.shadowColor = 'transparent'; // Draw node label this.ctx.fillStyle = 'white'; this.ctx.font = '14px Arial'; this.ctx.textAlign = 'center'; this.ctx.textBaseline = 'middle'; this.ctx.fillText(label, x + width / 2, y + height / 2); } drawEdges() { this.edges.forEach(edge => { const fromNode = this.nodes.find(n => n.id === edge.from); const toNode = this.nodes.find(n => n.id === edge.to); // Calculate edge points using smart routing const points = this.calculateEdgePoints(fromNode, toNode); this.ctx.beginPath(); this.ctx.moveTo(points[0].x, points[0].y); // Draw curved lines for a more professional look if (points.length === 3) { this.ctx.quadraticCurveTo(points[1].x, points[1].y, points[2].x, points[2].y); } // Style based on edge type this.ctx.strokeStyle = edge.type === 'async' ? '#999' : '#666'; this.ctx.setLineDash(edge.type === 'async' ? [5, 5] : []); this.ctx.lineWidth = 2; this.ctx.stroke(); // Draw arrow this.drawArrow(points[points.length - 2], points[points.length - 1]); }); } calculateEdgePoints(from, to) { // Smart edge routing to avoid node intersections const startPoint = { x: from.x + from.width / 2, y: from.y + from.height / 2 }; const endPoint = { x: to.x + to.width / 2, y: to.y + to.height / 2 }; // Calculate control point for curved lines const controlPoint = { x: (startPoint.x + endPoint.x) / 2, y: (startPoint.y + endPoint.y) / 2 }; // Adjust control point based on node positions if (Math.abs(from.y - to.y) < Math.max(from.height, to.height)) { controlPoint.y -= 50; // Curve upward if nodes are at similar heights } return [startPoint, controlPoint, endPoint]; } drawArrow(from, to) { const angle = Math.atan2(to.y - from.y, to.x - from.x); const arrowLength = 10; this.ctx.beginPath(); this.ctx.moveTo(to.x - arrowLength * Math.cos(angle - Math.PI / 6), to.y - arrowLength * Math.sin(angle - Math.PI / 6)); this.ctx.lineTo(to.x, to.y); this.ctx.lineTo(to.x - arrowLength * Math.cos(angle + Math.PI / 6), to.y - arrowLength * Math.sin(angle + Math.PI / 6)); this.ctx.stroke(); } onMouseDown(event) { const rect = this.canvasRef.nativeElement.getBoundingClientRect(); const x = event.clientX - rect.left; const y = event.clientY - rect.top; // Check if we clicked on a node this.selectedNode = this.nodes.find(node => x >= node.x && x <= node.x + node.width && y >= node.y && y <= node.y + node.height) || null; if (this.selectedNode) { this.isDragging = true; this.mouseOffset.x = x - this.selectedNode.x; this.mouseOffset.y = y - this.selectedNode.y; } } onMouseMove(event) { if (this.isDragging && this.selectedNode) { const rect = this.canvasRef.nativeElement.getBoundingClientRect(); const x = event.clientX - rect.left; const y = event.clientY - rect.top; this.selectedNode.x = x - this.mouseOffset.x; this.selectedNode.y = y - this.mouseOffset.y; // Keep node within canvas bounds this.selectedNode.x = Math.max(0, Math.min(this.width - this.selectedNode.width, this.selectedNode.x)); this.selectedNode.y = Math.max(0, Math.min(this.height - this.selectedNode.height, this.selectedNode.y)); } } onMouseUp() { this.isDragging = false; this.selectedNode = null; } applyForceDirectedLayout() { const simulation = { alpha: 1, alphaMin: 0.001, alphaDecay: 0.0228, velocityDecay: 0.4, linkDistance: 200, linkStrength: 1, repulsion: -400, iterations: 300 }; const animate = () => { if (simulation.alpha > simulation.alphaMin && simulation.iterations > 0) { this.calculateForces(simulation); simulation.alpha *= 1 - simulation.alphaDecay; simulation.iterations--; requestAnimationFrame(animate); } }; requestAnimationFrame(animate); } calculateForces(simulation) { // Apply forces between all node pairs for (let i = 0; i < this.nodes.length; i++) { for (let j = i + 1; j < this.nodes.length; j++) { const nodeA = this.nodes[i]; const nodeB = this.nodes[j]; const dx = nodeB.x - nodeA.x; const dy = nodeB.y - nodeA.y; const distance = Math.sqrt(dx * dx + dy * dy); if (distance === 0) continue; // Repulsive force between all nodes const force = simulation.repulsion / (distance * distance); const forceX = (dx / distance) * force; const forceY = (dy / distance) * force; nodeA.vx -= forceX; nodeA.vy -= forceY; nodeB.vx += forceX; nodeB.vy += forceY; } } // Apply attractive forces along edges this.edges.forEach(edge => { const source = this.nodes.find(n => n.id === edge.from); const target = this.nodes.find(n => n.id === edge.to); const dx = target.x - source.x; const dy = target.y - source.y; const distance = Math.sqrt(dx * dx + dy * dy); if (distance === 0) return; const force = (distance - simulation.linkDistance) * simulation.linkStrength; const forceX = (dx / distance) * force; const forceY = (dy / distance) * force; source.vx += forceX; source.vy += forceY; target.vx -= forceX; target.vy -= forceY; }); // Update positions this.nodes.forEach(node => { node.vx *= simulation.velocityDecay; node.vy *= simulation.velocityDecay; node.x += node.vx; node.y += node.vy; // Constrain to canvas bounds node.x = Math.max(0, Math.min(this.width - node.width, node.x)); node.y = Math.max(0, Math.min(this.height - node.height, node.y)); }); } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtNetworkDiagram, deps: [], target: i0.ɵɵFactoryTarget.Component }); } static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: IxtNetworkDiagram, selector: "ixt-network-diagram", viewQueries: [{ propertyName: "canvasRef", first: true, predicate: ["canvas"], descendants: true }], ngImport: i0, template: ` <div class="diagram-container"> <canvas #canvas [width]="width" [height]="height" (mousedown)="onMouseDown($event)" (mousemove)="onMouseMove($event)" (mouseup)="onMouseUp()"> </canvas> <button (click)="applyForceDirectedLayout()" class="layout-button"> Auto Layout </button> </div> `, isInline: true, styles: [".diagram-container{position:relative;border:1px solid #ccc;margin:20px}.layout-button{position:absolute;top:10px;right:10px;padding:8px 16px;background:#4a90e2;color:#fff;border:none;border-radius:4px;cursor:pointer}.layout-button:hover{background:#357abd}\n"] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtNetworkDiagram, decorators: [{ type: Component, args: [{ selector: 'ixt-network-diagram', template: ` <div class="diagram-container"> <canvas #canvas [width]="width" [height]="height" (mousedown)="onMouseDown($event)" (mousemove)="onMouseMove($event)" (mouseup)="onMouseUp()"> </canvas> <button (click)="applyForceDirectedLayout()" class="layout-button"> Auto Layout </button> </div> `, styles: [".diagram-container{position:relative;border:1px solid #ccc;margin:20px}.layout-button{position:absolute;top:10px;right:10px;padding:8px 16px;background:#4a90e2;color:#fff;border:none;border-radius:4px;cursor:pointer}.layout-button:hover{background:#357abd}\n"] }] }], propDecorators: { canvasRef: [{ type: ViewChild, args: ['canvas'] }] } }); //# sourceMappingURL=data:application/json;base64,
|       |   |   |   |   |   --- ixt-network.index.mjs: // ixt-network.index.ts export * from './ixt-network.diagram'; export * from './ixt-network.module'; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXh0LW5ldHdvcmsuaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9peHQtZGlhZ3JhbS90eXBlcy9uZXR3b3JrL2l4dC1uZXR3b3JrLmluZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHVCQUF1QjtBQUN2QixjQUFjLHVCQUF1QixDQUFDO0FBQ3RDLGNBQWMsc0JBQXNCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpeHQtbmV0d29yay5pbmRleC50c1xyXG5leHBvcnQgKiBmcm9tICcuL2l4dC1uZXR3b3JrLmRpYWdyYW0nO1xyXG5leHBvcnQgKiBmcm9tICcuL2l4dC1uZXR3b3JrLm1vZHVsZSc7XHJcblxyXG4iXX0=
|       |   |   |   |   |   --- ixt-network.module.mjs: // ixt-network.module.ts import { NgModule } from '@angular/core'; import { CommonModule } from '@angular/common'; import { IxtNetworkDiagram } from './ixt-network.diagram'; import * as i0 from "@angular/core"; export class IxtNetworkModule { static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtNetworkModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); } static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "16.2.12", ngImport: i0, type: IxtNetworkModule, declarations: [IxtNetworkDiagram], imports: [CommonModule], exports: [IxtNetworkDiagram] }); } static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtNetworkModule, imports: [CommonModule] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtNetworkModule, decorators: [{ type: NgModule, args: [{ declarations: [ IxtNetworkDiagram ], imports: [ CommonModule ], exports: [ IxtNetworkDiagram ] }] }] }); //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXh0LW5ldHdvcmsubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvaXh0LWRpYWdyYW0vdHlwZXMvbmV0d29yay9peHQtbmV0d29yay5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsd0JBQXdCO0FBQ3hCLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHVCQUF1QixDQUFDOztBQWExRCxNQUFNLE9BQU8sZ0JBQWdCOytHQUFoQixnQkFBZ0I7Z0hBQWhCLGdCQUFnQixpQkFUekIsaUJBQWlCLGFBR2pCLFlBQVksYUFHWixpQkFBaUI7Z0hBR1IsZ0JBQWdCLFlBTnpCLFlBQVk7OzRGQU1ILGdCQUFnQjtrQkFYNUIsUUFBUTttQkFBQztvQkFDUixZQUFZLEVBQUU7d0JBQ1osaUJBQWlCO3FCQUNsQjtvQkFDRCxPQUFPLEVBQUU7d0JBQ1AsWUFBWTtxQkFDYjtvQkFDRCxPQUFPLEVBQUU7d0JBQ1AsaUJBQWlCO3FCQUNsQjtpQkFDRiIsInNvdXJjZXNDb250ZW50IjpbIi8vIGl4dC1uZXR3b3JrLm1vZHVsZS50c1xyXG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xyXG5pbXBvcnQgeyBJeHROZXR3b3JrRGlhZ3JhbSB9IGZyb20gJy4vaXh0LW5ldHdvcmsuZGlhZ3JhbSc7XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGRlY2xhcmF0aW9uczogW1xyXG4gICAgSXh0TmV0d29ya0RpYWdyYW1cclxuICBdLFxyXG4gIGltcG9ydHM6IFtcclxuICAgIENvbW1vbk1vZHVsZVxyXG4gIF0sXHJcbiAgZXhwb3J0czogW1xyXG4gICAgSXh0TmV0d29ya0RpYWdyYW1cclxuICBdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBJeHROZXR3b3JrTW9kdWxlIHsgfSJdfQ==
|       |   |   |   |   +-- sankey
|       |   |   |   |   |   --- ixt-sankey.diagram.mjs: import { Component, ViewChild } from '@angular/core'; import * as i0 from "@angular/core"; export class IxtSankeyDiagram { constructor() { // Sample data this.nodes = [ { name: 'Total Energy', value: 1000 }, { name: 'Residential', value: 300 }, { name: 'Commercial', value: 400 }, { name: 'Industrial', value: 300 }, { name: 'Electricity', value: 450 }, { name: 'Natural Gas', value: 350 }, { name: 'Oil', value: 200 } ]; this.links = [ { source: 0, target: 1, value: 300 }, { source: 0, target: 2, value: 400 }, { source: 0, target: 3, value: 300 }, { source: 1, target: 4, value: 200 }, { source: 1, target: 5, value: 100 }, { source: 2, target: 4, value: 250 }, { source: 2, target: 5, value: 150 }, { source: 3, target: 5, value: 100 }, { source: 3, target: 6, value: 200 } ]; this.PADDING = 50; this.NODE_WIDTH = 20; this.NODE_SPACING = 50; this.COLORS = [ '#1f77b4', '#ff7f0e', '#2ca02c', '#d62728', '#9467bd', '#8c564b', '#e377c2' ]; } ngOnInit() { this.initializeCanvas(); this.drawSankey(); } initializeCanvas() { const canvas = this.canvas.nativeElement; this.ctx = canvas.getContext('2d'); // Handle high DPI displays const dpr = window.devicePixelRatio || 1; canvas.width = canvas.offsetWidth * dpr; canvas.height = canvas.offsetHeight * dpr; this.ctx.scale(dpr, dpr); } drawSankey() { const canvas = this.canvas.nativeElement; const width = canvas.offsetWidth; const height = canvas.offsetHeight; // Calculate node positions const nodeColumns = this.calculateNodeColumns(); const nodePositions = this.calculateNodePositions(nodeColumns, width, height); // Draw links this.links.forEach((link, index) => { const sourcePos = nodePositions[link.source]; const targetPos = nodePositions[link.target]; const sourceY = sourcePos.y + (sourcePos.height / 2); const targetY = targetPos.y + (targetPos.height / 2); this.drawLink(sourcePos.x + this.NODE_WIDTH, sourceY, targetPos.x, targetY, link.value, this.COLORS[index % this.COLORS.length]); }); // Draw nodes nodePositions.forEach((pos, index) => { this.drawNode(pos.x, pos.y, this.NODE_WIDTH, pos.height, this.nodes[index].name, this.COLORS[index % this.COLORS.length]); }); } calculateNodeColumns() { const columns = new Array(this.nodes.length).fill(0); const visited = new Set(); const assignColumn = (nodeIndex, column) => { if (!visited.has(nodeIndex)) { columns[nodeIndex] = Math.max(columns[nodeIndex], column); visited.add(nodeIndex); this.links .filter(link => link.source === nodeIndex) .forEach(link => assignColumn(link.target, column + 1)); } }; assignColumn(0, 0); return columns; } calculateNodePositions(columns, width, height) { const maxColumn = Math.max(...columns); const columnWidth = (width - 2 * this.PADDING) / maxColumn; const positions = this.nodes.map((node, index) => { const x = this.PADDING + columns[index] * columnWidth; const nodeHeight = (node.value / this.nodes[0].value) * (height - 2 * this.PADDING); return { x, y: (height - nodeHeight) / 2, height: nodeHeight }; }); return positions; } drawNode(x, y, width, height, label, color) { this.ctx.fillStyle = color; this.ctx.fillRect(x, y, width, height); // Draw label this.ctx.fillStyle = '#000'; this.ctx.font = '12px Arial'; this.ctx.textAlign = 'right'; this.ctx.textBaseline = 'middle'; this.ctx.fillText(label, x - 5, y + height / 2); } drawLink(x1, y1, x2, y2, value, color) { const controlPoint1X = x1 + (x2 - x1) / 3; const controlPoint2X = x1 + 2 * (x2 - x1) / 3; this.ctx.beginPath(); this.ctx.moveTo(x1, y1); this.ctx.bezierCurveTo(controlPoint1X, y1, controlPoint2X, y2, x2, y2); this.ctx.strokeStyle = color; this.ctx.lineWidth = Math.max(1, value / 20); this.ctx.stroke(); } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtSankeyDiagram, deps: [], target: i0.ɵɵFactoryTarget.Component }); } static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: IxtSankeyDiagram, selector: "ixt-sankey-diagram", viewQueries: [{ propertyName: "canvas", first: true, predicate: ["sankeyCanvas"], descendants: true, static: true }], ngImport: i0, template: ` <div class="sankey-container"> <canvas #sankeyCanvas></canvas> </div> `, isInline: true, styles: [".sankey-container{width:800px;height:600px}canvas{width:100%;height:100%}\n"] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtSankeyDiagram, decorators: [{ type: Component, args: [{ selector: 'ixt-sankey-diagram', template: ` <div class="sankey-container"> <canvas #sankeyCanvas></canvas> </div> `, styles: [".sankey-container{width:800px;height:600px}canvas{width:100%;height:100%}\n"] }] }], propDecorators: { canvas: [{ type: ViewChild, args: ['sankeyCanvas', { static: true }] }] } }); //# sourceMappingURL=data:application/json;base64,
|       |   |   |   |   |   --- ixt-sankey.index.mjs: // ixt-sankey.index.ts export * from './ixt-sankey.diagram'; export * from './ixt-sankey.module'; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXh0LXNhbmtleS5pbmRleC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL2l4dC1kaWFncmFtL3R5cGVzL3NhbmtleS9peHQtc2Fua2V5LmluZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNCQUFzQjtBQUN0QixjQUFjLHNCQUFzQixDQUFDO0FBQ3JDLGNBQWMscUJBQXFCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpeHQtc2Fua2V5LmluZGV4LnRzXHJcbmV4cG9ydCAqIGZyb20gJy4vaXh0LXNhbmtleS5kaWFncmFtJztcclxuZXhwb3J0ICogZnJvbSAnLi9peHQtc2Fua2V5Lm1vZHVsZSc7XHJcbiJdfQ==
|       |   |   |   |   |   --- ixt-sankey.module.mjs: // ixt-sankey.module.ts import { NgModule } from '@angular/core'; import { CommonModule } from '@angular/common'; import { IxtSankeyDiagram } from './ixt-sankey.diagram'; import * as i0 from "@angular/core"; export class IxtSankeyModule { static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtSankeyModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); } static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "16.2.12", ngImport: i0, type: IxtSankeyModule, declarations: [IxtSankeyDiagram], imports: [CommonModule], exports: [IxtSankeyDiagram] }); } static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtSankeyModule, imports: [CommonModule] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtSankeyModule, decorators: [{ type: NgModule, args: [{ declarations: [ IxtSankeyDiagram ], imports: [ CommonModule ], exports: [ IxtSankeyDiagram ] }] }] }); //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXh0LXNhbmtleS5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9peHQtZGlhZ3JhbS90eXBlcy9zYW5rZXkvaXh0LXNhbmtleS5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsdUJBQXVCO0FBQ3ZCLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDOztBQWF4RCxNQUFNLE9BQU8sZUFBZTsrR0FBZixlQUFlO2dIQUFmLGVBQWUsaUJBVHhCLGdCQUFnQixhQUdoQixZQUFZLGFBR1osZ0JBQWdCO2dIQUdQLGVBQWUsWUFOeEIsWUFBWTs7NEZBTUgsZUFBZTtrQkFYM0IsUUFBUTttQkFBQztvQkFDUixZQUFZLEVBQUU7d0JBQ1osZ0JBQWdCO3FCQUNqQjtvQkFDRCxPQUFPLEVBQUU7d0JBQ1AsWUFBWTtxQkFDYjtvQkFDRCxPQUFPLEVBQUU7d0JBQ1AsZ0JBQWdCO3FCQUNqQjtpQkFDRiIsInNvdXJjZXNDb250ZW50IjpbIlxyXG4vLyBpeHQtc2Fua2V5Lm1vZHVsZS50c1xyXG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xyXG5pbXBvcnQgeyBJeHRTYW5rZXlEaWFncmFtIH0gZnJvbSAnLi9peHQtc2Fua2V5LmRpYWdyYW0nO1xyXG5cclxuQE5nTW9kdWxlKHtcclxuICBkZWNsYXJhdGlvbnM6IFtcclxuICAgIEl4dFNhbmtleURpYWdyYW1cclxuICBdLFxyXG4gIGltcG9ydHM6IFtcclxuICAgIENvbW1vbk1vZHVsZVxyXG4gIF0sXHJcbiAgZXhwb3J0czogW1xyXG4gICAgSXh0U2Fua2V5RGlhZ3JhbVxyXG4gIF1cclxufSlcclxuZXhwb3J0IGNsYXNzIEl4dFNhbmtleU1vZHVsZSB7IH0iXX0=
|       |   |   |   |   \-- wireframe
|       |   |   |   |       --- ixt-wireframe.diagram.mjs: // ixt-wireframe-diagram.ts import { Component, ViewChild } from '@angular/core'; import * as i0 from "@angular/core"; import * as i1 from "@angular/common"; export class IxtWireframeDiagram { constructor() { this.shapes = []; this.selectedShapes = new Set(); this.isDragging = false; this.dragStart = { x: 0, y: 0 }; this.dragOffset = { x: 0, y: 0 }; this.scale = 1; this.panOffset = { x: 0, y: 0 }; this.showGrid = true; this.snapEnabled = false; this.gridSize = 20; this.availableShapes = [ { name: 'Button', type: 'button', defaultWidth: 100, defaultHeight: 30 }, { name: 'Text Field', type: 'textfield', defaultWidth: 200, defaultHeight: 30 }, { name: 'Checkbox', type: 'checkbox', defaultWidth: 20, defaultHeight: 20 }, { name: 'Radio Button', type: 'radio', defaultWidth: 20, defaultHeight: 20 }, { name: 'Select', type: 'select', defaultWidth: 200, defaultHeight: 30 }, { name: 'Table', type: 'table', defaultWidth: 400, defaultHeight: 300 }, { name: 'Panel', type: 'panel', defaultWidth: 300, defaultHeight: 200 }, { name: 'Dialog', type: 'dialog', defaultWidth: 400, defaultHeight: 300 }, { name: 'Menu', type: 'menu', defaultWidth: 150, defaultHeight: 200 }, { name: 'Tree', type: 'tree', defaultWidth: 200, defaultHeight: 400 } ]; // Undo/Redo support this.undoStack = []; this.redoStack = []; } ngOnInit() { this.initializeCanvas(); this.initializeRulers(); this.draw(); } initializeCanvas() { const canvas = this.mainCanvas.nativeElement; this.ctx = canvas.getContext('2d'); this.resizeCanvas(); window.addEventListener('resize', () => this.resizeCanvas()); } resizeCanvas() { const canvas = this.mainCanvas.nativeElement; const container = canvas.parentElement; canvas.width = container.clientWidth; canvas.height = container.clientHeight; this.draw(); } initializeRulers() { // Initialize top ruler const topRuler = this.topRuler.nativeElement; const topCtx = topRuler.getContext('2d'); topRuler.width = this.mainCanvas.nativeElement.width; topRuler.height = 20; // Initialize left ruler const leftRuler = this.leftRuler.nativeElement; const leftCtx = leftRuler.getContext('2d'); leftRuler.width = 20; leftRuler.height = this.mainCanvas.nativeElement.height; this.drawRulers(); } drawRulers() { // Draw top ruler const topCtx = this.topRuler.nativeElement.getContext('2d'); topCtx.clearRect(0, 0, this.topRuler.nativeElement.width, this.topRuler.nativeElement.height); // Draw left ruler const leftCtx = this.leftRuler.nativeElement.getContext('2d'); leftCtx.clearRect(0, 0, this.leftRuler.nativeElement.width, this.leftRuler.nativeElement.height); // Draw measurements on rulers // ... (implementation for drawing ruler measurements) } draw() { this.ctx.clearRect(0, 0, this.mainCanvas.nativeElement.width, this.mainCanvas.nativeElement.height); if (this.showGrid) { this.drawGrid(); } this.shapes.forEach(shape => this.drawShape(shape)); } drawGrid() { const canvas = this.mainCanvas.nativeElement; this.ctx.strokeStyle = '#eee'; this.ctx.lineWidth = 1; // Draw vertical lines for (let x = 0; x < canvas.width; x += this.gridSize) { this.ctx.beginPath(); this.ctx.moveTo(x, 0); this.ctx.lineTo(x, canvas.height); this.ctx.stroke(); } // Draw horizontal lines for (let y = 0; y < canvas.height; y += this.gridSize) { this.ctx.beginPath(); this.ctx.moveTo(0, y); this.ctx.lineTo(canvas.width, y); this.ctx.stroke(); } } drawShape(shape) { const isSelected = this.selectedShapes.has(shape.id); this.ctx.save(); this.ctx.scale(this.scale, this.scale); this.ctx.translate(this.panOffset.x, this.panOffset.y); // Draw shape based on type switch (shape.type) { case 'button': this.drawButton(shape, isSelected); break; case 'textfield': this.drawTextField(shape, isSelected); break; // ... (implement other shape drawing methods) } this.ctx.restore(); } drawButton(shape, isSelected) { this.ctx.fillStyle = '#f0f0f0'; this.ctx.strokeStyle = isSelected ? '#0066ff' : '#000'; this.ctx.lineWidth = isSelected ? 2 : 1; this.ctx.beginPath(); this.ctx.roundRect(shape.x, shape.y, shape.width, shape.height, 5); this.ctx.fill(); this.ctx.stroke(); if (shape.text) { this.ctx.fillStyle = '#000'; this.ctx.textAlign = 'center'; this.ctx.textBaseline = 'middle'; this.ctx.fillText(shape.text, shape.x + shape.width / 2, shape.y + shape.height / 2); } } drawTextField(shape, isSelected) { this.ctx.fillStyle = '#fff'; this.ctx.strokeStyle = isSelected ? '#0066ff' : '#000'; this.ctx.lineWidth = isSelected ? 2 : 1; this.ctx.beginPath(); this.ctx.rect(shape.x, shape.y, shape.width, shape.height); this.ctx.fill(); this.ctx.stroke(); if (shape.text) { this.ctx.fillStyle = '#000'; this.ctx.textAlign = 'left'; this.ctx.textBaseline = 'middle'; this.ctx.fillText(shape.text, shape.x + 5, shape.y + shape.height / 2); } } onDragStart(event, shape) { event.dataTransfer?.setData('text/plain', shape.type); } onMouseDown(event) { const pos = this.getCanvasPosition(event); this.isDragging = true; this.dragStart = pos; // Check if clicked on a shape const clickedShape = this.findShapeAtPosition(pos); if (clickedShape) { if (!event.ctrlKey) { this.selectedShapes.clear(); } this.selectedShapes.add(clickedShape.id); this.dragOffset = { x: pos.x - clickedShape.x, y: pos.y - clickedShape.y }; } else { this.selectedShapes.clear(); } this.draw(); } onMouseMove(event) { if (!this.isDragging) return; const pos = this.getCanvasPosition(event); const dx = pos.x - this.dragStart.x; const dy = pos.y - this.dragStart.y; if (this.selectedShapes.size > 0) { this.shapes.forEach(shape => { if (this.selectedShapes.has(shape.id)) { shape.x += dx; shape.y += dy; if (this.snapEnabled) { shape.x = Math.round(shape.x / this.gridSize) * this.gridSize; shape.y = Math.round(shape.y / this.gridSize) * this.gridSize; } } }); } else { // Pan the canvas this.panOffset.x += dx; this.panOffset.y += dy; } this.dragStart = pos; this.draw(); } onMouseUp(_event) { this.isDragging = false; } onWheel(event) { event.preventDefault(); const pos = this.getCanvasPosition(event); // Calculate zoom const delta = event.deltaY > 0 ? 0.9 : 1.1; const newScale = this.scale * delta; // Limit zoom range if (newScale >= 0.1 && newScale <= 5) { this.scale = newScale; // Adjust pan offset to zoom towards mouse position this.panOffset.x = pos.x - (pos.x - this.panOffset.x) * delta; this.panOffset.y = pos.y - (pos.y - this.panOffset.y) * delta; this.draw(); } } getCanvasPosition(event) { const rect = this.mainCanvas.nativeElement.getBoundingClientRect(); return { x: (event.clientX - rect.left) / this.scale - this.panOffset.x, y: (event.clientY - rect.top) / this.scale - this.panOffset.y }; } findShapeAtPosition(pos) { // Search shapes in reverse order to find top-most shape first for (let i = this.shapes.length - 1; i >= 0; i--) { const shape = this.shapes[i]; if (pos.x >= shape.x && pos.x <= shape.x + shape.width && pos.y >= shape.y && pos.y <= shape.y + shape.height) { return shape; } } return null; } toggleGrid() { this.showGrid = !this.showGrid; this.draw(); } toggleSnap() { this.snapEnabled = !this.snapEnabled; } resetZoom() { this.scale = 1; this.panOffset = { x: 0, y: 0 }; this.draw(); } alignSelected(alignment) { if (this.selectedShapes.size < 2) return; const selectedShapes = this.shapes.filter(s => this.selectedShapes.has(s.id)); switch (alignment) { case 'left': const leftMost = Math.min(...selectedShapes.map(s => s.x)); selectedShapes.forEach(s => s.x = leftMost); break; case 'center': const centerX = selectedShapes.reduce((acc, s) => acc + s.x + s.width / 2, 0) / selectedShapes.length; selectedShapes.forEach(s => s.x = centerX - s.width / 2); break; case 'right': const rightMost = Math.max(...selectedShapes.map(s => s.x + s.width)); selectedShapes.forEach(s => s.x = rightMost - s.width); break; case 'top': const topMost = Math.min(...selectedShapes.map(s => s.y)); selectedShapes.forEach(s => s.y = topMost); break; case 'middle': const centerY = selectedShapes.reduce((acc, s) => acc + s.y + s.height / 2, 0) / selectedShapes.length; selectedShapes.forEach(s => s.y = centerY - s.height / 2); break; case 'bottom': const bottomMost = Math.max(...selectedShapes.map(s => s.y + s.height)); selectedShapes.forEach(s => s.y = bottomMost - s.height); break; } this.draw(); } // Add shape when dropped from palette onDrop(event) { event.preventDefault(); const shapeType = event.dataTransfer?.getData('text/plain'); const pos = this.getCanvasPosition(event); if (shapeType) { const template = this.availableShapes.find(s => s.type === shapeType); if (template) { const newShape = { id: `shape-${Date.now()}`, type: shapeType, x: pos.x, y: pos.y, width: template.defaultWidth, height: template.defaultHeight, text: '', layer: this.shapes.length, properties: {} }; this.shapes.push(newShape); this.selectedShapes.clear(); this.selectedShapes.add(newShape.id); this.draw(); } } } // Handle text editing for shapes onDoubleClick(event) { const pos = this.getCanvasPosition(event); const shape = this.findShapeAtPosition(pos); if (shape) { const text = prompt('Enter text:', shape.text); if (text !== null) { shape.text = text; this.draw(); } } } // Resize selected shapes initializeResizeHandles() { const handleSize = 8; const handles = [ { cursor: 'nw-resize', x: 0, y: 0 }, { cursor: 'n-resize', x: 0.5, y: 0 }, { cursor: 'ne-resize', x: 1, y: 0 }, { cursor: 'w-resize', x: 0, y: 0.5 }, { cursor: 'e-resize', x: 1, y: 0.5 }, { cursor: 'sw-resize', x: 0, y: 1 }, { cursor: 's-resize', x: 0.5, y: 1 }, { cursor: 'se-resize', x: 1, y: 1 } ]; this.selectedShapes.forEach(id => { const shape = this.shapes.find(s => s.id === id); if (shape) { handles.forEach(handle => { const x = shape.x + shape.width * handle.x - handleSize / 2; const y = shape.y + shape.height * handle.y - handleSize / 2; this.ctx.fillStyle = '#fff'; this.ctx.strokeStyle = '#0066ff'; this.ctx.fillRect(x, y, handleSize, handleSize); this.ctx.strokeRect(x, y, handleSize, handleSize); }); } }); } // Layer management bringToFront() { if (this.selectedShapes.size === 0) return; const maxLayer = Math.max(...this.shapes.map(s => s.layer)); this.shapes.forEach(shape => { if (this.selectedShapes.has(shape.id)) { shape.layer = maxLayer + 1; } }); this.sortShapesByLayer(); this.draw(); } sendToBack() { if (this.selectedShapes.size === 0) return; const minLayer = Math.min(...this.shapes.map(s => s.layer)); this.shapes.forEach(shape => { if (this.selectedShapes.has(shape.id)) { shape.layer = minLayer - 1; } }); this.sortShapesByLayer(); this.draw(); } sortShapesByLayer() { this.shapes.sort((a, b) => a.layer - b.layer); } // Save and load functionality saveToJSON() { return JSON.stringify({ shapes: this.shapes, scale: this.scale, panOffset: this.panOffset, showGrid: this.showGrid, snapEnabled: this.snapEnabled }); } loadFromJSON(json) { try { const data = JSON.parse(json); this.shapes = data.shapes; this.scale = data.scale; this.panOffset = data.panOffset; this.showGrid = data.showGrid; this.snapEnabled = data.snapEnabled; this.selectedShapes.clear(); this.draw(); } catch (error) { console.error('Error loading wireframe:', error); } } // Export functionality exportAsPNG() { return this.mainCanvas.nativeElement.toDataURL('image/png'); } saveState() { this.undoStack.push(this.saveToJSON()); this.redoStack = []; } undo() { if (this.undoStack.length > 0) { const currentState = this.saveToJSON(); this.redoStack.push(currentState); const previousState = this.undoStack.pop(); this.loadFromJSON(previousState); } } redo() { if (this.redoStack.length > 0) { const currentState = this.saveToJSON(); this.undoStack.push(currentState); const nextState = this.redoStack.pop(); this.loadFromJSON(nextState); } } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtWireframeDiagram, deps: [], target: i0.ɵɵFactoryTarget.Component }); } static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: IxtWireframeDiagram, selector: "ixt-wireframe", viewQueries: [{ propertyName: "mainCanvas", first: true, predicate: ["mainCanvas"], descendants: true, static: true }, { propertyName: "topRuler", first: true, predicate: ["topRuler"], descendants: true, static: true }, { propertyName: "leftRuler", first: true, predicate: ["leftRuler"], descendants: true, static: true }], ngImport: i0, template: ` <div class="wireframe-container"> <!-- Left Toolbar --> <div class="toolbar"> <div class="shape-palette"> <div *ngFor="let shape of availableShapes" class="shape-item" draggable="true" (dragstart)="onDragStart($event, shape)"> {{ shape.name }} </div> </div> </div> <!-- Main Canvas Area --> <div class="canvas-container"> <!-- Top Ruler --> <canvas #topRuler class="ruler top-ruler"></canvas> <!-- Left Ruler --> <canvas #leftRuler class="ruler left-ruler"></canvas> <!-- Main Canvas --> <div class="canvas-wrapper"> <canvas #mainCanvas (mousedown)="onMouseDown($event)" (mousemove)="onMouseMove($event)" (mouseup)="onMouseUp($event)" (wheel)="onWheel($event)"> </canvas> </div> </div> <!-- Controls --> <div class="controls"> <button (click)="toggleGrid()">Toggle Grid</button> <button (click)="toggleSnap()">Toggle Snap</button> <button (click)="resetZoom()">Reset Zoom</button> <div class="alignment-controls"> <button (click)="alignSelected('left')">Align Left</button> <button (click)="alignSelected('center')">Align Center</button> <button (click)="alignSelected('right')">Align Right</button> <button (click)="alignSelected('top')">Align Top</button> <button (click)="alignSelected('middle')">Align Middle</button> <button (click)="alignSelected('bottom')">Align Bottom</button> </div> </div> </div> `, isInline: true, styles: [".wireframe-container{display:flex;height:100%}.toolbar{width:200px;border-right:1px solid #ccc;padding:10px}.canvas-container{flex:1;position:relative}.ruler{position:absolute;background:#f5f5f5}.top-ruler{height:20px;left:20px;right:0}.left-ruler{width:20px;top:20px;bottom:0}.canvas-wrapper{position:absolute;inset:20px 0 0 20px;overflow:hidden}.controls{position:absolute;top:10px;right:10px;z-index:100}.shape-item{padding:8px;margin:4px;border:1px solid #ccc;cursor:move}\n"], dependencies: [{ kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtWireframeDiagram, decorators: [{ type: Component, args: [{ selector: 'ixt-wireframe', template: ` <div class="wireframe-container"> <!-- Left Toolbar --> <div class="toolbar"> <div class="shape-palette"> <div *ngFor="let shape of availableShapes" class="shape-item" draggable="true" (dragstart)="onDragStart($event, shape)"> {{ shape.name }} </div> </div> </div> <!-- Main Canvas Area --> <div class="canvas-container"> <!-- Top Ruler --> <canvas #topRuler class="ruler top-ruler"></canvas> <!-- Left Ruler --> <canvas #leftRuler class="ruler left-ruler"></canvas> <!-- Main Canvas --> <div class="canvas-wrapper"> <canvas #mainCanvas (mousedown)="onMouseDown($event)" (mousemove)="onMouseMove($event)" (mouseup)="onMouseUp($event)" (wheel)="onWheel($event)"> </canvas> </div> </div> <!-- Controls --> <div class="controls"> <button (click)="toggleGrid()">Toggle Grid</button> <button (click)="toggleSnap()">Toggle Snap</button> <button (click)="resetZoom()">Reset Zoom</button> <div class="alignment-controls"> <button (click)="alignSelected('left')">Align Left</button> <button (click)="alignSelected('center')">Align Center</button> <button (click)="alignSelected('right')">Align Right</button> <button (click)="alignSelected('top')">Align Top</button> <button (click)="alignSelected('middle')">Align Middle</button> <button (click)="alignSelected('bottom')">Align Bottom</button> </div> </div> </div> `, styles: [".wireframe-container{display:flex;height:100%}.toolbar{width:200px;border-right:1px solid #ccc;padding:10px}.canvas-container{flex:1;position:relative}.ruler{position:absolute;background:#f5f5f5}.top-ruler{height:20px;left:20px;right:0}.left-ruler{width:20px;top:20px;bottom:0}.canvas-wrapper{position:absolute;inset:20px 0 0 20px;overflow:hidden}.controls{position:absolute;top:10px;right:10px;z-index:100}.shape-item{padding:8px;margin:4px;border:1px solid #ccc;cursor:move}\n"] }] }], propDecorators: { mainCanvas: [{ type: ViewChild, args: ['mainCanvas', { static: true }] }], topRuler: [{ type: ViewChild, args: ['topRuler', { static: true }] }], leftRuler: [{ type: ViewChild, args: ['leftRuler', { static: true }] }] } }); //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXh0LXdpcmVmcmFtZS5kaWFncmFtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvaXh0LWRpYWdyYW0vdHlwZXMvd2lyZWZyYW1lL2l4dC13aXJlZnJhbWUuZGlhZ3JhbS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSwyQkFBMkI7QUFDM0IsT0FBTyxFQUFFLFNBQVMsRUFBc0IsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7QUFnSXpFLE1BQU0sT0FBTyxtQkFBbUI7SUE3R2hDO1FBbUhVLFdBQU0sR0FBcUIsRUFBRSxDQUFDO1FBQzlCLG1CQUFjLEdBQWdCLElBQUksR0FBRyxFQUFFLENBQUM7UUFDeEMsZUFBVSxHQUFHLEtBQUssQ0FBQztRQUNuQixjQUFTLEdBQVUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQztRQUNsQyxlQUFVLEdBQVUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQztRQUNuQyxVQUFLLEdBQUcsQ0FBQyxDQUFDO1FBQ1YsY0FBUyxHQUFVLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUM7UUFDbEMsYUFBUSxHQUFHLElBQUksQ0FBQztRQUNoQixnQkFBVyxHQUFHLEtBQUssQ0FBQztRQUNwQixhQUFRLEdBQUcsRUFBRSxDQUFDO1FBRXRCLG9CQUFlLEdBQUc7WUFDaEIsRUFBRSxJQUFJLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxRQUFRLEVBQUUsWUFBWSxFQUFFLEdBQUcsRUFBRSxhQUFhLEVBQUUsRUFBRSxFQUFFO1lBQ3hFLEVBQUUsSUFBSSxFQUFFLFlBQVksRUFBRSxJQUFJLEVBQUUsV0FBVyxFQUFFLFlBQVksRUFBRSxHQUFHLEVBQUUsYUFBYSxFQUFFLEVBQUUsRUFBRTtZQUMvRSxFQUFFLElBQUksRUFBRSxV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QUFNLFlBQVksR0FBRyxJQUFJLENBQUMsVUFBVSxFQUFFLENBQUM7WUFDdkMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7WUFDbEMsTUFBTSxTQUFTLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLEVBQUcsQ0FBQztZQUN4QyxJQUFJLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1NBQzlCO0lBQ0gsQ0FBQzsrR0FsZVUsbUJBQW1CO21HQUFuQixtQkFBbUIseVhBM0dwQjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBZ0RUOzs0RkEyRFUsbUJBQW1CO2tCQTdHL0IsU0FBUzsrQkFDRSxlQUFlLFlBQ2Y7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQWdEVDs4QkE0RDBDLFVBQVU7c0JBQXBELFNBQVM7dUJBQUMsWUFBWSxFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRTtnQkFDQSxRQUFRO3NCQUFoRCxTQUFTO3VCQUFDLFVBQVUsRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUU7Z0JBQ0csU0FBUztzQkFBbEQsU0FBUzt1QkFBQyxXQUFXLEVBQUUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFIiwic291cmNlc0NvbnRlbnQiOlsiLy8gaXh0LXdpcmVmcmFtZS1kaWFncmFtLnRzXHJcbmltcG9ydCB7IENvbXBvbmVudCwgRWxlbWVudFJlZiwgT25Jbml0LCBWaWV3Q2hpbGQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbmludGVyZmFjZSBXaXJlZnJhbWVTaGFwZSB7XHJcbiAgaWQ6IHN0cmluZztcclxuICB0eXBlOiBzdHJpbmc7XHJcbiAgeDogbnVtYmVyO1xyXG4gIHk6IG51bWJlcjtcclxuICB3aWR0aDogbnVtYmVyO1xyXG4gIGhlaWdodDogbnVtYmVyO1xyXG4gIHRleHQ/OiBzdHJpbmc7XHJcbiAgbGF5ZXI6IG51bWJlcjtcclxuICBwcm9wZXJ0aWVzPzogYW55O1xyXG59XHJcblxyXG5pbnRlcmZhY2UgUG9pbnQge1xyXG4gIHg6IG51bWJlcjtcclxuICB5OiBudW1iZXI7XHJcbn1cclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnaXh0LXdpcmVmcmFtZScsXHJcbiAgdGVtcGxhdGU6IGBcclxuICAgIDxkaXYgY2xhc3M9XCJ3aXJlZnJhbWUtY29udGFpbmVyXCI+XHJcbiAgICAgIDwhLS0gTGVmdCBUb29sYmFyIC0tPlxyXG4gICAgICA8ZGl2IGNsYXNzPVwidG9vbGJhclwiPlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJzaGFwZS1wYWxldHRlXCI+XHJcbiAgICAgICAgICA8ZGl2ICpuZ0Zvcj1cImxldCBzaGFwZSBvZiBhdmFpbGFibGVTaGFwZXNcIiBcclxuICAgICAgICAgICAgICAgY2xhc3M9XCJzaGFwZS1pdGVtXCJcclxuICAgICAgICAgICAgICAgZHJhZ2dhYmxlPVwidHJ1ZVwiXHJcbiAgICAgICAgICAgICAgIChkcmFnc3RhcnQpPVwib25EcmFnU3RhcnQoJGV2ZW50LCBzaGFwZSlcIj5cclxuICAgICAgICAgICAge3sgc2hhcGUubmFtZSB9fVxyXG4gICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgPCEtLSBNYWluIENhbnZhcyBBcmVhIC0tPlxyXG4gICAgICA8ZGl2IGNsYXNzPVwiY2FudmFzLWNvbnRhaW5lclwiPlxyXG4gICAgICAgIDwhLS0gVG9wIFJ1bGVyIC0tPlxyXG4gICAgICAgIDxjYW52YXMgI3RvcFJ1bGVyIGNsYXNzPVwicnVsZXIgdG9wLXJ1bGVyXCI+PC9jYW52YXM+XHJcbiAgICAgICAgXHJcbiAgICAgICAgPCEtLSBMZWZ0IFJ1bGVyIC0tPlxyXG4gICAgICAgIDxjYW52YXMgI2xlZnRSdWxlciBjbGFzcz1cInJ1bGVyIGxlZnQtcnVsZXJcIj48L2NhbnZhcz5cclxuICAgICAgICBcclxuICAgICAgICA8IS0tIE1haW4gQ2FudmFzIC0tPlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJjYW52YXMtd3JhcHBlclwiPlxyXG4gICAgICAgICAgPGNhbnZhcyAjbWFpbkNhbnZhc1xyXG4gICAgICAgICAgICAgICAgICAobW91c2Vkb3duKT1cIm9uTW91c2VEb3duKCRldmVudClcIlxyXG4gICAgICAgICAgICAgICAgICAobW91c2Vtb3ZlKT1cIm9uTW91c2VNb3ZlKCRldmVudClcIlxyXG4gICAgICAgICAgICAgICAgICAobW91c2V1cCk9XCJvbk1vdXNlVXAoJGV2ZW50KVwiXHJcbiAgICAgICAgICAgICAgICAgICh3aGVlbCk9XCJvbldoZWVsKCRldmVudClcIj5cclxuICAgICAgICAgIDwvY2FudmFzPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L2Rpdj5cclxuXHJcbiAgICAgIDwhLS0gQ29udHJvbHMgLS0+XHJcbiAgICAgIDxkaXYgY2xhc3M9XCJjb250cm9sc1wiPlxyXG4gICAgICAgIDxidXR0b24gKGNsaWNrKT1cInRvZ2dsZUdyaWQoKVwiPlRvZ2dsZSBHcmlkPC9idXR0b24+XHJcbiAgICAgICAgPGJ1dHRvbiAoY2xpY2spPVwidG9nZ2xlU25hcCgpXCI+VG9nZ2xlIFNuYXA8L2J1dHRvbj5cclxuICAgICAgICA8YnV0dG9uIChjbGljayk9XCJyZXNldFpvb20oKVwiPlJlc2V0IFpvb208L2J1dHRvbj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwiYWxpZ25tZW50LWNvbnRyb2xzXCI+XHJcbiAgICAgICAgICA8YnV0dG9uIChjbGljayk9XCJhbGlnblNlbGVjdGVkKCdsZWZ0JylcIj5BbGlnbiBMZWZ0PC9idXR0b24+XHJcbiAgICAgICAgICA8YnV0dG9uIChjbGljayk9XCJhbGlnblNlbGVjdGVkKCdjZW50ZXInKVwiPkFsaWduIENlbnRlcjwvYnV0dG9uPlxyXG4gICAgICAgICAgPGJ1dHRvbiAoY2xpY2spPVwiYWxpZ25TZWxlY3RlZCgncmlnaHQnKVwiPkFsaWduIFJpZ2h0PC9idXR0b24+XHJcbiAgICAgICAgICA8YnV0dG9uIChjbGljayk9XCJhbGlnblNlbGVjdGVkKCd0b3AnKVwiPkFsaWduIFRvcDwvYnV0dG9uPlxyXG4gICAgICAgICAgPGJ1dHRvbiAoY2xpY2spPVwiYWxpZ25TZWxlY3RlZCgnbWlkZGxlJylcIj5BbGlnbiBNaWRkbGU8L2J1dHRvbj5cclxuICAgICAgICAgIDxidXR0b24gKGNsaWNrKT1cImFsaWduU2VsZWN0ZWQoJ2JvdHRvbScpXCI+QWxpZ24gQm90dG9tPC9idXR0b24+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgIDwvZGl2PlxyXG4gICAgPC9kaXY+XHJcbiAgYCxcclxuICBzdHlsZXM6IFtgXHJcbiAgICAud2lyZWZyYW1lLWNvbnRhaW5lciB7XHJcbiAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgIGhlaWdodDogMTAwJTtcclxuICAgIH1cclxuXHJcbiAgICAudG9vbGJhciB7XHJcbiAgICAgIHdpZHRoOiAyMDBweDtcclxuICAgICAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgI2NjYztcclxuICAgICAgcGFkZGluZzogMTBweDtcclxuICAgIH1cclxuXHJcbiAgICAuY2FudmFzLWNvbnRhaW5lciB7XHJcbiAgICAgIGZsZXg6IDE7XHJcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIH1cclxuXHJcbiAgICAucnVsZXIge1xyXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgIGJhY2tncm91bmQ6ICNmNWY1ZjU7XHJcbiAgICB9XHJcblxyXG4gICAgLnRvcC1ydWxlciB7XHJcbiAgICAgIGhlaWdodDogMjBweDtcclxuICAgICAgbGVmdDogMjBweDtcclxuICAgICAgcmlnaHQ6IDA7XHJcbiAgICB9XHJcblxyXG4gICAgLmxlZnQtcnVsZXIge1xyXG4gICAgICB3aWR0aDogMjBweDtcclxuICAgICAgdG9wOiAyMHB4O1xyXG4gICAgICBib3R0b206IDA7XHJcbiAgICB9XHJcblxyXG4gICAgLmNhbnZhcy13cmFwcGVyIHtcclxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICB0b3A6IDIwcHg7XHJcbiAgICAgIGxlZnQ6IDIwcHg7XHJcbiAgICAgIHJpZ2h0OiAwO1xyXG4gICAgICBib3R0b206IDA7XHJcbiAgICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICB9XHJcblxyXG4gICAgLmNvbnRyb2xzIHtcclxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICB0b3A6IDEwcHg7XHJcbiAgICAgIHJpZ2h0OiAxMHB4O1xyXG4gICAgICB6LWluZGV4OiAxMDA7XHJcbiAgICB9XHJcblxyXG4gICAgLnNoYXBlLWl0ZW0ge1xyXG4gICAgICBwYWRkaW5nOiA4cHg7XHJcbiAgICAgIG1hcmdpbjogNHB4O1xyXG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xyXG4gICAgICBjdXJzb3I6IG1vdmU7XHJcbiAgICB9XHJcbiAgYF1cclxufSlcclxuZXhwb3J0IGNsYXNzIEl4dFdpcmVmcmFtZURpYWdyYW0gaW1wbGVtZW50cyBPbkluaXQge1xyXG4gIEBWaWV3Q2hpbGQoJ21haW5DYW52YXMnLCB7IHN0YXRpYzogdHJ1ZSB9KSBtYWluQ2FudmFzITogRWxlbWVudFJlZjxIVE1MQ2FudmFzRWxlbWVudD47XHJcbiAgQFZpZXdDaGlsZCgndG9wUnVsZXInLCB7IHN0YXRpYzogdHJ1ZSB9KSB0b3BSdWxlciE6IEVsZW1lbnRSZWY8SFRNTENhbnZhc0VsZW1lbnQ+O1xyXG4gIEBWaWV3Q2hpbGQoJ2xlZnRSdWxlcicsIHsgc3RhdGljOiB0cnVlIH0pIGxlZnRSdWxlciE6IEVsZW1lbnRSZWY8SFRNTENhbnZhc0VsZW1lbnQ+O1xyXG5cclxuICBwcml2YXRlIGN0eCE6IENhbnZhc1JlbmRlcmluZ0NvbnRleHQyRDtcclxuICBwcml2YXRlIHNoYXBlczogV2lyZWZyYW1lU2hhcGVbXSA9IFtdO1xyXG4gIHByaXZhdGUgc2VsZWN0ZWRTaGFwZXM6IFNldDxzdHJpbmc+ID0gbmV3IFNldCgpO1xyXG4gIHByaXZhdGUgaXNEcmFnZ2luZyA9IGZhbHNlO1xyXG4gIHByaXZhdGUgZHJhZ1N0YXJ0OiBQb2ludCA9IHsgeDogMCwgeTogMCB9O1xyXG4gIHByaXZhdGUgZHJhZ09mZnNldDogUG9pbnQgPSB7IHg6IDAsIHk6IDAgfTtcclxuICBwcml2YXRlIHNjYWxlID0gMTtcclxuICBwcml2YXRlIHBhbk9mZnNldDogUG9pbnQgPSB7IHg6IDAsIHk6IDAgfTtcclxuICBwcml2YXRlIHNob3dHcmlkID0gdHJ1ZTtcclxuICBwcml2YXRlIHNuYXBFbmFibGVkID0gZmFsc2U7XHJcbiAgcHJpdmF0ZSBncmlkU2l6ZSA9IDIwO1xyXG5cclxuICBhdmFpbGFibGVTaGFwZXMgPSBbXHJcbiAgICB7IG5hbWU6ICdCdXR0b24nLCB0eXBlOiAnYnV0dG9uJywgZGVmYXVsdFdpZHRoOiAxMDAsIGRlZmF1bHRIZWlnaHQ6IDMwIH0sXHJcbiAgICB7IG5hbWU6ICdUZXh0IEZpZWxkJywgdHlwZTogJ3RleHRmaWVsZCcsIGRlZmF1bHRXaWR0aDogMjAwLCBkZWZhdWx0SGVpZ2h0OiAzMCB9LFxyXG4gICAgeyBuYW1lOiAnQ2hlY2tib3gnLCB0eXBlOiAnY2hlY2tib3gnLCBkZWZhdWx0V2lkdGg6IDIwLCBkZWZhdWx0SGVpZ2h0OiAyMCB9LFxyXG4gICAgeyBuYW1lOiAnUmFkaW8gQnV0dG9uJywgdHlwZTogJ3JhZGlvJywgZGVmYXVsdFdpZHRoOiAyMCwgZGVmYXVsdEhlaWdodDogMjAgfSxcclxuICAgIHsgbmFtZTogJ1NlbGVjdCcsIHR5cGU6ICdzZWxlY3QnLCBkZWZhdWx0V2lkdGg6IDIwMCwgZGVmYXVsdEhlaWdodDogMzAgfSxcclxuICAgIHsgbmFtZTogJ1RhYmxlJywgdHlwZTogJ3RhYmxlJywgZGVmYXVsdFdpZHRoOiA0MDAsIGRlZmF1bHRIZWlnaHQ6IDMwMCB9LFxyXG4gICAgeyBuYW1lOiAnUGFuZWwnLCB0eXBlOiAncGFuZWwnLCBkZWZhdWx0V2lkdGg6IDMwMCwgZGVmYXVsdEhlaWdodDogMjAwIH0sXHJcbiAgICB7IG5hbWU6ICdEaWFsb2cnLCB0eXBlOiAnZGlhbG9nJywgZGVmYXVsdFdpZHRoOiA0MDAsIGRlZmF1bHRIZWlnaHQ6IDMwMCB9LFxyXG4gICAgeyBuYW1lOiAnTWVudScsIHR5cGU6ICdtZW51JywgZGVmYXVsdFdpZHRoOiAxNTAsIGRlZmF1bHRIZWlnaHQ6IDIwMCB9LFxyXG4gICAgeyBuYW1lOiAnVHJlZScsIHR5cGU6ICd0cmVlJywgZGVmYXVsdFdpZHRoOiAyMDAsIGRlZmF1bHRIZWlnaHQ6IDQwMCB9XHJcbiAgXTtcclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICB0aGlzLmluaXRpYWxpemVDYW52YXMoKTtcclxuICAgIHRoaXMuaW5pdGlhbGl6ZVJ1bGVycygpO1xyXG4gICAgdGhpcy5kcmF3KCk7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIGluaXRpYWxpemVDYW52YXMoKSB7XHJcbiAgICBjb25zdCBjYW52YXMgPSB0aGlzLm1haW5DYW52YXMubmF0aXZlRWxlbWVudDtcclxuICAgIHRoaXMuY3R4ID0gY2FudmFzLmdldENvbnRleHQoJzJkJykhO1xyXG4gICAgdGhpcy5yZXNpemVDYW52YXMoKTtcclxuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCAoKSA9PiB0aGlzLnJlc2l6ZUNhbnZhcygpKTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgcmVzaXplQ2FudmFzKCkge1xyXG4gICAgY29uc3QgY2FudmFzID0gdGhpcy5tYWluQ2FudmFzLm5hdGl2ZUVsZW1lbnQ7XHJcbiAgICBjb25zdCBjb250YWluZXIgPSBjYW52YXMucGFyZW50RWxlbWVudCE7XHJcbiAgICBjYW52YXMud2lkdGggPSBjb250YWluZXIuY2xpZW50V2lkdGg7XHJcbiAgICBjYW52YXMuaGVpZ2h0ID0gY29udGFpbmVyLmNsaWVudEhlaWdodDtcclxuICAgIHRoaXMuZHJhdygpO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBpbml0aWFsaXplUnVsZXJzKCkge1xyXG4gICAgLy8gSW5pdGlhbGl6ZSB0b3AgcnVsZXJcclxuICAgIGNvbnN0IHRvcFJ1bGVyID0gdGhpcy50b3BSdWxlci5uYXRpdmVFbGVtZW50O1xyXG4gICAgY29uc3QgdG9wQ3R4ID0gdG9wUnVsZXIuZ2V0Q29udGV4dCgnMmQnKSE7XHJcbiAgICB0b3BSdWxlci53aWR0aCA9IHRoaXMubWFpbkNhbnZhcy5uYXRpdmVFbGVtZW50LndpZHRoO1xyXG4gICAgdG9wUnVsZXIuaGVpZ2h0ID0gMjA7XHJcblxyXG4gICAgLy8gSW5pdGlhbGl6ZSBsZWZ0IHJ1bGVyXHJcbiAgICBjb25zdCBsZWZ0UnVsZXIgPSB0aGlzLmxlZnRSdWxlci5uYXRpdmVFbGVtZW50O1xyXG4gICAgY29uc3QgbGVmdEN0eCA9IGxlZnRSdWxlci5nZXRDb250ZXh0KCcyZCcpITtcclxuICAgIGxlZnRSdWxlci53aWR0aCA9IDIwO1xyXG4gICAgbGVmdFJ1bGVyLmhlaWdodCA9IHRoaXMubWFpbkNhbnZhcy5uYXRpdmVFbGVtZW50LmhlaWdodDtcclxuXHJcbiAgICB0aGlzLmRyYXdSdWxlcnMoKTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgZHJhd1J1bGVycygpIHtcclxuICAgIC8vIERyYXcgdG9wIHJ1bGVyXHJcbiAgICBjb25zdCB0b3BDdHggPSB0aGlzLnRvcFJ1bGVyLm5hdGl2ZUVsZW1lbnQuZ2V0Q29udGV4dCgnMmQnKSE7XHJcbiAgICB0b3BDdHguY2xlYXJSZWN0KDAsIDAsIHRoaXMudG9wUnVsZXIubmF0aXZlRWxlbWVudC53aWR0aCwgdGhpcy50b3BSdWxlci5uYXRpdmVFbGVtZW50LmhlaWdodCk7XHJcblxyXG4gICAgLy8gRHJhdyBsZWZ0IHJ1bGVyXHJcbiAgICBjb25zdCBsZWZ0Q3R4ID0gdGhpcy5sZWZ0UnVsZXIubmF0aXZlRWxlbWVudC5nZXRDb250ZXh0KCcyZCcpITtcclxuICAgIGxlZnRDdHguY2xlYXJSZWN0KDAsIDAsIHRoaXMubGVmdFJ1bGVyLm5hdGl2ZUVsZW1lbnQud2lkdGgsIHRoaXMubGVmdFJ1bGVyLm5hdGl2ZUVsZW1lbnQuaGVpZ2h0KTtcclxuXHJcbiAgICAvLyBEcmF3IG1lYXN1cmVtZW50cyBvbiBydWxlcnNcclxuICAgIC8vIC4uLiAoaW1wbGVtZW50YXRpb24gZm9yIGRyYXdpbmcgcnVsZXIgbWVhc3VyZW1lbnRzKVxyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBkcmF3KCkge1xyXG4gICAgdGhpcy5jdHguY2xlYXJSZWN0KDAsIDAsIHRoaXMubWFpbkNhbnZhcy5uYXRpdmVFbGVtZW50LndpZHRoLCB0aGlzLm1haW5DYW52YXMubmF0aXZlRWxlbWVudC5oZWlnaHQpO1xyXG5cclxuICAgIGlmICh0aGlzLnNob3dHcmlkKSB7XHJcbiAgICAgIHRoaXMuZHJhd0dyaWQoKTtcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLnNoYXBlcy5mb3JFYWNoKHNoYXBlID0+IHRoaXMuZHJhd1NoYXBlKHNoYXBlKSk7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIGRyYXdHcmlkKCkge1xyXG4gICAgY29uc3QgY2FudmFzID0gdGhpcy5tYWluQ2FudmFzLm5hdGl2ZUVsZW1lbnQ7XHJcbiAgICB0aGlzLmN0eC5zdHJva2VTdHlsZSA9ICcjZWVlJztcclxuICAgIHRoaXMuY3R4LmxpbmVXaWR0aCA9IDE7XHJcblxyXG4gICAgLy8gRHJhdyB2ZXJ0aWNhbCBsaW5lc1xyXG4gICAgZm9yIChsZXQgeCA9IDA7IHggPCBjYW52YXMud2lkdGg7IHggKz0gdGhpcy5ncmlkU2l6ZSkge1xyXG4gICAgICB0aGlzLmN0eC5iZWdpblBhdGgoKTtcclxuICAgICAgdGhpcy5jdHgubW92ZVRvKHgsIDApO1xyXG4gICAgICB0aGlzLmN0eC5saW5lVG8oeCwgY2FudmFzLmhlaWdodCk7XHJcbiAgICAgIHRoaXMuY3R4LnN0cm9rZSgpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIERyYXcgaG9yaXpvbnRhbCBsaW5lc1xyXG4gICAgZm9yIChsZXQgeSA9IDA7IHkgPCBjYW52YXMuaGVpZ2h0OyB5ICs9IHRoaXMuZ3JpZFNpemUpIHtcclxuICAgICAgdGhpcy5jdHguYmVnaW5QYXRoKCk7XHJcbiAgICAgIHRoaXMuY3R4Lm1vdmVUbygwLCB5KTtcclxuICAgICAgdGhpcy5jdHgubGluZVRvKGNhbnZhcy53aWR0aCwgeSk7XHJcbiAgICAgIHRoaXMuY3R4LnN0cm9rZSgpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBkcmF3U2hhcGUoc2hhcGU6IFdpcmVmcmFtZVNoYXBlKSB7XHJcbiAgICBjb25zdCBpc1NlbGVjdGVkID0gdGhpcy5zZWxlY3RlZFNoYXBlcy5oYXMoc2hhcGUuaWQpO1xyXG5cclxuICAgIHRoaXMuY3R4LnNhdmUoKTtcclxuICAgIHRoaXMuY3R4LnNjYWxlKHRoaXMuc2NhbGUsIHRoaXMuc2NhbGUpO1xyXG4gICAgdGhpcy5jdHgudHJhbnNsYXRlKHRoaXMucGFuT2Zmc2V0LngsIHRoaXMucGFuT2Zmc2V0LnkpO1xyXG5cclxuICAgIC8vIERyYXcgc2hhcGUgYmFzZWQgb24gdHlwZVxyXG4gICAgc3dpdGNoIChzaGFwZS50eXBlKSB7XHJcbiAgICAgIGNhc2UgJ2J1dHRvbic6XHJcbiAgICAgICAgdGhpcy5kcmF3QnV0dG9uKHNoYXBlLCBpc1NlbGVjdGVkKTtcclxuICAgICAgICBicmVhaztcclxuICAgICAgY2FzZSAndGV4dGZpZWxkJzpcclxuICAgICAgICB0aGlzLmRyYXdUZXh0RmllbGQoc2hhcGUsIGlzU2VsZWN0ZWQpO1xyXG4gICAgICAgIGJyZWFrO1xyXG4gICAgICAvLyAuLi4gKGltcGxlbWVudCBvdGhlciBzaGFwZSBkcmF3aW5nIG1ldGhvZHMpXHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy5jdHgucmVzdG9yZSgpO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBkcmF3QnV0dG9uKHNoYXBlOiBXaXJlZnJhbWVTaGFwZSwgaXNTZWxlY3RlZDogYm9vbGVhbikge1xyXG4gICAgdGhpcy5jdHguZmlsbFN0eWxlID0gJyNmMGYwZjAnO1xyXG4gICAgdGhpcy5jdHguc3Ryb2tlU3R5bGUgPSBpc1NlbGVjdGVkID8gJyMwMDY2ZmYnIDogJyMwMDAnO1xyXG4gICAgdGhpcy5jdHgubGluZVdpZHRoID0gaXNTZWxlY3RlZCA/IDIgOiAxO1xyXG5cclxuICAgIHRoaXMuY3R4LmJlZ2luUGF0aCgpO1xyXG4gICAgdGhpcy5jdHgucm91bmRSZWN0KHNoYXBlLngsIHNoYXBlLnksIHNoYXBlLndpZHRoLCBzaGFwZS5oZWlnaHQsIDUpO1xyXG4gICAgdGhpcy5jdHguZmlsbCgpO1xyXG4gICAgdGhpcy5jdHguc3Ryb2tlKCk7XHJcblxyXG4gICAgaWYgKHNoYXBlLnRleHQpIHtcclxuICAgICAgdGhpcy5jdHguZmlsbFN0eWxlID0gJyMwMDAnO1xyXG4gICAgICB0aGlzLmN0eC50ZXh0QWxpZ24gPSAnY2VudGVyJztcclxuICAgICAgdGhpcy5jdHgudGV4dEJhc2VsaW5lID0gJ21pZGRsZSc7XHJcbiAgICAgIHRoaXMuY3R4LmZpbGxUZXh0KHNoYXBlLnRleHQsIHNoYXBlLnggKyBzaGFwZS53aWR0aCAvIDIsIHNoYXBlLnkgKyBzaGFwZS5oZWlnaHQgLyAyKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHByaXZhdGUgZHJhd1RleHRGaWVsZChzaGFwZTogV2lyZWZyYW1lU2hhcGUsIGlzU2VsZWN0ZWQ6IGJvb2xlYW4pIHtcclxuICAgIHRoaXMuY3R4LmZpbGxTdHlsZSA9ICcjZmZmJztcclxuICAgIHRoaXMuY3R4LnN0cm9rZVN0eWxlID0gaXNTZWxlY3RlZCA/ICcjMDA2NmZmJyA6ICcjMDAwJztcclxuICAgIHRoaXMuY3R4LmxpbmVXaWR0aCA9IGlzU2VsZWN0ZWQgPyAyIDogMTtcclxuXHJcbiAgICB0aGlzLmN0eC5iZWdpblBhdGgoKTtcclxuICAgIHRoaXMuY3R4LnJlY3Qoc2hhcGUueCwgc2hhcGUueSwgc2hhcGUud2lkdGgsIHNoYXBlLmhlaWdodCk7XHJcbiAgICB0aGlzLmN0eC5maWxsKCk7XHJcbiAgICB0aGlzLmN0eC5zdHJva2UoKTtcclxuXHJcbiAgICBpZiAoc2hhcGUudGV4dCkge1xyXG4gICAgICB0aGlzLmN0eC5maWxsU3R5bGUgPSAnIzAwMCc7XHJcbiAgICAgIHRoaXMuY3R4LnRleHRBbGlnbiA9ICdsZWZ0JztcclxuICAgICAgdGhpcy5jdHgudGV4dEJhc2VsaW5lID0gJ21pZGRsZSc7XHJcbiAgICAgIHRoaXMuY3R4LmZpbGxUZXh0KHNoYXBlLnRleHQsIHNoYXBlLnggKyA1LCBzaGFwZS55ICsgc2hhcGUuaGVpZ2h0IC8gMik7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBvbkRyYWdTdGFydChldmVudDogRHJhZ0V2ZW50LCBzaGFwZTogYW55KSB7XHJcbiAgICBldmVudC5kYXRhVHJhbnNmZXI/LnNldERhdGEoJ3RleHQvcGxhaW4nLCBzaGFwZS50eXBlKTtcclxuICB9XHJcblxyXG4gIG9uTW91c2VEb3duKGV2ZW50OiBNb3VzZUV2ZW50KSB7XHJcbiAgICBjb25zdCBwb3MgPSB0aGlzLmdldENhbnZhc1Bvc2l0aW9uKGV2ZW50KTtcclxuICAgIHRoaXMuaXNEcmFnZ2luZyA9IHRydWU7XHJcbiAgICB0aGlzLmRyYWdTdGFydCA9IHBvcztcclxuXHJcbiAgICAvLyBDaGVjayBpZiBjbGlja2VkIG9uIGEgc2hhcGVcclxuICAgIGNvbnN0IGNsaWNrZWRTaGFwZSA9IHRoaXMuZmluZFNoYXBlQXRQb3NpdGlvbihwb3MpO1xyXG4gICAgaWYgKGNsaWNrZWRTaGFwZSkge1xyXG4gICAgICBpZiAoIWV2ZW50LmN0cmxLZXkpIHtcclxuICAgICAgICB0aGlzLnNlbGVjdGVkU2hhcGVzLmNsZWFyKCk7XHJcbiAgICAgIH1cclxuICAgICAgdGhpcy5zZWxlY3RlZFNoYXBlcy5hZGQoY2xpY2tlZFNoYXBlLmlkKTtcclxuICAgICAgdGhpcy5kcmFnT2Zmc2V0ID0ge1xyXG4gICAgICAgIHg6IHBvcy54IC0gY2xpY2tlZFNoYXBlLngsXHJcbiAgICAgICAgeTogcG9zLnkgLSBjbGlja2VkU2hhcGUueVxyXG4gICAgICB9O1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5zZWxlY3RlZFNoYXBlcy5jbGVhcigpO1xyXG4gICAgfVxyXG5cclxuICAgIHRoaXMuZHJhdygpO1xyXG4gIH1cclxuXHJcbiAgb25Nb3VzZU1vdmUoZXZlbnQ6IE1vdXNlRXZlbnQpIHtcclxuICAgIGlmICghdGhpcy5pc0RyYWdnaW5nKSByZXR1cm47XHJcblxyXG4gICAgY29uc3QgcG9zID0gdGhpcy5nZXRDYW52YXNQb3NpdGlvbihldmVudCk7XHJcbiAgICBjb25zdCBkeCA9IHBvcy54IC0gdGhpcy5kcmFnU3RhcnQueDtcclxuICAgIGNvbnN0IGR5ID0gcG9zLnkgLSB0aGlzLmRyYWdTdGFydC55O1xyXG5cclxuICAgIGlmICh0aGlzLnNlbGVjdGVkU2hhcGVzLnNpemUgPiAwKSB7XHJcbiAgICAgIHRoaXMuc2hhcGVzLmZvckVhY2goc2hhcGUgPT4ge1xyXG4gICAgICAgIGlmICh0aGlzLnNlbGVjdGVkU2hhcGVzLmhhcyhzaGFwZS5pZCkpIHtcclxuICAgICAgICAgIHNoYXBlLnggKz0gZHg7XHJcbiAgICAgICAgICBzaGFwZS55ICs9IGR5O1xyXG5cclxuICAgICAgICAgIGlmICh0aGlzLnNuYXBFbmFibGVkKSB7XHJcbiAgICAgICAgICAgIHNoYXBlLnggPSBNYXRoLnJvdW5kKHNoYXBlLnggLyB0aGlzLmdyaWRTaXplKSAqIHRoaXMuZ3JpZFNpemU7XHJcbiAgICAgICAgICAgIHNoYXBlLnkgPSBNYXRoLnJvdW5kKHNoYXBlLnkgLyB0aGlzLmdyaWRTaXplKSAqIHRoaXMuZ3JpZFNpemU7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIC8vIFBhbiB0aGUgY2FudmFzXHJcbiAgICAgIHRoaXMucGFuT2Zmc2V0LnggKz0gZHg7XHJcbiAgICAgIHRoaXMucGFuT2Zmc2V0LnkgKz0gZHk7XHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy5kcmFnU3RhcnQgPSBwb3M7XHJcbiAgICB0aGlzLmRyYXcoKTtcclxuICB9XHJcblxyXG4gIG9uTW91c2VVcChfZXZlbnQ6IE1vdXNlRXZlbnQpIHsgIC8vIEFkZCB1bmRlcnNjb3JlIHRvIGluZGljYXRlIHVudXNlZCBwYXJhbWV0ZXJcclxuICAgIHRoaXMuaXNEcmFnZ2luZyA9IGZhbHNlO1xyXG4gIH1cclxuXHJcbiAgb25XaGVlbChldmVudDogV2hlZWxFdmVudCkge1xyXG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgIGNvbnN0IHBvcyA9IHRoaXMuZ2V0Q2FudmFzUG9zaXRpb24oZXZlbnQpO1xyXG5cclxuICAgIC8vIENhbGN1bGF0ZSB6b29tXHJcbiAgICBjb25zdCBkZWx0YSA9IGV2ZW50LmRlbHRhWSA+IDAgPyAwLjkgOiAxLjE7XHJcbiAgICBjb25zdCBuZXdTY2FsZSA9IHRoaXMuc2NhbGUgKiBkZWx0YTtcclxuXHJcbiAgICAvLyBMaW1pdCB6b29tIHJhbmdlXHJcbiAgICBpZiAobmV3U2NhbGUgPj0gMC4xICYmIG5ld1NjYWxlIDw9IDUpIHtcclxuICAgICAgdGhpcy5zY2FsZSA9IG5ld1NjYWxlO1xyXG5cclxuICAgICAgLy8gQWRqdXN0IHBhbiBvZmZzZXQgdG8gem9vbSB0b3dhcmRzIG1vdXNlIHBvc2l0aW9uXHJcbiAgICAgIHRoaXMucGFuT2Zmc2V0LnggPSBwb3MueCAtIChwb3MueCAtIHRoaXMucGFuT2Zmc2V0LngpICogZGVsdGE7XHJcbiAgICAgIHRoaXMucGFuT2Zmc2V0LnkgPSBwb3MueSAtIChwb3MueSAtIHRoaXMucGFuT2Zmc2V0LnkpICogZGVsdGE7XHJcblxyXG4gICAgICB0aGlzLmRyYXcoKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHByaXZhdGUgZ2V0Q2FudmFzUG9zaXRpb24oZXZlbnQ6IE1vdXNlRXZlbnQpOiBQb2ludCB7XHJcbiAgICBjb25zdCByZWN0ID0gdGhpcy5tYWluQ2FudmFzLm5hdGl2ZUVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICB4OiAoZXZlbnQuY2xpZW50WCAtIHJlY3QubGVmdCkgLyB0aGlzLnNjYWxlIC0gdGhpcy5wYW5PZmZzZXQueCxcclxuICAgICAgeTogKGV2ZW50LmNsaWVudFkgLSByZWN0LnRvcCkgLyB0aGlzLnNjYWxlIC0gdGhpcy5wYW5PZmZzZXQueVxyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgZmluZFNoYXBlQXRQb3NpdGlvbihwb3M6IFBvaW50KTogV2lyZWZyYW1lU2hhcGUgfCBudWxsIHtcclxuICAgIC8vIFNlYXJjaCBzaGFwZXMgaW4gcmV2ZXJzZSBvcmRlciB0byBmaW5kIHRvcC1tb3N0IHNoYXBlIGZpcnN0XHJcbiAgICBmb3IgKGxldCBpID0gdGhpcy5zaGFwZXMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHtcclxuICAgICAgY29uc3Qgc2hhcGUgPSB0aGlzLnNoYXBlc1tpXTtcclxuICAgICAgaWYgKHBvcy54ID49IHNoYXBlLnggJiYgcG9zLnggPD0gc2hhcGUueCArIHNoYXBlLndpZHRoICYmXHJcbiAgICAgICAgcG9zLnkgPj0gc2hhcGUueSAmJiBwb3MueSA8PSBzaGFwZS55ICsgc2hhcGUuaGVpZ2h0KSB7XHJcbiAgICAgICAgcmV0dXJuIHNoYXBlO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4gbnVsbDtcclxuICB9XHJcblxyXG4gIHRvZ2dsZUdyaWQoKSB7XHJcbiAgICB0aGlzLnNob3dHcmlkID0gIXRoaXMuc2hvd0dyaWQ7XHJcbiAgICB0aGlzLmRyYXcoKTtcclxuICB9XHJcblxyXG4gIHRvZ2dsZVNuYXAoKSB7XHJcbiAgICB0aGlzLnNuYXBFbmFibGVkID0gIXRoaXMuc25hcEVuYWJsZWQ7XHJcbiAgfVxyXG5cclxuICByZXNldFpvb20oKSB7XHJcbiAgICB0aGlzLnNjYWxlID0gMTtcclxuICAgIHRoaXMucGFuT2Zmc2V0ID0geyB4OiAwLCB5OiAwIH07XHJcbiAgICB0aGlzLmRyYXcoKTtcclxuICB9XHJcblxyXG5cclxuICBhbGlnblNlbGVjdGVkKGFsaWdubWVudDogc3RyaW5nKSB7XHJcbiAgICBpZiAodGhpcy5zZWxlY3RlZFNoYXBlcy5zaXplIDwgMikgcmV0dXJuO1xyXG5cclxuICAgIGNvbnN0IHNlbGVjdGVkU2hhcGVzID0gdGhpcy5zaGFwZXMuZmlsdGVyKHMgPT4gdGhpcy5zZWxlY3RlZFNoYXBlcy5oYXMocy5pZCkpO1xyXG5cclxuICAgIHN3aXRjaCAoYWxpZ25tZW50KSB7XHJcbiAgICAgIGNhc2UgJ2xlZnQnOlxyXG4gICAgICAgIGNvbnN0IGxlZnRNb3N0ID0gTWF0aC5taW4oLi4uc2VsZWN0ZWRTaGFwZXMubWFwKHMgPT4gcy54KSk7XHJcbiAgICAgICAgc2VsZWN0ZWRTaGFwZXMuZm9yRWFjaChzID0+IHMueCA9IGxlZnRNb3N0KTtcclxuICAgICAgICBicmVhaztcclxuICAgICAgY2FzZSAnY2VudGVyJzpcclxuICAgICAgICBjb25zdCBjZW50ZXJYID0gc2VsZWN0ZWRTaGFwZXMucmVkdWNlKChhY2MsIHMpID0+IGFjYyArIHMueCArIHMud2lkdGggLyAyLCAwKSAvIHNlbGVjdGVkU2hhcGVzLmxlbmd0aDtcclxuICAgICAgICBzZWxlY3RlZFNoYXBlcy5mb3JFYWNoKHMgPT4gcy54ID0gY2VudGVyWCAtIHMud2lkdGggLyAyKTtcclxuICAgICAgICBicmVhaztcclxuICAgICAgY2FzZSAncmlnaHQnOlxyXG4gICAgICAgIGNvbnN0IHJpZ2h0TW9zdCA9IE1hdGgubWF4KC4uLnNlbGVjdGVkU2hhcGVzLm1hcChzID0+IHMueCArIHMud2lkdGgpKTtcclxuICAgICAgICBzZWxlY3RlZFNoYXBlcy5mb3JFYWNoKHMgPT4gcy54ID0gcmlnaHRNb3N0IC0gcy53aWR0aCk7XHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICAgIGNhc2UgJ3RvcCc6XHJcbiAgICAgICAgY29uc3QgdG9wTW9zdCA9IE1hdGgubWluKC4uLnNlbGVjdGVkU2hhcGVzLm1hcChzID0+IHMueSkpO1xyXG4gICAgICAgIHNlbGVjdGVkU2hhcGVzLmZvckVhY2gocyA9PiBzLnkgPSB0b3BNb3N0KTtcclxuICAgICAgICBicmVhaztcclxuICAgICAgY2FzZSAnbWlkZGxlJzpcclxuICAgICAgICBjb25zdCBjZW50ZXJZID0gc2VsZWN0ZWRTaGFwZXMucmVkdWNlKChhY2MsIHMpID0+IGFjYyArIHMueSArIHMuaGVpZ2h0IC8gMiwgMCkgLyBzZWxlY3RlZFNoYXBlcy5sZW5ndGg7XHJcbiAgICAgICAgc2VsZWN0ZWRTaGFwZXMuZm9yRWFjaChzID0+IHMueSA9IGNlbnRlclkgLSBzLmhlaWdodCAvIDIpO1xyXG4gICAgICAgIGJyZWFrO1xyXG4gICAgICBjYXNlICdib3R0b20nOlxyXG4gICAgICAgIGNvbnN0IGJvdHRvbU1vc3QgPSBNYXRoLm1heCguLi5zZWxlY3RlZFNoYXBlcy5tYXAocyA9PiBzLnkgKyBzLmhlaWdodCkpO1xyXG4gICAgICAgIHNlbGVjdGVkU2hhcGVzLmZvckVhY2gocyA9PiBzLnkgPSBib3R0b21Nb3N0IC0gcy5oZWlnaHQpO1xyXG4gICAgICAgIGJyZWFrO1xyXG4gICAgfVxyXG5cclxuICAgIHRoaXMuZHJhdygpO1xyXG4gIH1cclxuXHJcbiAgLy8gQWRkIHNoYXBlIHdoZW4gZHJvcHBlZCBmcm9tIHBhbGV0dGVcclxuICBvbkRyb3AoZXZlbnQ6IERyYWdFdmVudCkge1xyXG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgIGNvbnN0IHNoYXBlVHlwZSA9IGV2ZW50LmRhdGFUcmFuc2Zlcj8uZ2V0RGF0YSgndGV4dC9wbGFpbicpO1xyXG4gICAgY29uc3QgcG9zID0gdGhpcy5nZXRDYW52YXNQb3NpdGlvbihldmVudCBhcyB1bmtub3duIGFzIE1vdXNlRXZlbnQpO1xyXG5cclxuICAgIGlmIChzaGFwZVR5cGUpIHtcclxuICAgICAgY29uc3QgdGVtcGxhdGUgPSB0aGlzLmF2YWlsYWJsZVNoYXBlcy5maW5kKHMgPT4gcy50eXBlID09PSBzaGFwZVR5cGUpO1xyXG4gICAgICBpZiAodGVtcGxhdGUpIHtcclxuICAgICAgICBjb25zdCBuZXdTaGFwZTogV2lyZWZyYW1lU2hhcGUgPSB7XHJcbiAgICAgICAgICBpZDogYHNoYXBlLSR7RGF0ZS5ub3coKX1gLFxyXG4gICAgICAgICAgdHlwZTogc2hhcGVUeXBlLFxyXG4gICAgICAgICAgeDogcG9zLngsXHJcbiAgICAgICAgICB5OiBwb3MueSxcclxuICAgICAgICAgIHdpZHRoOiB0ZW1wbGF0ZS5kZWZhdWx0V2lkdGgsXHJcbiAgICAgICAgICBoZWlnaHQ6IHRlbXBsYXRlLmRlZmF1bHRIZWlnaHQsXHJcbiAgICAgICAgICB0ZXh0OiAnJyxcclxuICAgICAgICAgIGxheWVyOiB0aGlzLnNoYXBlcy5sZW5ndGgsXHJcbiAgICAgICAgICBwcm9wZXJ0aWVzOiB7fVxyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIHRoaXMuc2hhcGVzLnB1c2gobmV3U2hhcGUpO1xyXG4gICAgICAgIHRoaXMuc2VsZWN0ZWRTaGFwZXMuY2xlYXIoKTtcclxuICAgICAgICB0aGlzLnNlbGVjdGVkU2hhcGVzLmFkZChuZXdTaGFwZS5pZCk7XHJcbiAgICAgICAgdGhpcy5kcmF3KCk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8vIEhhbmRsZSB0ZXh0IGVkaXRpbmcgZm9yIHNoYXBlc1xyXG4gIG9uRG91YmxlQ2xpY2soZXZlbnQ6IE1vdXNlRXZlbnQpIHtcclxuICAgIGNvbnN0IHBvcyA9IHRoaXMuZ2V0Q2FudmFzUG9zaXRpb24oZXZlbnQpO1xyXG4gICAgY29uc3Qgc2hhcGUgPSB0aGlzLmZpbmRTaGFwZUF0UG9zaXRpb24ocG9zKTtcclxuXHJcbiAgICBpZiAoc2hhcGUpIHtcclxuICAgICAgY29uc3QgdGV4dCA9IHByb21wdCgnRW50ZXIgdGV4dDonLCBzaGFwZS50ZXh0KTtcclxuICAgICAgaWYgKHRleHQgIT09IG51bGwpIHtcclxuICAgICAgICBzaGFwZS50ZXh0ID0gdGV4dDtcclxuICAgICAgICB0aGlzLmRyYXcoKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLy8gUmVzaXplIHNlbGVjdGVkIHNoYXBlc1xyXG4gIHByaXZhdGUgaW5pdGlhbGl6ZVJlc2l6ZUhhbmRsZXMoKSB7XHJcbiAgICBjb25zdCBoYW5kbGVTaXplID0gODtcclxuICAgIGNvbnN0IGhhbmRsZXMgPSBbXHJcbiAgICAgIHsgY3Vyc29yOiAnbnctcmVzaXplJywgeDogMCwgeTogMCB9LFxyXG4gICAgICB7IGN1cnNvcjogJ24tcmVzaXplJywgeDogMC41LCB5OiAwIH0sXHJcbiAgICAgIHsgY3Vyc29yOiAnbmUtcmVzaXplJywgeDogMSwgeTogMCB9LFxyXG4gICAgICB7IGN1cnNvcjogJ3ctcmVzaXplJywgeDogMCwgeTogMC41IH0sXHJcbiAgICAgIHsgY3Vyc29yOiAnZS1yZXNpemUnLCB4OiAxLCB5OiAwLjUgfSxcclxuICAgICAgeyBjdXJzb3I6ICdzdy1yZXNpemUnLCB4OiAwLCB5OiAxIH0sXHJcbiAgICAgIHsgY3Vyc29yOiAncy1yZXNpemUnLCB4OiAwLjUsIHk6IDEgfSxcclxuICAgICAgeyBjdXJzb3I6ICdzZS1yZXNpemUnLCB4OiAxLCB5OiAxIH1cclxuICAgIF07XHJcblxyXG4gICAgdGhpcy5zZWxlY3RlZFNoYXBlcy5mb3JFYWNoKGlkID0+IHtcclxuICAgICAgY29uc3Qgc2hhcGUgPSB0aGlzLnNoYXBlcy5maW5kKHMgPT4gcy5pZCA9PT0gaWQpO1xyXG4gICAgICBpZiAoc2hhcGUpIHtcclxuICAgICAgICBoYW5kbGVzLmZvckVhY2goaGFuZGxlID0+IHtcclxuICAgICAgICAgIGNvbnN0IHggPSBzaGFwZS54ICsgc2hhcGUud2lkdGggKiBoYW5kbGUueCAtIGhhbmRsZVNpemUgLyAyO1xyXG4gICAgICAgICAgY29uc3QgeSA9IHNoYXBlLnkgKyBzaGFwZS5oZWlnaHQgKiBoYW5kbGUueSAtIGhhbmRsZVNpemUgLyAyO1xyXG5cclxuICAgICAgICAgIHRoaXMuY3R4LmZpbGxTdHlsZSA9ICcjZmZmJztcclxuICAgICAgICAgIHRoaXMuY3R4LnN0cm9rZVN0eWxlID0gJyMwMDY2ZmYnO1xyXG4gICAgICAgICAgdGhpcy5jdHguZmlsbFJlY3QoeCwgeSwgaGFuZGxlU2l6ZSwgaGFuZGxlU2l6ZSk7XHJcbiAgICAgICAgICB0aGlzLmN0eC5zdHJva2VSZWN0KHgsIHksIGhhbmRsZVNpemUsIGhhbmRsZVNpemUpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIC8vIExheWVyIG1hbmFnZW1lbnRcclxuICBicmluZ1RvRnJvbnQoKSB7XHJcbiAgICBpZiAodGhpcy5zZWxlY3RlZFNoYXBlcy5zaXplID09PSAwKSByZXR1cm47XHJcblxyXG4gICAgY29uc3QgbWF4TGF5ZXIgPSBNYXRoLm1heCguLi50aGlzLnNoYXBlcy5tYXAocyA9PiBzLmxheWVyKSk7XHJcbiAgICB0aGlzLnNoYXBlcy5mb3JFYWNoKHNoYXBlID0+IHtcclxuICAgICAgaWYgKHRoaXMuc2VsZWN0ZWRTaGFwZXMuaGFzKHNoYXBlLmlkKSkge1xyXG4gICAgICAgIHNoYXBlLmxheWVyID0gbWF4TGF5ZXIgKyAxO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuXHJcbiAgICB0aGlzLnNvcnRTaGFwZXNCeUxheWVyKCk7XHJcbiAgICB0aGlzLmRyYXcoKTtcclxuICB9XHJcblxyXG4gIHNlbmRUb0JhY2soKSB7XHJcbiAgICBpZiAodGhpcy5zZWxlY3RlZFNoYXBlcy5zaXplID09PSAwKSByZXR1cm47XHJcblxyXG4gICAgY29uc3QgbWluTGF5ZXIgPSBNYXRoLm1pbiguLi50aGlzLnNoYXBlcy5tYXAocyA9PiBzLmxheWVyKSk7XHJcbiAgICB0aGlzLnNoYXBlcy5mb3JFYWNoKHNoYXBlID0+IHtcclxuICAgICAgaWYgKHRoaXMuc2VsZWN0ZWRTaGFwZXMuaGFzKHNoYXBlLmlkKSkge1xyXG4gICAgICAgIHNoYXBlLmxheWVyID0gbWluTGF5ZXIgLSAxO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuXHJcbiAgICB0aGlzLnNvcnRTaGFwZXNCeUxheWVyKCk7XHJcbiAgICB0aGlzLmRyYXcoKTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgc29ydFNoYXBlc0J5TGF5ZXIoKSB7XHJcbiAgICB0aGlzLnNoYXBlcy5zb3J0KChhLCBiKSA9PiBhLmxheWVyIC0gYi5sYXllcik7XHJcbiAgfVxyXG5cclxuICAvLyBTYXZlIGFuZCBsb2FkIGZ1bmN0aW9uYWxpdHlcclxuICBzYXZlVG9KU09OKCk6IHN0cmluZyB7XHJcbiAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICBzaGFwZXM6IHRoaXMuc2hhcGVzLFxyXG4gICAgICBzY2FsZTogdGhpcy5zY2FsZSxcclxuICAgICAgcGFuT2Zmc2V0OiB0aGlzLnBhbk9mZnNldCxcclxuICAgICAgc2hvd0dyaWQ6IHRoaXMuc2hvd0dyaWQsXHJcbiAgICAgIHNuYXBFbmFibGVkOiB0aGlzLnNuYXBFbmFibGVkXHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIGxvYWRGcm9tSlNPTihqc29uOiBzdHJpbmcpIHtcclxuICAgIHRyeSB7XHJcbiAgICAgIGNvbnN0IGRhdGEgPSBKU09OLnBhcnNlKGpzb24pO1xyXG4gICAgICB0aGlzLnNoYXBlcyA9IGRhdGEuc2hhcGVzO1xyXG4gICAgICB0aGlzLnNjYWxlID0gZGF0YS5zY2FsZTtcclxuICAgICAgdGhpcy5wYW5PZmZzZXQgPSBkYXRhLnBhbk9mZnNldDtcclxuICAgICAgdGhpcy5zaG93R3JpZCA9IGRhdGEuc2hvd0dyaWQ7XHJcbiAgICAgIHRoaXMuc25hcEVuYWJsZWQgPSBkYXRhLnNuYXBFbmFibGVkO1xyXG4gICAgICB0aGlzLnNlbGVjdGVkU2hhcGVzLmNsZWFyKCk7XHJcbiAgICAgIHRoaXMuZHJhdygpO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgbG9hZGluZyB3aXJlZnJhbWU6JywgZXJyb3IpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLy8gRXhwb3J0IGZ1bmN0aW9uYWxpdHlcclxuICBleHBvcnRBc1BORygpOiBzdHJpbmcge1xyXG4gICAgcmV0dXJuIHRoaXMubWFpbkNhbnZhcy5uYXRpdmVFbGVtZW50LnRvRGF0YVVSTCgnaW1hZ2UvcG5nJyk7XHJcbiAgfVxyXG5cclxuICAvLyBVbmRvL1JlZG8gc3VwcG9ydFxyXG4gIHByaXZhdGUgdW5kb1N0YWNrOiBhbnlbXSA9IFtdO1xyXG4gIHByaXZhdGUgcmVkb1N0YWNrOiBhbnlbXSA9IFtdO1xyXG5cclxuICBwcml2YXRlIHNhdmVTdGF0ZSgpIHtcclxuICAgIHRoaXMudW5kb1N0YWNrLnB1c2godGhpcy5zYXZlVG9KU09OKCkpO1xyXG4gICAgdGhpcy5yZWRvU3RhY2sgPSBbXTtcclxuICB9XHJcblxyXG4gIHVuZG8oKSB7XHJcbiAgICBpZiAodGhpcy51bmRvU3RhY2subGVuZ3RoID4gMCkge1xyXG4gICAgICBjb25zdCBjdXJyZW50U3RhdGUgPSB0aGlzLnNhdmVUb0pTT04oKTtcclxuICAgICAgdGhpcy5yZWRvU3RhY2sucHVzaChjdXJyZW50U3RhdGUpO1xyXG4gICAgICBjb25zdCBwcmV2aW91c1N0YXRlID0gdGhpcy51bmRvU3RhY2sucG9wKCkhO1xyXG4gICAgICB0aGlzLmxvYWRGcm9tSlNPTihwcmV2aW91c1N0YXRlKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHJlZG8oKSB7XHJcbiAgICBpZiAodGhpcy5yZWRvU3RhY2subGVuZ3RoID4gMCkge1xyXG4gICAgICBjb25zdCBjdXJyZW50U3RhdGUgPSB0aGlzLnNhdmVUb0pTT04oKTtcclxuICAgICAgdGhpcy51bmRvU3RhY2sucHVzaChjdXJyZW50U3RhdGUpO1xyXG4gICAgICBjb25zdCBuZXh0U3RhdGUgPSB0aGlzLnJlZG9TdGFjay5wb3AoKSE7XHJcbiAgICAgIHRoaXMubG9hZEZyb21KU09OKG5leHRTdGF0ZSk7XHJcbiAgICB9XHJcbiAgfVxyXG59Il19
|       |   |   |   |       --- ixt-wireframe.index.mjs: // ixt-wireframe.index.ts export * from './ixt-wireframe.module'; export * from './ixt-wireframe.diagram'; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXh0LXdpcmVmcmFtZS5pbmRleC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL2l4dC1kaWFncmFtL3R5cGVzL3dpcmVmcmFtZS9peHQtd2lyZWZyYW1lLmluZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHlCQUF5QjtBQUN6QixjQUFjLHdCQUF3QixDQUFDO0FBQ3ZDLGNBQWMseUJBQXlCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpeHQtd2lyZWZyYW1lLmluZGV4LnRzXHJcbmV4cG9ydCAqIGZyb20gJy4vaXh0LXdpcmVmcmFtZS5tb2R1bGUnO1xyXG5leHBvcnQgKiBmcm9tICcuL2l4dC13aXJlZnJhbWUuZGlhZ3JhbSc7XHJcblxyXG4iXX0=
|       |   |   |   |       --- ixt-wireframe.module.mjs: // ixt-wireframe.module.ts import { NgModule } from '@angular/core'; import { CommonModule } from '@angular/common'; import { FormsModule } from '@angular/forms'; import { DragDropModule } from '@angular/cdk/drag-drop'; import { IxtWireframeDiagram } from './ixt-wireframe.diagram'; import * as i0 from "@angular/core"; export class IxtWireframeModule { // If you need to do any module-level configuration, you can use the forRoot pattern static forRoot() { return { ngModule: IxtWireframeModule, providers: [ // Add any providers that should be singleton across the app ] }; } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtWireframeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); } static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "16.2.12", ngImport: i0, type: IxtWireframeModule, declarations: [IxtWireframeDiagram], imports: [CommonModule, FormsModule, DragDropModule], exports: [IxtWireframeDiagram] }); } static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtWireframeModule, imports: [CommonModule, FormsModule, DragDropModule] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtWireframeModule, decorators: [{ type: NgModule, args: [{ declarations: [ IxtWireframeDiagram ], imports: [ CommonModule, FormsModule, DragDropModule ], exports: [ IxtWireframeDiagram ], providers: [] }] }] }); //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXh0LXdpcmVmcmFtZS5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9peHQtZGlhZ3JhbS90eXBlcy93aXJlZnJhbWUvaXh0LXdpcmVmcmFtZS5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsMEJBQTBCO0FBQzFCLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM3QyxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDeEQsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0seUJBQXlCLENBQUM7O0FBZ0I5RCxNQUFNLE9BQU8sa0JBQWtCO0lBQzdCLG9GQUFvRjtJQUNwRixNQUFNLENBQUMsT0FBTztRQUNaLE9BQU87WUFDTCxRQUFRLEVBQUUsa0JBQWtCO1lBQzVCLFNBQVMsRUFBRTtZQUNULDREQUE0RDthQUM3RDtTQUNGLENBQUM7SUFDSixDQUFDOytHQVRVLGtCQUFrQjtnSEFBbEIsa0JBQWtCLGlCQVozQixtQkFBbUIsYUFHbkIsWUFBWTtZQUNaLFdBQVc7WUFDWCxjQUFjLGFBR2QsbUJBQW1CO2dIQUlWLGtCQUFrQixZQVQzQixZQUFZO1lBQ1osV0FBVztZQUNYLGNBQWM7OzRGQU9MLGtCQUFrQjtrQkFkOUIsUUFBUTttQkFBQztvQkFDUixZQUFZLEVBQUU7d0JBQ1osbUJBQW1CO3FCQUNwQjtvQkFDRCxPQUFPLEVBQUU7d0JBQ1AsWUFBWTt3QkFDWixXQUFXO3dCQUNYLGNBQWM7cUJBQ2Y7b0JBQ0QsT0FBTyxFQUFFO3dCQUNQLG1CQUFtQjtxQkFDcEI7b0JBQ0QsU0FBUyxFQUFFLEVBQUU7aUJBQ2QiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpeHQtd2lyZWZyYW1lLm1vZHVsZS50c1xyXG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xyXG5pbXBvcnQgeyBGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcclxuaW1wb3J0IHsgRHJhZ0Ryb3BNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jZGsvZHJhZy1kcm9wJztcclxuaW1wb3J0IHsgSXh0V2lyZWZyYW1lRGlhZ3JhbSB9IGZyb20gJy4vaXh0LXdpcmVmcmFtZS5kaWFncmFtJztcclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgZGVjbGFyYXRpb25zOiBbXHJcbiAgICBJeHRXaXJlZnJhbWVEaWFncmFtXHJcbiAgXSxcclxuICBpbXBvcnRzOiBbXHJcbiAgICBDb21tb25Nb2R1bGUsXHJcbiAgICBGb3Jtc01vZHVsZSxcclxuICAgIERyYWdEcm9wTW9kdWxlXHJcbiAgXSxcclxuICBleHBvcnRzOiBbXHJcbiAgICBJeHRXaXJlZnJhbWVEaWFncmFtXHJcbiAgXSxcclxuICBwcm92aWRlcnM6IFtdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBJeHRXaXJlZnJhbWVNb2R1bGUge1xyXG4gIC8vIElmIHlvdSBuZWVkIHRvIGRvIGFueSBtb2R1bGUtbGV2ZWwgY29uZmlndXJhdGlvbiwgeW91IGNhbiB1c2UgdGhlIGZvclJvb3QgcGF0dGVyblxyXG4gIHN0YXRpYyBmb3JSb290KCkge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgbmdNb2R1bGU6IEl4dFdpcmVmcmFtZU1vZHVsZSxcclxuICAgICAgcHJvdmlkZXJzOiBbXHJcbiAgICAgICAgLy8gQWRkIGFueSBwcm92aWRlcnMgdGhhdCBzaG91bGQgYmUgc2luZ2xldG9uIGFjcm9zcyB0aGUgYXBwXHJcbiAgICAgIF1cclxuICAgIH07XHJcbiAgfVxyXG59XHJcblxyXG4vLyBPcHRpb25hbDogQWRkIGNvbmZpZ3VyYXRpb24gdHlwZXMgaWYgbmVlZGVkXHJcbmV4cG9ydCBpbnRlcmZhY2UgSXh0V2lyZWZyYW1lQ29uZmlnIHtcclxuICBncmlkU2l6ZT86IG51bWJlcjtcclxuICBzbmFwVGhyZXNob2xkPzogbnVtYmVyO1xyXG4gIGRlZmF1bHRTaGFwZXM/OiBBcnJheTx7XHJcbiAgICBuYW1lOiBzdHJpbmc7XHJcbiAgICB0eXBlOiBzdHJpbmc7XHJcbiAgICBkZWZhdWx0V2lkdGg6IG51bWJlcjtcclxuICAgIGRlZmF1bHRIZWlnaHQ6IG51bWJlcjtcclxuICB9PjtcclxuICBtYXhVbmRvU3RlcHM/OiBudW1iZXI7XHJcbn1cclxuXHJcbi8vIE9wdGlvbmFsOiBBZGQgc2VydmljZSBpbnRlcmZhY2VzIGlmIG5lZWRlZFxyXG5leHBvcnQgaW50ZXJmYWNlIEl4dFdpcmVmcmFtZVNlcnZpY2Uge1xyXG4gIHNhdmVUZW1wbGF0ZShuYW1lOiBzdHJpbmcsIHRlbXBsYXRlOiBhbnkpOiBQcm9taXNlPHZvaWQ+O1xyXG4gIGxvYWRUZW1wbGF0ZShuYW1lOiBzdHJpbmcpOiBQcm9taXNlPGFueT47XHJcbiAgbGlzdFRlbXBsYXRlcygpOiBQcm9taXNlPHN0cmluZ1tdPjtcclxufSJdfQ==
|       |   |   |   --- ixt-diagram.component.mjs: // ixt-diagram.component.ts import { Component, ViewChild } from '@angular/core'; import * as i0 from "@angular/core"; export class IxtDiagramComponent { constructor() { // Sample data matching the example diagram this.participants = [ { type: 'actor', name: 'SD Login Customer', x: 100 }, { type: 'component', name: 'LoginUI', x: 300 }, { type: 'component', name: 'LoginControl', x: 500 }, { type: 'component', name: 'UserDB', x: 700 } ]; // Update the activation data to match the screenshot this.activations = [ { participant: 'LoginUI', startY: 150, endY: 420 }, { participant: 'LoginControl', startY: 200, endY: 420 }, { participant: 'UserDB', startY: 250, endY: 320 } // Adjusted timing ]; // Update message types to ensure sync messages have filled arrowheads this.messages = [ { from: 'SD Login Customer', to: 'LoginUI', text: 'Login(Un/Pw)', y: 150, type: 'sync' }, { from: 'LoginUI', to: 'LoginControl', text: 'login(Un/Pw)', y: 200, type: 'sync' }, { from: 'LoginControl', to: 'UserDB', text: 'search(Un/Pw)', y: 250, type: 'sync' }, { from: 'UserDB', to: 'LoginControl', text: 'status', y: 300, type: 'return' }, { from: 'LoginControl', to: 'LoginControl', text: 'validateUser', y: 350, type: 'self' }, { from: 'LoginControl', to: 'LoginUI', text: 'status', y: 400, type: 'return' } ]; } ngOnInit() { this.initializeCanvas(); this.drawDiagram(); } initializeCanvas() { const context = this.canvas.nativeElement.getContext('2d'); if (!context) { throw new Error('Canvas 2D context not supported'); } this.ctx = context; this.ctx.font = '12px Arial'; this.ctx.textAlign = 'center'; } drawDiagram() { this.clearCanvas(); this.drawParticipants(); this.drawLifelines(); this.drawActivations(); this.drawMessages(); } clearCanvas() { const canvas = this.canvas.nativeElement; this.ctx.clearRect(0, 0, canvas.width, canvas.height); } drawParticipants() { this.participants.forEach(participant => { if (participant.type === 'actor') { this.drawActor(participant); } else { this.drawComponent(participant); } }); } drawActor(participant) { const x = participant.x; const y = 30; this.ctx.strokeStyle = '#000'; // Draw stick figure // Head this.ctx.beginPath(); this.ctx.arc(x, y, 10, 0, Math.PI * 2); this.ctx.stroke(); // Body this.ctx.beginPath(); this.ctx.moveTo(x, y + 10); this.ctx.lineTo(x, y + 30); this.ctx.stroke(); // Arms this.ctx.beginPath(); this.ctx.moveTo(x - 15, y + 20); this.ctx.lineTo(x + 15, y + 20); this.ctx.stroke(); // Legs this.ctx.beginPath(); this.ctx.moveTo(x, y + 30); this.ctx.lineTo(x - 10, y + 45); this.ctx.moveTo(x, y + 30); this.ctx.lineTo(x + 10, y + 45); this.ctx.stroke(); // Label this.ctx.fillStyle = '#000'; this.drawLabel(participant.name, x, y + 60); } drawComponent(participant) { const width = 100; const height = 40; const x = participant.x - width / 2; const y = 30; // Draw box this.ctx.strokeStyle = '#000'; this.ctx.fillStyle = '#fff'; this.ctx.beginPath(); this.ctx.rect(x, y, width, height); this.ctx.fill(); this.ctx.stroke(); // Draw text this.ctx.fillStyle = '#000'; this.drawLabel(participant.name, participant.x, y + height / 2); } drawLifelines() { this.ctx.setLineDash([5, 5]); this.ctx.strokeStyle = '#666'; this.participants.forEach(participant => { this.ctx.beginPath(); this.ctx.moveTo(participant.x, 90); this.ctx.lineTo(participant.x, 500); this.ctx.stroke(); }); this.ctx.setLineDash([]); // Reset line style } drawMessages() { this.messages.forEach(message => { const fromX = this.getParticipantX(message.from); const toX = this.getParticipantX(message.to); this.ctx.strokeStyle = '#000'; this.ctx.fillStyle = '#000'; if (message.type === 'sync') { this.drawSyncMessage(fromX, toX, message); } else if (message.type === 'return') { this.drawReturnMessage(fromX, toX, message); } else if (message.type === 'self') { this.drawSelfMessage(fromX, message); } }); } drawReturnMessage(fromX, toX, message) { // Dashed line with open arrow this.ctx.setLineDash([5, 5]); this.ctx.beginPath(); this.ctx.moveTo(fromX, message.y); this.ctx.lineTo(toX, message.y); this.ctx.stroke(); this.ctx.setLineDash([]); // Open arrowhead this.drawArrowhead(toX, message.y, fromX < toX ? 'right' : 'left', false); // Message text this.drawLabel(message.text, (fromX + toX) / 2, message.y - 10); } drawSelfMessage(x, message) { const offset = 20; this.ctx.beginPath(); this.ctx.moveTo(x, message.y); this.ctx.lineTo(x + offset, message.y); this.ctx.lineTo(x + offset, message.y + 20); this.ctx.lineTo(x, message.y + 20); this.ctx.stroke(); // Filled arrowhead this.drawArrowhead(x, message.y + 20, 'left', true); // Message text this.drawLabel(message.text, x + offset + 20, message.y + 10); } drawLabel(text, x, y) { this.ctx.fillStyle = '#000'; this.ctx.textAlign = 'center'; this.ctx.textBaseline = 'middle'; this.ctx.fillText(text, x, y); } getParticipantX(name) { const participant = this.participants.find(p => p.name === name); if (!participant) { throw new Error(`Participant ${name} not found`); } return participant.x; } // Only showing the modified methods - the rest of the component remains the same drawActivations() { this.ctx.fillStyle = '#fff'; this.ctx.strokeStyle = '#000'; this.activations.forEach(activation => { const participant = this.participants.find(p => p.name === activation.participant); if (participant) { // Make activation bars wider and ensure they're solid const width = 16; // Increased from 10 const x = participant.x - width / 2; // Draw solid white rectangle this.ctx.beginPath(); this.ctx.fillStyle = '#fff'; this.ctx.fillRect(x, activation.startY, width, activation.endY - activation.startY); this.ctx.strokeRect(x, activation.startY, width, activation.endY - activation.startY); } }); } drawArrowhead(x, y, direction, filled) { const size = 10; // Increased from 8 const angle = Math.PI / 6; const dir = direction === 'right' ? 1 : -1; this.ctx.beginPath(); this.ctx.moveTo(x, y); // Calculate arrow points const x1 = x - dir * size * Math.cos(angle); const y1 = y - size * Math.sin(angle); const x2 = x - dir * size * Math.cos(-angle); const y2 = y - size * Math.sin(-angle); this.ctx.lineTo(x1, y1); this.ctx.lineTo(x2, y2); if (filled) { this.ctx.closePath(); this.ctx.fillStyle = '#000'; this.ctx.fill(); } this.ctx.stroke(); } drawSyncMessage(fromX, toX, message) { // Draw solid line this.ctx.beginPath(); this.ctx.strokeStyle = '#000'; this.ctx.lineWidth = 1; this.ctx.moveTo(fromX, message.y); this.ctx.lineTo(toX, message.y); this.ctx.stroke(); // Always draw filled arrowhead for sync messages this.drawArrowhead(toX, message.y, fromX < toX ? 'right' : 'left', true); // Message text this.drawLabel(message.text, (fromX + toX) / 2, message.y - 10); } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtDiagramComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); } static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: IxtDiagramComponent, selector: "ixt-diagram", viewQueries: [{ propertyName: "canvas", first: true, predicate: ["diagramCanvas"], descendants: true, static: true }], ngImport: i0, template: ` <canvas #diagramCanvas width="800" height="600" [style.border]="'1px solid #ccc'"> </canvas> `, isInline: true }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtDiagramComponent, decorators: [{ type: Component, args: [{ selector: 'ixt-diagram', template: ` <canvas #diagramCanvas width="800" height="600" [style.border]="'1px solid #ccc'"> </canvas> ` }] }], propDecorators: { canvas: [{ type: ViewChild, args: ['diagramCanvas', { static: true }] }] } }); //# sourceMappingURL=data:application/json;base64,
|       |   |   |   --- ixt-diagram.index.mjs: // ixt-diagram.index.ts export * from './ixt-diagram.component'; export * from './ixt-diagram.module'; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXh0LWRpYWdyYW0uaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9peHQtZGlhZ3JhbS9peHQtZGlhZ3JhbS5pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx1QkFBdUI7QUFDdkIsY0FBYyx5QkFBeUIsQ0FBQztBQUN4QyxjQUFjLHNCQUFzQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gaXh0LWRpYWdyYW0uaW5kZXgudHNcclxuZXhwb3J0ICogZnJvbSAnLi9peHQtZGlhZ3JhbS5jb21wb25lbnQnO1xyXG5leHBvcnQgKiBmcm9tICcuL2l4dC1kaWFncmFtLm1vZHVsZSc7XHJcblxyXG4iXX0=
|       |   |   |   --- ixt-diagram.module.mjs: // Later we can add additional exports like: // export * from './ixt-diagram.service'; // export * from './ixt-diagram.models'; // export * from './ixt-diagram.utils'; // ixt-diagram.module.ts import { NgModule } from '@angular/core'; import { CommonModule } from '@angular/common'; import { IxtDiagramComponent } from './ixt-diagram.component'; import * as i0 from "@angular/core"; export class IxtDiagramModule { static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtDiagramModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); } static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "16.2.12", ngImport: i0, type: IxtDiagramModule, declarations: [IxtDiagramComponent], imports: [CommonModule], exports: [IxtDiagramComponent] }); } static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtDiagramModule, imports: [CommonModule] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtDiagramModule, decorators: [{ type: NgModule, args: [{ declarations: [ IxtDiagramComponent ], imports: [ CommonModule ], exports: [ IxtDiagramComponent ] }] }] }); //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXh0LWRpYWdyYW0ubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvaXh0LWRpYWdyYW0vaXh0LWRpYWdyYW0ubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDRDQUE0QztBQUM1Qyx5Q0FBeUM7QUFDekMsd0NBQXdDO0FBQ3hDLHVDQUF1QztBQUV2Qyx3QkFBd0I7QUFDeEIsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0seUJBQXlCLENBQUM7O0FBYTlELE1BQU0sT0FBTyxnQkFBZ0I7K0dBQWhCLGdCQUFnQjtnSEFBaEIsZ0JBQWdCLGlCQVR6QixtQkFBbUIsYUFHbkIsWUFBWSxhQUdaLG1CQUFtQjtnSEFHVixnQkFBZ0IsWUFOekIsWUFBWTs7NEZBTUgsZ0JBQWdCO2tCQVg1QixRQUFRO21CQUFDO29CQUNSLFlBQVksRUFBRTt3QkFDWixtQkFBbUI7cUJBQ3BCO29CQUNELE9BQU8sRUFBRTt3QkFDUCxZQUFZO3FCQUNiO29CQUNELE9BQU8sRUFBRTt3QkFDUCxtQkFBbUI7cUJBQ3BCO2lCQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTGF0ZXIgd2UgY2FuIGFkZCBhZGRpdGlvbmFsIGV4cG9ydHMgbGlrZTpcclxuLy8gZXhwb3J0ICogZnJvbSAnLi9peHQtZGlhZ3JhbS5zZXJ2aWNlJztcclxuLy8gZXhwb3J0ICogZnJvbSAnLi9peHQtZGlhZ3JhbS5tb2RlbHMnO1xyXG4vLyBleHBvcnQgKiBmcm9tICcuL2l4dC1kaWFncmFtLnV0aWxzJztcclxuXHJcbi8vIGl4dC1kaWFncmFtLm1vZHVsZS50c1xyXG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xyXG5pbXBvcnQgeyBJeHREaWFncmFtQ29tcG9uZW50IH0gZnJvbSAnLi9peHQtZGlhZ3JhbS5jb21wb25lbnQnO1xyXG5cclxuQE5nTW9kdWxlKHtcclxuICBkZWNsYXJhdGlvbnM6IFtcclxuICAgIEl4dERpYWdyYW1Db21wb25lbnRcclxuICBdLFxyXG4gIGltcG9ydHM6IFtcclxuICAgIENvbW1vbk1vZHVsZVxyXG4gIF0sXHJcbiAgZXhwb3J0czogW1xyXG4gICAgSXh0RGlhZ3JhbUNvbXBvbmVudFxyXG4gIF1cclxufSlcclxuZXhwb3J0IGNsYXNzIEl4dERpYWdyYW1Nb2R1bGUgeyB9XHJcblxyXG4vKiBGdXR1cmUgaW1wb3J0cyB3ZSBtaWdodCBuZWVkOlxyXG5pbXBvcnQgeyBGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcclxuaW1wb3J0IHsgSXh0RGlhZ3JhbVNlcnZpY2UgfSBmcm9tICcuL2l4dC1kaWFncmFtLnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBJeHREaWFncmFtVG9vbGJhckNvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy90b29sYmFyL3Rvb2xiYXIuY29tcG9uZW50JztcclxuKi8iXX0=
|       |   |   +-- ixt-dialog
|       |   |   |   +-- types
|       |   |   |   |   \-- success
|       |   |   |   |       --- ixt-success-dialog.component.mjs: // ixt-success-dialog.component.ts import { Component, Input } from '@angular/core'; import { baseThemeColors } from '../../../theme/theme.colors'; import * as i0 from "@angular/core"; export class SuccessDialogComponent { constructor() { this.variant = 'success'; this.theme = baseThemeColors; } get themeStyles() { const colors = this.theme[this.variant]; return { 'background-color': `${colors.base}15`, 'color': '#0f0', 'border-color': colors.base }; } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: SuccessDialogComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); } static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: SuccessDialogComponent, selector: "ixt-success-dialog", inputs: { message: "message", variant: "variant", theme: "theme" }, ngImport: i0, template: "<div role=\"alert\">\r\n <p>{{ message || 'Operation completed successfully!' }}</p>\r\n</div>", styles: ["div[role=alert]{text-align:center;padding:20px;color:var(--theme-base)}div[role=alert] p{margin:0;font-size:1.1rem;line-height:1.5}\n"] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: SuccessDialogComponent, decorators: [{ type: Component, args: [{ selector: 'ixt-success-dialog', template: "<div role=\"alert\">\r\n <p>{{ message || 'Operation completed successfully!' }}</p>\r\n</div>", styles: ["div[role=alert]{text-align:center;padding:20px;color:var(--theme-base)}div[role=alert] p{margin:0;font-size:1.1rem;line-height:1.5}\n"] }] }], propDecorators: { message: [{ type: Input }], variant: [{ type: Input }], theme: [{ type: Input }] } }); //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXh0LXN1Y2Nlc3MtZGlhbG9nLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL2l4dC1kaWFsb2cvdHlwZXMvc3VjY2Vzcy9peHQtc3VjY2Vzcy1kaWFsb2cuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvaXh0LWRpYWxvZy90eXBlcy9zdWNjZXNzL2l4dC1zdWNjZXNzLWRpYWxvZy5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxrQ0FBa0M7QUFDbEMsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFakQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLDZCQUE2QixDQUFDOztBQU85RCxNQUFNLE9BQU8sc0JBQXNCO0lBTG5DO1FBT1csWUFBTyxHQUFpQixTQUFTLENBQUM7UUFDbEMsVUFBSyxHQUFnQixlQUFlLENBQUM7S0FVL0M7SUFSQyxJQUFJLFdBQVc7UUFDYixNQUFNLE1BQU0sR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUN4QyxPQUFPO1lBQ0wsa0JBQWtCLEVBQUUsR0FBRyxNQUFNLENBQUMsSUFBSSxJQUFJO1lBQ3RDLE9BQU8sRUFBRSxNQUFNO1lBQ2YsY0FBYyxFQUFFLE1BQU0sQ0FBQyxJQUFJO1NBQzVCLENBQUM7SUFDSixDQUFDOytHQVpVLHNCQUFzQjttR0FBdEIsc0JBQXNCLDhIQ1ZuQyxpR0FFTTs7NEZEUU8sc0JBQXNCO2tCQUxsQyxTQUFTOytCQUNFLG9CQUFvQjs4QkFLckIsT0FBTztzQkFBZixLQUFLO2dCQUNHLE9BQU87c0JBQWYsS0FBSztnQkFDRyxLQUFLO3NCQUFiLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpeHQtc3VjY2Vzcy1kaWFsb2cuY29tcG9uZW50LnRzXHJcbmltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgVGhlbWVDb2xvcnMsIFRoZW1lVmFyaWFudCB9IGZyb20gJy4uLy4uLy4uL3RoZW1lL3RoZW1lLnR5cGVzJztcclxuaW1wb3J0IHsgYmFzZVRoZW1lQ29sb3JzIH0gZnJvbSAnLi4vLi4vLi4vdGhlbWUvdGhlbWUuY29sb3JzJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnaXh0LXN1Y2Nlc3MtZGlhbG9nJyxcclxuICB0ZW1wbGF0ZVVybDogJy4vaXh0LXN1Y2Nlc3MtZGlhbG9nLmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9peHQtc3VjY2Vzcy1kaWFsb2cuY29tcG9uZW50LnNjc3MnXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgU3VjY2Vzc0RpYWxvZ0NvbXBvbmVudCB7XHJcbiAgQElucHV0KCkgbWVzc2FnZT86IHN0cmluZztcclxuICBASW5wdXQoKSB2YXJpYW50OiBUaGVtZVZhcmlhbnQgPSAnc3VjY2Vzcyc7XHJcbiAgQElucHV0KCkgdGhlbWU6IFRoZW1lQ29sb3JzID0gYmFzZVRoZW1lQ29sb3JzO1xyXG5cclxuICBnZXQgdGhlbWVTdHlsZXMoKSB7XHJcbiAgICBjb25zdCBjb2xvcnMgPSB0aGlzLnRoZW1lW3RoaXMudmFyaWFudF07XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAnYmFja2dyb3VuZC1jb2xvcic6IGAke2NvbG9ycy5iYXNlfTE1YCwgLy8gMTUlIG9wYWNpdHlcclxuICAgICAgJ2NvbG9yJzogJyMwZjAnLCAvL2NvbG9ycy5iYXNlLFxyXG4gICAgICAnYm9yZGVyLWNvbG9yJzogY29sb3JzLmJhc2VcclxuICAgIH07XHJcbiAgfVxyXG59IiwiPGRpdiByb2xlPVwiYWxlcnRcIj5cclxuICA8cD57eyBtZXNzYWdlIHx8ICdPcGVyYXRpb24gY29tcGxldGVkIHN1Y2Nlc3NmdWxseSEnIH19PC9wPlxyXG48L2Rpdj4iXX0=
|       |   |   |   --- ixt-dialog.component.mjs: import { Component, ViewChild, Input, Output, EventEmitter, ViewContainerRef } from '@angular/core'; import { baseThemeColors } from './../theme/theme.colors'; import * as i0 from "@angular/core"; import * as i1 from "@angular/common"; export class IxtDialogComponent { constructor() { this.modal = true; this.title = ''; this.variant = 'primary'; this.theme = baseThemeColors; this.close = new EventEmitter(); } open() { if (this.modal) { this.dialog.nativeElement.showModal(); } else { this.dialog.nativeElement.show(); } } closeDialog(result) { this.dialog.nativeElement.close(); this.close.emit(result); } get themeStyles() { const colors = this.theme[this.variant]; return { 'background-color': colors.base, 'color': colors.text, '--theme-hover': colors.hover, '--theme-active': colors.active, '--theme-text': colors.text }; } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtDialogComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); } static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: IxtDialogComponent, selector: "ixt-dialog", inputs: { modal: "modal", title: "title", variant: "variant", theme: "theme" }, outputs: { close: "close" }, viewQueries: [{ propertyName: "dialog", first: true, predicate: ["dialog"], descendants: true }, { propertyName: "contentHost", first: true, predicate: ["contentHost"], descendants: true, read: ViewContainerRef, static: true }], ngImport: i0, template: "<dialog #dialog role=\"dialog\" [ngStyle]=\"themeStyles\">\r\n <div role=\"document\">\r\n <header>\r\n <h2>{{ title }}</h2>\r\n </header>\r\n <section>\r\n <ng-template #contentHost></ng-template>\r\n </section>\r\n <footer>\r\n <button type=\"button\" (click)=\"closeDialog(false)\">Cancel</button>\r\n <button type=\"button\" (click)=\"closeDialog(true)\">OK</button>\r\n </footer>\r\n </div>\r\n</dialog>", styles: ["dialog[role=dialog]{border:1px solid var(--border-color);border-radius:8px;padding:0;position:fixed;top:50%;left:50%;transform:translate(-50%,-50%);z-index:1000;min-width:400px;max-width:600px;background:#fff;box-shadow:0 4px 6px #0000001a}dialog[role=dialog] div[role=document]{display:flex;flex-direction:column}dialog[role=dialog] header{background-color:var(--theme-base);padding:16px 24px;border-top-left-radius:8px;border-top-right-radius:8px}dialog[role=dialog] header h2{color:var(--theme-text);margin:0;font-size:1.25rem;font-weight:500}dialog[role=dialog] section{padding:24px;min-height:80px;max-height:60vh;overflow-y:auto}dialog[role=dialog] footer{padding:16px 24px;display:flex;justify-content:flex-end;gap:12px;border-top:1px solid var(--border-color);background:#f8f9fa;border-bottom-left-radius:8px;border-bottom-right-radius:8px}dialog[role=dialog] footer button{padding:8px 16px;border-radius:4px;font-weight:500;cursor:pointer;transition:background-color .2s}dialog[role=dialog] footer button:first-child{background:#fff;border:1px solid var(--border-color);color:#666}dialog[role=dialog] footer button:first-child:hover{background:#f0f0f0}dialog[role=dialog] footer button:last-child{background:var(--theme-base);color:var(--theme-text);border:none}dialog[role=dialog] footer button:last-child:hover{background:var(--theme-hover)}dialog[role=dialog] footer button:last-child:active{background:var(--theme-active)}\n"], dependencies: [{ kind: "directive", type: i1.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtDialogComponent, decorators: [{ type: Component, args: [{ selector: 'ixt-dialog', template: "<dialog #dialog role=\"dialog\" [ngStyle]=\"themeStyles\">\r\n <div role=\"document\">\r\n <header>\r\n <h2>{{ title }}</h2>\r\n </header>\r\n <section>\r\n <ng-template #contentHost></ng-template>\r\n </section>\r\n <footer>\r\n <button type=\"button\" (click)=\"closeDialog(false)\">Cancel</button>\r\n <button type=\"button\" (click)=\"closeDialog(true)\">OK</button>\r\n </footer>\r\n </div>\r\n</dialog>", styles: ["dialog[role=dialog]{border:1px solid var(--border-color);border-radius:8px;padding:0;position:fixed;top:50%;left:50%;transform:translate(-50%,-50%);z-index:1000;min-width:400px;max-width:600px;background:#fff;box-shadow:0 4px 6px #0000001a}dialog[role=dialog] div[role=document]{display:flex;flex-direction:column}dialog[role=dialog] header{background-color:var(--theme-base);padding:16px 24px;border-top-left-radius:8px;border-top-right-radius:8px}dialog[role=dialog] header h2{color:var(--theme-text);margin:0;font-size:1.25rem;font-weight:500}dialog[role=dialog] section{padding:24px;min-height:80px;max-height:60vh;overflow-y:auto}dialog[role=dialog] footer{padding:16px 24px;display:flex;justify-content:flex-end;gap:12px;border-top:1px solid var(--border-color);background:#f8f9fa;border-bottom-left-radius:8px;border-bottom-right-radius:8px}dialog[role=dialog] footer button{padding:8px 16px;border-radius:4px;font-weight:500;cursor:pointer;transition:background-color .2s}dialog[role=dialog] footer button:first-child{background:#fff;border:1px solid var(--border-color);color:#666}dialog[role=dialog] footer button:first-child:hover{background:#f0f0f0}dialog[role=dialog] footer button:last-child{background:var(--theme-base);color:var(--theme-text);border:none}dialog[role=dialog] footer button:last-child:hover{background:var(--theme-hover)}dialog[role=dialog] footer button:last-child:active{background:var(--theme-active)}\n"] }] }], ctorParameters: function () { return []; }, propDecorators: { dialog: [{ type: ViewChild, args: ['dialog'] }], contentHost: [{ type: ViewChild, args: ['contentHost', { read: ViewContainerRef, static: true }] }], modal: [{ type: Input }], title: [{ type: Input }], variant: [{ type: Input }], theme: [{ type: Input }], close: [{ type: Output }] } }); //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXh0LWRpYWxvZy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9peHQtZGlhbG9nL2l4dC1kaWFsb2cuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvaXh0LWRpYWxvZy9peHQtZGlhbG9nLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFjLEtBQUssRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLGdCQUFnQixFQUFpRCxNQUFNLGVBQWUsQ0FBQztBQUMvSixPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0seUJBQXlCLENBQUM7OztBQVExRCxNQUFNLE9BQU8sa0JBQWtCO0lBUzdCO1FBTlMsVUFBSyxHQUFZLElBQUksQ0FBQztRQUN0QixVQUFLLEdBQVcsRUFBRSxDQUFDO1FBQ25CLFlBQU8sR0FBaUIsU0FBUyxDQUFDO1FBQ2xDLFVBQUssR0FBZ0IsZUFBZSxDQUFDO1FBQ3BDLFVBQUssR0FBRyxJQUFJLFlBQVksRUFBVyxDQUFDO0lBRS9CLENBQUM7SUFFaEIsSUFBSTtRQUNGLElBQUksSUFBSSxDQUFDLEtBQUssRUFBRTtZQUNkLElBQUksQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDLFNBQVMsRUFBRSxDQUFDO1NBQ3ZDO2FBQU07WUFDTCxJQUFJLENBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQyxJQUFJLEVBQUUsQ0FBQztTQUNsQztJQUNILENBQUM7SUFFRCxXQUFXLENBQUMsTUFBZTtRQUN6QixJQUFJLENBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUNsQyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUMxQixDQUFDO0lBRUQsSUFBSSxXQUFXO1FBQ2IsTUFBTSxNQUFNLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDeEMsT0FBTztZQUNMLGtCQUFrQixFQUFFLE1BQU0sQ0FBQyxJQUFJO1lBQy9CLE9BQU8sRUFBRSxNQUFNLENBQUMsSUFBSTtZQUNwQixlQUFlLEVBQUUsTUFBTSxDQUFDLEtBQUs7WUFDN0IsZ0JBQWdCLEVBQUUsTUFBTSxDQUFDLE1BQU07WUFDL0IsY0FBYyxFQUFFLE1BQU0sQ0FBQyxJQUFJO1NBRTVCLENBQUM7SUFDSixDQUFDOytHQWxDVSxrQkFBa0I7bUdBQWxCLGtCQUFrQix5VUFFSyxnQkFBZ0IsMkNDWHBELGtjQWFTOzs0RkRKSSxrQkFBa0I7a0JBTDlCLFNBQVM7K0JBQ0UsWUFBWTswRUFLTSxNQUFNO3NCQUFqQyxTQUFTO3VCQUFDLFFBQVE7Z0JBQ2lELFdBQVc7c0JBQTlFLFNBQVM7dUJBQUMsYUFBYSxFQUFFLEVBQUUsSUFBSSxFQUFFLGdCQUFnQixFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUU7Z0JBQ3pELEtBQUs7c0JBQWIsS0FBSztnQkFDRyxLQUFLO3NCQUFiLEtBQUs7Z0JBQ0csT0FBTztzQkFBZixLQUFLO2dCQUNHLEtBQUs7c0JBQWIsS0FBSztnQkFDSSxLQUFLO3NCQUFkLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIFZpZXdDaGlsZCwgRWxlbWVudFJlZiwgSW5wdXQsIE91dHB1dCwgRXZlbnRFbWl0dGVyLCBWaWV3Q29udGFpbmVyUmVmLCBDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXIsIFR5cGUsIEFmdGVyVmlld0luaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgYmFzZVRoZW1lQ29sb3JzIH0gZnJvbSAnLi8uLi90aGVtZS90aGVtZS5jb2xvcnMnO1xyXG5pbXBvcnQgeyBUaGVtZVZhcmlhbnQsIFRoZW1lQ29sb3JzIH0gZnJvbSAnLi8uLi90aGVtZS90aGVtZS50eXBlcyc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2l4dC1kaWFsb2cnLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9peHQtZGlhbG9nLmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9peHQtZGlhbG9nLmNvbXBvbmVudC5zY3NzJ11cclxufSlcclxuZXhwb3J0IGNsYXNzIEl4dERpYWxvZ0NvbXBvbmVudCB7XHJcbiAgQFZpZXdDaGlsZCgnZGlhbG9nJykgcHVibGljIGRpYWxvZyE6IEVsZW1lbnRSZWY8SFRNTERpYWxvZ0VsZW1lbnQ+O1xyXG4gIEBWaWV3Q2hpbGQoJ2NvbnRlbnRIb3N0JywgeyByZWFkOiBWaWV3Q29udGFpbmVyUmVmLCBzdGF0aWM6IHRydWUgfSkgY29udGVudEhvc3QhOiBWaWV3Q29udGFpbmVyUmVmO1xyXG4gIEBJbnB1dCgpIG1vZGFsOiBib29sZWFuID0gdHJ1ZTtcclxuICBASW5wdXQoKSB0aXRsZTogc3RyaW5nID0gJyc7XHJcbiAgQElucHV0KCkgdmFyaWFudDogVGhlbWVWYXJpYW50ID0gJ3ByaW1hcnknO1xyXG4gIEBJbnB1dCgpIHRoZW1lOiBUaGVtZUNvbG9ycyA9IGJhc2VUaGVtZUNvbG9ycztcclxuICBAT3V0cHV0KCkgY2xvc2UgPSBuZXcgRXZlbnRFbWl0dGVyPGJvb2xlYW4+KCk7XHJcblxyXG4gIGNvbnN0cnVjdG9yKCkge31cclxuXHJcbiAgb3BlbigpIHtcclxuICAgIGlmICh0aGlzLm1vZGFsKSB7XHJcbiAgICAgIHRoaXMuZGlhbG9nLm5hdGl2ZUVsZW1lbnQuc2hvd01vZGFsKCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLmRpYWxvZy5uYXRpdmVFbGVtZW50LnNob3coKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGNsb3NlRGlhbG9nKHJlc3VsdDogYm9vbGVhbikge1xyXG4gICAgdGhpcy5kaWFsb2cubmF0aXZlRWxlbWVudC5jbG9zZSgpO1xyXG4gICAgdGhpcy5jbG9zZS5lbWl0KHJlc3VsdCk7XHJcbiAgfVxyXG5cclxuICBnZXQgdGhlbWVTdHlsZXMoKSB7XHJcbiAgICBjb25zdCBjb2xvcnMgPSB0aGlzLnRoZW1lW3RoaXMudmFyaWFudF07XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAnYmFja2dyb3VuZC1jb2xvcic6IGNvbG9ycy5iYXNlLFxyXG4gICAgICAnY29sb3InOiBjb2xvcnMudGV4dCxcclxuICAgICAgJy0tdGhlbWUtaG92ZXInOiBjb2xvcnMuaG92ZXIsXHJcbiAgICAgICctLXRoZW1lLWFjdGl2ZSc6IGNvbG9ycy5hY3RpdmUsXHJcbiAgICAgICctLXRoZW1lLXRleHQnOiBjb2xvcnMudGV4dFxyXG5cclxuICAgIH07XHJcbiAgfVxyXG59IiwiPGRpYWxvZyAjZGlhbG9nIHJvbGU9XCJkaWFsb2dcIiBbbmdTdHlsZV09XCJ0aGVtZVN0eWxlc1wiPlxyXG4gIDxkaXYgcm9sZT1cImRvY3VtZW50XCI+XHJcbiAgICA8aGVhZGVyPlxyXG4gICAgICA8aDI+e3sgdGl0bGUgfX08L2gyPlxyXG4gICAgPC9oZWFkZXI+XHJcbiAgICA8c2VjdGlvbj5cclxuICAgICAgPG5nLXRlbXBsYXRlICNjb250ZW50SG9zdD48L25nLXRlbXBsYXRlPlxyXG4gICAgPC9zZWN0aW9uPlxyXG4gICAgPGZvb3Rlcj5cclxuICAgICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgKGNsaWNrKT1cImNsb3NlRGlhbG9nKGZhbHNlKVwiPkNhbmNlbDwvYnV0dG9uPlxyXG4gICAgICA8YnV0dG9uIHR5cGU9XCJidXR0b25cIiAoY2xpY2spPVwiY2xvc2VEaWFsb2codHJ1ZSlcIj5PSzwvYnV0dG9uPlxyXG4gICAgPC9mb290ZXI+XHJcbiAgPC9kaXY+XHJcbjwvZGlhbG9nPiJdfQ==
|       |   |   |   --- ixt-dialog.index.mjs: export * from './ixt-dialog.module'; export { IxtDialogComponent } from './ixt-dialog.component'; export { IxtDialogService } from './ixt-dialog.service'; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXh0LWRpYWxvZy5pbmRleC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL2l4dC1kaWFsb2cvaXh0LWRpYWxvZy5pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxjQUFjLHFCQUFxQixDQUFDO0FBQ3BDLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQzVELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSAnLi9peHQtZGlhbG9nLm1vZHVsZSc7XHJcbmV4cG9ydCB7IEl4dERpYWxvZ0NvbXBvbmVudCB9IGZyb20gJy4vaXh0LWRpYWxvZy5jb21wb25lbnQnO1xyXG5leHBvcnQgeyBJeHREaWFsb2dTZXJ2aWNlIH0gZnJvbSAnLi9peHQtZGlhbG9nLnNlcnZpY2UnOyJdfQ==
|       |   |   |   --- ixt-dialog.module.mjs: // ixt-dialog.module.ts import { NgModule } from '@angular/core'; import { CommonModule } from '@angular/common'; import { MatButtonModule } from '@angular/material/button'; import { MatIconModule } from '@angular/material/icon'; import { IxtDialogComponent } from './ixt-dialog.component'; import { IxtDialogService } from './ixt-dialog.service'; // Add this import { FormsModule } from '@angular/forms'; import { SuccessDialogComponent } from './types/success/ixt-success-dialog.component'; import * as i0 from "@angular/core"; export class IxtDialogModule { static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtDialogModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); } static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "16.2.12", ngImport: i0, type: IxtDialogModule, declarations: [IxtDialogComponent, SuccessDialogComponent // Add this ], imports: [CommonModule, MatButtonModule, MatIconModule, FormsModule], exports: [IxtDialogComponent] }); } static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtDialogModule, providers: [IxtDialogService] // Add this , imports: [CommonModule, MatButtonModule, MatIconModule, FormsModule] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtDialogModule, decorators: [{ type: NgModule, args: [{ declarations: [ IxtDialogComponent, SuccessDialogComponent // Add this ], imports: [ CommonModule, MatButtonModule, MatIconModule, FormsModule ], exports: [IxtDialogComponent], providers: [IxtDialogService] // Add this }] }] }); //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXh0LWRpYWxvZy5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9peHQtZGlhbG9nL2l4dC1kaWFsb2cubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHVCQUF1QjtBQUN2QixPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDM0QsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQzVELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDLENBQUUsV0FBVztBQUNyRSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDN0MsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sOENBQThDLENBQUM7O0FBaUJ0RixNQUFNLE9BQU8sZUFBZTsrR0FBZixlQUFlO2dIQUFmLGVBQWUsaUJBYnhCLGtCQUFrQjtZQUNsQixzQkFBc0IsQ0FBRSxXQUFXO3FCQUluQyxZQUFZO1lBQ1osZUFBZTtZQUNmLGFBQWE7WUFDYixXQUFXLGFBRUgsa0JBQWtCO2dIQUdqQixlQUFlLGFBRmYsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFFLFdBQVc7b0JBTnhDLFlBQVk7WUFDWixlQUFlO1lBQ2YsYUFBYTtZQUNiLFdBQVc7OzRGQUtGLGVBQWU7a0JBZjNCLFFBQVE7bUJBQUM7b0JBQ1IsWUFBWSxFQUFFO3dCQUNaLGtCQUFrQjt3QkFDbEIsc0JBQXNCLENBQUUsV0FBVztxQkFFcEM7b0JBQ0QsT0FBTyxFQUFFO3dCQUNQLFlBQVk7d0JBQ1osZUFBZTt3QkFDZixhQUFhO3dCQUNiLFdBQVc7cUJBQ1o7b0JBQ0QsT0FBTyxFQUFFLENBQUMsa0JBQWtCLENBQUM7b0JBQzdCLFNBQVMsRUFBRSxDQUFDLGdCQUFnQixDQUFDLENBQUUsV0FBVztpQkFDM0MiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpeHQtZGlhbG9nLm1vZHVsZS50c1xyXG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xyXG5pbXBvcnQgeyBNYXRCdXR0b25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9idXR0b24nO1xyXG5pbXBvcnQgeyBNYXRJY29uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvaWNvbic7XHJcbmltcG9ydCB7IEl4dERpYWxvZ0NvbXBvbmVudCB9IGZyb20gJy4vaXh0LWRpYWxvZy5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBJeHREaWFsb2dTZXJ2aWNlIH0gZnJvbSAnLi9peHQtZGlhbG9nLnNlcnZpY2UnOyAgLy8gQWRkIHRoaXNcclxuaW1wb3J0IHsgRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XHJcbmltcG9ydCB7IFN1Y2Nlc3NEaWFsb2dDb21wb25lbnQgfSBmcm9tICcuL3R5cGVzL3N1Y2Nlc3MvaXh0LXN1Y2Nlc3MtZGlhbG9nLmNvbXBvbmVudCc7XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGRlY2xhcmF0aW9uczogW1xyXG4gICAgSXh0RGlhbG9nQ29tcG9uZW50LFxyXG4gICAgU3VjY2Vzc0RpYWxvZ0NvbXBvbmVudCAgLy8gQWRkIHRoaXNcclxuXHJcbiAgXSxcclxuICBpbXBvcnRzOiBbXHJcbiAgICBDb21tb25Nb2R1bGUsXHJcbiAgICBNYXRCdXR0b25Nb2R1bGUsXHJcbiAgICBNYXRJY29uTW9kdWxlLFxyXG4gICAgRm9ybXNNb2R1bGVcclxuICBdLFxyXG4gIGV4cG9ydHM6IFtJeHREaWFsb2dDb21wb25lbnRdLFxyXG4gIHByb3ZpZGVyczogW0l4dERpYWxvZ1NlcnZpY2VdICAvLyBBZGQgdGhpc1xyXG59KVxyXG5leHBvcnQgY2xhc3MgSXh0RGlhbG9nTW9kdWxlIHsgfSJdfQ==
|       |   |   |   --- ixt-dialog.service.mjs: // ixt-dialog.service.ts import { Injectable } from '@angular/core'; import { IxtDialogComponent } from './ixt-dialog.component'; import { firstValueFrom } from 'rxjs'; import { SuccessDialogComponent } from './types/success/ixt-success-dialog.component'; import * as i0 from "@angular/core"; export class IxtDialogService { constructor(componentFactoryResolver, appRef, injector) { this.componentFactoryResolver = componentFactoryResolver; this.appRef = appRef; this.injector = injector; } // async openDialog(component: Type<any>, title: string, message: string, modal: boolean = true): Promise<boolean> { // this.dialogComponentRef = this.componentFactoryResolver // .resolveComponentFactory(IxtDialogComponent) // .create(this.injector); // const instance = this.dialogComponentRef.instance; // instance.title = title; // instance.modal = modal; // this.appRef.attachView(this.dialogComponentRef.hostView); // const domElem = (this.dialogComponentRef.hostView as any).rootNodes[0]; // document.body.appendChild(domElem); // // Allow time for component initialization // await new Promise(resolve => requestAnimationFrame(resolve)); // // Just create once and set message // const contentComponent = instance.contentHost.createComponent(component); // contentComponent.instance.message = message; // instance.open(); // // Wait for dialog result // const result = await firstValueFrom(instance.close); // document.body.removeChild(domElem); // this.appRef.detachView(this.dialogComponentRef.hostView); // this.dialogComponentRef.destroy(); // return result; // } async openDialog(component, title, message, modal = true) { this.dialogComponentRef = this.componentFactoryResolver .resolveComponentFactory(IxtDialogComponent) .create(this.injector); const instance = this.dialogComponentRef.instance; instance.title = title; instance.modal = modal; this.appRef.attachView(this.dialogComponentRef.hostView); const domElem = this.dialogComponentRef.hostView.rootNodes[0]; document.body.appendChild(domElem); // Ensure ViewContainerRef is ready await new Promise(resolve => requestAnimationFrame(resolve)); // Clear any existing content instance.contentHost.clear(); // Create the component in the ViewContainerRef const contentComponentRef = instance.contentHost.createComponent(component); contentComponentRef.instance.message = message; instance.open(); const result = await firstValueFrom(instance.close); document.body.removeChild(domElem); this.appRef.detachView(this.dialogComponentRef.hostView); this.dialogComponentRef.destroy(); return result; } // async openDialog(component: Type<any>, title: string, message: string, modal: boolean = true): Promise<boolean> { // // Dynamically create the dialog component // this.dialogComponentRef = this.componentFactoryResolver // .resolveComponentFactory(IxtDialogComponent) // .create(this.injector); // // Attach the component to the view // this.appRef.attachView(this.dialogComponentRef.hostView); // // Append the component to the DOM // const componentElement = (this.dialogComponentRef.hostView as any).rootNodes[0]; // document.body.appendChild(componentElement); // // Set inputs on the dialog component // const instance = this.dialogComponentRef.instance; // instance.title = title; // instance.message = message; // Set message input // instance.modal = modal; // // Open the dialog // instance.open(); // // Return a promise that resolves when the dialog emits `close` // return firstValueFrom(instance.close); // } closeDialog(result) { if (this.dialogComponentRef) { this.dialogComponentRef.instance.closeDialog(result); } } // async success(message: string, title: string): Promise<boolean> { // return await this.openDialog(SuccessDialogComponent, title, true); // } // async success(message: string, title: string): Promise<boolean> { // const dialogRef = this.componentFactoryResolver // .resolveComponentFactory(SuccessDialogComponent) // .create(this.injector); // // Set the message before creating dialog // dialogRef.instance.message = message; // return await this.openDialog(SuccessDialogComponent, message, title, true); // } async success(message, title) { return await this.openDialog(SuccessDialogComponent, title, message, true); } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtDialogService, deps: [{ token: i0.ComponentFactoryResolver }, { token: i0.ApplicationRef }, { token: i0.Injector }], target: i0.ɵɵFactoryTarget.Injectable }); } static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtDialogService, providedIn: 'root' }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtDialogService, decorators: [{ type: Injectable, args: [{ providedIn: 'root' }] }], ctorParameters: function () { return [{ type: i0.ComponentFactoryResolver }, { type: i0.ApplicationRef }, { type: i0.Injector }]; } }); //# sourceMappingURL=data:application/json;base64,
|       |   |   +-- ixt-expression-builder
|       |   |   |   --- ixt-expression-builder.component.mjs: // ixt-expression-builder.component.ts import { Component, Input, Output, EventEmitter } from '@angular/core'; import * as i0 from "@angular/core"; import * as i1 from "@angular/common"; import * as i2 from "@angular/forms"; export class IxtExpressionBuilderComponent { constructor() { this.group = { type: 'group', operator: 'and', children: [] }; this.level = 0; this.groupChange = new EventEmitter(); this.fields = [ { id: 'al', label: 'Airline', type: 'text' }, { id: 'base', label: 'Base', type: 'text' }, { id: 'ref', label: 'Reference', type: 'text' } ]; this.operators = { text: [ { id: 'eq', label: '=', type: 'single' }, { id: 'neq', label: '≠', type: 'single' }, { id: 'in', label: 'IN', type: 'multiple' }, { id: 'not_in', label: 'NOT IN', type: 'multiple' } ] }; } get rootGroup() { return this.group; } ngOnInit() { if (!this.group || this.group.children.length === 0) { this.group = { type: 'group', operator: 'and', children: [ { type: 'expression', field: 'al', operator: 'eq', value: 'AA', values: [] }, { type: 'group', operator: 'or', children: [ { type: 'expression', field: 'base', operator: 'in', value: '', values: ['DFW', 'ORD', 'MIA'] }, { type: 'expression', field: 'ref', operator: 'in', value: '', values: ['DFW', 'ORD', 'MIA'] } ] } ] }; this.emitChange(); // Notify parent of the initial value } } // Rest of your code remains the same... addExpression() { const newExpression = { type: 'expression', field: '', operator: '', value: '', values: [] }; this.group.children.push(newExpression); this.emitChange(); } addGroup() { const newGroup = { type: 'group', operator: 'and', children: [] }; this.group.children.push(newGroup); this.emitChange(); } removeExpression(index) { this.group.children.splice(index, 1); this.emitChange(); } getOperators(fieldId) { const field = this.fields.find(f => f.id === fieldId); return field ? this.operators[field.type] || [] : []; } getOperatorType(operatorId) { for (const operators of Object.values(this.operators)) { const operator = operators.find(op => op.id === operatorId); if (operator) { return operator.type; } } return null; } addValue(expression) { if (!expression.values) { expression.values = []; } expression.values.push(''); this.emitChange(); } removeValue(expression, index) { if (expression.values) { expression.values.splice(index, 1); this.emitChange(); } } onChildGroupChange(index, childGroup) { this.group.children[index] = childGroup; this.emitChange(); } toJsonLogic() { return this.convertToJsonLogic(this.group); } convertToJsonLogic(node) { if (node.type === 'expression') { if (node.operator === 'in' || node.operator === 'not_in') { return { [node.operator === 'in' ? 'in' : '!in']: [ { var: node.field }, node.values || [] ] }; } return { [node.operator]: [ { var: node.field }, node.value ] }; } if (node.children.length === 0) return true; if (node.children.length === 1) { return this.convertToJsonLogic(node.children[0]); } return { [node.operator]: node.children.map(child => this.convertToJsonLogic(child)) }; } emitChange() { this.groupChange.emit(this.group); } updateValue(expression, index, value) { if (!expression.values) { expression.values = []; } expression.values[index] = value; this.emitChange(); } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtExpressionBuilderComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); } static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: IxtExpressionBuilderComponent, selector: "ixt-expression-builder", inputs: { group: "group", level: "level" }, outputs: { groupChange: "groupChange" }, ngImport: i0, template: "<!-- ixt-expression-builder.component.html -->\r\n<div class=\"expression-builder\">\r\n <div class=\"group-container\">\r\n <select [(ngModel)]=\"group.operator\" class=\"group-operator\">\r\n <option value=\"and\">AND</option>\r\n <option value=\"or\">OR</option>\r\n </select>\r\n\r\n <div class=\"expressions-list\">\r\n <div *ngFor=\"let node of rootGroup.children; let i = index\" class=\"expression-row\">\r\n <div *ngIf=\"node.type === 'expression'\" class=\"expression-container\">\r\n <select [(ngModel)]=\"node.field\" class=\"field-select\">\r\n <option value=\"\">Select Field</option>\r\n <option *ngFor=\"let field of fields\" [value]=\"field.id\">\r\n {{field.label}}\r\n </option>\r\n </select>\r\n\r\n <select [(ngModel)]=\"node.operator\" class=\"operator-select\">\r\n <option value=\"\">Select Operator</option>\r\n <option *ngFor=\"let op of getOperators(node.field)\" [value]=\"op.id\">\r\n {{op.label}}\r\n </option>\r\n </select>\r\n\r\n <ng-container [ngSwitch]=\"getOperatorType(node.operator)\">\r\n <input *ngSwitchCase=\"'single'\" \r\n type=\"text\" \r\n [(ngModel)]=\"node.value\" \r\n class=\"value-input\">\r\n \r\n <div *ngSwitchCase=\"'multiple'\" class=\"multi-value-container\">\r\n <div *ngFor=\"let val of node.values; let j = index\" class=\"multi-value-item\">\r\n <input type=\"text\" [(ngModel)]=\"node.values[j]\">\r\n <button (click)=\"removeValue(node, j)\" class=\"remove-btn\">\u00D7</button>\r\n </div>\r\n <button (click)=\"addValue(node)\" class=\"add-value\">+ Add Value</button>\r\n </div>\r\n </ng-container>\r\n\r\n <button (click)=\"removeExpression(i)\" class=\"remove-btn\">\u00D7</button>\r\n </div>\r\n\r\n <div *ngIf=\"node.type === 'group'\" class=\"nested-group\">\r\n <ixt-expression-builder\r\n [group]=\"node\"\r\n [level]=\"level + 1\"\r\n (groupChange)=\"onChildGroupChange(i, $event)\">\r\n </ixt-expression-builder>\r\n </div>\r\n </div>\r\n </div>\r\n\r\n <div class=\"action-buttons\">\r\n <button (click)=\"addExpression()\" class=\"add-btn\">Add Expression</button>\r\n <button (click)=\"addGroup()\" class=\"add-btn\">Add Group</button>\r\n </div>\r\n </div>\r\n</div>", styles: [".expression-builder{padding:1rem}.expression-builder .group-container{border-left:2px solid #ccc;margin-left:1rem;padding-left:1rem}.expression-builder .group-container:first-child{border-left:none;margin-left:0}.expression-builder .expression-row{margin:.5rem 0}.expression-builder .expression-container{display:flex;gap:.5rem;align-items:center}.expression-builder .expression-container select,.expression-builder .expression-container input{padding:.25rem .5rem;border:1px solid #ccc;border-radius:4px;min-width:120px}.expression-builder .expression-container .field-select,.expression-builder .expression-container .operator-select{flex:0 0 auto}.expression-builder .expression-container .value-input{flex:1 1 auto}.expression-builder .multi-value-container{display:flex;flex-direction:column;gap:.25rem;flex:1 1 auto}.expression-builder .multi-value-container .multi-value-item{display:flex;gap:.25rem}.expression-builder .multi-value-container .multi-value-item input{flex:1 1 auto}.expression-builder .action-buttons{margin-top:1rem;display:flex;gap:.5rem}.expression-builder button{padding:.25rem .5rem;border:1px solid #ccc;border-radius:4px;background:#fff;cursor:pointer}.expression-builder button:hover{background:#f0f0f0}.expression-builder button.add-btn{color:#06c;border-color:#06c}.expression-builder .remove-btn{padding:.25rem .5rem;color:red;border:none;background:transparent}.expression-builder .group-operator{margin-bottom:.5rem;font-weight:500}\n"], dependencies: [{ kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i1.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { kind: "directive", type: i1.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { kind: "directive", type: i2.NgSelectOption, selector: "option", inputs: ["ngValue", "value"] }, { kind: "directive", type: i2.ɵNgSelectMultipleOption, selector: "option", inputs: ["ngValue", "value"] }, { kind: "directive", type: i2.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i2.SelectControlValueAccessor, selector: "select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]", inputs: ["compareWith"] }, { kind: "directive", type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i2.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "component", type: IxtExpressionBuilderComponent, selector: "ixt-expression-builder", inputs: ["group", "level"], outputs: ["groupChange"] }] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtExpressionBuilderComponent, decorators: [{ type: Component, args: [{ selector: 'ixt-expression-builder', template: "<!-- ixt-expression-builder.component.html -->\r\n<div class=\"expression-builder\">\r\n <div class=\"group-container\">\r\n <select [(ngModel)]=\"group.operator\" class=\"group-operator\">\r\n <option value=\"and\">AND</option>\r\n <option value=\"or\">OR</option>\r\n </select>\r\n\r\n <div class=\"expressions-list\">\r\n <div *ngFor=\"let node of rootGroup.children; let i = index\" class=\"expression-row\">\r\n <div *ngIf=\"node.type === 'expression'\" class=\"expression-container\">\r\n <select [(ngModel)]=\"node.field\" class=\"field-select\">\r\n <option value=\"\">Select Field</option>\r\n <option *ngFor=\"let field of fields\" [value]=\"field.id\">\r\n {{field.label}}\r\n </option>\r\n </select>\r\n\r\n <select [(ngModel)]=\"node.operator\" class=\"operator-select\">\r\n <option value=\"\">Select Operator</option>\r\n <option *ngFor=\"let op of getOperators(node.field)\" [value]=\"op.id\">\r\n {{op.label}}\r\n </option>\r\n </select>\r\n\r\n <ng-container [ngSwitch]=\"getOperatorType(node.operator)\">\r\n <input *ngSwitchCase=\"'single'\" \r\n type=\"text\" \r\n [(ngModel)]=\"node.value\" \r\n class=\"value-input\">\r\n \r\n <div *ngSwitchCase=\"'multiple'\" class=\"multi-value-container\">\r\n <div *ngFor=\"let val of node.values; let j = index\" class=\"multi-value-item\">\r\n <input type=\"text\" [(ngModel)]=\"node.values[j]\">\r\n <button (click)=\"removeValue(node, j)\" class=\"remove-btn\">\u00D7</button>\r\n </div>\r\n <button (click)=\"addValue(node)\" class=\"add-value\">+ Add Value</button>\r\n </div>\r\n </ng-container>\r\n\r\n <button (click)=\"removeExpression(i)\" class=\"remove-btn\">\u00D7</button>\r\n </div>\r\n\r\n <div *ngIf=\"node.type === 'group'\" class=\"nested-group\">\r\n <ixt-expression-builder\r\n [group]=\"node\"\r\n [level]=\"level + 1\"\r\n (groupChange)=\"onChildGroupChange(i, $event)\">\r\n </ixt-expression-builder>\r\n </div>\r\n </div>\r\n </div>\r\n\r\n <div class=\"action-buttons\">\r\n <button (click)=\"addExpression()\" class=\"add-btn\">Add Expression</button>\r\n <button (click)=\"addGroup()\" class=\"add-btn\">Add Group</button>\r\n </div>\r\n </div>\r\n</div>", styles: [".expression-builder{padding:1rem}.expression-builder .group-container{border-left:2px solid #ccc;margin-left:1rem;padding-left:1rem}.expression-builder .group-container:first-child{border-left:none;margin-left:0}.expression-builder .expression-row{margin:.5rem 0}.expression-builder .expression-container{display:flex;gap:.5rem;align-items:center}.expression-builder .expression-container select,.expression-builder .expression-container input{padding:.25rem .5rem;border:1px solid #ccc;border-radius:4px;min-width:120px}.expression-builder .expression-container .field-select,.expression-builder .expression-container .operator-select{flex:0 0 auto}.expression-builder .expression-container .value-input{flex:1 1 auto}.expression-builder .multi-value-container{display:flex;flex-direction:column;gap:.25rem;flex:1 1 auto}.expression-builder .multi-value-container .multi-value-item{display:flex;gap:.25rem}.expression-builder .multi-value-container .multi-value-item input{flex:1 1 auto}.expression-builder .action-buttons{margin-top:1rem;display:flex;gap:.5rem}.expression-builder button{padding:.25rem .5rem;border:1px solid #ccc;border-radius:4px;background:#fff;cursor:pointer}.expression-builder button:hover{background:#f0f0f0}.expression-builder button.add-btn{color:#06c;border-color:#06c}.expression-builder .remove-btn{padding:.25rem .5rem;color:red;border:none;background:transparent}.expression-builder .group-operator{margin-bottom:.5rem;font-weight:500}\n"] }] }], propDecorators: { group: [{ type: Input }], level: [{ type: Input }], groupChange: [{ type: Output }] } }); //# sourceMappingURL=data:application/json;base64,
|       |   |   |   --- ixt-expression-builder.index.mjs: // ixt-expression-builder.index.ts export * from './ixt-expression-builder.component'; export * from './ixt-expression-builder.module'; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXh0LWV4cHJlc3Npb24tYnVpbGRlci5pbmRleC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL2l4dC1leHByZXNzaW9uLWJ1aWxkZXIvaXh0LWV4cHJlc3Npb24tYnVpbGRlci5pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxrQ0FBa0M7QUFDbEMsY0FBYyxvQ0FBb0MsQ0FBQztBQUNuRCxjQUFjLGlDQUFpQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gaXh0LWV4cHJlc3Npb24tYnVpbGRlci5pbmRleC50c1xyXG5leHBvcnQgKiBmcm9tICcuL2l4dC1leHByZXNzaW9uLWJ1aWxkZXIuY29tcG9uZW50JztcclxuZXhwb3J0ICogZnJvbSAnLi9peHQtZXhwcmVzc2lvbi1idWlsZGVyLm1vZHVsZSc7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIEV4cHJlc3Npb25Ob2RlIHtcclxuICBpZDogc3RyaW5nO1xyXG4gIGZpZWxkOiBzdHJpbmc7XHJcbiAgb3BlcmF0b3I6IHN0cmluZztcclxuICB2YWx1ZTogc3RyaW5nO1xyXG4gIHR5cGU6ICdleHByZXNzaW9uJztcclxuICB2YWx1ZXM6IHN0cmluZ1tdO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIEV4cHJlc3Npb25Hcm91cCB7XHJcbiAgdHlwZTogJ2dyb3VwJztcclxuICBvcGVyYXRvcjogJ2FuZCcgfCAnb3InO1xyXG4gIGNoaWxkcmVuOiAoRXhwcmVzc2lvbiB8IEV4cHJlc3Npb25Hcm91cClbXTtcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBFeHByZXNzaW9uIHtcclxuICB0eXBlOiAnZXhwcmVzc2lvbic7XHJcbiAgZmllbGQ6IHN0cmluZztcclxuICBvcGVyYXRvcjogc3RyaW5nO1xyXG4gIHZhbHVlOiBzdHJpbmc7XHJcbiAgdmFsdWVzOiBzdHJpbmdbXTtcclxufSJdfQ==
|       |   |   |   --- ixt-expression-builder.interfaces.mjs: export {}; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXh0LWV4cHJlc3Npb24tYnVpbGRlci5pbnRlcmZhY2VzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvaXh0LWV4cHJlc3Npb24tYnVpbGRlci9peHQtZXhwcmVzc2lvbi1idWlsZGVyLmludGVyZmFjZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZXNDb250ZW50IjpbIi8vIGl4dC1leHByZXNzaW9uLWJ1aWxkZXIuaW50ZXJmYWNlcy50c1xyXG5leHBvcnQgaW50ZXJmYWNlIEZpZWxkIHtcclxuICAgIGlkOiBzdHJpbmc7XHJcbiAgICBsYWJlbDogc3RyaW5nO1xyXG4gICAgdHlwZTogc3RyaW5nO1xyXG4gIH1cclxuICBcclxuICBleHBvcnQgaW50ZXJmYWNlIE9wZXJhdG9yIHtcclxuICAgIGlkOiBzdHJpbmc7XHJcbiAgICBsYWJlbDogc3RyaW5nO1xyXG4gICAgdHlwZTogJ3NpbmdsZScgfCAnbXVsdGlwbGUnO1xyXG4gIH1cclxuICBcclxuICAvLyBpeHQtZXhwcmVzc2lvbi1idWlsZGVyLmludGVyZmFjZXMudHMgLSBVcGRhdGUgdGhlIEV4cHJlc3Npb24gaW50ZXJmYWNlXHJcbiAgZXhwb3J0IGludGVyZmFjZSBFeHByZXNzaW9uIHtcclxuICAgIHR5cGU6ICdleHByZXNzaW9uJztcclxuICAgIGZpZWxkOiBzdHJpbmc7XHJcbiAgICBvcGVyYXRvcjogc3RyaW5nO1xyXG4gICAgdmFsdWU6IHN0cmluZztcclxuICAgIHZhbHVlczogc3RyaW5nW107XHJcbiAgfVxyXG4gIFxyXG4gIGV4cG9ydCBpbnRlcmZhY2UgRXhwcmVzc2lvbkdyb3VwIHtcclxuICAgIHR5cGU6ICdncm91cCc7XHJcbiAgICBvcGVyYXRvcjogJ2FuZCcgfCAnb3InO1xyXG4gICAgY2hpbGRyZW46IChFeHByZXNzaW9uIHwgRXhwcmVzc2lvbkdyb3VwKVtdO1xyXG4gIH0iXX0=
|       |   |   |   --- ixt-expression-builder.module.mjs: import { NgModule } from '@angular/core'; import { CommonModule } from '@angular/common'; import { FormsModule } from '@angular/forms'; import { IxtExpressionBuilderComponent } from './ixt-expression-builder.component'; import * as i0 from "@angular/core"; export class IxtExpressionBuilderModule { static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtExpressionBuilderModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); } static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "16.2.12", ngImport: i0, type: IxtExpressionBuilderModule, declarations: [IxtExpressionBuilderComponent], imports: [CommonModule, FormsModule], exports: [IxtExpressionBuilderComponent] }); } static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtExpressionBuilderModule, imports: [CommonModule, FormsModule] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtExpressionBuilderModule, decorators: [{ type: NgModule, args: [{ declarations: [ IxtExpressionBuilderComponent ], imports: [ CommonModule, FormsModule ], exports: [ IxtExpressionBuilderComponent ] }] }] }); //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXh0LWV4cHJlc3Npb24tYnVpbGRlci5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9peHQtZXhwcmVzc2lvbi1idWlsZGVyL2l4dC1leHByZXNzaW9uLWJ1aWxkZXIubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM3QyxPQUFPLEVBQUUsNkJBQTZCLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQzs7QUFjbkYsTUFBTSxPQUFPLDBCQUEwQjsrR0FBMUIsMEJBQTBCO2dIQUExQiwwQkFBMEIsaUJBVm5DLDZCQUE2QixhQUc3QixZQUFZO1lBQ1osV0FBVyxhQUdYLDZCQUE2QjtnSEFHcEIsMEJBQTBCLFlBUG5DLFlBQVk7WUFDWixXQUFXOzs0RkFNRiwwQkFBMEI7a0JBWnRDLFFBQVE7bUJBQUM7b0JBQ1IsWUFBWSxFQUFFO3dCQUNaLDZCQUE2QjtxQkFDOUI7b0JBQ0QsT0FBTyxFQUFFO3dCQUNQLFlBQVk7d0JBQ1osV0FBVztxQkFDWjtvQkFDRCxPQUFPLEVBQUU7d0JBQ1AsNkJBQTZCO3FCQUM5QjtpQkFDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XHJcbmltcG9ydCB7IEZvcm1zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xyXG5pbXBvcnQgeyBJeHRFeHByZXNzaW9uQnVpbGRlckNvbXBvbmVudCB9IGZyb20gJy4vaXh0LWV4cHJlc3Npb24tYnVpbGRlci5jb21wb25lbnQnO1xyXG5cclxuQE5nTW9kdWxlKHtcclxuICBkZWNsYXJhdGlvbnM6IFtcclxuICAgIEl4dEV4cHJlc3Npb25CdWlsZGVyQ29tcG9uZW50XHJcbiAgXSxcclxuICBpbXBvcnRzOiBbXHJcbiAgICBDb21tb25Nb2R1bGUsXHJcbiAgICBGb3Jtc01vZHVsZVxyXG4gIF0sXHJcbiAgZXhwb3J0czogW1xyXG4gICAgSXh0RXhwcmVzc2lvbkJ1aWxkZXJDb21wb25lbnRcclxuICBdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBJeHRFeHByZXNzaW9uQnVpbGRlck1vZHVsZSB7IH1cclxuIl19
|       |   |   +-- ixt-layer-manager
|       |   |   |   --- ixt-layer-manager.component.mjs: // ixt-layer-manager.component.ts import { Component, Input, Output, EventEmitter } from '@angular/core'; import { moveItemInArray } from '@angular/cdk/drag-drop'; import * as i0 from "@angular/core"; import * as i1 from "@angular/common"; import * as i2 from "@angular/cdk/drag-drop"; export class IxtLayerManagerComponent { constructor() { this.layers = []; this.layerChange = new EventEmitter(); this.layerOrderChange = new EventEmitter(); this.selectedLayer = null; this.showColorPicker = false; this.activeProperty = null; this.showStrokeStylePicker = false; this.strokeStyles = ['solid', 'dashed', 'dotted']; } ngOnInit() { this.sortLayers(); } sortLayers() { this.layers.sort((a, b) => a.order - b.order); } onDrop(event) { moveItemInArray(this.layers, event.previousIndex, event.currentIndex); this.layers.forEach((layer, index) => { layer.order = index; }); this.layerOrderChange.emit(this.layers); } toggleVisibility(layer) { layer.visible = !layer.visible; this.layerChange.emit(this.layers); } openColorPicker(layer, property) { this.selectedLayer = layer; this.activeProperty = property; this.showColorPicker = true; } openStrokeStylePicker(layer) { this.selectedLayer = layer; this.showStrokeStylePicker = true; } onColorSelect(color) { if (this.selectedLayer && this.activeProperty) { if (this.activeProperty === 'fill') { this.selectedLayer.fillColor = color; } else { this.selectedLayer.strokeColor = color; } this.layerChange.emit(this.layers); } } onStrokeStyleSelect(style) { if (this.selectedLayer) { this.selectedLayer.strokeStyle = style; this.layerChange.emit(this.layers); this.closeStrokeStylePicker(); } } closeColorPicker() { this.showColorPicker = false; this.selectedLayer = null; this.activeProperty = null; } closeStrokeStylePicker() { this.showStrokeStylePicker = false; this.selectedLayer = null; } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtLayerManagerComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); } static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: IxtLayerManagerComponent, selector: "ixt-layer-manager", inputs: { layers: "layers" }, outputs: { layerChange: "layerChange", layerOrderChange: "layerOrderChange" }, ngImport: i0, template: "<!-- ixt-layer-manager.component.html -->\r\n<div class=\"layer-manager\">\r\n <div class=\"manager-header\">\r\n <div class=\"header-content\">\r\n <span class=\"header-icon\">\u27F0</span>\r\n <h2>Layers</h2>\r\n </div>\r\n </div>\r\n\r\n <div class=\"layer-list\" cdkDropList (cdkDropListDropped)=\"onDrop($event)\">\r\n <div class=\"layer-puck\" *ngFor=\"let layer of layers\" cdkDrag>\r\n <div class=\"drag-handle\">\u22EE</div>\r\n \r\n <span class=\"layer-name\">{{ layer.name }}</span>\r\n \r\n <div class=\"layer-controls\">\r\n <button class=\"control-btn\" (click)=\"openColorPicker(layer, 'fill')\">\r\n <span class=\"icon\" [style.color]=\"layer.fillColor\">\u25CF</span>\r\n </button>\r\n <button class=\"control-btn\" (click)=\"openColorPicker(layer, 'stroke')\">\r\n <span class=\"icon\" [style.color]=\"layer.strokeColor\">\u25CB</span>\r\n </button>\r\n <button class=\"control-btn\" (click)=\"openStrokeStylePicker(layer)\">\r\n <span class=\"icon\" [ngClass]=\"layer.strokeStyle\">\u2500</span>\r\n </button>\r\n <button class=\"control-btn\" (click)=\"toggleVisibility(layer)\">\r\n <span class=\"icon\">{{ layer.visible ? '\uD83D\uDC41' : '\uD83D\uDC41\u200D\uD83D\uDDE8' }}</span>\r\n </button>\r\n </div>\r\n </div>\r\n </div>\r\n</div>", styles: [".layer-manager{width:100%;height:100%;background:#fff;border:1px solid #e5e7eb;display:flex;flex-direction:column;overflow:hidden}.manager-header{padding:1rem;border-bottom:1px solid #e5e7eb;background:#f9fafb}.manager-header .header-content{display:flex;align-items:center;gap:.5rem}.manager-header .header-content .header-icon{color:#3b82f6}.manager-header .header-content h2{font-size:.875rem;font-weight:500;color:#111827;margin:0}.layer-list{flex:1;overflow-y:auto;padding:.5rem;display:flex;flex-direction:column;gap:.25rem}.layer-puck{display:flex;align-items:center;gap:.75rem;padding:.5rem;background:#fff;border:1px solid #e5e7eb;border-radius:.5rem;cursor:move}.layer-puck:hover{border-color:#3b82f6}.drag-handle{color:#9ca3af;cursor:move;-webkit-user-select:none;user-select:none}.drag-handle:hover{color:#6b7280}.layer-name{flex:1;font-size:.875rem;font-weight:500;color:#374151}.layer-controls{display:flex;gap:.5rem}.control-btn{padding:.25rem;border:none;background:transparent;border-radius:.375rem;cursor:pointer}.control-btn:hover{background:#f3f4f6}.icon{display:inline-block;font-size:1rem;line-height:1}.icon.solid{border-bottom:2px solid currentColor}.icon.dashed{border-bottom:2px dashed currentColor}.icon.dotted{border-bottom:2px dotted currentColor}\n"], dependencies: [{ kind: "directive", type: i1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i2.CdkDropList, selector: "[cdkDropList], cdk-drop-list", inputs: ["cdkDropListConnectedTo", "cdkDropListData", "cdkDropListOrientation", "id", "cdkDropListLockAxis", "cdkDropListDisabled", "cdkDropListSortingDisabled", "cdkDropListEnterPredicate", "cdkDropListSortPredicate", "cdkDropListAutoScrollDisabled", "cdkDropListAutoScrollStep"], outputs: ["cdkDropListDropped", "cdkDropListEntered", "cdkDropListExited", "cdkDropListSorted"], exportAs: ["cdkDropList"] }, { kind: "directive", type: i2.CdkDrag, selector: "[cdkDrag]", inputs: ["cdkDragData", "cdkDragLockAxis", "cdkDragRootElement", "cdkDragBoundary", "cdkDragStartDelay", "cdkDragFreeDragPosition", "cdkDragDisabled", "cdkDragConstrainPosition", "cdkDragPreviewClass", "cdkDragPreviewContainer"], outputs: ["cdkDragStarted", "cdkDragReleased", "cdkDragEnded", "cdkDragEntered", "cdkDragExited", "cdkDragDropped", "cdkDragMoved"], exportAs: ["cdkDrag"] }] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtLayerManagerComponent, decorators: [{ type: Component, args: [{ selector: 'ixt-layer-manager', template: "<!-- ixt-layer-manager.component.html -->\r\n<div class=\"layer-manager\">\r\n <div class=\"manager-header\">\r\n <div class=\"header-content\">\r\n <span class=\"header-icon\">\u27F0</span>\r\n <h2>Layers</h2>\r\n </div>\r\n </div>\r\n\r\n <div class=\"layer-list\" cdkDropList (cdkDropListDropped)=\"onDrop($event)\">\r\n <div class=\"layer-puck\" *ngFor=\"let layer of layers\" cdkDrag>\r\n <div class=\"drag-handle\">\u22EE</div>\r\n \r\n <span class=\"layer-name\">{{ layer.name }}</span>\r\n \r\n <div class=\"layer-controls\">\r\n <button class=\"control-btn\" (click)=\"openColorPicker(layer, 'fill')\">\r\n <span class=\"icon\" [style.color]=\"layer.fillColor\">\u25CF</span>\r\n </button>\r\n <button class=\"control-btn\" (click)=\"openColorPicker(layer, 'stroke')\">\r\n <span class=\"icon\" [style.color]=\"layer.strokeColor\">\u25CB</span>\r\n </button>\r\n <button class=\"control-btn\" (click)=\"openStrokeStylePicker(layer)\">\r\n <span class=\"icon\" [ngClass]=\"layer.strokeStyle\">\u2500</span>\r\n </button>\r\n <button class=\"control-btn\" (click)=\"toggleVisibility(layer)\">\r\n <span class=\"icon\">{{ layer.visible ? '\uD83D\uDC41' : '\uD83D\uDC41\u200D\uD83D\uDDE8' }}</span>\r\n </button>\r\n </div>\r\n </div>\r\n </div>\r\n</div>", styles: [".layer-manager{width:100%;height:100%;background:#fff;border:1px solid #e5e7eb;display:flex;flex-direction:column;overflow:hidden}.manager-header{padding:1rem;border-bottom:1px solid #e5e7eb;background:#f9fafb}.manager-header .header-content{display:flex;align-items:center;gap:.5rem}.manager-header .header-content .header-icon{color:#3b82f6}.manager-header .header-content h2{font-size:.875rem;font-weight:500;color:#111827;margin:0}.layer-list{flex:1;overflow-y:auto;padding:.5rem;display:flex;flex-direction:column;gap:.25rem}.layer-puck{display:flex;align-items:center;gap:.75rem;padding:.5rem;background:#fff;border:1px solid #e5e7eb;border-radius:.5rem;cursor:move}.layer-puck:hover{border-color:#3b82f6}.drag-handle{color:#9ca3af;cursor:move;-webkit-user-select:none;user-select:none}.drag-handle:hover{color:#6b7280}.layer-name{flex:1;font-size:.875rem;font-weight:500;color:#374151}.layer-controls{display:flex;gap:.5rem}.control-btn{padding:.25rem;border:none;background:transparent;border-radius:.375rem;cursor:pointer}.control-btn:hover{background:#f3f4f6}.icon{display:inline-block;font-size:1rem;line-height:1}.icon.solid{border-bottom:2px solid currentColor}.icon.dashed{border-bottom:2px dashed currentColor}.icon.dotted{border-bottom:2px dotted currentColor}\n"] }] }], propDecorators: { layers: [{ type: Input }], layerChange: [{ type: Output }], layerOrderChange: [{ type: Output }] } }); //# sourceMappingURL=data:application/json;base64,
|       |   |   |   --- ixt-layer-manager.index.mjs: // ixt-layer-manager.index.ts export * from './ixt-layer-manager.component'; export * from './ixt-layer-manager.module'; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXh0LWxheWVyLW1hbmFnZXIuaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9peHQtbGF5ZXItbWFuYWdlci9peHQtbGF5ZXItbWFuYWdlci5pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSw2QkFBNkI7QUFDN0IsY0FBYywrQkFBK0IsQ0FBQztBQUM5QyxjQUFjLDRCQUE0QixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gaXh0LWxheWVyLW1hbmFnZXIuaW5kZXgudHNcclxuZXhwb3J0ICogZnJvbSAnLi9peHQtbGF5ZXItbWFuYWdlci5jb21wb25lbnQnO1xyXG5leHBvcnQgKiBmcm9tICcuL2l4dC1sYXllci1tYW5hZ2VyLm1vZHVsZSc7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIExheWVyIHtcclxuICBpZDogc3RyaW5nO1xyXG4gIG5hbWU6IHN0cmluZztcclxuICB2aXNpYmxlOiBib29sZWFuO1xyXG4gIGZpbGxDb2xvcjogc3RyaW5nO1xyXG4gIHN0cm9rZUNvbG9yOiBzdHJpbmc7XHJcbiAgc3Ryb2tlU3R5bGU6ICdzb2xpZCcgfCAnZGFzaGVkJyB8ICdkb3R0ZWQnO1xyXG4gIG9yZGVyOiBudW1iZXI7XHJcbn0iXX0=
|       |   |   |   --- ixt-layer-manager.module.mjs: import { NgModule } from '@angular/core'; import { CommonModule } from '@angular/common'; import { DragDropModule } from '@angular/cdk/drag-drop'; import { IxtLayerManagerComponent } from './ixt-layer-manager.component'; import * as i0 from "@angular/core"; export class IxtLayerManagerModule { static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtLayerManagerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); } static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "16.2.12", ngImport: i0, type: IxtLayerManagerModule, declarations: [IxtLayerManagerComponent], imports: [CommonModule, DragDropModule], exports: [IxtLayerManagerComponent] }); } static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtLayerManagerModule, imports: [CommonModule, DragDropModule] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtLayerManagerModule, decorators: [{ type: NgModule, args: [{ declarations: [IxtLayerManagerComponent], imports: [ CommonModule, DragDropModule ], exports: [IxtLayerManagerComponent] }] }] }); //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXh0LWxheWVyLW1hbmFnZXIubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvaXh0LWxheWVyLW1hbmFnZXIvaXh0LWxheWVyLW1hbmFnZXIubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUN4RCxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQzs7QUFVekUsTUFBTSxPQUFPLHFCQUFxQjsrR0FBckIscUJBQXFCO2dIQUFyQixxQkFBcUIsaUJBUGpCLHdCQUF3QixhQUVyQyxZQUFZO1lBQ1osY0FBYyxhQUVOLHdCQUF3QjtnSEFFdkIscUJBQXFCLFlBTDlCLFlBQVk7WUFDWixjQUFjOzs0RkFJTCxxQkFBcUI7a0JBUmpDLFFBQVE7bUJBQUM7b0JBQ1IsWUFBWSxFQUFFLENBQUMsd0JBQXdCLENBQUM7b0JBQ3hDLE9BQU8sRUFBRTt3QkFDUCxZQUFZO3dCQUNaLGNBQWM7cUJBQ2Y7b0JBQ0QsT0FBTyxFQUFFLENBQUMsd0JBQXdCLENBQUM7aUJBQ3BDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcclxuaW1wb3J0IHsgRHJhZ0Ryb3BNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jZGsvZHJhZy1kcm9wJztcclxuaW1wb3J0IHsgSXh0TGF5ZXJNYW5hZ2VyQ29tcG9uZW50IH0gZnJvbSAnLi9peHQtbGF5ZXItbWFuYWdlci5jb21wb25lbnQnO1xyXG5cclxuQE5nTW9kdWxlKHtcclxuICBkZWNsYXJhdGlvbnM6IFtJeHRMYXllck1hbmFnZXJDb21wb25lbnRdLFxyXG4gIGltcG9ydHM6IFtcclxuICAgIENvbW1vbk1vZHVsZSxcclxuICAgIERyYWdEcm9wTW9kdWxlXHJcbiAgXSxcclxuICBleHBvcnRzOiBbSXh0TGF5ZXJNYW5hZ2VyQ29tcG9uZW50XVxyXG59KVxyXG5leHBvcnQgY2xhc3MgSXh0TGF5ZXJNYW5hZ2VyTW9kdWxlIHsgfVxyXG4iXX0=
|       |   |   +-- ixt-map
|       |   |   |   --- geo-processing.service.mjs: // Create the GeoJSON processing service (geo-processing.service.ts) import { Injectable } from '@angular/core'; import * as d3 from 'd3'; import * as i0 from "@angular/core"; export class GeoProcessingService { processFeatures(features, options = {}) { let processedFeatures = [...features]; // Apply route interpolation if needed if (options.interpolateRoutes) { processedFeatures = this.interpolateRoutes(processedFeatures, { pointsPerRoute: options.pointsPerRoute, minPoints: options.minPointsPerRoute }); } // Apply filtering if expression provided if (options.filterExpression) { processedFeatures = this.filterFeatures(processedFeatures, options.filterExpression); } return processedFeatures; } interpolateRoutes(features, options = {}) { const minPoints = options.minPoints || 5; return features.map(feature => { if (feature.geometry.type !== 'LineString') { return feature; } const line = feature.geometry; const coordinates = line.coordinates; if (coordinates.length !== 2) { return feature; } const start = coordinates[0]; const end = coordinates[1]; const route = d3.geoInterpolate(start, end); // Calculate distance and points const distance = d3.geoDistance(start, end) * 3959; // Earth radius in miles const pointsPer5Miles = Math.ceil(distance / 5); const numPoints = Math.max(minPoints, options.pointsPerRoute || pointsPer5Miles); const newCoordinates = Array.from({ length: numPoints }, (_, i) => { const t = i / (numPoints - 1); return route(t); }); return { ...feature, geometry: { ...line, coordinates: newCoordinates } }; }); } filterFeatures(features, expression) { const filterFn = this.createFilterFunction(expression); return features.filter(feature => { try { return filterFn ? filterFn(feature) : true; } catch (e) { console.error('Error applying filter to feature:', e); return true; } }); } createFilterFunction(expression) { if (!expression) return null; try { return new Function('feature', ` try { const properties = feature.properties; return ${expression}; } catch (e) { console.error('Filter expression error:', e); return true; } `); } catch (e) { console.error('Error creating filter function:', e); return null; } } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: GeoProcessingService, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); } static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: GeoProcessingService, providedIn: 'root' }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: GeoProcessingService, decorators: [{ type: Injectable, args: [{ providedIn: 'root' }] }] }); //# sourceMappingURL=data:application/json;base64,
|       |   |   |   --- geo.types.mjs: export {}; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2VvLnR5cGVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvaXh0LW1hcC9nZW8udHlwZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZXNDb250ZW50IjpbIi8vIEZpcnN0LCBsZXQncyBjcmVhdGUgdGhlIGludGVyZmFjZXMgKGdlby50eXBlcy50cylcclxuZXhwb3J0IGludGVyZmFjZSBHZW9GZWF0dXJlUHJvcGVydGllcyB7XHJcbiAgICBba2V5OiBzdHJpbmddOiBhbnk7XHJcbiAgfVxyXG4gIFxyXG4gIGV4cG9ydCBpbnRlcmZhY2UgR2VvUHJvY2Vzc2luZ09wdGlvbnMge1xyXG4gICAgaW50ZXJwb2xhdGVSb3V0ZXM/OiBib29sZWFuO1xyXG4gICAgcG9pbnRzUGVyUm91dGU/OiBudW1iZXI7XHJcbiAgICBtaW5Qb2ludHNQZXJSb3V0ZT86IG51bWJlcjtcclxuICAgIGZpbHRlckV4cHJlc3Npb24/OiBzdHJpbmc7XHJcbiAgfSJdfQ==
|       |   |   |   --- ixt-layer.component.mjs: import { Component, Input, Output, EventEmitter, Host, ChangeDetectionStrategy } from '@angular/core'; import * as d3 from 'd3'; import * as i0 from "@angular/core"; import * as i1 from "./ixt-map.component"; import * as i2 from "./geo-processing.service"; import * as i3 from "./layer-render.service"; import * as i4 from "./layer-event.service"; import * as i5 from "./layer-state.service"; export class IxtLayerComponent { constructor(mapComponent, elementRef, cdr, geoProcessingService, layerRenderService, layerEventService, layerStateService) { this.mapComponent = mapComponent; this.elementRef = elementRef; this.cdr = cdr; this.geoProcessingService = geoProcessingService; this.layerRenderService = layerRenderService; this.layerEventService = layerEventService; this.layerStateService = layerStateService; this.src = ''; this.stroke = 'black'; this.fill = 'none'; this.click = new EventEmitter(); this.hover = new EventEmitter(); this.initialized = false; this.filterExpression = ''; } ngOnChanges(changes) { if ((changes['src'] || changes['stroke'] || changes['fill']) && this.initialized) { this.initializeLayer(); } } ngAfterContentInit() { const content = this.elementRef.nativeElement.textContent?.trim(); if (content) { this.filterExpression = content; } } setProjection(pathGenerator) { this.pathGenerator = pathGenerator; this.initializeLayer(); } async initializeLayer() { if (this.initialized) return; if (!this.validateContainer()) return; try { const features = await this.loadGeoJsonData(); const handlers = this.createEventHandlers(); this.renderLayer(features, handlers); this.initialized = true; } catch (error) { console.error('Layer initialization failed:', error); } } validateContainer() { const container = this.mapComponent.getContainer(); if (!container || !this.pathGenerator) { console.error('Map container or projection not ready'); return false; } return true; } async loadGeoJsonData() { const data = await d3.json(this.src); return this.geoProcessingService.processFeatures(data.features, { interpolateRoutes: true, filterExpression: this.filterExpression }); } async renderLayer(features, handlers) { const container = this.mapComponent.getContainer(); const selection = this.layerRenderService.createLayer(d3.select(container.nativeElement), features, { stroke: this.stroke, fill: this.fill }, handlers); this.layerStateService.addSelection(selection); this.cdr.markForCheck(); } createEventHandlers() { return { onClick: (event, datum) => { this.layerEventService.handleClick(event, this.mapComponent); this.click.emit(event); }, onMouseOver: (event) => { this.layerEventService.handleMouseOver(event, this.mapComponent); this.hover.emit(event); }, onMouseOut: () => this.layerEventService.handleMouseOut(), onMouseMove: (event) => event.stopPropagation() }; } ngOnDestroy() { this.layerStateService.clearSelections(); } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtLayerComponent, deps: [{ token: i1.IxtMapComponent, host: true }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i2.GeoProcessingService }, { token: i3.LayerRenderService }, { token: i4.LayerEventService }, { token: i5.LayerStateService }], target: i0.ɵɵFactoryTarget.Component }); } static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: IxtLayerComponent, selector: "ixt-layer", inputs: { src: "src", stroke: "stroke", fill: "fill" }, outputs: { click: "click", hover: "hover" }, usesOnChanges: true, ngImport: i0, template: ` <svg:g> <ng-content></ng-content> </svg:g> `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtLayerComponent, decorators: [{ type: Component, args: [{ selector: 'ixt-layer', template: ` <svg:g> <ng-content></ng-content> </svg:g> `, changeDetection: ChangeDetectionStrategy.OnPush }] }], ctorParameters: function () { return [{ type: i1.IxtMapComponent, decorators: [{ type: Host }] }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i2.GeoProcessingService }, { type: i3.LayerRenderService }, { type: i4.LayerEventService }, { type: i5.LayerStateService }]; }, propDecorators: { src: [{ type: Input }], stroke: [{ type: Input }], fill: [{ type: Input }], click: [{ type: Output }], hover: [{ type: Output }] } }); //# sourceMappingURL=data:application/json;base64,
|       |   |   |   --- ixt-map.component.mjs: import { Component, Input, ViewChild, ContentChildren, ChangeDetectionStrategy } from '@angular/core'; import * as d3 from 'd3'; import { IxtLayerComponent } from './ixt-layer.component'; import { BehaviorSubject, Subscription } from 'rxjs'; import * as i0 from "@angular/core"; import * as i1 from "./map.service"; export class IxtMapComponent { constructor(cdr, mapService) { this.cdr = cdr; this.mapService = mapService; this.width = 800; this.height = 600; this.scale = 1; this.translate = '0,0'; this.selectedElement = null; this.mapSubscriptions = new Subscription(); this.projectionReady = new BehaviorSubject(false); this.projectionReady$ = this.projectionReady.asObservable(); } getDimensions() { return { width: this.mapService.getBaseDimension(this.width), height: this.mapService.getBaseDimension(this.height), scale: Number(this.scale), translate: this.translate }; } getViewBox() { const { width, height } = this.getDimensions(); return `0 0 ${width} ${height}`; } initializeMap() { const dimensions = this.getDimensions(); const { projection, pathGenerator } = this.mapService.initializeProjection(dimensions.width, dimensions.height); this.projection = projection; this.pathGenerator = pathGenerator; this.projectionReady.next(true); if (this.mapGroup) { const mapSelection = d3.select(this.mapGroup.nativeElement); mapSelection.on('click', () => this.clearSelection()); } setTimeout(() => { this.layers.forEach(layer => { layer.setProjection(this.pathGenerator); }); }); } getContainer() { return this.mapGroup; } getPathGenerator() { return this.pathGenerator; } clearSelection() { if (this.selectedElement) { d3.select(this.selectedElement) .attr('stroke', function () { return this.getAttribute('data-original-stroke') || ''; }) .attr('stroke-width', '1'); this.selectedElement = null; this.cdr.markForCheck(); } } setSelection(element) { this.clearSelection(); if (element) { this.selectedElement = element; this.cdr.markForCheck(); } } ngAfterContentInit() { this.initializeMap(); this.mapSubscriptions.add(this.layers.changes.subscribe(() => { this.initializeMap(); this.cdr.markForCheck(); })); } ngOnDestroy() { this.mapSubscriptions.unsubscribe(); this.selectedElement = null; this.projection = null; this.pathGenerator = null; } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtMapComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.MapService }], target: i0.ɵɵFactoryTarget.Component }); } static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: IxtMapComponent, selector: "ixt-map", inputs: { width: "width", height: "height", scale: "scale", translate: "translate" }, queries: [{ propertyName: "layers", predicate: IxtLayerComponent }], viewQueries: [{ propertyName: "mapSvg", first: true, predicate: ["mapSvg"], descendants: true }, { propertyName: "mapGroup", first: true, predicate: ["mapGroup"], descendants: true }], ngImport: i0, template: ` <svg #mapSvg [attr.width]="width" [attr.height]="height" [attr.viewBox]="getViewBox()" style="display: block; background: lightgray;"> <g #mapGroup> <ng-content></ng-content> </g> </svg> `, isInline: true, styles: [":host{display:block}svg{display:block}\n"], changeDetection: i0.ChangeDetectionStrategy.OnPush }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtMapComponent, decorators: [{ type: Component, args: [{ selector: 'ixt-map', template: ` <svg #mapSvg [attr.width]="width" [attr.height]="height" [attr.viewBox]="getViewBox()" style="display: block; background: lightgray;"> <g #mapGroup> <ng-content></ng-content> </g> </svg> `, changeDetection: ChangeDetectionStrategy.OnPush, styles: [":host{display:block}svg{display:block}\n"] }] }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i1.MapService }]; }, propDecorators: { width: [{ type: Input }], height: [{ type: Input }], scale: [{ type: Input }], translate: [{ type: Input }], mapSvg: [{ type: ViewChild, args: ['mapSvg'] }], mapGroup: [{ type: ViewChild, args: ['mapGroup'] }], layers: [{ type: ContentChildren, args: [IxtLayerComponent] }] } }); //# sourceMappingURL=data:application/json;base64,
|       |   |   |   --- ixt-map.index.mjs: // Export all public components from the ixt-map module export * from './ixt-map.component'; export * from './ixt-layer.component'; // Include any additional exports, such as services or interfaces, if they are part of the module //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXh0LW1hcC5pbmRleC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL2l4dC1tYXAvaXh0LW1hcC5pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx1REFBdUQ7QUFDdkQsY0FBYyxxQkFBcUIsQ0FBQztBQUNwQyxjQUFjLHVCQUF1QixDQUFDO0FBQ3RDLGlHQUFpRyIsInNvdXJjZXNDb250ZW50IjpbIi8vIEV4cG9ydCBhbGwgcHVibGljIGNvbXBvbmVudHMgZnJvbSB0aGUgaXh0LW1hcCBtb2R1bGVcclxuZXhwb3J0ICogZnJvbSAnLi9peHQtbWFwLmNvbXBvbmVudCc7XHJcbmV4cG9ydCAqIGZyb20gJy4vaXh0LWxheWVyLmNvbXBvbmVudCc7XHJcbi8vIEluY2x1ZGUgYW55IGFkZGl0aW9uYWwgZXhwb3J0cywgc3VjaCBhcyBzZXJ2aWNlcyBvciBpbnRlcmZhY2VzLCBpZiB0aGV5IGFyZSBwYXJ0IG9mIHRoZSBtb2R1bGVcclxuIl19
|       |   |   |   --- layer-event.service.mjs: // layer-event.service.ts import { Injectable } from '@angular/core'; import * as d3 from 'd3'; import * as i0 from "@angular/core"; import * as i1 from "./map.service"; export class LayerEventService { constructor(mapService) { this.mapService = mapService; this.hoveredElement = null; } handleClick(event, mapRef) { event.stopPropagation(); const clickedPath = event.currentTarget; if (clickedPath === mapRef['selectedElement']) { mapRef.setSelection(null); this.applyHoverEffect(clickedPath, false); } else { if (mapRef['selectedElement']) { this.applyHoverEffect(mapRef['selectedElement'], false); } mapRef.setSelection(clickedPath); this.applyHoverEffect(clickedPath, true); } } handleMouseOver(event, mapRef) { event.stopPropagation(); const currentPath = event.currentTarget; if (currentPath !== mapRef['selectedElement']) { this.applyHoverEffect(currentPath, true); this.hoveredElement = currentPath; } } handleMouseOut() { if (this.hoveredElement) { this.clearHoverState(this.hoveredElement); this.hoveredElement = null; } } applyHoverEffect(element, isHover) { const d3Element = d3.select(element); const currentFill = element.getAttribute('data-original-fill'); if (currentFill && currentFill !== 'none') { d3Element .attr('fill', currentFill) .attr('stroke-width', isHover ? '2' : '1'); } else { d3Element.attr('stroke-width', isHover ? '2' : '1'); } } clearHoverState(element) { const d3Element = d3.select(element); const originalFill = element.getAttribute('data-original-fill'); d3Element .attr('fill', originalFill) .attr('stroke-width', '1'); } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: LayerEventService, deps: [{ token: i1.MapService }], target: i0.ɵɵFactoryTarget.Injectable }); } static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: LayerEventService, providedIn: 'root' }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: LayerEventService, decorators: [{ type: Injectable, args: [{ providedIn: 'root' }] }], ctorParameters: function () { return [{ type: i1.MapService }]; } }); //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGF5ZXItZXZlbnQuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL2l4dC1tYXAvbGF5ZXItZXZlbnQuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx5QkFBeUI7QUFDekIsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUUzQyxPQUFPLEtBQUssRUFBRSxNQUFNLElBQUksQ0FBQzs7O0FBYXpCLE1BQU0sT0FBTyxpQkFBaUI7SUFHNUIsWUFBb0IsVUFBc0I7UUFBdEIsZUFBVSxHQUFWLFVBQVUsQ0FBWTtRQUZsQyxtQkFBYyxHQUEwQixJQUFJLENBQUM7SUFFUixDQUFDO0lBRTlDLFdBQVcsQ0FBQyxLQUFpQixFQUFFLE1BQVc7UUFDeEMsS0FBSyxDQUFDLGVBQWUsRUFBRSxDQUFDO1FBQ3hCLE1BQU0sV0FBVyxHQUFHLEtBQUssQ0FBQyxhQUErQixDQUFDO1FBRTFELElBQUksV0FBVyxLQUFLLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQyxFQUFFO1lBQzdDLE1BQU0sQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDMUIsSUFBSSxDQUFDLGdCQUFnQixDQUFDLFdBQVcsRUFBRSxLQUFLLENBQUMsQ0FBQztTQUMzQzthQUFNO1lBQ0wsSUFBSSxNQUFNLENBQUMsaUJBQWlCLENBQUMsRUFBRTtnQkFDN0IsSUFBSSxDQUFDLGdCQUFnQixDQUFDLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFDO2FBQ3pEO1lBQ0QsTUFBTSxDQUFDLFlBQVksQ0FBQyxXQUFXLENBQUMsQ0FBQztZQUNqQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsV0FBVyxFQUFFLElBQUksQ0FBQyxDQUFDO1NBQzFDO0lBQ0gsQ0FBQztJQUVELGVBQWUsQ0FBQyxLQUFpQixFQUFFLE1BQVc7UUFDNUMsS0FBSyxDQUFDLGVBQWUsRUFBRSxDQUFDO1FBQ3hCLE1BQU0sV0FBVyxHQUFHLEtBQUssQ0FBQyxhQUErQixDQUFDO1FBQzFELElBQUksV0FBVyxLQUFLLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQyxFQUFFO1lBQzdDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxXQUFXLEVBQUUsSUFBSSxDQUFDLENBQUM7WUFDekMsSUFBSSxDQUFDLGNBQWMsR0FBRyxXQUFXLENBQUM7U0FDbkM7SUFDSCxDQUFDO0lBRUQsY0FBYztRQUNaLElBQUksSUFBSSxDQUFDLGNBQWMsRUFBRTtZQUN2QixJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQztZQUMxQyxJQUFJLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQztTQUM1QjtJQUNILENBQUM7SUFFTyxnQkFBZ0IsQ0FBQyxPQUF1QixFQUFFLE9BQWdCO1FBQ2hFLE1BQU0sU0FBUyxHQUFHLEVBQUUsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDckMsTUFBTSxXQUFXLEdBQUcsT0FBTyxDQUFDLFlBQVksQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDO1FBRS9ELElBQUksV0FBVyxJQUFJLFdBQVcsS0FBSyxNQUFNLEVBQUU7WUFDekMsU0FBUztpQkFDTixJQUFJLENBQUMsTUFBTSxFQUFFLFdBQVcsQ0FBQztpQkFDekIsSUFBSSxDQUFDLGNBQWMsRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7U0FDOUM7YUFBTTtZQUNMLFNBQVMsQ0FBQyxJQUFJLENBQUMsY0FBYyxFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztTQUNyRDtJQUNILENBQUM7SUFFTyxlQUFlLENBQUMsT0FBdUI7UUFDN0MsTUFBTSxTQUFTLEdBQUcsRUFBRSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUNyQyxNQUFNLFlBQVksR0FBRyxPQUFPLENBQUMsWUFBWSxDQUFDLG9CQUFvQixDQUFDLENBQUM7UUFFaEUsU0FBUzthQUNOLElBQUksQ0FBQyxNQUFNLEVBQUUsWUFBWSxDQUFDO2FBQzFCLElBQUksQ0FBQyxjQUFjLEVBQUUsR0FBRyxDQUFDLENBQUM7SUFDL0IsQ0FBQzsrR0F6RFUsaUJBQWlCO21IQUFqQixpQkFBaUIsY0FGaEIsTUFBTTs7NEZBRVAsaUJBQWlCO2tCQUg3QixVQUFVO21CQUFDO29CQUNWLFVBQVUsRUFBRSxNQUFNO2lCQUNuQiIsInNvdXJjZXNDb250ZW50IjpbIi8vIGxheWVyLWV2ZW50LnNlcnZpY2UudHNcclxuaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBNYXBTZXJ2aWNlIH0gZnJvbSAnLi9tYXAuc2VydmljZSc7XHJcbmltcG9ydCAqIGFzIGQzIGZyb20gJ2QzJztcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgTGF5ZXJFdmVudEhhbmRsZXJzIHtcclxuICBvbkNsaWNrOiAoZXZlbnQ6IE1vdXNlRXZlbnQsIGRhdHVtOiBhbnkpID0+IHZvaWQ7XHJcbiAgb25Nb3VzZU92ZXI6IChldmVudDogTW91c2VFdmVudCkgPT4gdm9pZDtcclxuICBvbk1vdXNlT3V0OiAoKSA9PiB2b2lkO1xyXG4gIG9uTW91c2VNb3ZlOiAoZXZlbnQ6IE1vdXNlRXZlbnQpID0+IHZvaWQ7XHJcbn1cclxuXHJcblxyXG5ASW5qZWN0YWJsZSh7XHJcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBMYXllckV2ZW50U2VydmljZSB7XHJcbiAgcHJpdmF0ZSBob3ZlcmVkRWxlbWVudDogU1ZHUGF0aEVsZW1lbnQgfCBudWxsID0gbnVsbDtcclxuXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBtYXBTZXJ2aWNlOiBNYXBTZXJ2aWNlKSB7fVxyXG5cclxuICBoYW5kbGVDbGljayhldmVudDogTW91c2VFdmVudCwgbWFwUmVmOiBhbnkpOiB2b2lkIHtcclxuICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xyXG4gICAgY29uc3QgY2xpY2tlZFBhdGggPSBldmVudC5jdXJyZW50VGFyZ2V0IGFzIFNWR1BhdGhFbGVtZW50O1xyXG4gICAgXHJcbiAgICBpZiAoY2xpY2tlZFBhdGggPT09IG1hcFJlZlsnc2VsZWN0ZWRFbGVtZW50J10pIHtcclxuICAgICAgbWFwUmVmLnNldFNlbGVjdGlvbihudWxsKTtcclxuICAgICAgdGhpcy5hcHBseUhvdmVyRWZmZWN0KGNsaWNrZWRQYXRoLCBmYWxzZSk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBpZiAobWFwUmVmWydzZWxlY3RlZEVsZW1lbnQnXSkge1xyXG4gICAgICAgIHRoaXMuYXBwbHlIb3ZlckVmZmVjdChtYXBSZWZbJ3NlbGVjdGVkRWxlbWVudCddLCBmYWxzZSk7XHJcbiAgICAgIH1cclxuICAgICAgbWFwUmVmLnNldFNlbGVjdGlvbihjbGlja2VkUGF0aCk7XHJcbiAgICAgIHRoaXMuYXBwbHlIb3ZlckVmZmVjdChjbGlja2VkUGF0aCwgdHJ1ZSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBoYW5kbGVNb3VzZU92ZXIoZXZlbnQ6IE1vdXNlRXZlbnQsIG1hcFJlZjogYW55KTogdm9pZCB7XHJcbiAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcclxuICAgIGNvbnN0IGN1cnJlbnRQYXRoID0gZXZlbnQuY3VycmVudFRhcmdldCBhcyBTVkdQYXRoRWxlbWVudDtcclxuICAgIGlmIChjdXJyZW50UGF0aCAhPT0gbWFwUmVmWydzZWxlY3RlZEVsZW1lbnQnXSkge1xyXG4gICAgICB0aGlzLmFwcGx5SG92ZXJFZmZlY3QoY3VycmVudFBhdGgsIHRydWUpO1xyXG4gICAgICB0aGlzLmhvdmVyZWRFbGVtZW50ID0gY3VycmVudFBhdGg7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBoYW5kbGVNb3VzZU91dCgpOiB2b2lkIHtcclxuICAgIGlmICh0aGlzLmhvdmVyZWRFbGVtZW50KSB7XHJcbiAgICAgIHRoaXMuY2xlYXJIb3ZlclN0YXRlKHRoaXMuaG92ZXJlZEVsZW1lbnQpO1xyXG4gICAgICB0aGlzLmhvdmVyZWRFbGVtZW50ID0gbnVsbDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHByaXZhdGUgYXBwbHlIb3ZlckVmZmVjdChlbGVtZW50OiBTVkdQYXRoRWxlbWVudCwgaXNIb3ZlcjogYm9vbGVhbik6IHZvaWQge1xyXG4gICAgY29uc3QgZDNFbGVtZW50ID0gZDMuc2VsZWN0KGVsZW1lbnQpO1xyXG4gICAgY29uc3QgY3VycmVudEZpbGwgPSBlbGVtZW50LmdldEF0dHJpYnV0ZSgnZGF0YS1vcmlnaW5hbC1maWxsJyk7XHJcbiAgICBcclxuICAgIGlmIChjdXJyZW50RmlsbCAmJiBjdXJyZW50RmlsbCAhPT0gJ25vbmUnKSB7XHJcbiAgICAgIGQzRWxlbWVudFxyXG4gICAgICAgIC5hdHRyKCdmaWxsJywgY3VycmVudEZpbGwpXHJcbiAgICAgICAgLmF0dHIoJ3N0cm9rZS13aWR0aCcsIGlzSG92ZXIgPyAnMicgOiAnMScpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgZDNFbGVtZW50LmF0dHIoJ3N0cm9rZS13aWR0aCcsIGlzSG92ZXIgPyAnMicgOiAnMScpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBjbGVhckhvdmVyU3RhdGUoZWxlbWVudDogU1ZHUGF0aEVsZW1lbnQpOiB2b2lkIHtcclxuICAgIGNvbnN0IGQzRWxlbWVudCA9IGQzLnNlbGVjdChlbGVtZW50KTtcclxuICAgIGNvbnN0IG9yaWdpbmFsRmlsbCA9IGVsZW1lbnQuZ2V0QXR0cmlidXRlKCdkYXRhLW9yaWdpbmFsLWZpbGwnKTtcclxuICAgIFxyXG4gICAgZDNFbGVtZW50XHJcbiAgICAgIC5hdHRyKCdmaWxsJywgb3JpZ2luYWxGaWxsKVxyXG4gICAgICAuYXR0cignc3Ryb2tlLXdpZHRoJywgJzEnKTtcclxuICB9XHJcbn0iXX0=
|       |   |   |   --- layer-render.service.mjs: // layer-render.service.ts import { Injectable } from '@angular/core'; import * as i0 from "@angular/core"; import * as i1 from "./map.service"; export class LayerRenderService { constructor(mapService) { this.mapService = mapService; } createLayer(container, features, options, eventHandlers) { const layerGroup = container .append('g') .attr('class', 'map-layer'); return layerGroup .selectAll('path') .data(features) .enter() .append('path') .attr('d', (datum) => this.mapService.getPathGenerator()(datum) || '') .attr('stroke', options.stroke) .attr('fill', options.fill) .attr('stroke-width', '1') .attr('data-original-fill', options.fill) .attr('data-original-stroke', options.stroke) .attr('vector-effect', 'non-scaling-stroke') .style('cursor', 'pointer') .on('click', eventHandlers.onClick) .on('mouseover', eventHandlers.onMouseOver) .on('mouseout', eventHandlers.onMouseOut) .on('mousemove', eventHandlers.onMouseMove); } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: LayerRenderService, deps: [{ token: i1.MapService }], target: i0.ɵɵFactoryTarget.Injectable }); } static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: LayerRenderService, providedIn: 'root' }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: LayerRenderService, decorators: [{ type: Injectable, args: [{ providedIn: 'root' }] }], ctorParameters: function () { return [{ type: i1.MapService }]; } }); //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGF5ZXItcmVuZGVyLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9peHQtbWFwL2xheWVyLXJlbmRlci5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDBCQUEwQjtBQUMxQixPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7QUFhM0MsTUFBTSxPQUFPLGtCQUFrQjtJQUM3QixZQUFvQixVQUFzQjtRQUF0QixlQUFVLEdBQVYsVUFBVSxDQUFZO0lBQUcsQ0FBQztJQUU5QyxXQUFXLENBQ1QsU0FBMkMsRUFDM0MsUUFBbUIsRUFDbkIsT0FBMkIsRUFDM0IsYUFLQztRQUVELE1BQU0sVUFBVSxHQUFHLFNBQVM7YUFDekIsTUFBTSxDQUFDLEdBQUcsQ0FBQzthQUNYLElBQUksQ0FBQyxPQUFPLEVBQUUsV0FBVyxDQUFDLENBQUM7UUFFOUIsT0FBTyxVQUFVO2FBQ2QsU0FBUyxDQUFDLE1BQU0sQ0FBQzthQUNqQixJQUFJLENBQUMsUUFBUSxDQUFDO2FBQ2QsS0FBSyxFQUFFO2FBQ1AsTUFBTSxDQUFDLE1BQU0sQ0FBQzthQUNkLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFFLENBQUM7YUFDckUsSUFBSSxDQUFDLFFBQVEsRUFBRSxPQUFPLENBQUMsTUFBTSxDQUFDO2FBQzlCLElBQUksQ0FBQyxNQUFNLEVBQUUsT0FBTyxDQUFDLElBQUksQ0FBQzthQUMxQixJQUFJLENBQUMsY0FBYyxFQUFFLEdBQUcsQ0FBQzthQUN6QixJQUFJLENBQUMsb0JBQW9CLEVBQUUsT0FBTyxDQUFDLElBQUksQ0FBQzthQUN4QyxJQUFJLENBQUMsc0JBQXNCLEVBQUUsT0FBTyxDQUFDLE1BQU0sQ0FBQzthQUM1QyxJQUFJLENBQUMsZUFBZSxFQUFFLG9CQUFvQixDQUFDO2FBQzNDLEtBQUssQ0FBQyxRQUFRLEVBQUUsU0FBUyxDQUFDO2FBQzFCLEVBQUUsQ0FBQyxPQUFPLEVBQUUsYUFBYSxDQUFDLE9BQU8sQ0FBQzthQUNsQyxFQUFFLENBQUMsV0FBVyxFQUFFLGFBQWEsQ0FBQyxXQUFXLENBQUM7YUFDMUMsRUFBRSxDQUFDLFVBQVUsRUFBRSxhQUFhLENBQUMsVUFBVSxDQUFDO2FBQ3hDLEVBQUUsQ0FBQyxXQUFXLEVBQUUsYUFBYSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQ2hELENBQUM7K0dBbkNVLGtCQUFrQjttSEFBbEIsa0JBQWtCLGNBRmpCLE1BQU07OzRGQUVQLGtCQUFrQjtrQkFIOUIsVUFBVTttQkFBQztvQkFDVixVQUFVLEVBQUUsTUFBTTtpQkFDbkIiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBsYXllci1yZW5kZXIuc2VydmljZS50c1xyXG5pbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCAqIGFzIGQzIGZyb20gJ2QzJztcclxuaW1wb3J0IHsgRmVhdHVyZSwgR2VvSnNvblByb3BlcnRpZXMsIEdlb21ldHJ5IH0gZnJvbSAnZ2VvanNvbic7XHJcbmltcG9ydCB7IE1hcFNlcnZpY2UgfSBmcm9tICcuL21hcC5zZXJ2aWNlJztcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgTGF5ZXJSZW5kZXJPcHRpb25zIHtcclxuICBzdHJva2U6IHN0cmluZztcclxuICBmaWxsOiBzdHJpbmc7XHJcbn1cclxuXHJcbkBJbmplY3RhYmxlKHtcclxuICBwcm92aWRlZEluOiAncm9vdCdcclxufSlcclxuZXhwb3J0IGNsYXNzIExheWVyUmVuZGVyU2VydmljZSB7XHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBtYXBTZXJ2aWNlOiBNYXBTZXJ2aWNlKSB7fVxyXG5cclxuICBjcmVhdGVMYXllcihcclxuICAgIGNvbnRhaW5lcjogZDMuU2VsZWN0aW9uPGFueSwgYW55LCBhbnksIGFueT4sXHJcbiAgICBmZWF0dXJlczogRmVhdHVyZVtdLFxyXG4gICAgb3B0aW9uczogTGF5ZXJSZW5kZXJPcHRpb25zLFxyXG4gICAgZXZlbnRIYW5kbGVyczoge1xyXG4gICAgICBvbkNsaWNrOiAoZXZlbnQ6IE1vdXNlRXZlbnQsIGRhdHVtOiBhbnkpID0+IHZvaWQ7XHJcbiAgICAgIG9uTW91c2VPdmVyOiAoZXZlbnQ6IE1vdXNlRXZlbnQpID0+IHZvaWQ7XHJcbiAgICAgIG9uTW91c2VPdXQ6IChldmVudDogTW91c2VFdmVudCkgPT4gdm9pZDtcclxuICAgICAgb25Nb3VzZU1vdmU6IChldmVudDogTW91c2VFdmVudCkgPT4gdm9pZDtcclxuICAgIH1cclxuICApOiBkMy5TZWxlY3Rpb248YW55LCBhbnksIGFueSwgYW55PiB7XHJcbiAgICBjb25zdCBsYXllckdyb3VwID0gY29udGFpbmVyXHJcbiAgICAgIC5hcHBlbmQoJ2cnKVxyXG4gICAgICAuYXR0cignY2xhc3MnLCAnbWFwLWxheWVyJyk7XHJcblxyXG4gICAgcmV0dXJuIGxheWVyR3JvdXBcclxuICAgICAgLnNlbGVjdEFsbCgncGF0aCcpXHJcbiAgICAgIC5kYXRhKGZlYXR1cmVzKVxyXG4gICAgICAuZW50ZXIoKVxyXG4gICAgICAuYXBwZW5kKCdwYXRoJylcclxuICAgICAgLmF0dHIoJ2QnLCAoZGF0dW0pID0+IHRoaXMubWFwU2VydmljZS5nZXRQYXRoR2VuZXJhdG9yKCkoZGF0dW0pIHx8ICcnKVxyXG4gICAgICAuYXR0cignc3Ryb2tlJywgb3B0aW9ucy5zdHJva2UpXHJcbiAgICAgIC5hdHRyKCdmaWxsJywgb3B0aW9ucy5maWxsKVxyXG4gICAgICAuYXR0cignc3Ryb2tlLXdpZHRoJywgJzEnKVxyXG4gICAgICAuYXR0cignZGF0YS1vcmlnaW5hbC1maWxsJywgb3B0aW9ucy5maWxsKVxyXG4gICAgICAuYXR0cignZGF0YS1vcmlnaW5hbC1zdHJva2UnLCBvcHRpb25zLnN0cm9rZSlcclxuICAgICAgLmF0dHIoJ3ZlY3Rvci1lZmZlY3QnLCAnbm9uLXNjYWxpbmctc3Ryb2tlJylcclxuICAgICAgLnN0eWxlKCdjdXJzb3InLCAncG9pbnRlcicpXHJcbiAgICAgIC5vbignY2xpY2snLCBldmVudEhhbmRsZXJzLm9uQ2xpY2spXHJcbiAgICAgIC5vbignbW91c2VvdmVyJywgZXZlbnRIYW5kbGVycy5vbk1vdXNlT3ZlcilcclxuICAgICAgLm9uKCdtb3VzZW91dCcsIGV2ZW50SGFuZGxlcnMub25Nb3VzZU91dClcclxuICAgICAgLm9uKCdtb3VzZW1vdmUnLCBldmVudEhhbmRsZXJzLm9uTW91c2VNb3ZlKTtcclxuICB9XHJcbn0iXX0=
|       |   |   |   --- layer-state.service.mjs: // layer-state.service.ts import { Injectable } from '@angular/core'; import { BehaviorSubject } from 'rxjs'; import * as i0 from "@angular/core"; export class LayerStateService { constructor() { this.state = new BehaviorSubject({ hoveredElement: null, selections: [] }); this.state$ = this.state.asObservable(); } setHoveredElement(element) { this.updateState({ hoveredElement: element }); } addSelection(selection) { const currentState = this.state.value; this.updateState({ selections: [...currentState.selections, selection] }); } clearSelections() { const currentState = this.state.value; currentState.selections.forEach(selection => { if (selection && !selection.empty()) { selection.remove(); } }); this.updateState({ selections: [] }); } updateState(partialState) { this.state.next({ ...this.state.value, ...partialState }); } ngOnDestroy() { this.clearSelections(); this.state.complete(); } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: LayerStateService, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); } static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: LayerStateService, providedIn: 'root' }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: LayerStateService, decorators: [{ type: Injectable, args: [{ providedIn: 'root' }] }] }); //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGF5ZXItc3RhdGUuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL2l4dC1tYXAvbGF5ZXItc3RhdGUuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx5QkFBeUI7QUFDekIsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsZUFBZSxFQUFjLE1BQU0sTUFBTSxDQUFDOztBQVVuRCxNQUFNLE9BQU8saUJBQWlCO0lBSDlCO1FBSVUsVUFBSyxHQUFHLElBQUksZUFBZSxDQUFhO1lBQzlDLGNBQWMsRUFBRSxJQUFJO1lBQ3BCLFVBQVUsRUFBRSxFQUFFO1NBQ2YsQ0FBQyxDQUFDO1FBRUgsV0FBTSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsWUFBWSxFQUFFLENBQUM7S0FrQ3BDO0lBaENDLGlCQUFpQixDQUFDLE9BQThCO1FBQzlDLElBQUksQ0FBQyxXQUFXLENBQUMsRUFBRSxjQUFjLEVBQUUsT0FBTyxFQUFFLENBQUMsQ0FBQztJQUNoRCxDQUFDO0lBRUQsWUFBWSxDQUFDLFNBQTJDO1FBQ3RELE1BQU0sWUFBWSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDO1FBQ3RDLElBQUksQ0FBQyxXQUFXLENBQUM7WUFDZixVQUFVLEVBQUUsQ0FBQyxHQUFHLFlBQVksQ0FBQyxVQUFVLEVBQUUsU0FBUyxDQUFDO1NBQ3BELENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRCxlQUFlO1FBQ2IsTUFBTSxZQUFZLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUM7UUFDdEMsWUFBWSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLEVBQUU7WUFDMUMsSUFBSSxTQUFTLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxFQUFFLEVBQUU7Z0JBQ25DLFNBQVMsQ0FBQyxNQUFNLEVBQUUsQ0FBQzthQUNwQjtRQUNILENBQUMsQ0FBQyxDQUFDO1FBQ0gsSUFBSSxDQUFDLFdBQVcsQ0FBQyxFQUFFLFVBQVUsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQ3ZDLENBQUM7SUFFTyxXQUFXLENBQUMsWUFBaUM7UUFDbkQsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUM7WUFDZCxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSztZQUNuQixHQUFHLFlBQVk7U0FDaEIsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVELFdBQVc7UUFDVCxJQUFJLENBQUMsZUFBZSxFQUFFLENBQUM7UUFDdkIsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLEVBQUUsQ0FBQztJQUN4QixDQUFDOytHQXZDVSxpQkFBaUI7bUhBQWpCLGlCQUFpQixjQUZoQixNQUFNOzs0RkFFUCxpQkFBaUI7a0JBSDdCLFVBQVU7bUJBQUM7b0JBQ1YsVUFBVSxFQUFFLE1BQU07aUJBQ25CIiwic291cmNlc0NvbnRlbnQiOlsiLy8gbGF5ZXItc3RhdGUuc2VydmljZS50c1xyXG5pbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IEJlaGF2aW9yU3ViamVjdCwgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBMYXllclN0YXRlIHtcclxuICBob3ZlcmVkRWxlbWVudDogU1ZHUGF0aEVsZW1lbnQgfCBudWxsO1xyXG4gIHNlbGVjdGlvbnM6IGQzLlNlbGVjdGlvbjxhbnksIGFueSwgYW55LCBhbnk+W107XHJcbn1cclxuXHJcbkBJbmplY3RhYmxlKHtcclxuICBwcm92aWRlZEluOiAncm9vdCdcclxufSlcclxuZXhwb3J0IGNsYXNzIExheWVyU3RhdGVTZXJ2aWNlIHtcclxuICBwcml2YXRlIHN0YXRlID0gbmV3IEJlaGF2aW9yU3ViamVjdDxMYXllclN0YXRlPih7XHJcbiAgICBob3ZlcmVkRWxlbWVudDogbnVsbCxcclxuICAgIHNlbGVjdGlvbnM6IFtdXHJcbiAgfSk7XHJcblxyXG4gIHN0YXRlJCA9IHRoaXMuc3RhdGUuYXNPYnNlcnZhYmxlKCk7XHJcblxyXG4gIHNldEhvdmVyZWRFbGVtZW50KGVsZW1lbnQ6IFNWR1BhdGhFbGVtZW50IHwgbnVsbCk6IHZvaWQge1xyXG4gICAgdGhpcy51cGRhdGVTdGF0ZSh7IGhvdmVyZWRFbGVtZW50OiBlbGVtZW50IH0pO1xyXG4gIH1cclxuXHJcbiAgYWRkU2VsZWN0aW9uKHNlbGVjdGlvbjogZDMuU2VsZWN0aW9uPGFueSwgYW55LCBhbnksIGFueT4pOiB2b2lkIHtcclxuICAgIGNvbnN0IGN1cnJlbnRTdGF0ZSA9IHRoaXMuc3RhdGUudmFsdWU7XHJcbiAgICB0aGlzLnVwZGF0ZVN0YXRlKHtcclxuICAgICAgc2VsZWN0aW9uczogWy4uLmN1cnJlbnRTdGF0ZS5zZWxlY3Rpb25zLCBzZWxlY3Rpb25dXHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIGNsZWFyU2VsZWN0aW9ucygpOiB2b2lkIHtcclxuICAgIGNvbnN0IGN1cnJlbnRTdGF0ZSA9IHRoaXMuc3RhdGUudmFsdWU7XHJcbiAgICBjdXJyZW50U3RhdGUuc2VsZWN0aW9ucy5mb3JFYWNoKHNlbGVjdGlvbiA9PiB7XHJcbiAgICAgIGlmIChzZWxlY3Rpb24gJiYgIXNlbGVjdGlvbi5lbXB0eSgpKSB7XHJcbiAgICAgICAgc2VsZWN0aW9uLnJlbW92ZSgpO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICAgIHRoaXMudXBkYXRlU3RhdGUoeyBzZWxlY3Rpb25zOiBbXSB9KTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgdXBkYXRlU3RhdGUocGFydGlhbFN0YXRlOiBQYXJ0aWFsPExheWVyU3RhdGU+KTogdm9pZCB7XHJcbiAgICB0aGlzLnN0YXRlLm5leHQoe1xyXG4gICAgICAuLi50aGlzLnN0YXRlLnZhbHVlLFxyXG4gICAgICAuLi5wYXJ0aWFsU3RhdGVcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgbmdPbkRlc3Ryb3koKTogdm9pZCB7XHJcbiAgICB0aGlzLmNsZWFyU2VsZWN0aW9ucygpO1xyXG4gICAgdGhpcy5zdGF0ZS5jb21wbGV0ZSgpO1xyXG4gIH1cclxufSJdfQ==
|       |   |   |   --- map-error.service.mjs: // map-error.service.ts import { Injectable } from '@angular/core'; import { BehaviorSubject } from 'rxjs'; import * as i0 from "@angular/core"; export var MapErrorCode; (function (MapErrorCode) { MapErrorCode["INITIALIZATION_FAILED"] = "INIT_FAILED"; MapErrorCode["PROJECTION_FAILED"] = "PROJ_FAILED"; MapErrorCode["DATA_LOAD_FAILED"] = "DATA_LOAD_FAILED"; MapErrorCode["SELECTION_FAILED"] = "SELECT_FAILED"; MapErrorCode["INVALID_DIMENSIONS"] = "INVALID_DIMS"; })(MapErrorCode || (MapErrorCode = {})); export class MapErrorService { constructor() { this.errorSubject = new BehaviorSubject(null); this.retryAttemptsMap = new Map(); this.maxRetryAttempts = 3; this.errors$ = this.errorSubject.asObservable(); } reportError(code, message, context) { const error = { code, message, timestamp: new Date(), context }; this.errorSubject.next(error); console.error(`Map Error [${code}]:`, message, context); } clearError() { this.errorSubject.next(null); } shouldRetry(operationKey) { const attempts = this.retryAttemptsMap.get(operationKey) || 0; if (attempts < this.maxRetryAttempts) { this.retryAttemptsMap.set(operationKey, attempts + 1); return true; } return false; } resetRetryCount(operationKey) { this.retryAttemptsMap.delete(operationKey); } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: MapErrorService, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); } static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: MapErrorService, providedIn: 'root' }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: MapErrorService, decorators: [{ type: Injectable, args: [{ providedIn: 'root' }] }] }); //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFwLWVycm9yLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9peHQtbWFwL21hcC1lcnJvci5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHVCQUF1QjtBQUN2QixPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxlQUFlLEVBQWMsTUFBTSxNQUFNLENBQUM7O0FBU25ELE1BQU0sQ0FBTixJQUFZLFlBTVg7QUFORCxXQUFZLFlBQVk7SUFDdEIscURBQXFDLENBQUE7SUFDckMsaURBQWlDLENBQUE7SUFDakMscURBQXFDLENBQUE7SUFDckMsa0RBQWtDLENBQUE7SUFDbEMsbURBQW1DLENBQUE7QUFDckMsQ0FBQyxFQU5XLFlBQVksS0FBWixZQUFZLFFBTXZCO0FBS0QsTUFBTSxPQUFPLGVBQWU7SUFINUI7UUFJVSxpQkFBWSxHQUFHLElBQUksZUFBZSxDQUFrQixJQUFJLENBQUMsQ0FBQztRQUMxRCxxQkFBZ0IsR0FBRyxJQUFJLEdBQUcsRUFBa0IsQ0FBQztRQUU1QyxxQkFBZ0IsR0FBRyxDQUFDLENBQUM7UUFDckIsWUFBTyxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsWUFBWSxFQUFFLENBQUM7S0E2QnJEO0lBM0JDLFdBQVcsQ0FBQyxJQUFrQixFQUFFLE9BQWUsRUFBRSxPQUFhO1FBQzVELE1BQU0sS0FBSyxHQUFhO1lBQ3RCLElBQUk7WUFDSixPQUFPO1lBQ1AsU0FBUyxFQUFFLElBQUksSUFBSSxFQUFFO1lBQ3JCLE9BQU87U0FDUixDQUFDO1FBQ0YsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDOUIsT0FBTyxDQUFDLEtBQUssQ0FBQyxjQUFjLElBQUksSUFBSSxFQUFFLE9BQU8sRUFBRSxPQUFPLENBQUMsQ0FBQztJQUMxRCxDQUFDO0lBRUQsVUFBVTtRQUNSLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQy9CLENBQUM7SUFFRCxXQUFXLENBQUMsWUFBb0I7UUFDOUIsTUFBTSxRQUFRLEdBQUcsSUFBSSxDQUFDLGdCQUFnQixDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDOUQsSUFBSSxRQUFRLEdBQUcsSUFBSSxDQUFDLGdCQUFnQixFQUFFO1lBQ3BDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxHQUFHLENBQUMsWUFBWSxFQUFFLFFBQVEsR0FBRyxDQUFDLENBQUMsQ0FBQztZQUN0RCxPQUFPLElBQUksQ0FBQztTQUNiO1FBQ0QsT0FBTyxLQUFLLENBQUM7SUFDZixDQUFDO0lBRUQsZUFBZSxDQUFDLFlBQW9CO1FBQ2xDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLENBQUM7SUFDN0MsQ0FBQzsrR0FqQ1UsZUFBZTttSEFBZixlQUFlLGNBRmQsTUFBTTs7NEZBRVAsZUFBZTtrQkFIM0IsVUFBVTttQkFBQztvQkFDVixVQUFVLEVBQUUsTUFBTTtpQkFDbkIiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBtYXAtZXJyb3Iuc2VydmljZS50c1xyXG5pbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IEJlaGF2aW9yU3ViamVjdCwgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBNYXBFcnJvciB7XHJcbiAgY29kZTogTWFwRXJyb3JDb2RlO1xyXG4gIG1lc3NhZ2U6IHN0cmluZztcclxuICB0aW1lc3RhbXA6IERhdGU7XHJcbiAgY29udGV4dD86IGFueTtcclxufVxyXG5cclxuZXhwb3J0IGVudW0gTWFwRXJyb3JDb2RlIHtcclxuICBJTklUSUFMSVpBVElPTl9GQUlMRUQgPSAnSU5JVF9GQUlMRUQnLFxyXG4gIFBST0pFQ1RJT05fRkFJTEVEID0gJ1BST0pfRkFJTEVEJyxcclxuICBEQVRBX0xPQURfRkFJTEVEID0gJ0RBVEFfTE9BRF9GQUlMRUQnLFxyXG4gIFNFTEVDVElPTl9GQUlMRUQgPSAnU0VMRUNUX0ZBSUxFRCcsXHJcbiAgSU5WQUxJRF9ESU1FTlNJT05TID0gJ0lOVkFMSURfRElNUydcclxufVxyXG5cclxuQEluamVjdGFibGUoe1xyXG4gIHByb3ZpZGVkSW46ICdyb290J1xyXG59KVxyXG5leHBvcnQgY2xhc3MgTWFwRXJyb3JTZXJ2aWNlIHtcclxuICBwcml2YXRlIGVycm9yU3ViamVjdCA9IG5ldyBCZWhhdmlvclN1YmplY3Q8TWFwRXJyb3IgfCBudWxsPihudWxsKTtcclxuICBwcml2YXRlIHJldHJ5QXR0ZW1wdHNNYXAgPSBuZXcgTWFwPHN0cmluZywgbnVtYmVyPigpO1xyXG4gIFxyXG4gIHJlYWRvbmx5IG1heFJldHJ5QXR0ZW1wdHMgPSAzO1xyXG4gIHJlYWRvbmx5IGVycm9ycyQgPSB0aGlzLmVycm9yU3ViamVjdC5hc09ic2VydmFibGUoKTtcclxuXHJcbiAgcmVwb3J0RXJyb3IoY29kZTogTWFwRXJyb3JDb2RlLCBtZXNzYWdlOiBzdHJpbmcsIGNvbnRleHQ/OiBhbnkpOiB2b2lkIHtcclxuICAgIGNvbnN0IGVycm9yOiBNYXBFcnJvciA9IHtcclxuICAgICAgY29kZSxcclxuICAgICAgbWVzc2FnZSxcclxuICAgICAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpLFxyXG4gICAgICBjb250ZXh0XHJcbiAgICB9O1xyXG4gICAgdGhpcy5lcnJvclN1YmplY3QubmV4dChlcnJvcik7XHJcbiAgICBjb25zb2xlLmVycm9yKGBNYXAgRXJyb3IgWyR7Y29kZX1dOmAsIG1lc3NhZ2UsIGNvbnRleHQpO1xyXG4gIH1cclxuXHJcbiAgY2xlYXJFcnJvcigpOiB2b2lkIHtcclxuICAgIHRoaXMuZXJyb3JTdWJqZWN0Lm5leHQobnVsbCk7XHJcbiAgfVxyXG5cclxuICBzaG91bGRSZXRyeShvcGVyYXRpb25LZXk6IHN0cmluZyk6IGJvb2xlYW4ge1xyXG4gICAgY29uc3QgYXR0ZW1wdHMgPSB0aGlzLnJldHJ5QXR0ZW1wdHNNYXAuZ2V0KG9wZXJhdGlvbktleSkgfHwgMDtcclxuICAgIGlmIChhdHRlbXB0cyA8IHRoaXMubWF4UmV0cnlBdHRlbXB0cykge1xyXG4gICAgICB0aGlzLnJldHJ5QXR0ZW1wdHNNYXAuc2V0KG9wZXJhdGlvbktleSwgYXR0ZW1wdHMgKyAxKTtcclxuICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gZmFsc2U7XHJcbiAgfVxyXG5cclxuICByZXNldFJldHJ5Q291bnQob3BlcmF0aW9uS2V5OiBzdHJpbmcpOiB2b2lkIHtcclxuICAgIHRoaXMucmV0cnlBdHRlbXB0c01hcC5kZWxldGUob3BlcmF0aW9uS2V5KTtcclxuICB9XHJcbn1cclxuXHJcbiJdfQ==
|       |   |   |   --- map.service.mjs: // map.service.ts import { Injectable } from '@angular/core'; import * as d3 from 'd3'; import { BehaviorSubject } from 'rxjs'; import { MapErrorCode } from './map-error.service'; import * as i0 from "@angular/core"; import * as i1 from "./map-error.service"; export class MapService { constructor(errorService) { this.errorService = errorService; this.selectedElementSource = new BehaviorSubject(null); this.dimensions = new BehaviorSubject({ width: 800, height: 600 }); this.selectedElement$ = this.selectedElementSource.asObservable(); this.dimensions$ = this.dimensions.asObservable(); this.errorSubject = new BehaviorSubject(null); this.retryAttemptsMap = new Map(); this.maxRetryAttempts = 3; this.errors$ = this.errorSubject.asObservable(); } initializeProjection(width, height) { try { if (width <= 0 || height <= 0) { throw new Error('Invalid dimensions'); } this.projection = d3.geoMercator() .fitSize([width, height], { type: 'Sphere' }); this.pathGenerator = d3.geoPath().projection(this.projection); return { projection: this.projection, pathGenerator: this.pathGenerator }; } catch (error) { this.errorService.reportError(MapErrorCode.INITIALIZATION_FAILED, 'Failed to initialize map projection', { width, height, error }); throw error; } } getProjection() { return this.projection; } getPathGenerator() { return this.pathGenerator; } getDimensions() { return this.dimensions.value; } setSelection(element) { const previousElement = this.selectedElementSource.value; if (previousElement) { d3.select(previousElement) .attr('stroke', d3.select(previousElement).attr('data-original-stroke')) .attr('stroke-width', '1'); } this.selectedElementSource.next(element); } clearSelection() { this.setSelection(null); } getBaseDimension(value) { if (typeof value === 'number') return value; const num = parseFloat(value); return isNaN(num) ? 800 : num; } reportError(code, message, context) { const error = { code, message, timestamp: new Date(), context }; this.errorSubject.next(error); console.error(`Map Error [${code}]:`, message, context); } clearError() { this.errorSubject.next(null); } shouldRetry(operationKey) { const attempts = this.retryAttemptsMap.get(operationKey) || 0; if (attempts < this.maxRetryAttempts) { this.retryAttemptsMap.set(operationKey, attempts + 1); return true; } return false; } resetRetryCount(operationKey) { this.retryAttemptsMap.delete(operationKey); } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: MapService, deps: [{ token: i1.MapErrorService }], target: i0.ɵɵFactoryTarget.Injectable }); } static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: MapService, providedIn: 'root' }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: MapService, decorators: [{ type: Injectable, args: [{ providedIn: 'root' }] }], ctorParameters: function () { return [{ type: i1.MapErrorService }]; } }); //# sourceMappingURL=data:application/json;base64,
|       |   |   |   --- map.types.mjs: export {}; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFwLnR5cGVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvaXh0LW1hcC9tYXAudHlwZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZXNDb250ZW50IjpbIi8vIG1hcC50eXBlcy50c1xyXG5pbXBvcnQgeyBHZW9Qcm9qZWN0aW9uLCBHZW9QYXRoIH0gZnJvbSAnZDMnO1xyXG5pbXBvcnQgeyBFbGVtZW50UmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIE1hcERpbWVuc2lvbnMge1xyXG4gIHdpZHRoOiBudW1iZXI7XHJcbiAgaGVpZ2h0OiBudW1iZXI7XHJcbiAgc2NhbGU6IG51bWJlcjtcclxuICB0cmFuc2xhdGU6IHN0cmluZztcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBNYXBTdGF0ZSB7XHJcbiAgcHJvamVjdGlvbjogR2VvUHJvamVjdGlvbjtcclxuICBwYXRoR2VuZXJhdG9yOiBHZW9QYXRoO1xyXG4gIGRpbWVuc2lvbnM6IE1hcERpbWVuc2lvbnM7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgTWFwU2VsZWN0aW9uIGV4dGVuZHMgZDMuU2VsZWN0aW9uPFNWR0dFbGVtZW50LCB1bmtub3duLCBudWxsLCB1bmRlZmluZWQ+IHt9XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFBhdGhTZWxlY3Rpb24gZXh0ZW5kcyBkMy5TZWxlY3Rpb248U1ZHUGF0aEVsZW1lbnQsIHVua25vd24sIG51bGwsIHVuZGVmaW5lZD4ge31cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgTWFwQ29udGFpbmVyIGV4dGVuZHMgRWxlbWVudFJlZjxTVkdHRWxlbWVudD4ge30iXX0=
|       |   |   +-- ixt-menu
|       |   |   |   --- ixt-menu.component.mjs: import { Component, Input, Output, EventEmitter } from '@angular/core'; import { unitedThemeColors } from '../theme/theme.colors'; import * as i0 from "@angular/core"; import * as i1 from "@angular/common/http"; import * as i2 from "@angular/common"; import * as i3 from "@angular/forms"; import * as i4 from "@angular/router"; export class IxtMenuComponent { get themeStyles() { const colors = this.theme[this.variant]; return { 'background-color': colors.base, 'color': colors.text, '--theme-hover': colors.hover, '--theme-active': colors.active }; } constructor(http) { this.http = http; this.linkAlignment = 'start'; this.src = ''; this.brandName = ''; this.brandLink = '/'; this.showSearch = false; this.searchPlaceholder = 'Search...'; // Theme inputs this.variant = 'tertiary'; this.theme = unitedThemeColors; this.searchSubmitted = new EventEmitter(); this.menuItems = []; this.searchTerm = ''; } ngOnInit() { if (this.src) { this.loadMenu(); } } loadMenu() { this.http.get(this.src).subscribe({ next: (data) => { this.menuItems = data.items; }, error: (error) => { console.error('Error loading menu:', error); } }); } onSearch(event) { event.preventDefault(); if (this.searchTerm.trim()) { this.searchSubmitted.emit(this.searchTerm); } } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtMenuComponent, deps: [{ token: i1.HttpClient }], target: i0.ɵɵFactoryTarget.Component }); } static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: IxtMenuComponent, selector: "ixt-menu", inputs: { linkAlignment: "linkAlignment", src: "src", brandName: "brandName", brandLogo: "brandLogo", brandLink: "brandLink", showSearch: "showSearch", searchPlaceholder: "searchPlaceholder", variant: "variant", theme: "theme" }, outputs: { searchSubmitted: "searchSubmitted" }, ngImport: i0, template: "<nav class=\"navbar\" [ngStyle]=\"themeStyles\" fxLayout=\"row\" fxLayoutAlign=\"start center\" fxFill>\r\n <div class=\"navbar-brand\" fxFlex=\"none\">\r\n <a [routerLink]=\"brandLink\" class=\"brand-link\">\r\n <img *ngIf=\"brandLogo\" [src]=\"brandLogo\" alt=\"Brand Logo\" class=\"brand-logo\">\r\n <span class=\"brand-name\">{{ brandName }}</span>\r\n </a>\r\n </div>\r\n\r\n <div class=\"nav-items\">\r\n <a *ngFor=\"let item of menuItems\" \r\n [routerLink]=\"item.link\" \r\n class=\"nav-link\">\r\n {{ item.name }}\r\n </a>\r\n </div>\r\n\r\n <div *ngIf=\"showSearch\" fxFlex=\"none\" class=\"search-container\">\r\n <form (ngSubmit)=\"onSearch($event)\" class=\"search-form\">\r\n <div class=\"input-group\">\r\n <input type=\"text\" \r\n [(ngModel)]=\"searchTerm\"\r\n name=\"search\"\r\n [placeholder]=\"searchPlaceholder\"\r\n class=\"form-control\">\r\n <button type=\"submit\" class=\"btn\">\r\n Search\r\n </button>\r\n </div>\r\n </form>\r\n </div>\r\n</nav>", styles: [":host{display:block;margin:0}.navbar{display:flex;align-items:center;justify-content:space-between;padding:.5rem 1rem}.navbar .navbar-brand .brand-link{display:flex;align-items:center;text-decoration:none;color:inherit}.navbar .navbar-brand .brand-link:hover{opacity:.9}.navbar .navbar-brand .brand-logo{height:30px;margin-right:.5rem}.navbar .navbar-brand .brand-name{font-size:1.25rem;font-weight:700;white-space:nowrap}.navbar .nav-items{padding:0 1rem}.navbar .nav-link{color:inherit;text-decoration:none;padding:.5rem .75rem;font-weight:400;opacity:.8;transition:all .15s ease-in-out}.navbar .nav-link:hover,.navbar .nav-link:active{background-color:var(--theme-hover)}.navbar .nav-link:active{opacity:1}.navbar .search-container{align-items:center}.navbar .search-container .search-form{margin:.5rem}\n"], dependencies: [{ kind: "directive", type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i2.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }, { kind: "directive", type: i3.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { kind: "directive", type: i3.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i3.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i3.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { kind: "directive", type: i3.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "directive", type: i3.NgForm, selector: "form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]", inputs: ["ngFormOptions"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { kind: "directive", type: i4.RouterLink, selector: "[routerLink]", inputs: ["target", "queryParams", "fragment", "queryParamsHandling", "state", "relativeTo", "preserveFragment", "skipLocationChange", "replaceUrl", "routerLink"] }] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtMenuComponent, decorators: [{ type: Component, args: [{ selector: 'ixt-menu', template: "<nav class=\"navbar\" [ngStyle]=\"themeStyles\" fxLayout=\"row\" fxLayoutAlign=\"start center\" fxFill>\r\n <div class=\"navbar-brand\" fxFlex=\"none\">\r\n <a [routerLink]=\"brandLink\" class=\"brand-link\">\r\n <img *ngIf=\"brandLogo\" [src]=\"brandLogo\" alt=\"Brand Logo\" class=\"brand-logo\">\r\n <span class=\"brand-name\">{{ brandName }}</span>\r\n </a>\r\n </div>\r\n\r\n <div class=\"nav-items\">\r\n <a *ngFor=\"let item of menuItems\" \r\n [routerLink]=\"item.link\" \r\n class=\"nav-link\">\r\n {{ item.name }}\r\n </a>\r\n </div>\r\n\r\n <div *ngIf=\"showSearch\" fxFlex=\"none\" class=\"search-container\">\r\n <form (ngSubmit)=\"onSearch($event)\" class=\"search-form\">\r\n <div class=\"input-group\">\r\n <input type=\"text\" \r\n [(ngModel)]=\"searchTerm\"\r\n name=\"search\"\r\n [placeholder]=\"searchPlaceholder\"\r\n class=\"form-control\">\r\n <button type=\"submit\" class=\"btn\">\r\n Search\r\n </button>\r\n </div>\r\n </form>\r\n </div>\r\n</nav>", styles: [":host{display:block;margin:0}.navbar{display:flex;align-items:center;justify-content:space-between;padding:.5rem 1rem}.navbar .navbar-brand .brand-link{display:flex;align-items:center;text-decoration:none;color:inherit}.navbar .navbar-brand .brand-link:hover{opacity:.9}.navbar .navbar-brand .brand-logo{height:30px;margin-right:.5rem}.navbar .navbar-brand .brand-name{font-size:1.25rem;font-weight:700;white-space:nowrap}.navbar .nav-items{padding:0 1rem}.navbar .nav-link{color:inherit;text-decoration:none;padding:.5rem .75rem;font-weight:400;opacity:.8;transition:all .15s ease-in-out}.navbar .nav-link:hover,.navbar .nav-link:active{background-color:var(--theme-hover)}.navbar .nav-link:active{opacity:1}.navbar .search-container{align-items:center}.navbar .search-container .search-form{margin:.5rem}\n"] }] }], ctorParameters: function () { return [{ type: i1.HttpClient }]; }, propDecorators: { linkAlignment: [{ type: Input }], src: [{ type: Input }], brandName: [{ type: Input }], brandLogo: [{ type: Input }], brandLink: [{ type: Input }], showSearch: [{ type: Input }], searchPlaceholder: [{ type: Input }], variant: [{ type: Input }], theme: [{ type: Input }], searchSubmitted: [{ type: Output }] } }); //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXh0LW1lbnUuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvaXh0LW1lbnUvaXh0LW1lbnUuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvaXh0LW1lbnUvaXh0LW1lbnUuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxLQUFLLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUUvRSxPQUFPLEVBQW1CLGlCQUFpQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7Ozs7OztBQWlCM0UsTUFBTSxPQUFPLGdCQUFnQjtJQWtCM0IsSUFBSSxXQUFXO1FBQ2IsTUFBTSxNQUFNLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDeEMsT0FBTztZQUNMLGtCQUFrQixFQUFFLE1BQU0sQ0FBQyxJQUFJO1lBQy9CLE9BQU8sRUFBRSxNQUFNLENBQUMsSUFBSTtZQUNwQixlQUFlLEVBQUUsTUFBTSxDQUFDLEtBQUs7WUFDN0IsZ0JBQWdCLEVBQUUsTUFBTSxDQUFDLE1BQU07U0FDaEMsQ0FBQztJQUNKLENBQUM7SUFFRCxZQUFvQixJQUFnQjtRQUFoQixTQUFJLEdBQUosSUFBSSxDQUFZO1FBM0IzQixrQkFBYSxHQUFXLE9BQU8sQ0FBQztRQUNoQyxRQUFHLEdBQVcsRUFBRSxDQUFDO1FBQ2pCLGNBQVMsR0FBVyxFQUFFLENBQUM7UUFFdkIsY0FBUyxHQUFXLEdBQUcsQ0FBQztRQUN4QixlQUFVLEdBQVksS0FBSyxDQUFDO1FBQzVCLHNCQUFpQixHQUFXLFdBQVcsQ0FBQztRQUVqRCxlQUFlO1FBQ04sWUFBTyxHQUFpQixVQUFVLENBQUM7UUFDbkMsVUFBSyxHQUFnQixpQkFBaUIsQ0FBQztRQUV0QyxvQkFBZSxHQUFHLElBQUksWUFBWSxFQUFVLENBQUM7UUFFdkQsY0FBUyxHQUFlLEVBQUUsQ0FBQztRQUMzQixlQUFVLEdBQVcsRUFBRSxDQUFDO0lBWWdCLENBQUM7SUFFekMsUUFBUTtRQUNOLElBQUksSUFBSSxDQUFDLEdBQUcsRUFBRTtZQUNaLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztTQUNqQjtJQUNILENBQUM7SUFFRCxRQUFRO1FBQ04sSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQWEsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLFNBQVMsQ0FBQztZQUM1QyxJQUFJLEVBQUUsQ0FBQyxJQUFJLEVBQUUsRUFBRTtnQkFDYixJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUM7WUFDOUIsQ0FBQztZQUNELEtBQUssRUFBRSxDQUFDLEtBQUssRUFBRSxFQUFFO2dCQUNmLE9BQU8sQ0FBQyxLQUFLLENBQUMscUJBQXFCLEVBQUUsS0FBSyxDQUFDLENBQUM7WUFDOUMsQ0FBQztTQUNGLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRCxRQUFRLENBQUMsS0FBWTtRQUNuQixLQUFLLENBQUMsY0FBYyxFQUFFLENBQUM7UUFDdkIsSUFBSSxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksRUFBRSxFQUFFO1lBQzFCLElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztTQUM1QztJQUNILENBQUM7K0dBcERVLGdCQUFnQjttR0FBaEIsZ0JBQWdCLHVVQ25CN0Isb21DQThCTTs7NEZEWE8sZ0JBQWdCO2tCQUw1QixTQUFTOytCQUNFLFVBQVU7aUdBS1gsYUFBYTtzQkFBckIsS0FBSztnQkFDRyxHQUFHO3NCQUFYLEtBQUs7Z0JBQ0csU0FBUztzQkFBakIsS0FBSztnQkFDRyxTQUFTO3NCQUFqQixLQUFLO2dCQUNHLFNBQVM7c0JBQWpCLEtBQUs7Z0JBQ0csVUFBVTtzQkFBbEIsS0FBSztnQkFDRyxpQkFBaUI7c0JBQXpCLEtBQUs7Z0JBR0csT0FBTztzQkFBZixLQUFLO2dCQUNHLEtBQUs7c0JBQWIsS0FBSztnQkFFSSxlQUFlO3NCQUF4QixNQUFNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBIdHRwQ2xpZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnO1xyXG5pbXBvcnQgeyBiYXNlVGhlbWVDb2xvcnMsIHVuaXRlZFRoZW1lQ29sb3JzIH0gZnJvbSAnLi4vdGhlbWUvdGhlbWUuY29sb3JzJztcclxuaW1wb3J0IHsgVGhlbWVWYXJpYW50LCBUaGVtZUNvbG9ycyB9IGZyb20gJy4uL3RoZW1lL3RoZW1lLnR5cGVzJztcclxuXHJcbmludGVyZmFjZSBNZW51SXRlbSB7XHJcbiAgbmFtZTogc3RyaW5nO1xyXG4gIGxpbms6IHN0cmluZztcclxufVxyXG5cclxuaW50ZXJmYWNlIE1lbnVDb25maWcge1xyXG4gIGl0ZW1zOiBNZW51SXRlbVtdO1xyXG59XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2l4dC1tZW51JyxcclxuICB0ZW1wbGF0ZVVybDogJy4vaXh0LW1lbnUuY29tcG9uZW50Lmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL2l4dC1tZW51LmNvbXBvbmVudC5zY3NzJ11cclxufSlcclxuZXhwb3J0IGNsYXNzIEl4dE1lbnVDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG4gIEBJbnB1dCgpIGxpbmtBbGlnbm1lbnQ6IHN0cmluZyA9ICdzdGFydCc7XHJcbiAgQElucHV0KCkgc3JjOiBzdHJpbmcgPSAnJztcclxuICBASW5wdXQoKSBicmFuZE5hbWU6IHN0cmluZyA9ICcnO1xyXG4gIEBJbnB1dCgpIGJyYW5kTG9nbz86IHN0cmluZztcclxuICBASW5wdXQoKSBicmFuZExpbms6IHN0cmluZyA9ICcvJztcclxuICBASW5wdXQoKSBzaG93U2VhcmNoOiBib29sZWFuID0gZmFsc2U7XHJcbiAgQElucHV0KCkgc2VhcmNoUGxhY2Vob2xkZXI6IHN0cmluZyA9ICdTZWFyY2guLi4nO1xyXG4gIFxyXG4gIC8vIFRoZW1lIGlucHV0c1xyXG4gIEBJbnB1dCgpIHZhcmlhbnQ6IFRoZW1lVmFyaWFudCA9ICd0ZXJ0aWFyeSc7XHJcbiAgQElucHV0KCkgdGhlbWU6IFRoZW1lQ29sb3JzID0gdW5pdGVkVGhlbWVDb2xvcnM7XHJcbiAgXHJcbiAgQE91dHB1dCgpIHNlYXJjaFN1Ym1pdHRlZCA9IG5ldyBFdmVudEVtaXR0ZXI8c3RyaW5nPigpO1xyXG5cclxuICBtZW51SXRlbXM6IE1lbnVJdGVtW10gPSBbXTtcclxuICBzZWFyY2hUZXJtOiBzdHJpbmcgPSAnJztcclxuXHJcbiAgZ2V0IHRoZW1lU3R5bGVzKCkge1xyXG4gICAgY29uc3QgY29sb3JzID0gdGhpcy50aGVtZVt0aGlzLnZhcmlhbnRdO1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgJ2JhY2tncm91bmQtY29sb3InOiBjb2xvcnMuYmFzZSxcclxuICAgICAgJ2NvbG9yJzogY29sb3JzLnRleHQsXHJcbiAgICAgICctLXRoZW1lLWhvdmVyJzogY29sb3JzLmhvdmVyLFxyXG4gICAgICAnLS10aGVtZS1hY3RpdmUnOiBjb2xvcnMuYWN0aXZlXHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBodHRwOiBIdHRwQ2xpZW50KSB7IH1cclxuXHJcbiAgbmdPbkluaXQoKTogdm9pZCB7XHJcbiAgICBpZiAodGhpcy5zcmMpIHtcclxuICAgICAgdGhpcy5sb2FkTWVudSgpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgbG9hZE1lbnUoKSB7XHJcbiAgICB0aGlzLmh0dHAuZ2V0PE1lbnVDb25maWc+KHRoaXMuc3JjKS5zdWJzY3JpYmUoe1xyXG4gICAgICBuZXh0OiAoZGF0YSkgPT4ge1xyXG4gICAgICAgIHRoaXMubWVudUl0ZW1zID0gZGF0YS5pdGVtcztcclxuICAgICAgfSxcclxuICAgICAgZXJyb3I6IChlcnJvcikgPT4ge1xyXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGxvYWRpbmcgbWVudTonLCBlcnJvcik7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgb25TZWFyY2goZXZlbnQ6IEV2ZW50KSB7XHJcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgaWYgKHRoaXMuc2VhcmNoVGVybS50cmltKCkpIHtcclxuICAgICAgdGhpcy5zZWFyY2hTdWJtaXR0ZWQuZW1pdCh0aGlzLnNlYXJjaFRlcm0pO1xyXG4gICAgfVxyXG4gIH1cclxufSIsIjxuYXYgY2xhc3M9XCJuYXZiYXJcIiBbbmdTdHlsZV09XCJ0aGVtZVN0eWxlc1wiIGZ4TGF5b3V0PVwicm93XCIgZnhMYXlvdXRBbGlnbj1cInN0YXJ0IGNlbnRlclwiIGZ4RmlsbD5cclxuICA8ZGl2IGNsYXNzPVwibmF2YmFyLWJyYW5kXCIgZnhGbGV4PVwibm9uZVwiPlxyXG4gICAgPGEgW3JvdXRlckxpbmtdPVwiYnJhbmRMaW5rXCIgY2xhc3M9XCJicmFuZC1saW5rXCI+XHJcbiAgICAgIDxpbWcgKm5nSWY9XCJicmFuZExvZ29cIiBbc3JjXT1cImJyYW5kTG9nb1wiIGFsdD1cIkJyYW5kIExvZ29cIiBjbGFzcz1cImJyYW5kLWxvZ29cIj5cclxuICAgICAgPHNwYW4gY2xhc3M9XCJicmFuZC1uYW1lXCI+e3sgYnJhbmROYW1lIH19PC9zcGFuPlxyXG4gICAgPC9hPlxyXG4gIDwvZGl2PlxyXG5cclxuICA8ZGl2IGNsYXNzPVwibmF2LWl0ZW1zXCI+XHJcbiAgICA8YSAqbmdGb3I9XCJsZXQgaXRlbSBvZiBtZW51SXRlbXNcIiBcclxuICAgICAgIFtyb3V0ZXJMaW5rXT1cIml0ZW0ubGlua1wiIFxyXG4gICAgICAgY2xhc3M9XCJuYXYtbGlua1wiPlxyXG4gICAgICB7eyBpdGVtLm5hbWUgfX1cclxuICAgIDwvYT5cclxuICA8L2Rpdj5cclxuXHJcbiAgPGRpdiAqbmdJZj1cInNob3dTZWFyY2hcIiBmeEZsZXg9XCJub25lXCIgY2xhc3M9XCJzZWFyY2gtY29udGFpbmVyXCI+XHJcbiAgICA8Zm9ybSAobmdTdWJtaXQpPVwib25TZWFyY2goJGV2ZW50KVwiIGNsYXNzPVwic2VhcmNoLWZvcm1cIj5cclxuICAgICAgPGRpdiBjbGFzcz1cImlucHV0LWdyb3VwXCI+XHJcbiAgICAgICAgPGlucHV0IHR5cGU9XCJ0ZXh0XCIgXHJcbiAgICAgICAgICAgICAgIFsobmdNb2RlbCldPVwic2VhcmNoVGVybVwiXHJcbiAgICAgICAgICAgICAgIG5hbWU9XCJzZWFyY2hcIlxyXG4gICAgICAgICAgICAgICBbcGxhY2Vob2xkZXJdPVwic2VhcmNoUGxhY2Vob2xkZXJcIlxyXG4gICAgICAgICAgICAgICBjbGFzcz1cImZvcm0tY29udHJvbFwiPlxyXG4gICAgICAgIDxidXR0b24gdHlwZT1cInN1Ym1pdFwiIGNsYXNzPVwiYnRuXCI+XHJcbiAgICAgICAgICBTZWFyY2hcclxuICAgICAgICA8L2J1dHRvbj5cclxuICAgICAgPC9kaXY+XHJcbiAgICA8L2Zvcm0+XHJcbiAgPC9kaXY+XHJcbjwvbmF2PiJdfQ==
|       |   |   |   --- ixt-menu.index.mjs: // ixt-menu.index.ts export * from './ixt-menu.component'; export * from './ixt-menu.module'; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXh0LW1lbnUuaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9peHQtbWVudS9peHQtbWVudS5pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsY0FBYyxzQkFBc0IsQ0FBQztBQUNyQyxjQUFjLG1CQUFtQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gaXh0LW1lbnUuaW5kZXgudHNcclxuZXhwb3J0ICogZnJvbSAnLi9peHQtbWVudS5jb21wb25lbnQnO1xyXG5leHBvcnQgKiBmcm9tICcuL2l4dC1tZW51Lm1vZHVsZSc7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIE1lbnVJdGVtIHtcclxuICBuYW1lOiBzdHJpbmc7XHJcbiAgbGluazogc3RyaW5nO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIE1lbnVDb25maWcge1xyXG4gIGl0ZW1zOiBNZW51SXRlbVtdO1xyXG4gIGJyYW5kTmFtZT86IHN0cmluZztcclxuICBicmFuZExvZ28/OiBzdHJpbmc7XHJcbiAgYnJhbmRMaW5rPzogc3RyaW5nO1xyXG4gIHNob3dTZWFyY2g/OiBib29sZWFuO1xyXG4gIHNlYXJjaFBsYWNlaG9sZGVyPzogc3RyaW5nO1xyXG4gIGxpbmtBbGlnbm1lbnQ/OiAnc3RhcnQnIHwgJ2NlbnRlcicgfCAnZW5kJztcclxufSJdfQ==
|       |   |   |   --- ixt-menu.module.mjs: import { NgModule } from '@angular/core'; import { CommonModule } from '@angular/common'; import { FormsModule } from '@angular/forms'; import { RouterModule } from '@angular/router'; import { IxtMenuComponent } from './ixt-menu.component'; import * as i0 from "@angular/core"; export class IxtMenuModule { static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtMenuModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); } static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "16.2.12", ngImport: i0, type: IxtMenuModule, declarations: [IxtMenuComponent], imports: [CommonModule, FormsModule, RouterModule], exports: [IxtMenuComponent] }); } static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtMenuModule, imports: [CommonModule, FormsModule, RouterModule] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtMenuModule, decorators: [{ type: NgModule, args: [{ declarations: [ IxtMenuComponent ], imports: [ CommonModule, FormsModule, RouterModule ], exports: [ IxtMenuComponent ] }] }] }); //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXh0LW1lbnUubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvaXh0LW1lbnUvaXh0LW1lbnUubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM3QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7O0FBZXhELE1BQU0sT0FBTyxhQUFhOytHQUFiLGFBQWE7Z0hBQWIsYUFBYSxpQkFYdEIsZ0JBQWdCLGFBR2hCLFlBQVk7WUFDWixXQUFXO1lBQ1gsWUFBWSxhQUdaLGdCQUFnQjtnSEFHUCxhQUFhLFlBUnRCLFlBQVk7WUFDWixXQUFXO1lBQ1gsWUFBWTs7NEZBTUgsYUFBYTtrQkFiekIsUUFBUTttQkFBQztvQkFDUixZQUFZLEVBQUU7d0JBQ1osZ0JBQWdCO3FCQUNqQjtvQkFDRCxPQUFPLEVBQUU7d0JBQ1AsWUFBWTt3QkFDWixXQUFXO3dCQUNYLFlBQVk7cUJBQ2I7b0JBQ0QsT0FBTyxFQUFFO3dCQUNQLGdCQUFnQjtxQkFDakI7aUJBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xyXG5pbXBvcnQgeyBGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcclxuaW1wb3J0IHsgUm91dGVyTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcclxuaW1wb3J0IHsgSXh0TWVudUNvbXBvbmVudCB9IGZyb20gJy4vaXh0LW1lbnUuY29tcG9uZW50JztcclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgZGVjbGFyYXRpb25zOiBbXHJcbiAgICBJeHRNZW51Q29tcG9uZW50XHJcbiAgXSxcclxuICBpbXBvcnRzOiBbXHJcbiAgICBDb21tb25Nb2R1bGUsXHJcbiAgICBGb3Jtc01vZHVsZSxcclxuICAgIFJvdXRlck1vZHVsZVxyXG4gIF0sXHJcbiAgZXhwb3J0czogW1xyXG4gICAgSXh0TWVudUNvbXBvbmVudFxyXG4gIF1cclxufSlcclxuZXhwb3J0IGNsYXNzIEl4dE1lbnVNb2R1bGUgeyB9Il19
|       |   |   +-- ixt-panel
|       |   |   |   --- ixt-panel.component.mjs: import { Component, Input } from '@angular/core'; import * as i0 from "@angular/core"; import * as i1 from "@angular/common"; export class IxtPanelComponent { constructor() { this.padding = true; this.bordered = true; this.elevated = false; } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtPanelComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); } static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: IxtPanelComponent, selector: "ixt-panel", inputs: { title: "title", caption: "caption", padding: "padding", bordered: "bordered", elevated: "elevated" }, ngImport: i0, template: "<div class=\"ixt-panel\" [class.bordered]=\"bordered\" [class.elevated]=\"elevated\">\r\n <div class=\"panel-title\" *ngIf=\"title\">\r\n {{ title }}\r\n </div>\r\n \r\n <div class=\"panel-content\" [class.with-padding]=\"padding\">\r\n <ng-content></ng-content>\r\n </div>\r\n \r\n <div class=\"panel-caption\" *ngIf=\"caption\">\r\n {{ caption }}\r\n </div>\r\n </div>\r\n ", styles: [":host{display:flex;flex-direction:column;flex:1;min-height:0}.ixt-panel{display:flex;flex-direction:column;flex:1;background:#fff;border-radius:8px;overflow:hidden;min-height:0}.ixt-panel.bordered{border:1px solid rgba(0,0,0,.12)}.ixt-panel.elevated{box-shadow:0 2px 1px -1px #0003,0 1px 1px #00000024,0 1px 3px #0000001f}.ixt-panel .panel-title{background-color:#06f;color:#fff;padding:16px 20px;font-size:16px;font-weight:500;letter-spacing:.15px;line-height:1.5;border-radius:8px 8px 0 0}.ixt-panel .panel-content{flex:1;min-height:0;overflow:auto}.ixt-panel .panel-content.with-padding{padding:20px}.ixt-panel .panel-caption{background-color:#f5f5f5;color:#000000de;padding:12px 20px;font-size:14px;border-top:1px solid rgba(0,0,0,.12);border-radius:0 0 8px 8px}\n"], dependencies: [{ kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtPanelComponent, decorators: [{ type: Component, args: [{ selector: 'ixt-panel', template: "<div class=\"ixt-panel\" [class.bordered]=\"bordered\" [class.elevated]=\"elevated\">\r\n <div class=\"panel-title\" *ngIf=\"title\">\r\n {{ title }}\r\n </div>\r\n \r\n <div class=\"panel-content\" [class.with-padding]=\"padding\">\r\n <ng-content></ng-content>\r\n </div>\r\n \r\n <div class=\"panel-caption\" *ngIf=\"caption\">\r\n {{ caption }}\r\n </div>\r\n </div>\r\n ", styles: [":host{display:flex;flex-direction:column;flex:1;min-height:0}.ixt-panel{display:flex;flex-direction:column;flex:1;background:#fff;border-radius:8px;overflow:hidden;min-height:0}.ixt-panel.bordered{border:1px solid rgba(0,0,0,.12)}.ixt-panel.elevated{box-shadow:0 2px 1px -1px #0003,0 1px 1px #00000024,0 1px 3px #0000001f}.ixt-panel .panel-title{background-color:#06f;color:#fff;padding:16px 20px;font-size:16px;font-weight:500;letter-spacing:.15px;line-height:1.5;border-radius:8px 8px 0 0}.ixt-panel .panel-content{flex:1;min-height:0;overflow:auto}.ixt-panel .panel-content.with-padding{padding:20px}.ixt-panel .panel-caption{background-color:#f5f5f5;color:#000000de;padding:12px 20px;font-size:14px;border-top:1px solid rgba(0,0,0,.12);border-radius:0 0 8px 8px}\n"] }] }], propDecorators: { title: [{ type: Input }], caption: [{ type: Input }], padding: [{ type: Input }], bordered: [{ type: Input }], elevated: [{ type: Input }] } }); //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXh0LXBhbmVsLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL2l4dC1wYW5lbC9peHQtcGFuZWwuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvaXh0LXBhbmVsL2l4dC1wYW5lbC5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQzs7O0FBT2pELE1BQU0sT0FBTyxpQkFBaUI7SUFMOUI7UUFRVyxZQUFPLEdBQUcsSUFBSSxDQUFDO1FBQ2YsYUFBUSxHQUFHLElBQUksQ0FBQztRQUNoQixhQUFRLEdBQUcsS0FBSyxDQUFDO0tBQzNCOytHQU5ZLGlCQUFpQjttR0FBakIsaUJBQWlCLGlLQ1A5QixrYUFhRTs7NEZETlcsaUJBQWlCO2tCQUw3QixTQUFTOytCQUNFLFdBQVc7OEJBS1osS0FBSztzQkFBYixLQUFLO2dCQUNHLE9BQU87c0JBQWYsS0FBSztnQkFDRyxPQUFPO3NCQUFmLEtBQUs7Z0JBQ0csUUFBUTtzQkFBaEIsS0FBSztnQkFDRyxRQUFRO3NCQUFoQixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdpeHQtcGFuZWwnLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9peHQtcGFuZWwuY29tcG9uZW50Lmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL2l4dC1wYW5lbC5jb21wb25lbnQuc2NzcyddXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBJeHRQYW5lbENvbXBvbmVudCB7XHJcbiAgQElucHV0KCkgdGl0bGU/OiBzdHJpbmc7XHJcbiAgQElucHV0KCkgY2FwdGlvbj86IHN0cmluZztcclxuICBASW5wdXQoKSBwYWRkaW5nID0gdHJ1ZTtcclxuICBASW5wdXQoKSBib3JkZXJlZCA9IHRydWU7XHJcbiAgQElucHV0KCkgZWxldmF0ZWQgPSBmYWxzZTtcclxufSIsIjxkaXYgY2xhc3M9XCJpeHQtcGFuZWxcIiBbY2xhc3MuYm9yZGVyZWRdPVwiYm9yZGVyZWRcIiBbY2xhc3MuZWxldmF0ZWRdPVwiZWxldmF0ZWRcIj5cclxuICAgIDxkaXYgY2xhc3M9XCJwYW5lbC10aXRsZVwiICpuZ0lmPVwidGl0bGVcIj5cclxuICAgICAge3sgdGl0bGUgfX1cclxuICAgIDwvZGl2PlxyXG4gICAgXHJcbiAgICA8ZGl2IGNsYXNzPVwicGFuZWwtY29udGVudFwiIFtjbGFzcy53aXRoLXBhZGRpbmddPVwicGFkZGluZ1wiPlxyXG4gICAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XHJcbiAgICA8L2Rpdj5cclxuICAgIFxyXG4gICAgPGRpdiBjbGFzcz1cInBhbmVsLWNhcHRpb25cIiAqbmdJZj1cImNhcHRpb25cIj5cclxuICAgICAge3sgY2FwdGlvbiB9fVxyXG4gICAgPC9kaXY+XHJcbiAgPC9kaXY+XHJcbiAgIl19
|       |   |   |   --- ixt-panel.index.mjs: export * from './ixt-panel.component'; export * from './ixt-panel.module'; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXh0LXBhbmVsLmluZGV4LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvaXh0LXBhbmVsL2l4dC1wYW5lbC5pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxjQUFjLHVCQUF1QixDQUFDO0FBQ3RDLGNBQWMsb0JBQW9CLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tICcuL2l4dC1wYW5lbC5jb21wb25lbnQnO1xyXG5leHBvcnQgKiBmcm9tICcuL2l4dC1wYW5lbC5tb2R1bGUnO1xyXG5cclxuIl19
|       |   |   |   --- ixt-panel.module.mjs: import { NgModule } from '@angular/core'; import { CommonModule } from '@angular/common'; import { FormsModule } from '@angular/forms'; import { IxtPanelComponent } from './ixt-panel.component'; import * as i0 from "@angular/core"; export class IxtPanelModule { static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtPanelModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); } static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "16.2.12", ngImport: i0, type: IxtPanelModule, declarations: [IxtPanelComponent], imports: [CommonModule, FormsModule], exports: [IxtPanelComponent] }); } static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtPanelModule, imports: [CommonModule, FormsModule] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtPanelModule, decorators: [{ type: NgModule, args: [{ declarations: [ IxtPanelComponent ], imports: [ CommonModule, FormsModule ], exports: [ IxtPanelComponent ] }] }] }); //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXh0LXBhbmVsLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL2l4dC1wYW5lbC9peHQtcGFuZWwubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM3QyxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQzs7QUFjMUQsTUFBTSxPQUFPLGNBQWM7K0dBQWQsY0FBYztnSEFBZCxjQUFjLGlCQVZ2QixpQkFBaUIsYUFHakIsWUFBWTtZQUNaLFdBQVcsYUFHWCxpQkFBaUI7Z0hBR1IsY0FBYyxZQVB2QixZQUFZO1lBQ1osV0FBVzs7NEZBTUYsY0FBYztrQkFaMUIsUUFBUTttQkFBQztvQkFDUixZQUFZLEVBQUU7d0JBQ1osaUJBQWlCO3FCQUNsQjtvQkFDRCxPQUFPLEVBQUU7d0JBQ1AsWUFBWTt3QkFDWixXQUFXO3FCQUNaO29CQUNELE9BQU8sRUFBRTt3QkFDUCxpQkFBaUI7cUJBQ2xCO2lCQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcclxuaW1wb3J0IHsgRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XHJcbmltcG9ydCB7IEl4dFBhbmVsQ29tcG9uZW50IH0gZnJvbSAnLi9peHQtcGFuZWwuY29tcG9uZW50JztcclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgZGVjbGFyYXRpb25zOiBbXHJcbiAgICBJeHRQYW5lbENvbXBvbmVudFxyXG4gIF0sXHJcbiAgaW1wb3J0czogW1xyXG4gICAgQ29tbW9uTW9kdWxlLFxyXG4gICAgRm9ybXNNb2R1bGVcclxuICBdLFxyXG4gIGV4cG9ydHM6IFtcclxuICAgIEl4dFBhbmVsQ29tcG9uZW50XHJcbiAgXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgSXh0UGFuZWxNb2R1bGUgeyB9XHJcbiJdfQ==
|       |   |   +-- ixt-splitpane
|       |   |   |   --- index.mjs: // public-api.ts (or index.ts) export * from './ixt-split-pane.component'; export * from './ixt-split-pane.module'; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9peHQtc3BsaXRwYW5lL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDhCQUE4QjtBQUM5QixjQUFjLDRCQUE0QixDQUFDO0FBQzNDLGNBQWMseUJBQXlCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBwdWJsaWMtYXBpLnRzIChvciBpbmRleC50cylcclxuZXhwb3J0ICogZnJvbSAnLi9peHQtc3BsaXQtcGFuZS5jb21wb25lbnQnO1xyXG5leHBvcnQgKiBmcm9tICcuL2l4dC1zcGxpdC1wYW5lLm1vZHVsZSc7Il19
|       |   |   |   --- ixt-split-pane.component.mjs: import { Component, HostListener, ViewChild } from '@angular/core'; import * as i0 from "@angular/core"; export class IxtSplitPaneComponent { constructor() { this.firstPanelSize = 50; // default size this.isDragging = false; this.startPosition = 0; this.startSize = 0; } startResize(e) { this.isDragging = true; this.startPosition = e.pageX; this.startSize = this.firstPanelSize; document.addEventListener('mousemove', this.resize.bind(this)); document.addEventListener('mouseup', this.stopResize.bind(this)); } resize(e) { if (!this.isDragging) return; const containerRect = this.divider.nativeElement.parentElement.getBoundingClientRect(); const difference = e.pageX - this.startPosition; let newSize = this.startSize + (difference / containerRect.width * 100); newSize = Math.max(0, Math.min(100, newSize)); this.firstPanelSize = newSize; } stopResize() { this.isDragging = false; document.removeEventListener('mousemove', this.resize.bind(this)); document.removeEventListener('mouseup', this.stopResize.bind(this)); } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtSplitPaneComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); } static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: IxtSplitPaneComponent, selector: "ixt-split-pane", host: { listeners: { "window:mousemove": "resize($event)" } }, viewQueries: [{ propertyName: "divider", first: true, predicate: ["divider"], descendants: true }], ngImport: i0, template: ` <div class="split-container"> <div class="first-panel" [style.flexBasis.%]="firstPanelSize"> <ng-content select=".left-pane"></ng-content> </div> <div #divider class="divider" (mousedown)="startResize($event)"> </div> <div class="second-panel" [style.flexBasis.%]="100 - firstPanelSize"> <ng-content select=".right-pane"></ng-content> </div> </div> `, isInline: true, styles: [":host{display:flex;flex:1;min-height:0;min-width:0;font-family:Segoe UI,-apple-system,BlinkMacSystemFont,Roboto,Helvetica Neue,Arial,sans-serif;font-size:14px;color:#2c3e50;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.split-container{display:flex;flex:1;min-height:0;min-width:0;background:#fff;border:1px solid #e0e4e8;border-radius:4px}.first-panel,.second-panel{display:flex;flex:1;min-height:0;min-width:0;overflow:auto;background:#fff;padding:16px}:is() table{width:100%;border-collapse:collapse}:is() th{text-align:left;font-weight:500;color:#546e7a;padding:8px 16px;border-bottom:2px solid #e0e4e8;font-size:13px;text-transform:uppercase;letter-spacing:.5px}:is() td{padding:12px 16px;border-bottom:1px solid #f0f2f5;color:#37474f;font-size:14px}:is() tr:hover{background-color:#f8fafc}:is(.first-panel,.second-panel)::-webkit-scrollbar{width:8px;height:8px}:is(.first-panel,.second-panel)::-webkit-scrollbar-track{background:#f5f6f8;border-radius:4px}:is(.first-panel,.second-panel)::-webkit-scrollbar-thumb{background:#dde1e6;border-radius:4px}:is():hover{background:#c7ccd1}.divider{display:flex;justify-content:center;width:16px;flex-shrink:0;cursor:col-resize;background:transparent;transition:background-color .2s}.divider:hover{background:#f5f6f8}.divider:hover .divider-line{background:#c7ccd1}.divider{width:6px;background:#ccc;cursor:col-resize;flex-shrink:0;border-left:1px solid #b4b4b4;border-right:1px solid #b4b4b4}.divider:hover{background:#999}\n"] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtSplitPaneComponent, decorators: [{ type: Component, args: [{ selector: 'ixt-split-pane', template: ` <div class="split-container"> <div class="first-panel" [style.flexBasis.%]="firstPanelSize"> <ng-content select=".left-pane"></ng-content> </div> <div #divider class="divider" (mousedown)="startResize($event)"> </div> <div class="second-panel" [style.flexBasis.%]="100 - firstPanelSize"> <ng-content select=".right-pane"></ng-content> </div> </div> `, styles: [":host{display:flex;flex:1;min-height:0;min-width:0;font-family:Segoe UI,-apple-system,BlinkMacSystemFont,Roboto,Helvetica Neue,Arial,sans-serif;font-size:14px;color:#2c3e50;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.split-container{display:flex;flex:1;min-height:0;min-width:0;background:#fff;border:1px solid #e0e4e8;border-radius:4px}.first-panel,.second-panel{display:flex;flex:1;min-height:0;min-width:0;overflow:auto;background:#fff;padding:16px}:is() table{width:100%;border-collapse:collapse}:is() th{text-align:left;font-weight:500;color:#546e7a;padding:8px 16px;border-bottom:2px solid #e0e4e8;font-size:13px;text-transform:uppercase;letter-spacing:.5px}:is() td{padding:12px 16px;border-bottom:1px solid #f0f2f5;color:#37474f;font-size:14px}:is() tr:hover{background-color:#f8fafc}:is(.first-panel,.second-panel)::-webkit-scrollbar{width:8px;height:8px}:is(.first-panel,.second-panel)::-webkit-scrollbar-track{background:#f5f6f8;border-radius:4px}:is(.first-panel,.second-panel)::-webkit-scrollbar-thumb{background:#dde1e6;border-radius:4px}:is():hover{background:#c7ccd1}.divider{display:flex;justify-content:center;width:16px;flex-shrink:0;cursor:col-resize;background:transparent;transition:background-color .2s}.divider:hover{background:#f5f6f8}.divider:hover .divider-line{background:#c7ccd1}.divider{width:6px;background:#ccc;cursor:col-resize;flex-shrink:0;border-left:1px solid #b4b4b4;border-right:1px solid #b4b4b4}.divider:hover{background:#999}\n"] }] }], propDecorators: { divider: [{ type: ViewChild, args: ['divider'] }], resize: [{ type: HostListener, args: ['window:mousemove', ['$event']] }] } }); //# sourceMappingURL=data:application/json;base64,
|       |   |   |   --- ixt-split-pane.module.mjs: // ixt-split-pane.module.ts import { NgModule } from '@angular/core'; import { CommonModule } from '@angular/common'; import { IxtSplitPaneComponent } from './ixt-split-pane.component'; import * as i0 from "@angular/core"; export class IxtSplitPaneModule { static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtSplitPaneModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); } static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "16.2.12", ngImport: i0, type: IxtSplitPaneModule, declarations: [IxtSplitPaneComponent], imports: [CommonModule], exports: [IxtSplitPaneComponent] }); } static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtSplitPaneModule, imports: [CommonModule] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtSplitPaneModule, decorators: [{ type: NgModule, args: [{ declarations: [ IxtSplitPaneComponent ], imports: [ CommonModule ], exports: [ IxtSplitPaneComponent ] }] }] }); //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXh0LXNwbGl0LXBhbmUubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvaXh0LXNwbGl0cGFuZS9peHQtc3BsaXQtcGFuZS5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsMkJBQTJCO0FBQzNCLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLDRCQUE0QixDQUFDOztBQWFuRSxNQUFNLE9BQU8sa0JBQWtCOytHQUFsQixrQkFBa0I7Z0hBQWxCLGtCQUFrQixpQkFUM0IscUJBQXFCLGFBR3JCLFlBQVksYUFHWixxQkFBcUI7Z0hBR1osa0JBQWtCLFlBTjNCLFlBQVk7OzRGQU1ILGtCQUFrQjtrQkFYOUIsUUFBUTttQkFBQztvQkFDUixZQUFZLEVBQUU7d0JBQ1oscUJBQXFCO3FCQUN0QjtvQkFDRCxPQUFPLEVBQUU7d0JBQ1AsWUFBWTtxQkFDYjtvQkFDRCxPQUFPLEVBQUU7d0JBQ1AscUJBQXFCO3FCQUN0QjtpQkFDRiIsInNvdXJjZXNDb250ZW50IjpbIi8vIGl4dC1zcGxpdC1wYW5lLm1vZHVsZS50c1xyXG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xyXG5pbXBvcnQgeyBJeHRTcGxpdFBhbmVDb21wb25lbnQgfSBmcm9tICcuL2l4dC1zcGxpdC1wYW5lLmNvbXBvbmVudCc7XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGRlY2xhcmF0aW9uczogW1xyXG4gICAgSXh0U3BsaXRQYW5lQ29tcG9uZW50XHJcbiAgXSxcclxuICBpbXBvcnRzOiBbXHJcbiAgICBDb21tb25Nb2R1bGVcclxuICBdLFxyXG4gIGV4cG9ydHM6IFtcclxuICAgIEl4dFNwbGl0UGFuZUNvbXBvbmVudFxyXG4gIF1cclxufSlcclxuZXhwb3J0IGNsYXNzIEl4dFNwbGl0UGFuZU1vZHVsZSB7IH1cclxuIl19
|       |   |   +-- ixt-table
|       |   |   |   +-- editors
|       |   |   |   |   +-- airport-code
|       |   |   |   |   |   --- airport-code-editor.component.mjs: import { Component, Input, forwardRef } from '@angular/core'; import { NG_VALUE_ACCESSOR, FormControl } from '@angular/forms'; import * as i0 from "@angular/core"; import * as i1 from "../../../ixt-dialog/ixt-dialog.service"; import * as i2 from "@angular/common"; import * as i3 from "@angular/forms"; export class AirportCodeEditorComponent { constructor(dialogService) { this.dialogService = dialogService; this.existingCodes = []; this.field = 'code'; this.inputControl = new FormControl(''); this.hasError = false; this.errorMessage = ''; // MatrixEditor implementation this.component = AirportCodeEditorComponent; // ControlValueAccessor implementations this.onChanged = () => { }; this.onTouched = () => { }; } ngOnInit() { this.setupValueChanges(); } // MatrixEditor methods getEditConfig() { return { existingValues: this.existingCodes, maxLength: 3, pattern: /^[A-Z]+$/ }; } getDefaultValue() { return ''; } validate(value) { if (!value) return false; const code = String(value).toUpperCase(); if (code.length !== 3) return false; if (!/^[A-Z]+$/.test(code)) return false; if (this.existingCodes.includes(code)) return false; return true; } format(value) { return value ? String(value).toUpperCase() : ''; } async setupValueChanges() { this.inputControl.valueChanges.subscribe(async (value) => { if (value !== null) { const upperValue = value.toUpperCase(); if (upperValue !== value) { this.inputControl.setValue(upperValue, { emitEvent: false }); } if (await this.validateValue(upperValue)) { console.log('Editor emitting code change:', upperValue); this.onChanged(upperValue); } } }); } async validateValue(value) { this.hasError = false; this.errorMessage = ''; if (!value) return false; if (value.length !== (this.config?.['maxLength'] || 3)) { this.hasError = true; this.errorMessage = `Code must be exactly ${this.config?.['maxLength'] || 3} characters`; return false; } const pattern = this.config?.['pattern'] || /^[A-Z]+$/; if (!pattern.test(value)) { this.hasError = true; this.errorMessage = 'Only letters are allowed'; return false; } if (this.config?.existingValues?.includes(value)) { this.hasError = true; this.errorMessage = 'This code already exists'; // await this.dialogService.warning( // `The code "${value}" already exists. Please enter a different code.`, // 'Duplicate Code' // ); return false; } return true; } // ControlValueAccessor interface implementation writeValue(value) { console.log('AirportCodeEditor writeValue:', value); this.inputControl.setValue(value, { emitEvent: false }); } registerOnChange(fn) { console.log('AirportCodeEditor registerOnChange'); this.onChanged = fn; } registerOnTouched(fn) { this.onTouched = fn; } setDisabledState(isDisabled) { if (isDisabled) { this.inputControl.disable(); } else { this.inputControl.enable(); } } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: AirportCodeEditorComponent, deps: [{ token: i1.IxtDialogService }], target: i0.ɵɵFactoryTarget.Component }); } static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: AirportCodeEditorComponent, selector: "airport-code-editor", inputs: { config: "config", existingCodes: "existingCodes", field: "field" }, providers: [ { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AirportCodeEditorComponent), multi: true } ], ngImport: i0, template: ` <div class="editor-container"> <input type="text" [formControl]="inputControl" class="w-24 px-2 py-1 border rounded" [class.border-red-500]="hasError" [attr.maxlength]="config?.['maxLength'] || 3" (blur)="onTouched()" /> <div *ngIf="hasError" class="text-red-500 text-sm mt-1"> {{ errorMessage }} </div> </div> `, isInline: true, styles: [".editor-container{position:relative}\n"], dependencies: [{ kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i3.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i3.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i3.FormControlDirective, selector: "[formControl]", inputs: ["formControl", "disabled", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: AirportCodeEditorComponent, decorators: [{ type: Component, args: [{ selector: 'airport-code-editor', template: ` <div class="editor-container"> <input type="text" [formControl]="inputControl" class="w-24 px-2 py-1 border rounded" [class.border-red-500]="hasError" [attr.maxlength]="config?.['maxLength'] || 3" (blur)="onTouched()" /> <div *ngIf="hasError" class="text-red-500 text-sm mt-1"> {{ errorMessage }} </div> </div> `, providers: [ { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AirportCodeEditorComponent), multi: true } ], styles: [".editor-container{position:relative}\n"] }] }], ctorParameters: function () { return [{ type: i1.IxtDialogService }]; }, propDecorators: { config: [{ type: Input }], existingCodes: [{ type: Input }], field: [{ type: Input }] } }); //# sourceMappingURL=data:application/json;base64,
|       |   |   |   |   +-- binary-editor
|       |   |   |   |   |   --- binary-editor.component.mjs: // src/components/ixt-matrix/matrix-editors/binary-editor/binary-editor.component.ts import { Component, Input, forwardRef, Output, EventEmitter } from '@angular/core'; import { NG_VALUE_ACCESSOR, FormControl } from '@angular/forms'; import * as i0 from "@angular/core"; import * as i1 from "@angular/common"; import * as i2 from "@angular/forms"; export class BinaryEditorComponent { constructor() { this.config = {}; this.selectionChange = new EventEmitter(); this.inputControl = new FormControl(false); this.component = BinaryEditorComponent; this.showLabel = false; this.isChecked = false; this.onChange = () => { }; this.onTouch = () => { }; this.setupDefaults(); this.isChecked = false; } ngOnInit() { this.setupDefaults(); this.setupValueChanges(); } setupDefaults() { this.config = { trueValue: true, falseValue: false, trueDisplay: 'True', falseDisplay: 'False', ...this.config }; } setupValueChanges() { this.inputControl.valueChanges.subscribe((checked) => { if (checked !== null) { const value = checked ? this.config.trueValue : this.config.falseValue; this.isChecked = checked; this.onChange(value); this.selectionChange.emit({ selected: checked, rowData: this.config.rowData, rowIndex: this.config.rowIndex }); } }); } onCheckboxChange(event) { const checkbox = event.target; this.inputControl.setValue(checkbox.checked); this.onTouch(); } getEditConfig() { return { trueValue: this.config.trueValue || true, falseValue: this.config.falseValue || false, trueDisplay: this.config.trueDisplay || 'True', falseDisplay: this.config.falseDisplay || 'False' }; } writeValue(value) { const checked = value === this.config.trueValue; this.isChecked = checked; this.inputControl.setValue(checked, { emitEvent: false }); } registerOnChange(fn) { this.onChange = fn; } registerOnTouched(fn) { this.onTouch = fn; } setDisabledState(isDisabled) { if (isDisabled) { this.inputControl.disable(); } else { this.inputControl.enable(); } } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: BinaryEditorComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); } static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: BinaryEditorComponent, selector: "binary-editor", inputs: { config: "config" }, outputs: { selectionChange: "selectionChange" }, providers: [ { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => BinaryEditorComponent), multi: true } ], ngImport: i0, template: ` <div class="editor-container"> <input type="checkbox" [formControl]="inputControl" [checked]="isChecked" (change)="onCheckboxChange($event)" class="w-4 h-4 rounded border-gray-300" /> <span *ngIf="showLabel" class="ml-2"> {{ isChecked ? config.trueDisplay : config.falseDisplay }} </span> </div> `, isInline: true, dependencies: [{ kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i2.CheckboxControlValueAccessor, selector: "input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]" }, { kind: "directive", type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i2.FormControlDirective, selector: "[formControl]", inputs: ["formControl", "disabled", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: BinaryEditorComponent, decorators: [{ type: Component, args: [{ selector: 'binary-editor', template: ` <div class="editor-container"> <input type="checkbox" [formControl]="inputControl" [checked]="isChecked" (change)="onCheckboxChange($event)" class="w-4 h-4 rounded border-gray-300" /> <span *ngIf="showLabel" class="ml-2"> {{ isChecked ? config.trueDisplay : config.falseDisplay }} </span> </div> `, providers: [ { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => BinaryEditorComponent), multi: true } ] }] }], ctorParameters: function () { return []; }, propDecorators: { config: [{ type: Input }], selectionChange: [{ type: Output }] } }); //# sourceMappingURL=data:application/json;base64,
|       |   |   |   |   +-- coordinate
|       |   |   |   |   |   --- coordinate-editor.component.mjs: // src/components/ixt-matrix/matrix-editors/coordinate/coordinate-editor.component.ts import { Component, Input, forwardRef } from '@angular/core'; import { NG_VALUE_ACCESSOR, FormControl } from '@angular/forms'; import * as i0 from "@angular/core"; import * as i1 from "../../../ixt-dialog/ixt-dialog.service"; import * as i2 from "@angular/common"; import * as i3 from "@angular/forms"; export class CoordinateEditorComponent { constructor(dialogService) { this.dialogService = dialogService; this.inputControl = new FormControl(''); this.hasError = false; this.errorMessage = ''; // MatrixEditor implementation this.component = CoordinateEditorComponent; this.onChange = () => { }; this.onTouch = () => { }; } ngOnInit() { this.setupValueChanges(); } getEditConfig() { return { type: this.config?.['type'] || 'lat' }; } validate(value) { const num = Number(value); const isLat = this.config?.['type'] === 'lat'; return isLat ? (num >= -90 && num <= 90) : (num >= -180 && num <= 180); } // private setupValueChanges() { // this.inputControl.valueChanges.subscribe(value => { // if (value !== null) { // // Convert string to number for validation // const numValue = Number(value); // if (this.validateValue(numValue)) { // this.onChange(numValue); // } // } // }); // } setupValueChanges() { this.inputControl.valueChanges.subscribe(value => { if (value !== null) { const numValue = Number(value); if (!isNaN(numValue) && this.validateValue(numValue)) { this.onChange(numValue); } else { // Reset to last valid value or empty this.inputControl.setValue('', { emitEvent: false }); } } }); } validateValue(value) { this.hasError = false; this.errorMessage = ''; if (isNaN(value)) { this.hasError = true; this.errorMessage = 'Must be a valid number'; return false; } const isLat = this.config?.['type'] === 'lat'; const min = isLat ? -90 : -180; const max = isLat ? 90 : 180; if (value < min || value > max) { this.hasError = true; this.errorMessage = `Must be between ${min} and ${max}`; return false; } return true; } // ControlValueAccessor methods writeValue(value) { this.inputControl.setValue(value?.toString() || '', { emitEvent: false }); } registerOnChange(fn) { this.onChange = fn; } registerOnTouched(fn) { this.onTouch = fn; } onBlur() { this.onTouch(); } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: CoordinateEditorComponent, deps: [{ token: i1.IxtDialogService }], target: i0.ɵɵFactoryTarget.Component }); } static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: CoordinateEditorComponent, selector: "coordinate-editor", inputs: { config: "config" }, providers: [ { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => CoordinateEditorComponent), multi: true } ], ngImport: i0, template: ` <div class="editor-container"> <input type="number" step="any" [min]="config?.['type'] === 'lat' ? -90 : -180" [max]="config?.['type'] === 'lat' ? 90 : 180" [formControl]="inputControl" class="w-24 px-2 py-1 border rounded" [class.border-red-500]="hasError" [placeholder]="config?.['type'] === 'lat' ? '(-90 to 90)' : '(-180 to 180)'" (blur)="onBlur()" /> <div *ngIf="hasError" class="text-red-500 text-sm mt-1"> {{ errorMessage }} </div> </div>`, isInline: true, dependencies: [{ kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i3.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i3.NumberValueAccessor, selector: "input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]" }, { kind: "directive", type: i3.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i3.MinValidator, selector: "input[type=number][min][formControlName],input[type=number][min][formControl],input[type=number][min][ngModel]", inputs: ["min"] }, { kind: "directive", type: i3.MaxValidator, selector: "input[type=number][max][formControlName],input[type=number][max][formControl],input[type=number][max][ngModel]", inputs: ["max"] }, { kind: "directive", type: i3.FormControlDirective, selector: "[formControl]", inputs: ["formControl", "disabled", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: CoordinateEditorComponent, decorators: [{ type: Component, args: [{ selector: 'coordinate-editor', template: ` <div class="editor-container"> <input type="number" step="any" [min]="config?.['type'] === 'lat' ? -90 : -180" [max]="config?.['type'] === 'lat' ? 90 : 180" [formControl]="inputControl" class="w-24 px-2 py-1 border rounded" [class.border-red-500]="hasError" [placeholder]="config?.['type'] === 'lat' ? '(-90 to 90)' : '(-180 to 180)'" (blur)="onBlur()" /> <div *ngIf="hasError" class="text-red-500 text-sm mt-1"> {{ errorMessage }} </div> </div>`, providers: [ { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => CoordinateEditorComponent), multi: true } ] }] }], ctorParameters: function () { return [{ type: i1.IxtDialogService }]; }, propDecorators: { config: [{ type: Input }] } }); //# sourceMappingURL=data:application/json;base64,
|       |   |   |   |   --- editor.interface.mjs: export {}; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWRpdG9yLmludGVyZmFjZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL2l4dC10YWJsZS9lZGl0b3JzL2VkaXRvci5pbnRlcmZhY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFR5cGUgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBNYXRyaXhFZGl0b3JDb25maWcge1xyXG4gIGV4aXN0aW5nVmFsdWVzPzogYW55W107XHJcbiAgdmFsaWRhdG9ycz86IGFueVtdO1xyXG4gIGZpZWxkPzogc3RyaW5nO1xyXG4gIFtrZXk6IHN0cmluZ106IGFueTtcclxufVxyXG5cclxuXHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIE1hdHJpeEVkaXRvciB7XHJcbiAgY29tcG9uZW50OiBUeXBlPGFueT47XHJcbiAgZ2V0RWRpdENvbmZpZygpOiBhbnk7XHJcbiAgdmFsaWRhdGU/KHZhbHVlOiBhbnkpOiBib29sZWFuO1xyXG4gIGZvcm1hdD8odmFsdWU6IGFueSk6IHN0cmluZztcclxuICBnZXREZWZhdWx0VmFsdWU/KCk6IGFueTtcclxufVxyXG5cclxuIl19
|       |   |   |   +-- services
|       |   |   |   |   +-- edit
|       |   |   |   |   |   --- edit.model.mjs: export {}; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWRpdC5tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL2l4dC10YWJsZS9zZXJ2aWNlcy9lZGl0L2VkaXQubW9kZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9jb21wb25lbnRzL2l4dC1tYXRyaXgvc2VydmljZXMvZWRpdC9lZGl0Lm1vZGVsLnRzXHJcbmltcG9ydCB7IEZvcm1Db250cm9sIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBSb3dDaGFuZ2VzIHtcclxuICBba2V5OiBzdHJpbmddOiBhbnk7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgRWRpdFN0YXRlIHtcclxuICBlZGl0aW5nUm93czogU2V0PG51bWJlcj47XHJcbiAgbmV3Um93czogYW55W107XHJcbiAgcm93Q2hhbmdlczogTWFwPG51bWJlciwgUm93Q2hhbmdlcz47XHJcbiAgZWRpdENvbnRyb2xzOiBNYXA8c3RyaW5nLCBGb3JtQ29udHJvbD47XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgRWRpdEV2ZW50IHtcclxuICByb3dJbmRleDogbnVtYmVyO1xyXG4gIGZpZWxkOiBzdHJpbmc7XHJcbiAgdmFsdWU6IGFueTtcclxufSJdfQ==
|       |   |   |   |   |   --- edit.service.mjs: // src/components/ixt-matrix/services/edit/edit.service.ts import { Injectable } from '@angular/core'; import { BehaviorSubject } from 'rxjs'; import { FormControl } from '@angular/forms'; import * as i0 from "@angular/core"; export class EditService { constructor() { this.initialState = { editingRows: new Set(), newRows: [], rowChanges: new Map(), editControls: new Map() }; this.state = new BehaviorSubject(this.initialState); this.state$ = this.state.asObservable(); } getDefaultValueForType(type) { switch (type) { case 'number': return 0; case 'enum': return ''; case 'text': default: return ''; } } addNewRow(columnConfigs) { const newRow = {}; if (columnConfigs) { Object.entries(columnConfigs).forEach(([field, config]) => { newRow[field] = this.getDefaultValueForType(config.type); }); } const currentState = this.state.getValue(); const newRows = [...currentState.newRows]; newRows.unshift(newRow); // Start editing the new row const editingRows = new Set(currentState.editingRows); editingRows.add(-newRows.length); this.state.next({ ...currentState, newRows, editingRows }); } startEditing(rowIndex) { const currentState = this.state.getValue(); const editingRows = new Set(currentState.editingRows); editingRows.add(rowIndex); this.state.next({ ...currentState, editingRows }); } cancelEditing(rowIndex) { const currentState = this.state.getValue(); const editingRows = new Set(currentState.editingRows); const rowChanges = new Map(currentState.rowChanges); editingRows.delete(rowIndex); rowChanges.delete(rowIndex); this.state.next({ ...currentState, editingRows, rowChanges }); } onValueChange(event) { const { rowIndex, field, value } = event; const currentState = this.state.getValue(); const rowChanges = new Map(currentState.rowChanges); let changes = rowChanges.get(rowIndex) || {}; changes = { ...changes, [field]: value }; rowChanges.set(rowIndex, changes); this.state.next({ ...currentState, rowChanges }); } getEditControl(rowIndex, field) { const key = `${rowIndex}-${field}`; const currentState = this.state.getValue(); let control = currentState.editControls.get(key); if (!control) { control = new FormControl(''); const editControls = new Map(currentState.editControls); editControls.set(key, control); this.state.next({ ...currentState, editControls }); } return control; } saveChanges(data) { const currentState = this.state.getValue(); const updatedData = [...data]; // Apply changes to existing rows currentState.rowChanges.forEach((changes, rowIndex) => { if (rowIndex >= 0) { updatedData[rowIndex] = { ...updatedData[rowIndex], ...changes }; } }); // Add new rows if (currentState.newRows.length) { // Apply any changes to new rows const processedNewRows = currentState.newRows.map((row, index) => { const changes = currentState.rowChanges.get(-index - 1); return changes ? { ...row, ...changes } : row; }); updatedData.unshift(...processedNewRows); } // Reset state this.state.next(this.initialState); return updatedData; } isNewRow(index) { return index < this.state.getValue().newRows.length; } isEditing(rowIndex) { return this.state.getValue().editingRows.has(rowIndex); } hasChanges() { const currentState = this.state.getValue(); return currentState.rowChanges.size > 0 || currentState.newRows.length > 0; } getNewRows() { return this.state.getValue().newRows; } getRowChanges(rowIndex) { return this.state.getValue().rowChanges.get(rowIndex); } getRowIndex(displayIndex) { return displayIndex - this.state.getValue().newRows.length; } clearEditing() { this.state.next(this.initialState); } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: EditService, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); } static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: EditService, providedIn: 'root' }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: EditService, decorators: [{ type: Injectable, args: [{ providedIn: 'root' }] }] }); //# sourceMappingURL=data:application/json;base64,
|       |   |   |   |   +-- filter
|       |   |   |   |   |   --- filter.model.mjs: export {}; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsdGVyLm1vZGVsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvaXh0LXRhYmxlL3NlcnZpY2VzL2ZpbHRlci9maWx0ZXIubW9kZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9jb21wb25lbnRzL2l4dC1tYXRyaXgvc2VydmljZXMvZmlsdGVyL2ZpbHRlci5tb2RlbC50c1xyXG5pbXBvcnQgeyBGb3JtQ29udHJvbCB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcclxuXHJcbmV4cG9ydCB0eXBlIEZpbHRlck9wZXJhdG9yID0gJ2VxdWFscycgfCAnc3RhcnRzV2l0aCcgfCAnY29udGFpbnMnIHwgJ2JldHdlZW4nIHwgJz4nIHwgJzwnIHwgJz49JyB8ICc8PScgfCAnIT0nO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBGaWx0ZXJTdGF0ZSB7XHJcbiAgZmllbGQ6IHN0cmluZztcclxuICBvcGVyYXRvcjogRmlsdGVyT3BlcmF0b3I7XHJcbiAgdmFsdWU6IGFueTtcclxuICBzZWNvbmRhcnlWYWx1ZT86IGFueTtcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBGaWx0ZXJDb250cm9scyB7XHJcbiAgdmFsdWU6IEZvcm1Db250cm9sO1xyXG4gIG9wZXJhdG9yPzogRm9ybUNvbnRyb2w8c3RyaW5nPjtcclxufSJdfQ==
|       |   |   |   |   |   --- filter.service.mjs: import { Injectable } from '@angular/core'; import { BehaviorSubject } from 'rxjs'; import { FormControl } from '@angular/forms'; import * as i0 from "@angular/core"; export class FilterService { constructor() { this.activeFilters = new Map(); this.filterControls = new Map(); this.showFilters = false; this.filtersChanged = new BehaviorSubject(new Map()); this.filtersChanged$ = this.filtersChanged.asObservable(); } initializeFilter(field, config) { const controls = { value: new FormControl('') }; if (config.type === 'number') { // Fix: Explicitly type the FormControl controls.operator = new FormControl('=', { nonNullable: true }); } this.filterControls.set(field, controls); } getFilterControl(field) { return this.filterControls.get(field)?.value; } getOperatorControl(field) { return this.filterControls.get(field)?.operator; } onFilterChange(field, value, config) { if (value || value === 0) { const defaultOperator = config?.type === 'number' ? 'equals' : 'contains'; const operator = this.getOperatorControl(field)?.value || defaultOperator; this.activeFilters.set(field, { field, operator: operator, value: config?.type === 'number' ? Number(value) : value }); } else { this.activeFilters.delete(field); } this.filtersChanged.next(this.activeFilters); } onOperatorChange(field) { const currentValue = this.getFilterControl(field)?.value; if (currentValue || currentValue === 0) { this.onFilterChange(field, currentValue); } } clearAllFilters() { this.activeFilters.clear(); this.filterControls.forEach(controls => { controls.value.reset(); controls.operator?.reset('='); }); this.filtersChanged.next(this.activeFilters); } toggleFilters(column) { if (this.activeFilterColumn === column) { this.activeFilterColumn = undefined; this.showFilters = false; } else { this.activeFilterColumn = column; this.showFilters = true; } } matchesFilter(item, filter) { if (item === undefined || item === null) return false; // Handle numeric comparisons if (typeof item === 'number' || !isNaN(Number(item))) { const numValue = Number(item); const numFilterValue = Number(filter.value); return this.handleNumericComparison(numValue, numFilterValue, filter.operator); } // String handling const itemValue = String(item).toLowerCase(); const filterValue = String(filter.value).toLowerCase(); switch (filter.operator) { case 'startsWith': return itemValue.startsWith(filterValue); case 'equals': return itemValue === filterValue; case '!=': return itemValue !== filterValue; default: return itemValue.includes(filterValue); } } handleNumericComparison(numValue, numFilterValue, operator) { switch (operator) { case '>': return numValue > numFilterValue; case '<': return numValue < numFilterValue; case '>=': return numValue >= numFilterValue; case '<=': return numValue <= numFilterValue; case '!=': return numValue !== numFilterValue; case 'equals': return numValue === numFilterValue; default: return false; } } get isShowingFilters() { return this.showFilters; } get activeColumn() { return this.activeFilterColumn; } getActiveFilters() { return this.activeFilters; } hasActiveFilters() { return this.activeFilters.size > 0; } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: FilterService, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); } static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: FilterService, providedIn: 'root' }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: FilterService, decorators: [{ type: Injectable, args: [{ providedIn: 'root' }] }] }); //# sourceMappingURL=data:application/json;base64,
|       |   |   |   |   +-- selection
|       |   |   |   |   |   --- selection.model.mjs: export {}; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VsZWN0aW9uLm1vZGVsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvaXh0LXRhYmxlL3NlcnZpY2VzL3NlbGVjdGlvbi9zZWxlY3Rpb24ubW9kZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9jb21wb25lbnRzL2l4dC1tYXRyaXgvc2VydmljZXMvc2VsZWN0aW9uL3NlbGVjdGlvbi5tb2RlbC50c1xyXG5leHBvcnQgaW50ZXJmYWNlIFNlbGVjdGlvblN0YXRlIHtcclxuICAgIHNlbGVjdGVkUm93czogU2V0PG51bWJlcj47XHJcbiAgICBhbGxTZWxlY3RlZDogYm9vbGVhbjtcclxufVxyXG4iXX0=
|       |   |   |   |   |   --- selection.service.mjs: // src/components/ixt-matrix/services/selection/selection.service.ts import { Injectable } from '@angular/core'; import { BehaviorSubject } from 'rxjs'; import * as i0 from "@angular/core"; export class SelectionService { constructor() { this.state = new BehaviorSubject({ selectedRows: new Set(), allSelected: false }); this.state$ = this.state.asObservable(); } selectRow(index, selected = true) { const currentState = this.state.getValue(); const newSelectedRows = new Set(currentState.selectedRows); if (selected) { newSelectedRows.add(index); } else { newSelectedRows.delete(index); } this.state.next({ selectedRows: newSelectedRows, allSelected: currentState.allSelected }); } toggleAllRows(selected, totalRows) { const newSelectedRows = new Set(); if (selected) { // Add all row indices for (let i = 0; i < totalRows; i++) { newSelectedRows.add(i); } } this.state.next({ selectedRows: newSelectedRows, allSelected: selected }); } clearSelection() { this.state.next({ selectedRows: new Set(), allSelected: false }); } getSelectedRows() { return this.state.getValue().selectedRows; } isSelected(index) { return this.state.getValue().selectedRows.has(index); } isAllSelected() { return this.state.getValue().allSelected; } getSelectedCount() { return this.state.getValue().selectedRows.size; } setSelectedRows(indices) { const newSelectedRows = new Set(indices); this.state.next({ selectedRows: newSelectedRows, allSelected: false // Reset all selected state when manually setting rows }); } isPartiallySelected(totalRows) { const selectedCount = this.getSelectedCount(); return selectedCount > 0 && selectedCount < totalRows; } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: SelectionService, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); } static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: SelectionService, providedIn: 'root' }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: SelectionService, decorators: [{ type: Injectable, args: [{ providedIn: 'root' }] }] }); //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VsZWN0aW9uLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9peHQtdGFibGUvc2VydmljZXMvc2VsZWN0aW9uL3NlbGVjdGlvbi5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9FQUFvRTtBQUNwRSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxNQUFNLENBQUM7O0FBTXZDLE1BQU0sT0FBTyxnQkFBZ0I7SUFIN0I7UUFJWSxVQUFLLEdBQUcsSUFBSSxlQUFlLENBQWlCO1lBQ2hELFlBQVksRUFBRSxJQUFJLEdBQUcsRUFBVTtZQUMvQixXQUFXLEVBQUUsS0FBSztTQUNyQixDQUFDLENBQUM7UUFFSSxXQUFNLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxZQUFZLEVBQUUsQ0FBQztLQXFFN0M7SUFuRVUsU0FBUyxDQUFDLEtBQWEsRUFBRSxXQUFvQixJQUFJO1FBQ3BELE1BQU0sWUFBWSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDM0MsTUFBTSxlQUFlLEdBQUcsSUFBSSxHQUFHLENBQUMsWUFBWSxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBRTNELElBQUksUUFBUSxFQUFFO1lBQ1YsZUFBZSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQztTQUM5QjthQUFNO1lBQ0gsZUFBZSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztTQUNqQztRQUVELElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDO1lBQ1osWUFBWSxFQUFFLGVBQWU7WUFDN0IsV0FBVyxFQUFFLFlBQVksQ0FBQyxXQUFXO1NBQ3hDLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFTSxhQUFhLENBQUMsUUFBaUIsRUFBRSxTQUFpQjtRQUNyRCxNQUFNLGVBQWUsR0FBRyxJQUFJLEdBQUcsRUFBVSxDQUFDO1FBRTFDLElBQUksUUFBUSxFQUFFO1lBQ1Ysc0JBQXNCO1lBQ3RCLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxTQUFTLEVBQUUsQ0FBQyxFQUFFLEVBQUU7Z0JBQ2hDLGVBQWUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7YUFDMUI7U0FDSjtRQUVELElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDO1lBQ1osWUFBWSxFQUFFLGVBQWU7WUFDN0IsV0FBVyxFQUFFLFFBQVE7U0FDeEIsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUVNLGNBQWM7UUFDakIsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUM7WUFDWixZQUFZLEVBQUUsSUFBSSxHQUFHLEVBQVU7WUFDL0IsV0FBVyxFQUFFLEtBQUs7U0FDckIsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUVNLGVBQWU7UUFDbEIsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBRSxDQUFDLFlBQVksQ0FBQztJQUM5QyxDQUFDO0lBRU0sVUFBVSxDQUFDLEtBQWE7UUFDM0IsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBRSxDQUFDLFlBQVksQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDekQsQ0FBQztJQUVNLGFBQWE7UUFDaEIsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBRSxDQUFDLFdBQVcsQ0FBQztJQUM3QyxDQUFDO0lBRU0sZ0JBQWdCO1FBQ25CLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLEVBQUUsQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDO0lBQ25ELENBQUM7SUFFTSxlQUFlLENBQUMsT0FBaUI7UUFDcEMsTUFBTSxlQUFlLEdBQUcsSUFBSSxHQUFHLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDekMsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUM7WUFDWixZQUFZLEVBQUUsZUFBZTtZQUM3QixXQUFXLEVBQUUsS0FBSyxDQUFDLHNEQUFzRDtTQUM1RSxDQUFDLENBQUM7SUFDUCxDQUFDO0lBRU0sbUJBQW1CLENBQUMsU0FBaUI7UUFDeEMsTUFBTSxhQUFhLEdBQUcsSUFBSSxDQUFDLGdCQUFnQixFQUFFLENBQUM7UUFDOUMsT0FBTyxhQUFhLEdBQUcsQ0FBQyxJQUFJLGFBQWEsR0FBRyxTQUFTLENBQUM7SUFDMUQsQ0FBQzsrR0ExRVEsZ0JBQWdCO21IQUFoQixnQkFBZ0IsY0FGYixNQUFNOzs0RkFFVCxnQkFBZ0I7a0JBSDVCLFVBQVU7bUJBQUM7b0JBQ1IsVUFBVSxFQUFFLE1BQU07aUJBQ3JCIiwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2NvbXBvbmVudHMvaXh0LW1hdHJpeC9zZXJ2aWNlcy9zZWxlY3Rpb24vc2VsZWN0aW9uLnNlcnZpY2UudHNcclxuaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBCZWhhdmlvclN1YmplY3QgfSBmcm9tICdyeGpzJztcclxuaW1wb3J0IHsgU2VsZWN0aW9uU3RhdGUgfSBmcm9tICcuL3NlbGVjdGlvbi5tb2RlbCc7XHJcblxyXG5ASW5qZWN0YWJsZSh7XHJcbiAgICBwcm92aWRlZEluOiAncm9vdCdcclxufSlcclxuZXhwb3J0IGNsYXNzIFNlbGVjdGlvblNlcnZpY2Uge1xyXG4gICAgcHJpdmF0ZSBzdGF0ZSA9IG5ldyBCZWhhdmlvclN1YmplY3Q8U2VsZWN0aW9uU3RhdGU+KHtcclxuICAgICAgICBzZWxlY3RlZFJvd3M6IG5ldyBTZXQ8bnVtYmVyPigpLFxyXG4gICAgICAgIGFsbFNlbGVjdGVkOiBmYWxzZVxyXG4gICAgfSk7XHJcblxyXG4gICAgcHVibGljIHN0YXRlJCA9IHRoaXMuc3RhdGUuYXNPYnNlcnZhYmxlKCk7XHJcblxyXG4gICAgcHVibGljIHNlbGVjdFJvdyhpbmRleDogbnVtYmVyLCBzZWxlY3RlZDogYm9vbGVhbiA9IHRydWUpOiB2b2lkIHtcclxuICAgICAgICBjb25zdCBjdXJyZW50U3RhdGUgPSB0aGlzLnN0YXRlLmdldFZhbHVlKCk7XHJcbiAgICAgICAgY29uc3QgbmV3U2VsZWN0ZWRSb3dzID0gbmV3IFNldChjdXJyZW50U3RhdGUuc2VsZWN0ZWRSb3dzKTtcclxuXHJcbiAgICAgICAgaWYgKHNlbGVjdGVkKSB7XHJcbiAgICAgICAgICAgIG5ld1NlbGVjdGVkUm93cy5hZGQoaW5kZXgpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIG5ld1NlbGVjdGVkUm93cy5kZWxldGUoaW5kZXgpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdGhpcy5zdGF0ZS5uZXh0KHtcclxuICAgICAgICAgICAgc2VsZWN0ZWRSb3dzOiBuZXdTZWxlY3RlZFJvd3MsXHJcbiAgICAgICAgICAgIGFsbFNlbGVjdGVkOiBjdXJyZW50U3RhdGUuYWxsU2VsZWN0ZWRcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgdG9nZ2xlQWxsUm93cyhzZWxlY3RlZDogYm9vbGVhbiwgdG90YWxSb3dzOiBudW1iZXIpOiB2b2lkIHtcclxuICAgICAgICBjb25zdCBuZXdTZWxlY3RlZFJvd3MgPSBuZXcgU2V0PG51bWJlcj4oKTtcclxuXHJcbiAgICAgICAgaWYgKHNlbGVjdGVkKSB7XHJcbiAgICAgICAgICAgIC8vIEFkZCBhbGwgcm93IGluZGljZXNcclxuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0b3RhbFJvd3M7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgbmV3U2VsZWN0ZWRSb3dzLmFkZChpKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdGhpcy5zdGF0ZS5uZXh0KHtcclxuICAgICAgICAgICAgc2VsZWN0ZWRSb3dzOiBuZXdTZWxlY3RlZFJvd3MsXHJcbiAgICAgICAgICAgIGFsbFNlbGVjdGVkOiBzZWxlY3RlZFxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBjbGVhclNlbGVjdGlvbigpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLnN0YXRlLm5leHQoe1xyXG4gICAgICAgICAgICBzZWxlY3RlZFJvd3M6IG5ldyBTZXQ8bnVtYmVyPigpLFxyXG4gICAgICAgICAgICBhbGxTZWxlY3RlZDogZmFsc2VcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgZ2V0U2VsZWN0ZWRSb3dzKCk6IFNldDxudW1iZXI+IHtcclxuICAgICAgICByZXR1cm4gdGhpcy5zdGF0ZS5nZXRWYWx1ZSgpLnNlbGVjdGVkUm93cztcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgaXNTZWxlY3RlZChpbmRleDogbnVtYmVyKTogYm9vbGVhbiB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuc3RhdGUuZ2V0VmFsdWUoKS5zZWxlY3RlZFJvd3MuaGFzKGluZGV4KTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgaXNBbGxTZWxlY3RlZCgpOiBib29sZWFuIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5zdGF0ZS5nZXRWYWx1ZSgpLmFsbFNlbGVjdGVkO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBnZXRTZWxlY3RlZENvdW50KCk6IG51bWJlciB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuc3RhdGUuZ2V0VmFsdWUoKS5zZWxlY3RlZFJvd3Muc2l6ZTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc2V0U2VsZWN0ZWRSb3dzKGluZGljZXM6IG51bWJlcltdKTogdm9pZCB7XHJcbiAgICAgICAgY29uc3QgbmV3U2VsZWN0ZWRSb3dzID0gbmV3IFNldChpbmRpY2VzKTtcclxuICAgICAgICB0aGlzLnN0YXRlLm5leHQoe1xyXG4gICAgICAgICAgICBzZWxlY3RlZFJvd3M6IG5ld1NlbGVjdGVkUm93cyxcclxuICAgICAgICAgICAgYWxsU2VsZWN0ZWQ6IGZhbHNlIC8vIFJlc2V0IGFsbCBzZWxlY3RlZCBzdGF0ZSB3aGVuIG1hbnVhbGx5IHNldHRpbmcgcm93c1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBpc1BhcnRpYWxseVNlbGVjdGVkKHRvdGFsUm93czogbnVtYmVyKTogYm9vbGVhbiB7XHJcbiAgICAgICAgY29uc3Qgc2VsZWN0ZWRDb3VudCA9IHRoaXMuZ2V0U2VsZWN0ZWRDb3VudCgpO1xyXG4gICAgICAgIHJldHVybiBzZWxlY3RlZENvdW50ID4gMCAmJiBzZWxlY3RlZENvdW50IDwgdG90YWxSb3dzO1xyXG4gICAgfVxyXG59Il19
|       |   |   |   |   +-- sort
|       |   |   |   |   |   --- sort.model.mjs: export {}; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic29ydC5tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL2l4dC10YWJsZS9zZXJ2aWNlcy9zb3J0L3NvcnQubW9kZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9jb21wb25lbnRzL2l4dC1tYXRyaXgvc2VydmljZXMvc29ydC9zb3J0Lm1vZGVsLnRzXHJcbmV4cG9ydCB0eXBlIFNvcnREaXJlY3Rpb24gPSAnYXNjJyB8ICdkZXNjJyB8IG51bGw7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFNvcnRTdGF0ZSB7XHJcbiAgY29sdW1uOiBzdHJpbmcgfCBudWxsO1xyXG4gIGRpcmVjdGlvbjogU29ydERpcmVjdGlvbjtcclxufVxyXG5cclxuIl19
|       |   |   |   |   |   --- sort.service.mjs: // src/components/ixt-matrix/services/sort/sort.service.ts import { Injectable } from '@angular/core'; import { BehaviorSubject } from 'rxjs'; import * as i0 from "@angular/core"; export class SortService { constructor() { this.initialState = { column: null, direction: null }; this.state = new BehaviorSubject(this.initialState); this.state$ = this.state.asObservable(); } toggleSort(column) { const currentState = this.state.getValue(); let newDirection = null; if (currentState.column === column) { // Cycle through: null -> asc -> desc -> null if (currentState.direction === null) { newDirection = 'asc'; } else if (currentState.direction === 'asc') { newDirection = 'desc'; } else { newDirection = null; } } else { // New column, start with ascending newDirection = 'asc'; } this.state.next({ column: newDirection ? column : null, direction: newDirection }); } getSortIcon(column) { const { column: sortColumn, direction } = this.state.getValue(); if (sortColumn !== column) { return 'unfold_more'; } return direction === 'asc' ? 'arrow_upward' : 'arrow_downward'; } sortData(data) { const { column, direction } = this.state.getValue(); if (!column || !direction) { return data; } return [...data].sort((a, b) => { const aVal = a[column]; const bVal = b[column]; if (aVal == null) return 1; if (bVal == null) return -1; let comparison; if (typeof aVal === 'string') { comparison = String(aVal).toLowerCase().localeCompare(String(bVal).toLowerCase()); } else { comparison = aVal < bVal ? -1 : (aVal > bVal ? 1 : 0); } return direction === 'asc' ? comparison : -comparison; }); } clearSort() { this.state.next(this.initialState); } getCurrentSort() { return this.state.getValue(); } isColumnSorted(column) { return this.state.getValue().column === column; } getSortDirection(column) { const { column: sortColumn, direction } = this.state.getValue(); return sortColumn === column ? direction : null; } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: SortService, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); } static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: SortService, providedIn: 'root' }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: SortService, decorators: [{ type: Injectable, args: [{ providedIn: 'root' }] }] }); //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic29ydC5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvaXh0LXRhYmxlL3NlcnZpY2VzL3NvcnQvc29ydC5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDBEQUEwRDtBQUMxRCxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxNQUFNLENBQUM7O0FBTXZDLE1BQU0sT0FBTyxXQUFXO0lBSHhCO1FBSW1CLGlCQUFZLEdBQWM7WUFDekMsTUFBTSxFQUFFLElBQUk7WUFDWixTQUFTLEVBQUUsSUFBSTtTQUNoQixDQUFDO1FBRU0sVUFBSyxHQUFHLElBQUksZUFBZSxDQUFZLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUMzRCxXQUFNLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxZQUFZLEVBQUUsQ0FBQztLQTRFM0M7SUExRVEsVUFBVSxDQUFDLE1BQWM7UUFDOUIsTUFBTSxZQUFZLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUMzQyxJQUFJLFlBQVksR0FBa0IsSUFBSSxDQUFDO1FBRXZDLElBQUksWUFBWSxDQUFDLE1BQU0sS0FBSyxNQUFNLEVBQUU7WUFDbEMsNkNBQTZDO1lBQzdDLElBQUksWUFBWSxDQUFDLFNBQVMsS0FBSyxJQUFJLEVBQUU7Z0JBQ25DLFlBQVksR0FBRyxLQUFLLENBQUM7YUFDdEI7aUJBQU0sSUFBSSxZQUFZLENBQUMsU0FBUyxLQUFLLEtBQUssRUFBRTtnQkFDM0MsWUFBWSxHQUFHLE1BQU0sQ0FBQzthQUN2QjtpQkFBTTtnQkFDTCxZQUFZLEdBQUcsSUFBSSxDQUFDO2FBQ3JCO1NBQ0Y7YUFBTTtZQUNMLG1DQUFtQztZQUNuQyxZQUFZLEdBQUcsS0FBSyxDQUFDO1NBQ3RCO1FBRUQsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUM7WUFDZCxNQUFNLEVBQUUsWUFBWSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLElBQUk7WUFDcEMsU0FBUyxFQUFFLFlBQVk7U0FDeEIsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVNLFdBQVcsQ0FBQyxNQUFjO1FBQy9CLE1BQU0sRUFBRSxNQUFNLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFLENBQUM7UUFFaEUsSUFBSSxVQUFVLEtBQUssTUFBTSxFQUFFO1lBQ3pCLE9BQU8sYUFBYSxDQUFDO1NBQ3RCO1FBQ0QsT0FBTyxTQUFTLEtBQUssS0FBSyxDQUFDLENBQUMsQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDLGdCQUFnQixDQUFDO0lBQ2pFLENBQUM7SUFFTSxRQUFRLENBQUksSUFBUztRQUMxQixNQUFNLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBRSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFLENBQUM7UUFFcEQsSUFBSSxDQUFDLE1BQU0sSUFBSSxDQUFDLFNBQVMsRUFBRTtZQUN6QixPQUFPLElBQUksQ0FBQztTQUNiO1FBRUQsT0FBTyxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQzdCLE1BQU0sSUFBSSxHQUFHLENBQUMsQ0FBQyxNQUFpQixDQUFDLENBQUM7WUFDbEMsTUFBTSxJQUFJLEdBQUcsQ0FBQyxDQUFDLE1BQWlCLENBQUMsQ0FBQztZQUVsQyxJQUFJLElBQUksSUFBSSxJQUFJO2dCQUFFLE9BQU8sQ0FBQyxDQUFDO1lBQzNCLElBQUksSUFBSSxJQUFJLElBQUk7Z0JBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQztZQUU1QixJQUFJLFVBQWtCLENBQUM7WUFDdkIsSUFBSSxPQUFPLElBQUksS0FBSyxRQUFRLEVBQUU7Z0JBQzVCLFVBQVUsR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsV0FBVyxFQUFFLENBQUMsYUFBYSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxDQUFDO2FBQ25GO2lCQUFNO2dCQUNMLFVBQVUsR0FBRyxJQUFJLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO2FBQ3ZEO1lBRUQsT0FBTyxTQUFTLEtBQUssS0FBSyxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDO1FBQ3hELENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVNLFNBQVM7UUFDZCxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7SUFDckMsQ0FBQztJQUVNLGNBQWM7UUFDbkIsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBQy9CLENBQUM7SUFFTSxjQUFjLENBQUMsTUFBYztRQUNsQyxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFLENBQUMsTUFBTSxLQUFLLE1BQU0sQ0FBQztJQUNqRCxDQUFDO0lBRU0sZ0JBQWdCLENBQUMsTUFBYztRQUNwQyxNQUFNLEVBQUUsTUFBTSxFQUFFLFVBQVUsRUFBRSxTQUFTLEVBQUUsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQ2hFLE9BQU8sVUFBVSxLQUFLLE1BQU0sQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7SUFDbEQsQ0FBQzsrR0FsRlUsV0FBVzttSEFBWCxXQUFXLGNBRlYsTUFBTTs7NEZBRVAsV0FBVztrQkFIdkIsVUFBVTttQkFBQztvQkFDVixVQUFVLEVBQUUsTUFBTTtpQkFDbkIiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvY29tcG9uZW50cy9peHQtbWF0cml4L3NlcnZpY2VzL3NvcnQvc29ydC5zZXJ2aWNlLnRzXHJcbmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQmVoYXZpb3JTdWJqZWN0IH0gZnJvbSAncnhqcyc7XHJcbmltcG9ydCB7IFNvcnRTdGF0ZSwgU29ydERpcmVjdGlvbiB9IGZyb20gJy4vc29ydC5tb2RlbCc7XHJcblxyXG5ASW5qZWN0YWJsZSh7XHJcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBTb3J0U2VydmljZSB7XHJcbiAgcHJpdmF0ZSByZWFkb25seSBpbml0aWFsU3RhdGU6IFNvcnRTdGF0ZSA9IHtcclxuICAgIGNvbHVtbjogbnVsbCxcclxuICAgIGRpcmVjdGlvbjogbnVsbFxyXG4gIH07XHJcblxyXG4gIHByaXZhdGUgc3RhdGUgPSBuZXcgQmVoYXZpb3JTdWJqZWN0PFNvcnRTdGF0ZT4odGhpcy5pbml0aWFsU3RhdGUpO1xyXG4gIHB1YmxpYyBzdGF0ZSQgPSB0aGlzLnN0YXRlLmFzT2JzZXJ2YWJsZSgpO1xyXG5cclxuICBwdWJsaWMgdG9nZ2xlU29ydChjb2x1bW46IHN0cmluZyk6IHZvaWQge1xyXG4gICAgY29uc3QgY3VycmVudFN0YXRlID0gdGhpcy5zdGF0ZS5nZXRWYWx1ZSgpO1xyXG4gICAgbGV0IG5ld0RpcmVjdGlvbjogU29ydERpcmVjdGlvbiA9IG51bGw7XHJcblxyXG4gICAgaWYgKGN1cnJlbnRTdGF0ZS5jb2x1bW4gPT09IGNvbHVtbikge1xyXG4gICAgICAvLyBDeWNsZSB0aHJvdWdoOiBudWxsIC0+IGFzYyAtPiBkZXNjIC0+IG51bGxcclxuICAgICAgaWYgKGN1cnJlbnRTdGF0ZS5kaXJlY3Rpb24gPT09IG51bGwpIHtcclxuICAgICAgICBuZXdEaXJlY3Rpb24gPSAnYXNjJztcclxuICAgICAgfSBlbHNlIGlmIChjdXJyZW50U3RhdGUuZGlyZWN0aW9uID09PSAnYXNjJykge1xyXG4gICAgICAgIG5ld0RpcmVjdGlvbiA9ICdkZXNjJztcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBuZXdEaXJlY3Rpb24gPSBudWxsO1xyXG4gICAgICB9XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAvLyBOZXcgY29sdW1uLCBzdGFydCB3aXRoIGFzY2VuZGluZ1xyXG4gICAgICBuZXdEaXJlY3Rpb24gPSAnYXNjJztcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLnN0YXRlLm5leHQoe1xyXG4gICAgICBjb2x1bW46IG5ld0RpcmVjdGlvbiA/IGNvbHVtbiA6IG51bGwsXHJcbiAgICAgIGRpcmVjdGlvbjogbmV3RGlyZWN0aW9uXHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBnZXRTb3J0SWNvbihjb2x1bW46IHN0cmluZyk6IHN0cmluZyB7XHJcbiAgICBjb25zdCB7IGNvbHVtbjogc29ydENvbHVtbiwgZGlyZWN0aW9uIH0gPSB0aGlzLnN0YXRlLmdldFZhbHVlKCk7XHJcbiAgICBcclxuICAgIGlmIChzb3J0Q29sdW1uICE9PSBjb2x1bW4pIHtcclxuICAgICAgcmV0dXJuICd1bmZvbGRfbW9yZSc7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gZGlyZWN0aW9uID09PSAnYXNjJyA/ICdhcnJvd191cHdhcmQnIDogJ2Fycm93X2Rvd253YXJkJztcclxuICB9XHJcblxyXG4gIHB1YmxpYyBzb3J0RGF0YTxUPihkYXRhOiBUW10pOiBUW10ge1xyXG4gICAgY29uc3QgeyBjb2x1bW4sIGRpcmVjdGlvbiB9ID0gdGhpcy5zdGF0ZS5nZXRWYWx1ZSgpO1xyXG4gICAgXHJcbiAgICBpZiAoIWNvbHVtbiB8fCAhZGlyZWN0aW9uKSB7XHJcbiAgICAgIHJldHVybiBkYXRhO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBbLi4uZGF0YV0uc29ydCgoYSwgYikgPT4ge1xyXG4gICAgICBjb25zdCBhVmFsID0gYVtjb2x1bW4gYXMga2V5b2YgVF07XHJcbiAgICAgIGNvbnN0IGJWYWwgPSBiW2NvbHVtbiBhcyBrZXlvZiBUXTtcclxuXHJcbiAgICAgIGlmIChhVmFsID09IG51bGwpIHJldHVybiAxO1xyXG4gICAgICBpZiAoYlZhbCA9PSBudWxsKSByZXR1cm4gLTE7XHJcblxyXG4gICAgICBsZXQgY29tcGFyaXNvbjogbnVtYmVyO1xyXG4gICAgICBpZiAodHlwZW9mIGFWYWwgPT09ICdzdHJpbmcnKSB7XHJcbiAgICAgICAgY29tcGFyaXNvbiA9IFN0cmluZyhhVmFsKS50b0xvd2VyQ2FzZSgpLmxvY2FsZUNvbXBhcmUoU3RyaW5nKGJWYWwpLnRvTG93ZXJDYXNlKCkpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGNvbXBhcmlzb24gPSBhVmFsIDwgYlZhbCA/IC0xIDogKGFWYWwgPiBiVmFsID8gMSA6IDApO1xyXG4gICAgICB9XHJcblxyXG4gICAgICByZXR1cm4gZGlyZWN0aW9uID09PSAnYXNjJyA/IGNvbXBhcmlzb24gOiAtY29tcGFyaXNvbjtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGNsZWFyU29ydCgpOiB2b2lkIHtcclxuICAgIHRoaXMuc3RhdGUubmV4dCh0aGlzLmluaXRpYWxTdGF0ZSk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgZ2V0Q3VycmVudFNvcnQoKTogU29ydFN0YXRlIHtcclxuICAgIHJldHVybiB0aGlzLnN0YXRlLmdldFZhbHVlKCk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgaXNDb2x1bW5Tb3J0ZWQoY29sdW1uOiBzdHJpbmcpOiBib29sZWFuIHtcclxuICAgIHJldHVybiB0aGlzLnN0YXRlLmdldFZhbHVlKCkuY29sdW1uID09PSBjb2x1bW47XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgZ2V0U29ydERpcmVjdGlvbihjb2x1bW46IHN0cmluZyk6IFNvcnREaXJlY3Rpb24ge1xyXG4gICAgY29uc3QgeyBjb2x1bW46IHNvcnRDb2x1bW4sIGRpcmVjdGlvbiB9ID0gdGhpcy5zdGF0ZS5nZXRWYWx1ZSgpO1xyXG4gICAgcmV0dXJuIHNvcnRDb2x1bW4gPT09IGNvbHVtbiA/IGRpcmVjdGlvbiA6IG51bGw7XHJcbiAgfVxyXG59Il19
|       |   |   |   |   --- pagination.model.mjs: export {}; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFnaW5hdGlvbi5tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL2l4dC10YWJsZS9zZXJ2aWNlcy9wYWdpbmF0aW9uLm1vZGVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvY29tcG9uZW50cy9peHQtbWF0cml4L3NlcnZpY2VzL3BhZ2luYXRpb24vcGFnaW5hdGlvbi5tb2RlbC50c1xyXG5leHBvcnQgaW50ZXJmYWNlIFBhZ2luYXRpb25TdGF0ZSB7XHJcbiAgICBjdXJyZW50UGFnZTogbnVtYmVyO1xyXG4gICAgcGFnZVNpemU6IG51bWJlciB8ICdhbGwnO1xyXG4gICAgdG90YWxJdGVtczogbnVtYmVyO1xyXG4gIH1cclxuICBcclxuICBleHBvcnQgaW50ZXJmYWNlIFBhZ2VTaXplIHtcclxuICAgIHZhbHVlOiBudW1iZXIgfCAnYWxsJztcclxuICAgIGxhYmVsOiBzdHJpbmc7XHJcbiAgfVxyXG4gICJdfQ==
|       |   |   |   |   --- pagination.service.mjs: // src/components/ixt-matrix/services/pagination/pagination.service.ts import { Injectable } from '@angular/core'; import { BehaviorSubject } from 'rxjs'; import * as i0 from "@angular/core"; export class PaginationService { constructor() { this.DEFAULT_PAGE_SIZES = [ { value: 10, label: '10' }, { value: 100, label: '100' }, { value: 'all', label: 'All' } ]; this.MINIMUM_ROWS_FOR_PAGINATION = 50; this.state = new BehaviorSubject({ currentPage: 1, pageSize: 10, totalItems: 0 }); this.state$ = this.state.asObservable(); } initialize(totalItems) { this.updateState({ currentPage: 1, pageSize: 10, totalItems }); } shouldShowPagination() { return this.state.getValue().totalItems > this.MINIMUM_ROWS_FOR_PAGINATION; } getCurrentPage() { return this.state.getValue().currentPage; } getPageSize() { return this.state.getValue().pageSize; } getPageSizes() { return this.DEFAULT_PAGE_SIZES; } getTotalPages() { const { totalItems, pageSize } = this.state.getValue(); if (pageSize === 'all' || totalItems <= this.MINIMUM_ROWS_FOR_PAGINATION) { return 1; } return Math.ceil(totalItems / +pageSize); } getVisiblePages() { const totalPages = this.getTotalPages(); const currentPage = this.getCurrentPage(); if (totalPages <= 1) return []; const pages = [1]; const WINDOW_SIZE = 4; let start = Math.max(2, currentPage - WINDOW_SIZE); let end = Math.min(totalPages - 1, currentPage + WINDOW_SIZE); if (start > 2) { pages.push(-1); } for (let i = start; i <= end; i++) { pages.push(i); } if (end < totalPages - 1) { pages.push(-1); } if (totalPages > 1) { pages.push(totalPages); } return pages; } onPageChange(page) { const totalPages = this.getTotalPages(); if (page >= 1 && page <= totalPages) { this.updateState({ ...this.state.getValue(), currentPage: page }); } } onPageSizeChange(newSize) { this.updateState({ ...this.state.getValue(), pageSize: newSize, currentPage: 1 }); } getPaginatedData(data) { const { pageSize, currentPage } = this.state.getValue(); if (pageSize === 'all' || data.length <= this.MINIMUM_ROWS_FOR_PAGINATION) { return data; } const start = (currentPage - 1) * (+pageSize); const end = start + (+pageSize); return data.slice(start, end); } updateState(newState) { this.state.next({ ...this.state.getValue(), ...newState }); } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: PaginationService, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); } static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: PaginationService, providedIn: 'root' }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: PaginationService, decorators: [{ type: Injectable, args: [{ providedIn: 'root' }] }] }); //# sourceMappingURL=data:application/json;base64,
|       |   |   |   --- ixt-table.component.mjs: import { Component, Input, ViewChild } from '@angular/core'; import { FormControl } from '@angular/forms'; import { debounceTime, distinctUntilChanged } from 'rxjs/operators'; import { AirportCodeEditorComponent, CoordinateEditorComponent } from './ixt-table.index'; import * as i0 from "@angular/core"; import * as i1 from "../ixt-dialog/ixt-dialog.index"; import * as i2 from "./services/pagination.service"; import * as i3 from "./services/filter/filter.service"; import * as i4 from "./services/sort/sort.service"; import * as i5 from "./services/selection/selection.service"; import * as i6 from "./services/edit/edit.service"; import * as i7 from "@angular/common"; import * as i8 from "@angular/forms"; import * as i9 from "./editors/airport-code/airport-code-editor.component"; import * as i10 from "./editors/coordinate/coordinate-editor.component"; import * as i11 from "./editors/binary-editor/binary-editor.component"; export class IxtTableComponent { constructor(dialogService, changeDetectorRef, paginationService, filterService, sortService, selectionService, editService) { this.dialogService = dialogService; this.changeDetectorRef = changeDetectorRef; this.paginationService = paginationService; this.filterService = filterService; this.sortService = sortService; this.selectionService = selectionService; this.editService = editService; this.data = []; this.columns = []; this.pageSizeControl = new FormControl(10); this.AirportCodeEditorComponent = AirportCodeEditorComponent; this.CoordinateEditorComponent = CoordinateEditorComponent; } ngOnInit() { this.columns = this.getColumns(this.data); // Initialize pagination this.paginationService.initialize(this.data.length); // Initialize filters if (this.columnConfigs) { Object.entries(this.columnConfigs).forEach(([field, config]) => { this.filterService.initializeFilter(field, config); // Get the control from service and subscribe to changes const control = this.filterService.getFilterControl(field); if (control) { control.valueChanges.pipe(debounceTime(config.debounceTime || 300), distinctUntilChanged()).subscribe(value => { this.filterService.onFilterChange(field, value, config); }); } }); } // Subscribe to filter changes this.filterService.filtersChanged$.subscribe(() => { this.changeDetectorRef.markForCheck(); }); // Subscribe to pagination changes this.paginationService.state$.subscribe(() => { this.changeDetectorRef.markForCheck(); }); // Subscribe to page size changes this.pageSizeControl.valueChanges.subscribe(value => { if (value) { this.paginationService.onPageSizeChange(value); } }); } // edit logic start addNewRow() { this.editService.addNewRow(this.columnConfigs || {}); } cancelEditing(rowIndex) { this.editService.cancelEditing(rowIndex); } getEditorComponent(type) { console.log('getEditorComponent called with:', { type, isCoordinate: type === CoordinateEditorComponent, isAirport: type === AirportCodeEditorComponent }); if (type === AirportCodeEditorComponent) { return new AirportCodeEditorComponent(this.dialogService); } if (type === CoordinateEditorComponent) { return new CoordinateEditorComponent(this.dialogService); } return null; } getEditorType(type) { console.log('getEditorType called with:', { type, isString: typeof type === 'string', isCoordinate: type === CoordinateEditorComponent, isAirport: type === AirportCodeEditorComponent }); if (typeof type === 'string') { return type; } if (type === AirportCodeEditorComponent || type === CoordinateEditorComponent) { console.log('Returning custom for editor type'); return 'custom'; } console.log('Falling back to text type'); return 'text'; } getEditControl(rowIndex, field) { return this.editService.getEditControl(rowIndex, field); } getRowIndex(displayIndex) { return this.editService.getRowIndex(displayIndex); } get hasChanges() { return this.editService.hasChanges(); } isEditing(index) { return this.editService.isEditing(index); } isNewRow(displayIndex) { return this.editService.isNewRow(displayIndex); } get newRowsLength() { return this.editService.getNewRows().length; } onValueChange(rowIndex, field, value) { this.editService.onValueChange({ rowIndex, field, value }); } saveChanges() { this.data = this.editService.saveChanges(this.data); this.changeDetectorRef.markForCheck(); } startEditing(rowIndex) { this.editService.startEditing(rowIndex); } // edit logic end // filter logic start get activeFilterColumn() { return this.filterService.activeColumn; } getFilterControl(col) { return this.filterService.getFilterControl(col); } getOperatorControl(col) { return this.filterService.getOperatorControl(col); } onOperatorChange(field) { this.filterService.onOperatorChange(field); } get showFilters() { return this.filterService.isShowingFilters; } toggleFilters(col) { this.filterService.toggleFilters(col); } // filter logic end // pagination logic start get currentPage() { return this.paginationService.getCurrentPage(); } onPageChange(page) { this.paginationService.onPageChange(page); } onPageSizeChange(size) { this.paginationService.onPageSizeChange(size); } get paginatedData() { // Start with combined data let allData = [...this.editService.getNewRows(), ...this.data]; // Apply filters if (this.filterService.hasActiveFilters()) { const activeFilters = this.filterService.getActiveFilters(); const filteredExisting = this.data.filter(item => Array.from(activeFilters.values()).every(filter => this.filterService.matchesFilter(item[filter.field], filter))); allData = [...this.editService.getNewRows(), ...filteredExisting]; } // Apply sorting allData = this.sortService.sortData(allData); // Apply pagination return this.paginationService.getPaginatedData(allData); } get pageSizes() { return this.paginationService.getPageSizes(); } get showPagination() { return this.paginationService.shouldShowPagination(); } get totalPages() { return this.paginationService.getTotalPages(); } get visiblePages() { return this.paginationService.getVisiblePages(); } // pagination logic end // selection logic start get allSelected() { return this.selectionService.isAllSelected(); } set allSelected(value) { this.selectionService.toggleAllRows(value, this.data.length); } getSelectedRows() { return Array.from(this.selectionService.getSelectedRows()) .map(index => this.data[index]) .filter(row => row !== undefined); } get hasSelectedRows() { return this.selectionService.getSelectedCount() > 0; } isRowSelected(index) { return this.selectionService.isSelected(index); } selectRow(index, selected = true) { this.selectionService.selectRow(index, selected); } setSelectedRows(indices) { this.selectionService.setSelectedRows(indices); } toggleAllRows(selected) { this.selectionService.toggleAllRows(selected, this.data.length); } // selection logic end // sort logic start getSortIcon(column) { return this.sortService.getSortIcon(column); } toggleSort(column) { this.sortService.toggleSort(column); } // sort logic end // i/o logic start formatCoordinate(value) { return value.toFixed(1); } getCodes(data) { if (!data) return []; return data.map(row => row['code']?.toString() || ''); } // i/o logic end // config logic start getColumns(data) { if (!data?.length) return []; const firstRow = data[0]; return Object.keys(firstRow); } get hasData() { return !!this.data?.length; } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtTableComponent, deps: [{ token: i1.IxtDialogService }, { token: i0.ChangeDetectorRef }, { token: i2.PaginationService }, { token: i3.FilterService }, { token: i4.SortService }, { token: i5.SelectionService }, { token: i6.EditService }], target: i0.ɵɵFactoryTarget.Component }); } static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: IxtTableComponent, selector: "ixt-table", inputs: { data: "data", columnConfigs: "columnConfigs" }, viewQueries: [{ propertyName: "noDataTemplate", first: true, predicate: ["noData"], descendants: true }, { propertyName: "customEditorTpl", first: true, predicate: ["customEditorTpl"], descendants: true }], ngImport: i0, template: "<div class=\"ixt-table__toolbar\">\r\n <button class=\"ixt-table__action-button\" (click)=\"addNewRow()\">\r\n <span class=\"material-icons\">add</span>\r\n </button>\r\n <button class=\"ixt-table__action-button\" [disabled]=\"!hasChanges && newRowsLength === 0\" (click)=\"saveChanges()\">\r\n <span class=\"material-icons\">save</span>\r\n </button>\r\n</div>\r\n\r\n<ng-container *ngIf=\"hasData; else noData\">\r\n <div class=\"ixt-table\">\r\n <!-- Header -->\r\n <div class=\"ixt-table__header\">\r\n <div class=\"ixt-table__cell\">\r\n <binary-editor\r\n [config]=\"{ rowIndex: -1 }\"\r\n [(ngModel)]=\"allSelected\"\r\n (selectionChange)=\"toggleAllRows($event.selected)\">\r\n </binary-editor>\r\n </div>\r\n <div class=\"ixt-table__cell\" *ngFor=\"let col of columns\" [class.ixt-table__cell--first]=\"col === columns[0]\">\r\n <div class=\"ixt-table__cell-content\">\r\n {{columnConfigs?.[col]?.label || col}}\r\n <div class=\"ixt-table__cell-actions\">\r\n <button class=\"ixt-table__sort-toggle\" (click)=\"toggleSort(col)\">\r\n <span class=\"material-icons\">{{getSortIcon(col)}}</span>\r\n </button>\r\n <button class=\"ixt-table__filter-toggle\" (click)=\"toggleFilters(col)\">\r\n <span class=\"material-icons\">filter_alt</span>\r\n </button>\r\n </div>\r\n </div>\r\n </div>\r\n <div class=\"ixt-table__cell\">Actions</div>\r\n </div>\r\n\r\n <!-- Filter Row -->\r\n <div class=\"ixt-table__header\" *ngIf=\"showFilters\">\r\n <div class=\"ixt-table__cell\"></div>\r\n <div class=\"ixt-table__cell\" *ngFor=\"let col of columns\" [class.ixt-table__cell--first]=\"col === columns[0]\">\r\n <ng-container *ngIf=\"activeFilterColumn === col && columnConfigs?.[col]\">\r\n <ng-container [ngSwitch]=\"getEditorType(columnConfigs?.[col]?.type)\">\r\n <!-- Text Filter -->\r\n <input *ngSwitchCase=\"'text'\" [formControl]=\"getFilterControl(col)\"\r\n [placeholder]=\"columnConfigs?.[col]?.placeholder || ''\" class=\"ixt-table__filter-input\">\r\n\r\n <!-- Number Filter -->\r\n <div *ngSwitchCase=\"'number'\" class=\"ixt-table__number-filter\">\r\n <select [formControl]=\"getOperatorControl(col)\" (change)=\"onOperatorChange(col)\">\r\n <option value=\"=\">=</option>\r\n <option value=\">\">&gt;</option>\r\n <option value=\"<\">&lt;</option>\r\n <option value=\">=\">&gt;=</option>\r\n <option value=\"<=\">&lt;=</option>\r\n <option value=\"!=\">!=</option>\r\n </select>\r\n <input type=\"number\" [formControl]=\"getFilterControl(col)\"\r\n [placeholder]=\"columnConfigs?.[col]?.placeholder || ''\" class=\"ixt-table__filter-input\">\r\n </div>\r\n\r\n <!-- Enum Filter -->\r\n <div *ngSwitchCase=\"'enum'\">\r\n <select [formControl]=\"getFilterControl(col)\" class=\"ixt-table__filter-input\">\r\n <option value=\"\">All</option>\r\n <option *ngFor=\"let opt of columnConfigs?.[col]?.enumValues\" [value]=\"opt.value\">\r\n {{opt.label}}\r\n </option>\r\n </select>\r\n </div>\r\n </ng-container>\r\n </ng-container>\r\n </div>\r\n <div class=\"ixt-table__cell\"></div>\r\n </div>\r\n\r\n <!-- Data Rows -->\r\n <div class=\"ixt-table__row\" *ngFor=\"let row of paginatedData; let i = index\" \r\n [class.ixt-table__row--selected]=\"isRowSelected(getRowIndex(i))\">\r\n <div class=\"ixt-table__cell\">\r\n <binary-editor\r\n [config]=\"{ rowIndex: getRowIndex(i), rowData: row }\"\r\n [ngModel]=\"isRowSelected(getRowIndex(i))\"\r\n (selectionChange)=\"selectRow(getRowIndex(i), $event.selected)\">\r\n </binary-editor>\r\n </div>\r\n <div class=\"ixt-table__cell\" *ngFor=\"let col of columns\" [class.ixt-table__cell--first]=\"col === columns[0]\">\r\n <ng-container *ngIf=\"isNewRow(i) || isEditing(getRowIndex(i)); else displayValue\">\r\n <ng-container [ngSwitch]=\"getEditorType(columnConfigs?.[col]?.type)\">\r\n <!-- Text Input -->\r\n <input *ngSwitchCase=\"'text'\" type=\"text\" [ngModel]=\"row[col]\"\r\n (ngModelChange)=\"onValueChange(getRowIndex(i), col, $event)\">\r\n\r\n <!-- Number Input -->\r\n <input *ngSwitchCase=\"'number'\" type=\"number\" [ngModel]=\"row[col]\"\r\n (ngModelChange)=\"onValueChange(getRowIndex(i), col, $event)\">\r\n\r\n <!-- Enum Select -->\r\n <select *ngSwitchCase=\"'enum'\" [ngModel]=\"row[col]\"\r\n (ngModelChange)=\"onValueChange(getRowIndex(i), col, $event)\">\r\n <option *ngFor=\"let opt of columnConfigs?.[col]?.enumValues\" [ngValue]=\"opt.value\">\r\n {{opt.label}}\r\n </option>\r\n </select>\r\n\r\n <!-- Custom Editor -->\r\n <ng-container *ngSwitchCase=\"'custom'\">\r\n <ng-container *ngTemplateOutlet=\"customEditorTpl; context: {\r\n $implicit: getEditorComponent(columnConfigs?.[col]?.type),\r\n row: row,\r\n col: col,\r\n index: i,\r\n control: getEditControl(getRowIndex(i), col)\r\n }\">\r\n </ng-container>\r\n </ng-container>\r\n </ng-container>\r\n </ng-container>\r\n \r\n <ng-template #displayValue>\r\n <ng-container [ngSwitch]=\"columnConfigs?.[col]?.type\">\r\n <ng-container *ngSwitchCase=\"CoordinateEditorComponent\">\r\n {{formatCoordinate(row[col])}}\r\n </ng-container>\r\n <ng-container *ngSwitchDefault>\r\n {{row[col]}}\r\n </ng-container>\r\n </ng-container>\r\n </ng-template>\r\n </div>\r\n \r\n <div class=\"ixt-table__cell\">\r\n <ng-container *ngIf=\"!isNewRow(i) && !isEditing(getRowIndex(i))\">\r\n <button class=\"ixt-table__action-button\" (click)=\"startEditing(getRowIndex(i))\">\r\n <span class=\"material-icons\">edit</span>\r\n </button>\r\n </ng-container>\r\n <ng-container *ngIf=\"isNewRow(i) || isEditing(getRowIndex(i))\">\r\n <button class=\"ixt-table__action-button\" (click)=\"cancelEditing(getRowIndex(i))\">\r\n <span class=\"material-icons\">close</span>\r\n </button>\r\n </ng-container>\r\n </div>\r\n </div>\r\n\r\n <!-- Pagination -->\r\n <div class=\"ixt-table__footer\" *ngIf=\"showPagination\">\r\n <div class=\"ixt-table__pagination\">\r\n <div class=\"ixt-table__page-size\">\r\n <select [formControl]=\"pageSizeControl\">\r\n <option *ngFor=\"let size of pageSizes\" [value]=\"size.value\">\r\n {{size.label}}\r\n </option>\r\n </select>\r\n rows per page\r\n </div>\r\n <div class=\"ixt-table__controls\">\r\n <button (click)=\"onPageChange(1)\" [disabled]=\"currentPage === 1\">\r\n <span class=\"material-icons\">first_page</span>\r\n </button>\r\n <button (click)=\"onPageChange(currentPage - 1)\" [disabled]=\"currentPage === 1\">\r\n <span class=\"material-icons\">chevron_left</span>\r\n </button>\r\n <button *ngFor=\"let page of visiblePages\" [class.active]=\"page === currentPage\" \r\n [class.ellipsis]=\"page === -1\" [disabled]=\"page === -1\" \r\n (click)=\"onPageChange(page)\">\r\n {{page === -1 ? '...' : page}}\r\n </button>\r\n <button (click)=\"onPageChange(currentPage + 1)\" [disabled]=\"currentPage === totalPages\">\r\n <span class=\"material-icons\">chevron_right</span>\r\n </button>\r\n <button (click)=\"onPageChange(totalPages)\" [disabled]=\"currentPage === totalPages\">\r\n <span class=\"material-icons\">last_page</span>\r\n </button>\r\n </div>\r\n </div>\r\n </div>\r\n </div>\r\n</ng-container>\r\n\r\n<!-- Custom Editor Template -->\r\n<ng-template #customEditorTpl let-editor let-row=\"row\" let-col=\"col\" let-index=\"index\" let-control=\"control\">\r\n <coordinate-editor\r\n *ngIf=\"editor?.component === CoordinateEditorComponent\"\r\n [formControl]=\"control\"\r\n [config]=\"{\r\n type: col === 'lat' ? 'lat' : 'lon'\r\n }\">\r\n </coordinate-editor>\r\n\r\n <airport-code-editor \r\n *ngIf=\"editor?.component === AirportCodeEditorComponent\"\r\n [formControl]=\"control\"\r\n [config]=\"editor.getEditConfig()\"\r\n [existingCodes]=\"getCodes(data)\">\r\n </airport-code-editor>\r\n</ng-template>\r\n\r\n<!-- No Data Template -->\r\n<ng-template #noData>\r\n <div class=\"ixt-table__empty\">\r\n No data available\r\n </div>\r\n</ng-template>", styles: [".ixt-table{border:1px solid #e2e8f0;border-radius:.5rem;overflow:auto;max-height:calc(100vh - 600px)}.ixt-table__header{display:flex;background:#f7fafc;border-bottom:1px solid #e2e8f0;font-weight:500}.ixt-table__row{display:flex;border-bottom:1px solid #e2e8f0}.ixt-table__row:hover{background:#f7fafc}.ixt-table__cell{padding:.5rem;width:150px;min-width:150px;box-sizing:border-box;border-right:1px solid #e2e8f0;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.ixt-table__cell:first-child{width:40px;min-width:40px}.ixt-table__cell--first{width:200px;min-width:200px}.ixt-table__cell--actions{width:80px;min-width:80px}.ixt-table__cell-content{display:flex;align-items:center;gap:8px;width:100%}.ixt-table__cell input,.ixt-table__cell select{width:100%;padding:4px 24px 4px 8px;border:1px solid #e2e8f0;border-radius:4px}.ixt-table__cell coordinate-editor input{padding-right:24px}.ixt-table__empty{padding:1rem;text-align:center;color:#718096}.ixt-table__footer{display:flex;justify-content:space-between;align-items:center;padding:.75rem;border-top:1px solid #e2e8f0}.ixt-table__pagination{display:flex;justify-content:space-between;align-items:center;width:100%}.ixt-table__page-size select{padding:.25rem .5rem;border:1px solid #e2e8f0;border-radius:.25rem;margin-right:1rem}.ixt-table__controls{display:flex;align-items:center;gap:.25rem}.ixt-table__controls button{padding:.25rem;min-width:2rem;height:2rem;border:none;background:none;cursor:pointer;border-radius:.25rem;color:#4169e1;display:flex;align-items:center;justify-content:center}.ixt-table__controls button:disabled{color:gray;cursor:not-allowed}.ixt-table__controls button:not(:disabled):hover{background-color:#f7fafc}.ixt-table__controls button.active{background-color:#4169e1;color:#fff}.ixt-table__controls button.ellipsis{cursor:default}.ixt-table__controls button.ellipsis:hover{background:none}.ixt-table__filter-toggle{background:none;border:none;cursor:pointer;padding:4px;color:#4169e1;display:flex;align-items:center}.ixt-table__filter-input{width:100%;padding:.25rem;border:1px solid #e2e8f0;border-radius:.25rem;font-size:.875rem}.ixt-table__filter-input:focus{outline:none;border-color:#4169e1}.ixt-table__number-filter{display:flex;gap:.25rem}.ixt-table__number-filter select{padding:.25rem;border:1px solid #e2e8f0;border-radius:.25rem}.ixt-table .material-icons{font-family:Material Icons;font-weight:400;font-style:normal;display:inline-block;line-height:1;text-transform:none;letter-spacing:normal;word-wrap:normal;white-space:nowrap;direction:ltr}.ixt-table__cell-content{display:flex;align-items:center;gap:8px}.ixt-table__cell-actions{display:flex;align-items:center;gap:4px}.ixt-table__sort-toggle,.ixt-table__filter-toggle{background:none;border:none;padding:4px;cursor:pointer;display:flex;align-items:center;justify-content:center}.ixt-table__sort-toggle:hover,.ixt-table__filter-toggle:hover{background-color:#0000000a;border-radius:4px}.ixt-table__sort-toggle .material-icons,.ixt-table__filter-toggle .material-icons{font-size:18px;color:#0000008a}.ixt-table__toolbar{display:flex;justify-content:flex-end;padding:8px}.ixt-table__save-button,.ixt-table__action-button{background:none;border:none;padding:4px;cursor:pointer}.ixt-table__save-button:disabled,.ixt-table__action-button:disabled{opacity:.5;cursor:not-allowed}.ixt-table__save-button .material-icons,.ixt-table__action-button .material-icons{font-size:18px}.ixt-table input,.ixt-table select{width:100%;padding:4px;border:1px solid #ddd;border-radius:4px}.ixt-table input:focus,.ixt-table select:focus{outline:none;border-color:#007bff}\n"], dependencies: [{ kind: "directive", type: i7.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i7.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i7.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "directive", type: i7.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { kind: "directive", type: i7.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { kind: "directive", type: i7.NgSwitchDefault, selector: "[ngSwitchDefault]" }, { kind: "directive", type: i8.NgSelectOption, selector: "option", inputs: ["ngValue", "value"] }, { kind: "directive", type: i8.ɵNgSelectMultipleOption, selector: "option", inputs: ["ngValue", "value"] }, { kind: "directive", type: i8.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i8.NumberValueAccessor, selector: "input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]" }, { kind: "directive", type: i8.SelectControlValueAccessor, selector: "select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]", inputs: ["compareWith"] }, { kind: "directive", type: i8.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i8.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "directive", type: i8.FormControlDirective, selector: "[formControl]", inputs: ["formControl", "disabled", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }, { kind: "component", type: i9.AirportCodeEditorComponent, selector: "airport-code-editor", inputs: ["config", "existingCodes", "field"] }, { kind: "component", type: i10.CoordinateEditorComponent, selector: "coordinate-editor", inputs: ["config"] }, { kind: "component", type: i11.BinaryEditorComponent, selector: "binary-editor", inputs: ["config"], outputs: ["selectionChange"] }] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtTableComponent, decorators: [{ type: Component, args: [{ selector: 'ixt-table', template: "<div class=\"ixt-table__toolbar\">\r\n <button class=\"ixt-table__action-button\" (click)=\"addNewRow()\">\r\n <span class=\"material-icons\">add</span>\r\n </button>\r\n <button class=\"ixt-table__action-button\" [disabled]=\"!hasChanges && newRowsLength === 0\" (click)=\"saveChanges()\">\r\n <span class=\"material-icons\">save</span>\r\n </button>\r\n</div>\r\n\r\n<ng-container *ngIf=\"hasData; else noData\">\r\n <div class=\"ixt-table\">\r\n <!-- Header -->\r\n <div class=\"ixt-table__header\">\r\n <div class=\"ixt-table__cell\">\r\n <binary-editor\r\n [config]=\"{ rowIndex: -1 }\"\r\n [(ngModel)]=\"allSelected\"\r\n (selectionChange)=\"toggleAllRows($event.selected)\">\r\n </binary-editor>\r\n </div>\r\n <div class=\"ixt-table__cell\" *ngFor=\"let col of columns\" [class.ixt-table__cell--first]=\"col === columns[0]\">\r\n <div class=\"ixt-table__cell-content\">\r\n {{columnConfigs?.[col]?.label || col}}\r\n <div class=\"ixt-table__cell-actions\">\r\n <button class=\"ixt-table__sort-toggle\" (click)=\"toggleSort(col)\">\r\n <span class=\"material-icons\">{{getSortIcon(col)}}</span>\r\n </button>\r\n <button class=\"ixt-table__filter-toggle\" (click)=\"toggleFilters(col)\">\r\n <span class=\"material-icons\">filter_alt</span>\r\n </button>\r\n </div>\r\n </div>\r\n </div>\r\n <div class=\"ixt-table__cell\">Actions</div>\r\n </div>\r\n\r\n <!-- Filter Row -->\r\n <div class=\"ixt-table__header\" *ngIf=\"showFilters\">\r\n <div class=\"ixt-table__cell\"></div>\r\n <div class=\"ixt-table__cell\" *ngFor=\"let col of columns\" [class.ixt-table__cell--first]=\"col === columns[0]\">\r\n <ng-container *ngIf=\"activeFilterColumn === col && columnConfigs?.[col]\">\r\n <ng-container [ngSwitch]=\"getEditorType(columnConfigs?.[col]?.type)\">\r\n <!-- Text Filter -->\r\n <input *ngSwitchCase=\"'text'\" [formControl]=\"getFilterControl(col)\"\r\n [placeholder]=\"columnConfigs?.[col]?.placeholder || ''\" class=\"ixt-table__filter-input\">\r\n\r\n <!-- Number Filter -->\r\n <div *ngSwitchCase=\"'number'\" class=\"ixt-table__number-filter\">\r\n <select [formControl]=\"getOperatorControl(col)\" (change)=\"onOperatorChange(col)\">\r\n <option value=\"=\">=</option>\r\n <option value=\">\">&gt;</option>\r\n <option value=\"<\">&lt;</option>\r\n <option value=\">=\">&gt;=</option>\r\n <option value=\"<=\">&lt;=</option>\r\n <option value=\"!=\">!=</option>\r\n </select>\r\n <input type=\"number\" [formControl]=\"getFilterControl(col)\"\r\n [placeholder]=\"columnConfigs?.[col]?.placeholder || ''\" class=\"ixt-table__filter-input\">\r\n </div>\r\n\r\n <!-- Enum Filter -->\r\n <div *ngSwitchCase=\"'enum'\">\r\n <select [formControl]=\"getFilterControl(col)\" class=\"ixt-table__filter-input\">\r\n <option value=\"\">All</option>\r\n <option *ngFor=\"let opt of columnConfigs?.[col]?.enumValues\" [value]=\"opt.value\">\r\n {{opt.label}}\r\n </option>\r\n </select>\r\n </div>\r\n </ng-container>\r\n </ng-container>\r\n </div>\r\n <div class=\"ixt-table__cell\"></div>\r\n </div>\r\n\r\n <!-- Data Rows -->\r\n <div class=\"ixt-table__row\" *ngFor=\"let row of paginatedData; let i = index\" \r\n [class.ixt-table__row--selected]=\"isRowSelected(getRowIndex(i))\">\r\n <div class=\"ixt-table__cell\">\r\n <binary-editor\r\n [config]=\"{ rowIndex: getRowIndex(i), rowData: row }\"\r\n [ngModel]=\"isRowSelected(getRowIndex(i))\"\r\n (selectionChange)=\"selectRow(getRowIndex(i), $event.selected)\">\r\n </binary-editor>\r\n </div>\r\n <div class=\"ixt-table__cell\" *ngFor=\"let col of columns\" [class.ixt-table__cell--first]=\"col === columns[0]\">\r\n <ng-container *ngIf=\"isNewRow(i) || isEditing(getRowIndex(i)); else displayValue\">\r\n <ng-container [ngSwitch]=\"getEditorType(columnConfigs?.[col]?.type)\">\r\n <!-- Text Input -->\r\n <input *ngSwitchCase=\"'text'\" type=\"text\" [ngModel]=\"row[col]\"\r\n (ngModelChange)=\"onValueChange(getRowIndex(i), col, $event)\">\r\n\r\n <!-- Number Input -->\r\n <input *ngSwitchCase=\"'number'\" type=\"number\" [ngModel]=\"row[col]\"\r\n (ngModelChange)=\"onValueChange(getRowIndex(i), col, $event)\">\r\n\r\n <!-- Enum Select -->\r\n <select *ngSwitchCase=\"'enum'\" [ngModel]=\"row[col]\"\r\n (ngModelChange)=\"onValueChange(getRowIndex(i), col, $event)\">\r\n <option *ngFor=\"let opt of columnConfigs?.[col]?.enumValues\" [ngValue]=\"opt.value\">\r\n {{opt.label}}\r\n </option>\r\n </select>\r\n\r\n <!-- Custom Editor -->\r\n <ng-container *ngSwitchCase=\"'custom'\">\r\n <ng-container *ngTemplateOutlet=\"customEditorTpl; context: {\r\n $implicit: getEditorComponent(columnConfigs?.[col]?.type),\r\n row: row,\r\n col: col,\r\n index: i,\r\n control: getEditControl(getRowIndex(i), col)\r\n }\">\r\n </ng-container>\r\n </ng-container>\r\n </ng-container>\r\n </ng-container>\r\n \r\n <ng-template #displayValue>\r\n <ng-container [ngSwitch]=\"columnConfigs?.[col]?.type\">\r\n <ng-container *ngSwitchCase=\"CoordinateEditorComponent\">\r\n {{formatCoordinate(row[col])}}\r\n </ng-container>\r\n <ng-container *ngSwitchDefault>\r\n {{row[col]}}\r\n </ng-container>\r\n </ng-container>\r\n </ng-template>\r\n </div>\r\n \r\n <div class=\"ixt-table__cell\">\r\n <ng-container *ngIf=\"!isNewRow(i) && !isEditing(getRowIndex(i))\">\r\n <button class=\"ixt-table__action-button\" (click)=\"startEditing(getRowIndex(i))\">\r\n <span class=\"material-icons\">edit</span>\r\n </button>\r\n </ng-container>\r\n <ng-container *ngIf=\"isNewRow(i) || isEditing(getRowIndex(i))\">\r\n <button class=\"ixt-table__action-button\" (click)=\"cancelEditing(getRowIndex(i))\">\r\n <span class=\"material-icons\">close</span>\r\n </button>\r\n </ng-container>\r\n </div>\r\n </div>\r\n\r\n <!-- Pagination -->\r\n <div class=\"ixt-table__footer\" *ngIf=\"showPagination\">\r\n <div class=\"ixt-table__pagination\">\r\n <div class=\"ixt-table__page-size\">\r\n <select [formControl]=\"pageSizeControl\">\r\n <option *ngFor=\"let size of pageSizes\" [value]=\"size.value\">\r\n {{size.label}}\r\n </option>\r\n </select>\r\n rows per page\r\n </div>\r\n <div class=\"ixt-table__controls\">\r\n <button (click)=\"onPageChange(1)\" [disabled]=\"currentPage === 1\">\r\n <span class=\"material-icons\">first_page</span>\r\n </button>\r\n <button (click)=\"onPageChange(currentPage - 1)\" [disabled]=\"currentPage === 1\">\r\n <span class=\"material-icons\">chevron_left</span>\r\n </button>\r\n <button *ngFor=\"let page of visiblePages\" [class.active]=\"page === currentPage\" \r\n [class.ellipsis]=\"page === -1\" [disabled]=\"page === -1\" \r\n (click)=\"onPageChange(page)\">\r\n {{page === -1 ? '...' : page}}\r\n </button>\r\n <button (click)=\"onPageChange(currentPage + 1)\" [disabled]=\"currentPage === totalPages\">\r\n <span class=\"material-icons\">chevron_right</span>\r\n </button>\r\n <button (click)=\"onPageChange(totalPages)\" [disabled]=\"currentPage === totalPages\">\r\n <span class=\"material-icons\">last_page</span>\r\n </button>\r\n </div>\r\n </div>\r\n </div>\r\n </div>\r\n</ng-container>\r\n\r\n<!-- Custom Editor Template -->\r\n<ng-template #customEditorTpl let-editor let-row=\"row\" let-col=\"col\" let-index=\"index\" let-control=\"control\">\r\n <coordinate-editor\r\n *ngIf=\"editor?.component === CoordinateEditorComponent\"\r\n [formControl]=\"control\"\r\n [config]=\"{\r\n type: col === 'lat' ? 'lat' : 'lon'\r\n }\">\r\n </coordinate-editor>\r\n\r\n <airport-code-editor \r\n *ngIf=\"editor?.component === AirportCodeEditorComponent\"\r\n [formControl]=\"control\"\r\n [config]=\"editor.getEditConfig()\"\r\n [existingCodes]=\"getCodes(data)\">\r\n </airport-code-editor>\r\n</ng-template>\r\n\r\n<!-- No Data Template -->\r\n<ng-template #noData>\r\n <div class=\"ixt-table__empty\">\r\n No data available\r\n </div>\r\n</ng-template>", styles: [".ixt-table{border:1px solid #e2e8f0;border-radius:.5rem;overflow:auto;max-height:calc(100vh - 600px)}.ixt-table__header{display:flex;background:#f7fafc;border-bottom:1px solid #e2e8f0;font-weight:500}.ixt-table__row{display:flex;border-bottom:1px solid #e2e8f0}.ixt-table__row:hover{background:#f7fafc}.ixt-table__cell{padding:.5rem;width:150px;min-width:150px;box-sizing:border-box;border-right:1px solid #e2e8f0;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.ixt-table__cell:first-child{width:40px;min-width:40px}.ixt-table__cell--first{width:200px;min-width:200px}.ixt-table__cell--actions{width:80px;min-width:80px}.ixt-table__cell-content{display:flex;align-items:center;gap:8px;width:100%}.ixt-table__cell input,.ixt-table__cell select{width:100%;padding:4px 24px 4px 8px;border:1px solid #e2e8f0;border-radius:4px}.ixt-table__cell coordinate-editor input{padding-right:24px}.ixt-table__empty{padding:1rem;text-align:center;color:#718096}.ixt-table__footer{display:flex;justify-content:space-between;align-items:center;padding:.75rem;border-top:1px solid #e2e8f0}.ixt-table__pagination{display:flex;justify-content:space-between;align-items:center;width:100%}.ixt-table__page-size select{padding:.25rem .5rem;border:1px solid #e2e8f0;border-radius:.25rem;margin-right:1rem}.ixt-table__controls{display:flex;align-items:center;gap:.25rem}.ixt-table__controls button{padding:.25rem;min-width:2rem;height:2rem;border:none;background:none;cursor:pointer;border-radius:.25rem;color:#4169e1;display:flex;align-items:center;justify-content:center}.ixt-table__controls button:disabled{color:gray;cursor:not-allowed}.ixt-table__controls button:not(:disabled):hover{background-color:#f7fafc}.ixt-table__controls button.active{background-color:#4169e1;color:#fff}.ixt-table__controls button.ellipsis{cursor:default}.ixt-table__controls button.ellipsis:hover{background:none}.ixt-table__filter-toggle{background:none;border:none;cursor:pointer;padding:4px;color:#4169e1;display:flex;align-items:center}.ixt-table__filter-input{width:100%;padding:.25rem;border:1px solid #e2e8f0;border-radius:.25rem;font-size:.875rem}.ixt-table__filter-input:focus{outline:none;border-color:#4169e1}.ixt-table__number-filter{display:flex;gap:.25rem}.ixt-table__number-filter select{padding:.25rem;border:1px solid #e2e8f0;border-radius:.25rem}.ixt-table .material-icons{font-family:Material Icons;font-weight:400;font-style:normal;display:inline-block;line-height:1;text-transform:none;letter-spacing:normal;word-wrap:normal;white-space:nowrap;direction:ltr}.ixt-table__cell-content{display:flex;align-items:center;gap:8px}.ixt-table__cell-actions{display:flex;align-items:center;gap:4px}.ixt-table__sort-toggle,.ixt-table__filter-toggle{background:none;border:none;padding:4px;cursor:pointer;display:flex;align-items:center;justify-content:center}.ixt-table__sort-toggle:hover,.ixt-table__filter-toggle:hover{background-color:#0000000a;border-radius:4px}.ixt-table__sort-toggle .material-icons,.ixt-table__filter-toggle .material-icons{font-size:18px;color:#0000008a}.ixt-table__toolbar{display:flex;justify-content:flex-end;padding:8px}.ixt-table__save-button,.ixt-table__action-button{background:none;border:none;padding:4px;cursor:pointer}.ixt-table__save-button:disabled,.ixt-table__action-button:disabled{opacity:.5;cursor:not-allowed}.ixt-table__save-button .material-icons,.ixt-table__action-button .material-icons{font-size:18px}.ixt-table input,.ixt-table select{width:100%;padding:4px;border:1px solid #ddd;border-radius:4px}.ixt-table input:focus,.ixt-table select:focus{outline:none;border-color:#007bff}\n"] }] }], ctorParameters: function () { return [{ type: i1.IxtDialogService }, { type: i0.ChangeDetectorRef }, { type: i2.PaginationService }, { type: i3.FilterService }, { type: i4.SortService }, { type: i5.SelectionService }, { type: i6.EditService }]; }, propDecorators: { data: [{ type: Input }], columnConfigs: [{ type: Input }], noDataTemplate: [{ type: ViewChild, args: ['noData'] }], customEditorTpl: [{ type: ViewChild, args: ['customEditorTpl'] }] } }); //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXh0LXRhYmxlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL2l4dC10YWJsZS9peHQtdGFibGUuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvaXh0LXRhYmxlL2l4dC10YWJsZS5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQXFCLFNBQVMsRUFBRSxLQUFLLEVBQXVCLFNBQVMsRUFBUSxNQUFNLGVBQWUsQ0FBQztBQUMxRyxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFN0MsT0FBTyxFQUFFLFlBQVksRUFBRSxvQkFBb0IsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBUXBFLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSx5QkFBeUIsRUFBRSxNQUFNLG1CQUFtQixDQUFDOzs7Ozs7Ozs7Ozs7O0FBUzFGLE1BQU0sT0FBTyxpQkFBaUI7SUFXNUIsWUFDVSxhQUErQixFQUMvQixpQkFBb0MsRUFDcEMsaUJBQW9DLEVBQ3BDLGFBQTRCLEVBQzVCLFdBQXdCLEVBQ3hCLGdCQUFrQyxFQUNsQyxXQUF3QjtRQU54QixrQkFBYSxHQUFiLGFBQWEsQ0FBa0I7UUFDL0Isc0JBQWlCLEdBQWpCLGlCQUFpQixDQUFtQjtRQUNwQyxzQkFBaUIsR0FBakIsaUJBQWlCLENBQW1CO1FBQ3BDLGtCQUFhLEdBQWIsYUFBYSxDQUFlO1FBQzVCLGdCQUFXLEdBQVgsV0FBVyxDQUFhO1FBQ3hCLHFCQUFnQixHQUFoQixnQkFBZ0IsQ0FBa0I7UUFDbEMsZ0JBQVcsR0FBWCxXQUFXLENBQWE7UUFqQnpCLFNBQUksR0FBaUIsRUFBRSxDQUFDO1FBS2pDLFlBQU8sR0FBYSxFQUFFLENBQUM7UUFDdkIsb0JBQWUsR0FBRyxJQUFJLFdBQVcsQ0FBaUIsRUFBRSxDQUFDLENBQUM7UUFDN0MsK0JBQTBCLEdBQUcsMEJB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QUFFLElBQUksRUFBRSxDQUFDLENBQUM7SUFDeEQsQ0FBQztJQUNELGdCQUFnQjtJQUVoQixxQkFBcUI7SUFDckIsVUFBVSxDQUFDLElBQWtCO1FBQzNCLElBQUksQ0FBQyxJQUFJLEVBQUUsTUFBTTtZQUFFLE9BQU8sRUFBRSxDQUFDO1FBQzdCLE1BQU0sUUFBUSxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN6QixPQUFPLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDL0IsQ0FBQztJQUVELElBQUksT0FBTztRQUNULE9BQU8sQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsTUFBTSxDQUFDO0lBQzdCLENBQUM7K0dBalNVLGlCQUFpQjttR0FBakIsaUJBQWlCLDBUQ3BCOUIsMmtTQTBNYzs7NEZEdExELGlCQUFpQjtrQkFMN0IsU0FBUzsrQkFDRSxXQUFXO3NSQUtaLElBQUk7c0JBQVosS0FBSztnQkFDRyxhQUFhO3NCQUFyQixLQUFLO2dCQUNlLGNBQWM7c0JBQWxDLFNBQVM7dUJBQUMsUUFBUTtnQkFDVyxlQUFlO3NCQUE1QyxTQUFTO3VCQUFDLGlCQUFpQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdG9yUmVmLCBDb21wb25lbnQsIElucHV0LCBPbkluaXQsIFRlbXBsYXRlUmVmLCBWaWV3Q2hpbGQsIFR5cGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgRm9ybUNvbnRyb2wgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XHJcbmltcG9ydCB7IENvbHVtbkNvbmZpZywgRmlsdGVyT3BlcmF0b3IsIEZpbHRlclN0YXRlLCBNYXRyaXhOb2RlLCBQYWdlU2l6ZSwgUm93Q2hhbmdlcyB9IGZyb20gJy4vaXh0LXRhYmxlLmludGVyZmFjZXMnO1xyXG5pbXBvcnQgeyBkZWJvdW5jZVRpbWUsIGRpc3RpbmN0VW50aWxDaGFuZ2VkIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xyXG5pbXBvcnQgeyBJeHREaWFsb2dTZXJ2aWNlIH0gZnJvbSAnLi4vaXh0LWRpYWxvZy9peHQtZGlhbG9nLmluZGV4JztcclxuaW1wb3J0IHsgUGFnaW5hdGlvblNlcnZpY2UgfSBmcm9tICcuL3NlcnZpY2VzL3BhZ2luYXRpb24uc2VydmljZSc7XHJcbmltcG9ydCB7IEZpbHRlclNlcnZpY2UgfSBmcm9tICcuL3NlcnZpY2VzL2ZpbHRlci9maWx0ZXIuc2VydmljZSc7XHJcbmltcG9ydCB7IFNvcnRTZXJ2aWNlIH0gZnJvbSAnLi9zZXJ2aWNlcy9zb3J0L3NvcnQuc2VydmljZSc7XHJcbmltcG9ydCB7IFNlbGVjdGlvblNlcnZpY2UgfSBmcm9tICcuL3NlcnZpY2VzL3NlbGVjdGlvbi9zZWxlY3Rpb24uc2VydmljZSc7XHJcbmltcG9ydCB7IEVkaXRTZXJ2aWNlIH0gZnJvbSAnLi9zZXJ2aWNlcy9lZGl0L2VkaXQuc2VydmljZSc7XHJcbmltcG9ydCB7IE1hdHJpeEVkaXRvciB9IGZyb20gJy4vZWRpdG9ycy9lZGl0b3IuaW50ZXJmYWNlJztcclxuaW1wb3J0IHsgQWlycG9ydENvZGVFZGl0b3JDb21wb25lbnQsIENvb3JkaW5hdGVFZGl0b3JDb21wb25lbnQgfSBmcm9tICcuL2l4dC10YWJsZS5pbmRleCc7XHJcblxyXG5leHBvcnQgdHlwZSBTb3J0RGlyZWN0aW9uID0gJ2FzYycgfCAnZGVzYycgfCBudWxsO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdpeHQtdGFibGUnLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9peHQtdGFibGUuY29tcG9uZW50Lmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL2l4dC10YWJsZS5jb21wb25lbnQuc2NzcyddXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBJeHRUYWJsZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcbiAgQElucHV0KCkgZGF0YTogTWF0cml4Tm9kZVtdID0gW107XHJcbiAgQElucHV0KCkgY29sdW1uQ29uZmlncz86IFJlY29yZDxzdHJpbmcsIENvbHVtbkNvbmZpZz47XHJcbiAgQFZpZXdDaGlsZCgnbm9EYXRhJykgbm9EYXRhVGVtcGxhdGUhOiBUZW1wbGF0ZVJlZjxhbnk+O1xyXG4gIEBWaWV3Q2hpbGQoJ2N1c3RvbUVkaXRvclRwbCcpIGN1c3RvbUVkaXRvclRwbCE6IFRlbXBsYXRlUmVmPGFueT47XHJcblxyXG4gIGNvbHVtbnM6IHN0cmluZ1tdID0gW107XHJcbiAgcGFnZVNpemVDb250cm9sID0gbmV3IEZvcm1Db250cm9sPG51bWJlciB8ICdhbGwnPigxMCk7XHJcbiAgcmVhZG9ubHkgQWlycG9ydENvZGVFZGl0b3JDb21wb25lbnQgPSBBaXJwb3J0Q29kZUVkaXRvckNvbXBvbmVudDtcclxuICByZWFkb25seSBDb29yZGluYXRlRWRpdG9yQ29tcG9uZW50ID0gQ29vcmRpbmF0ZUVkaXRvckNvbXBvbmVudDtcclxuXHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICBwcml2YXRlIGRpYWxvZ1NlcnZpY2U6IEl4dERpYWxvZ1NlcnZpY2UsXHJcbiAgICBwcml2YXRlIGNoYW5nZURldGVjdG9yUmVmOiBDaGFuZ2VEZXRlY3RvclJlZixcclxuICAgIHByaXZhdGUgcGFnaW5hdGlvblNlcnZpY2U6IFBhZ2luYXRpb25TZXJ2aWNlLFxyXG4gICAgcHJpdmF0ZSBmaWx0ZXJTZXJ2aWNlOiBGaWx0ZXJTZXJ2aWNlLFxyXG4gICAgcHJpdmF0ZSBzb3J0U2VydmljZTogU29ydFNlcnZpY2UsXHJcbiAgICBwcml2YXRlIHNlbGVjdGlvblNlcnZpY2U6IFNlbGVjdGlvblNlcnZpY2UsXHJcbiAgICBwcml2YXRlIGVkaXRTZXJ2aWNlOiBFZGl0U2VydmljZSAgXHJcbiAgKSB7IH1cclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICB0aGlzLmNvbHVtbnMgPSB0aGlzLmdldENvbHVtbnModGhpcy5kYXRhKTtcclxuXHJcbiAgICAvLyBJbml0aWFsaXplIHBhZ2luYXRpb25cclxuICAgIHRoaXMucGFnaW5hdGlvblNlcnZpY2UuaW5pdGlhbGl6ZSh0aGlzLmRhdGEubGVuZ3RoKTtcclxuXHJcbiAgICAvLyBJbml0aWFsaXplIGZpbHRlcnNcclxuICAgIGlmICh0aGlzLmNvbHVtbkNvbmZpZ3MpIHtcclxuICAgICAgT2JqZWN0LmVudHJpZXModGhpcy5jb2x1bW5Db25maWdzKS5mb3JFYWNoKChbZmllbGQsIGNvbmZpZ10pID0+IHtcclxuICAgICAgICB0aGlzLmZpbHRlclNlcnZpY2UuaW5pdGlhbGl6ZUZpbHRlcihmaWVsZCwgY29uZmlnKTtcclxuXHJcbiAgICAgICAgLy8gR2V0IHRoZSBjb250cm9sIGZyb20gc2VydmljZSBhbmQgc3Vic2NyaWJlIHRvIGNoYW5nZXNcclxuICAgICAgICBjb25zdCBjb250cm9sID0gdGhpcy5maWx0ZXJTZXJ2aWNlLmdldEZpbHRlckNvbnRyb2woZmllbGQpO1xyXG4gICAgICAgIGlmIChjb250cm9sKSB7XHJcbiAgICAgICAgICBjb250cm9sLnZhbHVlQ2hhbmdlcy5waXBlKFxyXG4gICAgICAgICAgICBkZWJvdW5jZVRpbWUoY29uZmlnLmRlYm91bmNlVGltZSB8fCAzMDApLFxyXG4gICAgICAgICAgICBkaXN0aW5jdFVudGlsQ2hhbmdlZCgpXHJcbiAgICAgICAgICApLnN1YnNjcmliZSh2YWx1ZSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuZmlsdGVyU2VydmljZS5vbkZpbHRlckNoYW5nZShmaWVsZCwgdmFsdWUsIGNvbmZpZyk7XHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIFN1YnNjcmliZSB0byBmaWx0ZXIgY2hhbmdlc1xyXG4gICAgdGhpcy5maWx0ZXJTZXJ2aWNlLmZpbHRlcnNDaGFuZ2VkJC5zdWJzY3JpYmUoKCkgPT4ge1xyXG4gICAgICB0aGlzLmNoYW5nZURldGVjdG9yUmVmLm1hcmtGb3JDaGVjaygpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgLy8gU3Vic2NyaWJlIHRvIHBhZ2luYXRpb24gY2hhbmdlc1xyXG4gICAgdGhpcy5wYWdpbmF0aW9uU2VydmljZS5zdGF0ZSQuc3Vic2NyaWJlKCgpID0+IHtcclxuICAgICAgdGhpcy5jaGFuZ2VEZXRlY3RvclJlZi5tYXJrRm9yQ2hlY2soKTtcclxuICAgIH0pO1xyXG5cclxuICAgIC8vIFN1YnNjcmliZSB0byBwYWdlIHNpemUgY2hhbmdlc1xyXG4gICAgdGhpcy5wYWdlU2l6ZUNvbnRyb2wudmFsdWVDaGFuZ2VzLnN1YnNjcmliZSh2YWx1ZSA9PiB7XHJcbiAgICAgIGlmICh2YWx1ZSkge1xyXG4gICAgICAgIHRoaXMucGFnaW5hdGlvblNlcnZpY2Uub25QYWdlU2l6ZUNoYW5nZSh2YWx1ZSk7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgLy8gZWRpdCBsb2dpYyBzdGFydFxyXG4gIGFkZE5ld1JvdygpOiB2b2lkIHtcclxuICAgIHRoaXMuZWRpdFNlcnZpY2UuYWRkTmV3Um93KHRoaXMuY29sdW1uQ29uZmlncyB8fCB7fSk7XHJcbiAgfVxyXG5cclxuICBjYW5jZWxFZGl0aW5nKHJvd0luZGV4OiBudW1iZXIpOiB2b2lkIHtcclxuICAgIHRoaXMuZWRpdFNlcnZpY2UuY2FuY2VsRWRpdGluZyhyb3dJbmRleCk7XHJcbiAgfVxyXG5cclxuICBnZXRFZGl0b3JDb21wb25lbnQodHlwZTogYW55KTogTWF0cml4RWRpdG9yIHwgbnVsbCB7XHJcbiAgICBjb25zb2xlLmxvZygnZ2V0RWRpdG9yQ29tcG9uZW50IGNhbGxlZCB3aXRoOicsIHtcclxuICAgICAgdHlwZSxcclxuICAgICAgaXNDb29yZGluYXRlOiB0eXBlID09PSBDb29yZGluYXRlRWRpdG9yQ29tcG9uZW50LFxyXG4gICAgICBpc0FpcnBvcnQ6IHR5cGUgPT09IEFpcnBvcnRDb2RlRWRpdG9yQ29tcG9uZW50XHJcbiAgICB9KTtcclxuXHJcbiAgICBpZiAodHlwZSA9PT0gQWlycG9ydENvZGVFZGl0b3JDb21wb25lbnQpIHtcclxuICAgICAgcmV0dXJuIG5ldyBBaXJwb3J0Q29kZUVkaXRvckNvbXBvbmVudCh0aGlzLmRpYWxvZ1NlcnZpY2UpO1xyXG4gICAgfVxyXG4gICAgaWYgKHR5cGUgPT09IENvb3JkaW5hdGVFZGl0b3JDb21wb25lbnQpIHtcclxuICAgICAgcmV0dXJuIG5ldyBDb29yZGluYXRlRWRpdG9yQ29tcG9uZW50KHRoaXMuZGlhbG9nU2VydmljZSk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gbnVsbDtcclxuICB9XHJcblxyXG4gIGdldEVkaXRvclR5cGUodHlwZTogYW55KTogc3RyaW5nIHtcclxuICAgIGNvbnNvbGUubG9nKCdnZXRFZGl0b3JUeXBlIGNhbGxlZCB3aXRoOicsIHtcclxuICAgICAgdHlwZSxcclxuICAgICAgaXNTdHJpbmc6IHR5cGVvZiB0eXBlID09PSAnc3RyaW5nJyxcclxuICAgICAgaXNDb29yZGluYXRlOiB0eXBlID09PSBDb29yZGluYXRlRWRpdG9yQ29tcG9uZW50LFxyXG4gICAgICBpc0FpcnBvcnQ6IHR5cGUgPT09IEFpcnBvcnRDb2RlRWRpdG9yQ29tcG9uZW50XHJcbiAgICB9KTtcclxuXHJcbiAgICBpZiAodHlwZW9mIHR5cGUgPT09ICdzdHJpbmcnKSB7XHJcbiAgICAgIHJldHVybiB0eXBlO1xyXG4gICAgfVxyXG4gICAgaWYgKHR5cGUgPT09IEFpcnBvcnRDb2RlRWRpdG9yQ29tcG9uZW50IHx8IHR5cGUgPT09IENvb3JkaW5hdGVFZGl0b3JDb21wb25lbnQpIHtcclxuICAgICAgY29uc29sZS5sb2coJ1JldHVybmluZyBjdXN0b20gZm9yIGVkaXRvciB0eXBlJyk7XHJcbiAgICAgIHJldHVybiAnY3VzdG9tJztcclxuICAgIH1cclxuICAgIGNvbnNvbGUubG9nKCdGYWxsaW5nIGJhY2sgdG8gdGV4dCB0eXBlJyk7XHJcbiAgICByZXR1cm4gJ3RleHQnO1xyXG4gIH1cclxuXHJcbiAgZ2V0RWRpdENvbnRyb2wocm93SW5kZXg6IG51bWJlciwgZmllbGQ6IHN0cmluZyk6IEZvcm1Db250cm9sIHtcclxuICAgIHJldHVybiB0aGlzLmVkaXRTZXJ2aWNlLmdldEVkaXRDb250cm9sKHJvd0luZGV4LCBmaWVsZCk7XHJcbiAgfVxyXG5cclxuICBnZXRSb3dJbmRleChkaXNwbGF5SW5kZXg6IG51bWJlcik6IG51bWJlciB7XHJcbiAgICByZXR1cm4gdGhpcy5lZGl0U2VydmljZS5nZXRSb3dJbmRleChkaXNwbGF5SW5kZXgpO1xyXG4gIH1cclxuXHJcbiAgZ2V0IGhhc0NoYW5nZXMoKTogYm9vbGVhbiB7XHJcbiAgICByZXR1cm4gdGhpcy5lZGl0U2VydmljZS5oYXNDaGFuZ2VzKCk7XHJcbiAgfVxyXG5cclxuICBpc0VkaXRpbmcoaW5kZXg6IG51bWJlcik6IGJvb2xlYW4ge1xyXG4gICAgcmV0dXJuIHRoaXMuZWRpdFNlcnZpY2UuaXNFZGl0aW5nKGluZGV4KTtcclxuICB9XHJcblxyXG4gIGlzTmV3Um93KGRpc3BsYXlJbmRleDogbnVtYmVyKTogYm9vbGVhbiB7XHJcbiAgICByZXR1cm4gdGhpcy5lZGl0U2VydmljZS5pc05ld1JvdyhkaXNwbGF5SW5kZXgpO1xyXG4gIH1cclxuXHJcbiAgZ2V0IG5ld1Jvd3NMZW5ndGgoKTogbnVtYmVyIHtcclxuICAgIHJldHVybiB0aGlzLmVkaXRTZXJ2aWNlLmdldE5ld1Jvd3MoKS5sZW5ndGg7XHJcbiAgfVxyXG5cclxuICBvblZhbHVlQ2hhbmdlKHJvd0luZGV4OiBudW1iZXIsIGZpZWxkOiBzdHJpbmcsIHZhbHVlOiBhbnkpOiB2b2lkIHtcclxuICAgIHRoaXMuZWRpdFNlcnZpY2Uub25WYWx1ZUNoYW5nZSh7IHJvd0luZGV4LCBmaWVsZCwgdmFsdWUgfSk7XHJcbiAgfVxyXG5cclxuICBzYXZlQ2hhbmdlcygpOiB2b2lkIHtcclxuICAgIHRoaXMuZGF0YSA9IHRoaXMuZWRpdFNlcnZpY2Uuc2F2ZUNoYW5nZXModGhpcy5kYXRhKTtcclxuICAgIHRoaXMuY2hhbmdlRGV0ZWN0b3JSZWYubWFya0ZvckNoZWNrKCk7XHJcbiAgfVxyXG5cclxuICBzdGFydEVkaXRpbmcocm93SW5kZXg6IG51bWJlcik6IHZvaWQge1xyXG4gICAgdGhpcy5lZGl0U2VydmljZS5zdGFydEVkaXRpbmcocm93SW5kZXgpO1xyXG4gIH1cclxuICAvLyBlZGl0IGxvZ2ljIGVuZFxyXG5cclxuICAvLyBmaWx0ZXIgbG9naWMgc3RhcnRcclxuICBnZXQgYWN0aXZlRmlsdGVyQ29sdW1uKCk6IHN0cmluZyB8IHVuZGVmaW5lZCB7XHJcbiAgICByZXR1cm4gdGhpcy5maWx0ZXJTZXJ2aWNlLmFjdGl2ZUNvbHVtbjtcclxuICB9XHJcblxyXG4gIGdldEZpbHRlckNvbnRyb2woY29sOiBzdHJpbmcpOiBGb3JtQ29udHJvbDxhbnk+IHtcclxuICAgIHJldHVybiB0aGlzLmZpbHRlclNlcnZpY2UuZ2V0RmlsdGVyQ29udHJvbChjb2wpITtcclxuICB9XHJcblxyXG4gIGdldE9wZXJhdG9yQ29udHJvbChjb2w6IHN0cmluZyk6IEZvcm1Db250cm9sPHN0cmluZz4ge1xyXG4gICAgcmV0dXJuIHRoaXMuZmlsdGVyU2VydmljZS5nZXRPcGVyYXRvckNvbnRyb2woY29sKSE7XHJcbiAgfVxyXG5cclxuICBvbk9wZXJhdG9yQ2hhbmdlKGZpZWxkOiBzdHJpbmcpOiB2b2lkIHtcclxuICAgIHRoaXMuZmlsdGVyU2VydmljZS5vbk9wZXJhdG9yQ2hhbmdlKGZpZWxkKTtcclxuICB9XHJcblxyXG4gIGdldCBzaG93RmlsdGVycygpOiBib29sZWFuIHtcclxuICAgIHJldHVybiB0aGlzLmZpbHRlclNlcnZpY2UuaXNTaG93aW5nRmlsdGVycztcclxuICB9XHJcblxyXG4gIHRvZ2dsZUZpbHRlcnMoY29sOiBzdHJpbmcpOiB2b2lkIHtcclxuICAgIHRoaXMuZmlsdGVyU2VydmljZS50b2dnbGVGaWx0ZXJzKGNvbCk7XHJcbiAgfVxyXG4gIC8vIGZpbHRlciBsb2dpYyBlbmRcclxuICBcclxuICAvLyBwYWdpbmF0aW9uIGxvZ2ljIHN0YXJ0XHJcbiAgZ2V0IGN1cnJlbnRQYWdlKCk6IG51bWJlciB7XHJcbiAgICByZXR1cm4gdGhpcy5wYWdpbmF0aW9uU2VydmljZS5nZXRDdXJyZW50UGFnZSgpO1xyXG4gIH1cclxuXHJcbiAgb25QYWdlQ2hhbmdlKHBhZ2U6IG51bWJlcik6IHZvaWQge1xyXG4gICAgdGhpcy5wYWdpbmF0aW9uU2VydmljZS5vblBhZ2VDaGFuZ2UocGFnZSk7XHJcbiAgfVxyXG5cclxuICBvblBhZ2VTaXplQ2hhbmdlKHNpemU6IG51bWJlciB8ICdhbGwnKTogdm9pZCB7XHJcbiAgICB0aGlzLnBhZ2luYXRpb25TZXJ2aWNlLm9uUGFnZVNpemVDaGFuZ2Uoc2l6ZSk7XHJcbiAgfVxyXG5cclxuICBnZXQgcGFnaW5hdGVkRGF0YSgpOiBNYXRyaXhOb2RlW10ge1xyXG4gICAgLy8gU3RhcnQgd2l0aCBjb21iaW5lZCBkYXRhXHJcbiAgICBsZXQgYWxsRGF0YSA9IFsuLi50aGlzLmVkaXRTZXJ2aWNlLmdldE5ld1Jvd3MoKSwgLi4udGhpcy5kYXRhXTtcclxuICBcclxuICAgIC8vIEFwcGx5IGZpbHRlcnNcclxuICAgIGlmICh0aGlzLmZpbHRlclNlcnZpY2UuaGFzQWN0aXZlRmlsdGVycygpKSB7XHJcbiAgICAgIGNvbnN0IGFjdGl2ZUZpbHRlcnMgPSB0aGlzLmZpbHRlclNlcnZpY2UuZ2V0QWN0aXZlRmlsdGVycygpO1xyXG4gICAgICBjb25zdCBmaWx0ZXJlZEV4aXN0aW5nID0gdGhpcy5kYXRhLmZpbHRlcihpdGVtID0+XHJcbiAgICAgICAgQXJyYXkuZnJvbShhY3RpdmVGaWx0ZXJzLnZhbHVlcygpKS5ldmVyeShmaWx0ZXIgPT5cclxuICAgICAgICAgIHRoaXMuZmlsdGVyU2VydmljZS5tYXRjaGVzRmlsdGVyKGl0ZW1bZmlsdGVyLmZpZWxkXSwgZmlsdGVyKVxyXG4gICAgICAgIClcclxuICAgICAgKTtcclxuICAgICAgYWxsRGF0YSA9IFsuLi50aGlzLmVkaXRTZXJ2aWNlLmdldE5ld1Jvd3MoKSwgLi4uZmlsdGVyZWRFeGlzdGluZ107XHJcbiAgICB9XHJcbiAgXHJcbiAgICAvLyBBcHBseSBzb3J0aW5nXHJcbiAgICBhbGxEYXRhID0gdGhpcy5zb3J0U2VydmljZS5zb3J0RGF0YShhbGxEYXRhKTtcclxuICBcclxuICAgIC8vIEFwcGx5IHBhZ2luYXRpb25cclxuICAgIHJldHVybiB0aGlzLnBhZ2luYXRpb25TZXJ2aWNlLmdldFBhZ2luYXRlZERhdGEoYWxsRGF0YSk7XHJcbiAgfVxyXG5cclxuICBnZXQgcGFnZVNpemVzKCk6IFBhZ2VTaXplW10ge1xyXG4gICAgcmV0dXJuIHRoaXMucGFnaW5hdGlvblNlcnZpY2UuZ2V0UGFnZVNpemVzKCk7XHJcbiAgfVxyXG5cclxuICBnZXQgc2hvd1BhZ2luYXRpb24oKTogYm9vbGVhbiB7XHJcbiAgICByZXR1cm4gdGhpcy5wYWdpbmF0aW9uU2VydmljZS5zaG91bGRTaG93UGFnaW5hdGlvbigpO1xyXG4gIH1cclxuXHJcbiAgZ2V0IHRvdGFsUGFnZXMoKTogbnVtYmVyIHtcclxuICAgIHJldHVybiB0aGlzLnBhZ2luYXRpb25TZXJ2aWNlLmdldFRvdGFsUGFnZXMoKTtcclxuICB9XHJcblxyXG4gIGdldCB2aXNpYmxlUGFnZXMoKTogbnVtYmVyW10ge1xyXG4gICAgcmV0dXJuIHRoaXMucGFnaW5hdGlvblNlcnZpY2UuZ2V0VmlzaWJsZVBhZ2VzKCk7XHJcbiAgfVxyXG4gIC8vIHBhZ2luYXRpb24gbG9naWMgZW5kXHJcblxyXG4gIC8vIHNlbGVjdGlvbiBsb2dpYyBzdGFydFxyXG4gIGdldCBhbGxTZWxlY3RlZCgpOiBib29sZWFuIHtcclxuICAgIHJldHVybiB0aGlzLnNlbGVjdGlvblNlcnZpY2UuaXNBbGxTZWxlY3RlZCgpO1xyXG4gIH1cclxuXHJcbiAgc2V0IGFsbFNlbGVjdGVkKHZhbHVlOiBib29sZWFuKSB7XHJcbiAgICB0aGlzLnNlbGVjdGlvblNlcnZpY2UudG9nZ2xlQWxsUm93cyh2YWx1ZSwgdGhpcy5kYXRhLmxlbmd0aCk7XHJcbiAgfVxyXG5cclxuICBnZXRTZWxlY3RlZFJvd3MoKTogTWF0cml4Tm9kZVtdIHtcclxuICAgIHJldHVybiBBcnJheS5mcm9tKHRoaXMuc2VsZWN0aW9uU2VydmljZS5nZXRTZWxlY3RlZFJvd3MoKSlcclxuICAgICAgLm1hcChpbmRleCA9PiB0aGlzLmRhdGFbaW5kZXhdKVxyXG4gICAgICAuZmlsdGVyKHJvdyA9PiByb3cgIT09IHVuZGVmaW5lZCk7XHJcbiAgfVxyXG5cclxuICBnZXQgaGFzU2VsZWN0ZWRSb3dzKCk6IGJvb2xlYW4ge1xyXG4gICAgcmV0dXJuIHRoaXMuc2VsZWN0aW9uU2VydmljZS5nZXRTZWxlY3RlZENvdW50KCkgPiAwO1xyXG4gIH1cclxuXHJcbiAgaXNSb3dTZWxlY3RlZChpbmRleDogbnVtYmVyKTogYm9vbGVhbiB7XHJcbiAgICByZXR1cm4gdGhpcy5zZWxlY3Rpb25TZXJ2aWNlLmlzU2VsZWN0ZWQoaW5kZXgpO1xyXG4gIH1cclxuXHJcbiAgc2VsZWN0Um93KGluZGV4OiBudW1iZXIsIHNlbGVjdGVkID0gdHJ1ZSk6IHZvaWQge1xyXG4gICAgdGhpcy5zZWxlY3Rpb25TZXJ2aWNlLnNlbGVjdFJvdyhpbmRleCwgc2VsZWN0ZWQpO1xyXG4gIH1cclxuXHJcbiAgc2V0U2VsZWN0ZWRSb3dzKGluZGljZXM6IG51bWJlcltdKTogdm9pZCB7XHJcbiAgICB0aGlzLnNlbGVjdGlvblNlcnZpY2Uuc2V0U2VsZWN0ZWRSb3dzKGluZGljZXMpO1xyXG4gIH1cclxuXHJcbiAgdG9nZ2xlQWxsUm93cyhzZWxlY3RlZDogYm9vbGVhbik6IHZvaWQge1xyXG4gICAgdGhpcy5zZWxlY3Rpb25TZXJ2aWNlLnRvZ2dsZUFsbFJvd3Moc2VsZWN0ZWQsIHRoaXMuZGF0YS5sZW5ndGgpO1xyXG4gIH1cclxuICAvLyBzZWxlY3Rpb24gbG9naWMgZW5kXHJcblxyXG4gIC8vIHNvcnQgbG9naWMgc3RhcnRcclxuICBnZXRTb3J0SWNvbihjb2x1bW46IHN0cmluZyk6IHN0cmluZyB7XHJcbiAgICByZXR1cm4gdGhpcy5zb3J0U2VydmljZS5nZXRTb3J0SWNvbihjb2x1bW4pO1xyXG4gIH1cclxuXHJcbiAgdG9nZ2xlU29ydChjb2x1bW46IHN0cmluZyk6IHZvaWQge1xyXG4gICAgdGhpcy5zb3J0U2VydmljZS50b2dnbGVTb3J0KGNvbHVtbik7XHJcbiAgfVxyXG4gIC8vIHNvcnQgbG9naWMgZW5kXHJcblxyXG4gIC8vIGkvbyBsb2dpYyBzdGFydFxyXG4gIGZvcm1hdENvb3JkaW5hdGUodmFsdWU6IG51bWJlcik6IHN0cmluZyB7XHJcbiAgICByZXR1cm4gdmFsdWUudG9GaXhlZCgxKTtcclxuICB9XHJcblxyXG4gIGdldENvZGVzKGRhdGE6IE1hdHJpeE5vZGVbXSk6IHN0cmluZ1tdIHtcclxuICAgIGlmICghZGF0YSkgcmV0dXJuIFtdO1xyXG4gICAgcmV0dXJuIGRhdGEubWFwKHJvdyA9PiByb3dbJ2NvZGUnXT8udG9TdHJpbmcoKSB8fCAnJyk7XHJcbiAgfVxyXG4gIC8vIGkvbyBsb2dpYyBlbmRcclxuXHJcbiAgLy8gY29uZmlnIGxvZ2ljIHN0YXJ0XHJcbiAgZ2V0Q29sdW1ucyhkYXRhOiBNYXRyaXhOb2RlW10pOiBzdHJpbmdbXSB7XHJcbiAgICBpZiAoIWRhdGE/Lmxlbmd0aCkgcmV0dXJuIFtdO1xyXG4gICAgY29uc3QgZmlyc3RSb3cgPSBkYXRhWzBdO1xyXG4gICAgcmV0dXJuIE9iamVjdC5rZXlzKGZpcnN0Um93KTtcclxuICB9XHJcblxyXG4gIGdldCBoYXNEYXRhKCk6IGJvb2xlYW4ge1xyXG4gICAgcmV0dXJuICEhdGhpcy5kYXRhPy5sZW5ndGg7XHJcbiAgfVxyXG4gIC8vIGNvbmZpZyBsb2dpYyBlbmRcclxufSIsIjxkaXYgY2xhc3M9XCJpeHQtdGFibGVfX3Rvb2xiYXJcIj5cclxuICA8YnV0dG9uIGNsYXNzPVwiaXh0LXRhYmxlX19hY3Rpb24tYnV0dG9uXCIgKGNsaWNrKT1cImFkZE5ld1JvdygpXCI+XHJcbiAgICA8c3BhbiBjbGFzcz1cIm1hdGVyaWFsLWljb25zXCI+YWRkPC9zcGFuPlxyXG4gIDwvYnV0dG9uPlxyXG4gIDxidXR0b24gY2xhc3M9XCJpeHQtdGFibGVfX2FjdGlvbi1idXR0b25cIiBbZGlzYWJsZWRdPVwiIWhhc0NoYW5nZXMgJiYgbmV3Um93c0xlbmd0aCA9PT0gMFwiIChjbGljayk9XCJzYXZlQ2hhbmdlcygpXCI+XHJcbiAgICA8c3BhbiBjbGFzcz1cIm1hdGVyaWFsLWljb25zXCI+c2F2ZTwvc3Bhbj5cclxuICA8L2J1dHRvbj5cclxuPC9kaXY+XHJcblxyXG48bmctY29udGFpbmVyICpuZ0lmPVwiaGFzRGF0YTsgZWxzZSBub0RhdGFcIj5cclxuICA8ZGl2IGNsYXNzPVwiaXh0LXRhYmxlXCI+XHJcbiAgICA8IS0tIEhlYWRlciAtLT5cclxuICAgIDxkaXYgY2xhc3M9XCJpeHQtdGFibGVfX2hlYWRlclwiPlxyXG4gICAgICA8ZGl2IGNsYXNzPVwiaXh0LXRhYmxlX19jZWxsXCI+XHJcbiAgICAgICAgPGJpbmFyeS1lZGl0b3JcclxuICAgICAgICAgIFtjb25maWddPVwieyByb3dJbmRleDogLTEgfVwiXHJcbiAgICAgICAgICBbKG5nTW9kZWwpXT1cImFsbFNlbGVjdGVkXCJcclxuICAgICAgICAgIChzZWxlY3Rpb25DaGFuZ2UpPVwidG9nZ2xlQWxsUm93cygkZXZlbnQuc2VsZWN0ZWQpXCI+XHJcbiAgICAgICAgPC9iaW5hcnktZWRpdG9yPlxyXG4gICAgICA8L2Rpdj5cclxuICAgICAgPGRpdiBjbGFzcz1cIml4dC10YWJsZV9fY2VsbFwiICpuZ0Zvcj1cImxldCBjb2wgb2YgY29sdW1uc1wiIFtjbGFzcy5peHQtdGFibGVfX2NlbGwtLWZpcnN0XT1cImNvbCA9PT0gY29sdW1uc1swXVwiPlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJpeHQtdGFibGVfX2NlbGwtY29udGVudFwiPlxyXG4gICAgICAgICAge3tjb2x1bW5Db25maWdzPy5bY29sXT8ubGFiZWwgfHwgY29sfX1cclxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJpeHQtdGFibGVfX2NlbGwtYWN0aW9uc1wiPlxyXG4gICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiaXh0LXRhYmxlX19zb3J0LXRvZ2dsZVwiIChjbGljayk9XCJ0b2dnbGVTb3J0KGNvbClcIj5cclxuICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cIm1hdGVyaWFsLWljb25zXCI+e3tnZXRTb3J0SWNvbihjb2wpfX08L3NwYW4+XHJcbiAgICAgICAgICAgIDwvYnV0dG9uPlxyXG4gICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiaXh0LXRhYmxlX19maWx0ZXItdG9nZ2xlXCIgKGNsaWNrKT1cInRvZ2dsZUZpbHRlcnMoY29sKVwiPlxyXG4gICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwibWF0ZXJpYWwtaWNvbnNcIj5maWx0ZXJfYWx0PC9zcGFuPlxyXG4gICAgICAgICAgICA8L2J1dHRvbj5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L2Rpdj5cclxuICAgICAgPGRpdiBjbGFzcz1cIml4dC10YWJsZV9fY2VsbFwiPkFjdGlvbnM8L2Rpdj5cclxuICAgIDwvZGl2PlxyXG5cclxuICAgIDwhLS0gRmlsdGVyIFJvdyAtLT5cclxuICAgIDxkaXYgY2xhc3M9XCJpeHQtdGFibGVfX2hlYWRlclwiICpuZ0lmPVwic2hvd0ZpbHRlcnNcIj5cclxuICAgICAgPGRpdiBjbGFzcz1cIml4dC10YWJsZV9fY2VsbFwiPjwvZGl2PlxyXG4gICAgICA8ZGl2IGNsYXNzPVwiaXh0LXRhYmxlX19jZWxsXCIgKm5nRm9yPVwibGV0IGNvbCBvZiBjb2x1bW5zXCIgW2NsYXNzLml4dC10YWJsZV9fY2VsbC0tZmlyc3RdPVwiY29sID09PSBjb2x1bW5zWzBdXCI+XHJcbiAgICAgICAgPG5nLWNvbnRhaW5lciAqbmdJZj1cImFjdGl2ZUZpbHRlckNvbHVtbiA9PT0gY29sICYmIGNvbHVtbkNvbmZpZ3M/Lltjb2xdXCI+XHJcbiAgICAgICAgICA8bmctY29udGFpbmVyIFtuZ1N3aXRjaF09XCJnZXRFZGl0b3JUeXBlKGNvbHVtbkNvbmZpZ3M/Lltjb2xdPy50eXBlKVwiPlxyXG4gICAgICAgICAgICA8IS0tIFRleHQgRmlsdGVyIC0tPlxyXG4gICAgICAgICAgICA8aW5wdXQgKm5nU3dpdGNoQ2FzZT1cIid0ZXh0J1wiIFtmb3JtQ29udHJvbF09XCJnZXRGaWx0ZXJDb250cm9sKGNvbClcIlxyXG4gICAgICAgICAgICAgIFtwbGFjZWhvbGRlcl09XCJjb2x1bW5Db25maWdzPy5bY29sXT8ucGxhY2Vob2xkZXIgfHwgJydcIiBjbGFzcz1cIml4dC10YWJsZV9fZmlsdGVyLWlucHV0XCI+XHJcblxyXG4gICAgICAgICAgICA8IS0tIE51bWJlciBGaWx0ZXIgLS0+XHJcbiAgICAgICAgICAgIDxkaXYgKm5nU3dpdGNoQ2FzZT1cIidudW1iZXInXCIgY2xhc3M9XCJpeHQtdGFibGVfX251bWJlci1maWx0ZXJcIj5cclxuICAgICAgICAgICAgICA8c2VsZWN0IFtmb3JtQ29udHJvbF09XCJnZXRPcGVyYXRvckNvbnRyb2woY29sKVwiIChjaGFuZ2UpPVwib25PcGVyYXRvckNoYW5nZShjb2wpXCI+XHJcbiAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiPVwiPj08L29wdGlvbj5cclxuICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCI+XCI+Jmd0Ozwvb3B0aW9uPlxyXG4gICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIjxcIj4mbHQ7PC9vcHRpb24+XHJcbiAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiPj1cIj4mZ3Q7PTwvb3B0aW9uPlxyXG4gICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIjw9XCI+Jmx0Oz08L29wdGlvbj5cclxuICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCIhPVwiPiE9PC9vcHRpb24+XHJcbiAgICAgICAgICAgICAgPC9zZWxlY3Q+XHJcbiAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJudW1iZXJcIiBbZm9ybUNvbnRyb2xdPVwiZ2V0RmlsdGVyQ29udHJvbChjb2wpXCJcclxuICAgICAgICAgICAgICAgIFtwbGFjZWhvbGRlcl09XCJjb2x1bW5Db25maWdzPy5bY29sXT8ucGxhY2Vob2xkZXIgfHwgJydcIiBjbGFzcz1cIml4dC10YWJsZV9fZmlsdGVyLWlucHV0XCI+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICAgICAgPCEtLSBFbnVtIEZpbHRlciAtLT5cclxuICAgICAgICAgICAgPGRpdiAqbmdTd2l0Y2hDYXNlPVwiJ2VudW0nXCI+XHJcbiAgICAgICAgICAgICAgPHNlbGVjdCBbZm9ybUNvbnRyb2xdPVwiZ2V0RmlsdGVyQ29udHJvbChjb2wpXCIgY2xhc3M9XCJpeHQtdGFibGVfX2ZpbHRlci1pbnB1dFwiPlxyXG4gICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIlwiPkFsbDwvb3B0aW9uPlxyXG4gICAgICAgICAgICAgICAgPG9wdGlvbiAqbmdGb3I9XCJsZXQgb3B0IG9mIGNvbHVtbkNvbmZpZ3M/Lltjb2xdPy5lbnVtVmFsdWVzXCIgW3ZhbHVlXT1cIm9wdC52YWx1ZVwiPlxyXG4gICAgICAgICAgICAgICAgICB7e29wdC5sYWJlbH19XHJcbiAgICAgICAgICAgICAgICA8L29wdGlvbj5cclxuICAgICAgICAgICAgICA8L3NlbGVjdD5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICA8L25nLWNvbnRhaW5lcj5cclxuICAgICAgICA8L25nLWNvbnRhaW5lcj5cclxuICAgICAgPC9kaXY+XHJcbiAgICAgIDxkaXYgY2xhc3M9XCJpeHQtdGFibGVfX2NlbGxcIj48L2Rpdj5cclxuICAgIDwvZGl2PlxyXG5cclxuICAgIDwhLS0gRGF0YSBSb3dzIC0tPlxyXG4gICAgPGRpdiBjbGFzcz1cIml4dC10YWJsZV9fcm93XCIgKm5nRm9yPVwibGV0IHJvdyBvZiBwYWdpbmF0ZWREYXRhOyBsZXQgaSA9IGluZGV4XCIgXHJcbiAgICAgICAgIFtjbGFzcy5peHQtdGFibGVfX3Jvdy0tc2VsZWN0ZWRdPVwiaXNSb3dTZWxlY3RlZChnZXRSb3dJbmRleChpKSlcIj5cclxuICAgICAgPGRpdiBjbGFzcz1cIml4dC10YWJsZV9fY2VsbFwiPlxyXG4gICAgICAgIDxiaW5hcnktZWRpdG9yXHJcbiAgICAgICAgICBbY29uZmlnXT1cInsgcm93SW5kZXg6IGdldFJvd0luZGV4KGkpLCByb3dEYXRhOiByb3cgfVwiXHJcbiAgICAgICAgICBbbmdNb2RlbF09XCJpc1Jvd1NlbGVjdGVkKGdldFJvd0luZGV4KGkpKVwiXHJcbiAgICAgICAgICAoc2VsZWN0aW9uQ2hhbmdlKT1cInNlbGVjdFJvdyhnZXRSb3dJbmRleChpKSwgJGV2ZW50LnNlbGVjdGVkKVwiPlxyXG4gICAgICAgIDwvYmluYXJ5LWVkaXRvcj5cclxuICAgICAgPC9kaXY+XHJcbiAgICAgIDxkaXYgY2xhc3M9XCJpeHQtdGFibGVfX2NlbGxcIiAqbmdGb3I9XCJsZXQgY29sIG9mIGNvbHVtbnNcIiBbY2xhc3MuaXh0LXRhYmxlX19jZWxsLS1maXJzdF09XCJjb2wgPT09IGNvbHVtbnNbMF1cIj5cclxuICAgICAgICA8bmctY29udGFpbmVyICpuZ0lmPVwiaXNOZXdSb3coaSkgfHwgaXNFZGl0aW5nKGdldFJvd0luZGV4KGkpKTsgZWxzZSBkaXNwbGF5VmFsdWVcIj5cclxuICAgICAgICAgIDxuZy1jb250YWluZXIgW25nU3dpdGNoXT1cImdldEVkaXRvclR5cGUoY29sdW1uQ29uZmlncz8uW2NvbF0/LnR5cGUpXCI+XHJcbiAgICAgICAgICAgIDwhLS0gVGV4dCBJbnB1dCAtLT5cclxuICAgICAgICAgICAgPGlucHV0ICpuZ1N3aXRjaENhc2U9XCIndGV4dCdcIiB0eXBlPVwidGV4dFwiIFtuZ01vZGVsXT1cInJvd1tjb2xdXCJcclxuICAgICAgICAgICAgICAobmdNb2RlbENoYW5nZSk9XCJvblZhbHVlQ2hhbmdlKGdldFJvd0luZGV4KGkpLCBjb2wsICRldmVudClcIj5cclxuXHJcbiAgICAgICAgICAgIDwhLS0gTnVtYmVyIElucHV0IC0tPlxyXG4gICAgICAgICAgICA8aW5wdXQgKm5nU3dpdGNoQ2FzZT1cIidudW1iZXInXCIgdHlwZT1cIm51bWJlclwiIFtuZ01vZGVsXT1cInJvd1tjb2xdXCJcclxuICAgICAgICAgICAgICAobmdNb2RlbENoYW5nZSk9XCJvblZhbHVlQ2hhbmdlKGdldFJvd0luZGV4KGkpLCBjb2wsICRldmVudClcIj5cclxuXHJcbiAgICAgICAgICAgIDwhLS0gRW51bSBTZWxlY3QgLS0+XHJcbiAgICAgICAgICAgIDxzZWxlY3QgKm5nU3dpdGNoQ2FzZT1cIidlbnVtJ1wiIFtuZ01vZGVsXT1cInJvd1tjb2xdXCJcclxuICAgICAgICAgICAgICAobmdNb2RlbENoYW5nZSk9XCJvblZhbHVlQ2hhbmdlKGdldFJvd0luZGV4KGkpLCBjb2wsICRldmVudClcIj5cclxuICAgICAgICAgICAgICA8b3B0aW9uICpuZ0Zvcj1cImxldCBvcHQgb2YgY29sdW1uQ29uZmlncz8uW2NvbF0/LmVudW1WYWx1ZXNcIiBbbmdWYWx1ZV09XCJvcHQudmFsdWVcIj5cclxuICAgICAgICAgICAgICAgIHt7b3B0LmxhYmVsfX1cclxuICAgICAgICAgICAgICA8L29wdGlvbj5cclxuICAgICAgICAgICAgPC9zZWxlY3Q+XHJcblxyXG4gICAgICAgICAgICA8IS0tIEN1c3RvbSBFZGl0b3IgLS0+XHJcbiAgICAgICAgICAgIDxuZy1jb250YWluZXIgKm5nU3dpdGNoQ2FzZT1cIidjdXN0b20nXCI+XHJcbiAgICAgICAgICAgICAgPG5nLWNvbnRhaW5lciAqbmdUZW1wbGF0ZU91dGxldD1cImN1c3RvbUVkaXRvclRwbDsgY29udGV4dDoge1xyXG4gICAgICAgICAgICAgICAgICRpbXBsaWNpdDogZ2V0RWRpdG9yQ29tcG9uZW50KGNvbHVtbkNvbmZpZ3M/Lltjb2xdPy50eXBlKSxcclxuICAgICAgICAgICAgICAgICByb3c6IHJvdyxcclxuICAgICAgICAgICAgICAgICBjb2w6IGNvbCxcclxuICAgICAgICAgICAgICAgICBpbmRleDogaSxcclxuICAgICAgICAgICAgICAgICBjb250cm9sOiBnZXRFZGl0Q29udHJvbChnZXRSb3dJbmRleChpKSwgY29sKVxyXG4gICAgICAgICAgICAgICB9XCI+XHJcbiAgICAgICAgICAgICAgPC9uZy1jb250YWluZXI+XHJcbiAgICAgICAgICAgIDwvbmctY29udGFpbmVyPlxyXG4gICAgICAgICAgPC9uZy1jb250YWluZXI+XHJcbiAgICAgICAgPC9uZy1jb250YWluZXI+XHJcbiAgICAgICAgICBcclxuICAgICAgICA8bmctdGVtcGxhdGUgI2Rpc3BsYXlWYWx1ZT5cclxuICAgICAgICAgIDxuZy1jb250YWluZXIgW25nU3dpdGNoXT1cImNvbHVtbkNvbmZpZ3M/Lltjb2xdPy50eXBlXCI+XHJcbiAgICAgICAgICAgIDxuZy1jb250YWluZXIgKm5nU3dpdGNoQ2FzZT1cIkNvb3JkaW5hdGVFZGl0b3JDb21wb25lbnRcIj5cclxuICAgICAgICAgICAgICB7e2Zvcm1hdENvb3JkaW5hdGUocm93W2NvbF0pfX1cclxuICAgICAgICAgICAgPC9uZy1jb250YWluZXI+XHJcbiAgICAgICAgICAgIDxuZy1jb250YWluZXIgKm5nU3dpdGNoRGVmYXVsdD5cclxuICAgICAgICAgICAgICB7e3Jvd1tjb2xdfX1cclxuICAgICAgICAgICAgPC9uZy1jb250YWluZXI+XHJcbiAgICAgICAgICA8L25nLWNvbnRhaW5lcj5cclxuICAgICAgICA8L25nLXRlbXBsYXRlPlxyXG4gICAgICA8L2Rpdj5cclxuICAgICAgIFxyXG4gICAgICA8ZGl2IGNsYXNzPVwiaXh0LXRhYmxlX19jZWxsXCI+XHJcbiAgICAgICAgPG5nLWNvbnRhaW5lciAqbmdJZj1cIiFpc05ld1JvdyhpKSAmJiAhaXNFZGl0aW5nKGdldFJvd0luZGV4KGkpKVwiPlxyXG4gICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cIml4dC10YWJsZV9fYWN0aW9uLWJ1dHRvblwiIChjbGljayk9XCJzdGFydEVkaXRpbmcoZ2V0Um93SW5kZXgoaSkpXCI+XHJcbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwibWF0ZXJpYWwtaWNvbnNcIj5lZGl0PC9zcGFuPlxyXG4gICAgICAgICAgPC9idXR0b24+XHJcbiAgICAgICAgPC9uZy1jb250YWluZXI+XHJcbiAgICAgICAgPG5nLWNvbnRhaW5lciAqbmdJZj1cImlzTmV3Um93KGkpIHx8IGlzRWRpdGluZyhnZXRSb3dJbmRleChpKSlcIj5cclxuICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJpeHQtdGFibGVfX2FjdGlvbi1idXR0b25cIiAoY2xpY2spPVwiY2FuY2VsRWRpdGluZyhnZXRSb3dJbmRleChpKSlcIj5cclxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJtYXRlcmlhbC1pY29uc1wiPmNsb3NlPC9zcGFuPlxyXG4gICAgICAgICAgPC9idXR0b24+XHJcbiAgICAgICAgPC9uZy1jb250YWluZXI+XHJcbiAgICAgIDwvZGl2PlxyXG4gICAgPC9kaXY+XHJcblxyXG4gICAgPCEtLSBQYWdpbmF0aW9uIC0tPlxyXG4gICAgPGRpdiBjbGFzcz1cIml4dC10YWJsZV9fZm9vdGVyXCIgKm5nSWY9XCJzaG93UGFnaW5hdGlvblwiPlxyXG4gICAgICA8ZGl2IGNsYXNzPVwiaXh0LXRhYmxlX19wYWdpbmF0aW9uXCI+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cIml4dC10YWJsZV9fcGFnZS1zaXplXCI+XHJcbiAgICAgICAgICA8c2VsZWN0IFtmb3JtQ29udHJvbF09XCJwYWdlU2l6ZUNvbnRyb2xcIj5cclxuICAgICAgICAgICAgPG9wdGlvbiAqbmdGb3I9XCJsZXQgc2l6ZSBvZiBwYWdlU2l6ZXNcIiBbdmFsdWVdPVwic2l6ZS52YWx1ZVwiPlxyXG4gICAgICAgICAgICAgIHt7c2l6ZS5sYWJlbH19XHJcbiAgICAgICAgICAgIDwvb3B0aW9uPlxyXG4gICAgICAgICAgPC9zZWxlY3Q+XHJcbiAgICAgICAgICByb3dzIHBlciBwYWdlXHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cIml4dC10YWJsZV9fY29udHJvbHNcIj5cclxuICAgICAgICAgIDxidXR0b24gKGNsaWNrKT1cIm9uUGFnZUNoYW5nZSgxKVwiIFtkaXNhYmxlZF09XCJjdXJyZW50UGFnZSA9PT0gMVwiPlxyXG4gICAgICAgICAgICA8c3BhbiBjbGFzcz1cIm1hdGVyaWFsLWljb25zXCI+Zmlyc3RfcGFnZTwvc3Bhbj5cclxuICAgICAgICAgIDwvYnV0dG9uPlxyXG4gICAgICAgICAgPGJ1dHRvbiAoY2xpY2spPVwib25QYWdlQ2hhbmdlKGN1cnJlbnRQYWdlIC0gMSlcIiBbZGlzYWJsZWRdPVwiY3VycmVudFBhZ2UgPT09IDFcIj5cclxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJtYXRlcmlhbC1pY29uc1wiPmNoZXZyb25fbGVmdDwvc3Bhbj5cclxuICAgICAgICAgIDwvYnV0dG9uPlxyXG4gICAgICAgICAgPGJ1dHRvbiAqbmdGb3I9XCJsZXQgcGFnZSBvZiB2aXNpYmxlUGFnZXNcIiBbY2xhc3MuYWN0aXZlXT1cInBhZ2UgPT09IGN1cnJlbnRQYWdlXCIgXHJcbiAgICAgICAgICAgICAgICAgIFtjbGFzcy5lbGxpcHNpc109XCJwYWdlID09PSAtMVwiIFtkaXNhYmxlZF09XCJwYWdlID09PSAtMVwiIFxyXG4gICAgICAgICAgICAgICAgICAoY2xpY2spPVwib25QYWdlQ2hhbmdlKHBhZ2UpXCI+XHJcbiAgICAgICAgICAgIHt7cGFnZSA9PT0gLTEgPyAnLi4uJyA6IHBhZ2V9fVxyXG4gICAgICAgICAgPC9idXR0b24+XHJcbiAgICAgICAgICA8YnV0dG9uIChjbGljayk9XCJvblBhZ2VDaGFuZ2UoY3VycmVudFBhZ2UgKyAxKVwiIFtkaXNhYmxlZF09XCJjdXJyZW50UGFnZSA9PT0gdG90YWxQYWdlc1wiPlxyXG4gICAgICAgICAgICA8c3BhbiBjbGFzcz1cIm1hdGVyaWFsLWljb25zXCI+Y2hldnJvbl9yaWdodDwvc3Bhbj5cclxuICAgICAgICAgIDwvYnV0dG9uPlxyXG4gICAgICAgICAgPGJ1dHRvbiAoY2xpY2spPVwib25QYWdlQ2hhbmdlKHRvdGFsUGFnZXMpXCIgW2Rpc2FibGVkXT1cImN1cnJlbnRQYWdlID09PSB0b3RhbFBhZ2VzXCI+XHJcbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwibWF0ZXJpYWwtaWNvbnNcIj5sYXN0X3BhZ2U8L3NwYW4+XHJcbiAgICAgICAgICA8L2J1dHRvbj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgPC9kaXY+XHJcbiAgICA8L2Rpdj5cclxuICA8L2Rpdj5cclxuPC9uZy1jb250YWluZXI+XHJcblxyXG48IS0tIEN1c3RvbSBFZGl0b3IgVGVtcGxhdGUgLS0+XHJcbjxuZy10ZW1wbGF0ZSAjY3VzdG9tRWRpdG9yVHBsIGxldC1lZGl0b3IgbGV0LXJvdz1cInJvd1wiIGxldC1jb2w9XCJjb2xcIiBsZXQtaW5kZXg9XCJpbmRleFwiIGxldC1jb250cm9sPVwiY29udHJvbFwiPlxyXG4gIDxjb29yZGluYXRlLWVkaXRvclxyXG4gICAgKm5nSWY9XCJlZGl0b3I/LmNvbXBvbmVudCA9PT0gQ29vcmRpbmF0ZUVkaXRvckNvbXBvbmVudFwiXHJcbiAgICBbZm9ybUNvbnRyb2xdPVwiY29udHJvbFwiXHJcbiAgICBbY29uZmlnXT1cIntcclxuICAgICAgdHlwZTogY29sID09PSAnbGF0JyA/ICdsYXQnIDogJ2xvbidcclxuICAgIH1cIj5cclxuICA8L2Nvb3JkaW5hdGUtZWRpdG9yPlxyXG5cclxuICA8YWlycG9ydC1jb2RlLWVkaXRvciBcclxuICAgKm5nSWY9XCJlZGl0b3I/LmNvbXBvbmVudCA9PT0gQWlycG9ydENvZGVFZGl0b3JDb21wb25lbnRcIlxyXG4gICAgW2Zvcm1Db250cm9sXT1cImNvbnRyb2xcIlxyXG4gICAgW2NvbmZpZ109XCJlZGl0b3IuZ2V0RWRpdENvbmZpZygpXCJcclxuICAgIFtleGlzdGluZ0NvZGVzXT1cImdldENvZGVzKGRhdGEpXCI+XHJcbiAgPC9haXJwb3J0LWNvZGUtZWRpdG9yPlxyXG48L25nLXRlbXBsYXRlPlxyXG5cclxuPCEtLSBObyBEYXRhIFRlbXBsYXRlIC0tPlxyXG48bmctdGVtcGxhdGUgI25vRGF0YT5cclxuICA8ZGl2IGNsYXNzPVwiaXh0LXRhYmxlX19lbXB0eVwiPlxyXG4gICAgTm8gZGF0YSBhdmFpbGFibGVcclxuICA8L2Rpdj5cclxuPC9uZy10ZW1wbGF0ZT4iXX0=
|       |   |   |   --- ixt-table.index.mjs: // src/components/ixt-matrix/index.ts // Fix these import paths to match your folder structure export * from './ixt-table.component'; export * from './ixt-table.interfaces'; export * from './ixt-table.module'; export * from './editors/airport-code/airport-code-editor.component'; export * from './editors/binary-editor/binary-editor.component'; export * from './editors/coordinate/coordinate-editor.component'; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXh0LXRhYmxlLmluZGV4LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvaXh0LXRhYmxlL2l4dC10YWJsZS5pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxxQ0FBcUM7QUFDckMsd0RBQXdEO0FBQ3hELGNBQWMsdUJBQXVCLENBQUM7QUFDdEMsY0FBYyx3QkFBd0IsQ0FBQztBQUN2QyxjQUFjLG9CQUFvQixDQUFDO0FBS25DLGNBQWMsc0RBQXNELENBQUM7QUFDckUsY0FBYyxpREFBaUQsQ0FBQztBQUNoRSxjQUFjLGtEQUFrRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2NvbXBvbmVudHMvaXh0LW1hdHJpeC9pbmRleC50c1xyXG4vLyBGaXggdGhlc2UgaW1wb3J0IHBhdGhzIHRvIG1hdGNoIHlvdXIgZm9sZGVyIHN0cnVjdHVyZVxyXG5leHBvcnQgKiBmcm9tICcuL2l4dC10YWJsZS5jb21wb25lbnQnO1xyXG5leHBvcnQgKiBmcm9tICcuL2l4dC10YWJsZS5pbnRlcmZhY2VzJztcclxuZXhwb3J0ICogZnJvbSAnLi9peHQtdGFibGUubW9kdWxlJztcclxuZXhwb3J0IGludGVyZmFjZSBNYXRyaXhOb2RlIHtcclxuICAgIFtrZXk6IHN0cmluZ106IGFueTtcclxuICAgIGNoaWxkcmVuPzogTWF0cml4Tm9kZVtdO1xyXG59XHJcbmV4cG9ydCAqIGZyb20gJy4vZWRpdG9ycy9haXJwb3J0LWNvZGUvYWlycG9ydC1jb2RlLWVkaXRvci5jb21wb25lbnQnO1xyXG5leHBvcnQgKiBmcm9tICcuL2VkaXRvcnMvYmluYXJ5LWVkaXRvci9iaW5hcnktZWRpdG9yLmNvbXBvbmVudCc7XHJcbmV4cG9ydCAqIGZyb20gJy4vZWRpdG9ycy9jb29yZGluYXRlL2Nvb3JkaW5hdGUtZWRpdG9yLmNvbXBvbmVudCc7XHJcbiJdfQ==
|       |   |   |   --- ixt-table.interfaces.mjs: export {}; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXh0LXRhYmxlLmludGVyZmFjZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9peHQtdGFibGUvaXh0LXRhYmxlLmludGVyZmFjZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGU6IHNyYy9jb21wb25lbnRzL2l4dC10YWJsZS9peHQtdGFibGUuaW50ZXJmYWNlcy50c1xyXG5pbXBvcnQgeyBUeXBlIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcclxuaW1wb3J0IHsgTWF0cml4RWRpdG9yIH0gZnJvbSBcIi4vZWRpdG9ycy9lZGl0b3IuaW50ZXJmYWNlXCI7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIE1hdHJpeE5vZGUge1xyXG4gIGNvZGU/OiBzdHJpbmc7ICAvLyBBZGQgdGhpcyBwcm9wZXJ0eVxyXG4gIFtrZXk6IHN0cmluZ106IGFueTtcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBQYWdlU2l6ZSB7XHJcbiAgdmFsdWU6IG51bWJlciB8ICdhbGwnO1xyXG4gIGxhYmVsOiBzdHJpbmc7XHJcbn1cclxuXHJcbmV4cG9ydCB0eXBlIEZpbHRlck9wZXJhdG9yID0gJ2VxdWFscycgfCAnc3RhcnRzV2l0aCcgfCAnY29udGFpbnMnIHwgJ2JldHdlZW4nIHwgJz4nIHwgJzwnIHwgJz49JyB8ICc8PScgfCAnIT0nO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBGaWx0ZXJTdGF0ZSB7XHJcbiAgZmllbGQ6IHN0cmluZztcclxuICBvcGVyYXRvcjogRmlsdGVyT3BlcmF0b3I7XHJcbiAgdmFsdWU6IGFueTtcclxuICBzZWNvbmRhcnlWYWx1ZT86IGFueTtcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBDb2x1bW5Db25maWcge1xyXG4gIHR5cGU6ICd0ZXh0JyB8ICdudW1iZXInIHwgJ2VudW0nIHwgVHlwZTxNYXRyaXhFZGl0b3I+IHwgTWF0cml4RWRpdG9yOyAgXHJcbiAgZmllbGQ6IHN0cmluZztcclxuICBsYWJlbD86IHN0cmluZztcclxuICBvcGVyYXRvcj86IEZpbHRlck9wZXJhdG9yO1xyXG4gIGVudW1WYWx1ZXM/OiB7IHZhbHVlOiBhbnksIGxhYmVsOiBzdHJpbmcgfVtdO1xyXG4gIHBsYWNlaG9sZGVyPzogc3RyaW5nO1xyXG4gIGRlYm91bmNlVGltZT86IG51bWJlcjtcclxuICBlZGl0YWJsZT86IGJvb2xlYW47XHJcbiAgY29uZmlnPzogYW55O1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFJvd0NoYW5nZXMge1xyXG4gIFtrZXk6IHN0cmluZ106IGFueTtcclxufVxyXG5cclxuZXhwb3J0IHR5cGUgQ29sdW1uQ29uZmlncyA9IFJlY29yZDxzdHJpbmcsIENvbHVtbkNvbmZpZz47Il19
|       |   |   |   --- ixt-table.module.mjs: import { NgModule } from '@angular/core'; import { CommonModule } from '@angular/common'; import { FormsModule, ReactiveFormsModule } from '@angular/forms'; import { MatIconModule } from '@angular/material/icon'; import { MatAutocompleteModule } from '@angular/material/autocomplete'; import { IxtTableComponent } from './ixt-table.component'; import { AirportCodeEditorComponent } from './editors/airport-code/airport-code-editor.component'; import { CoordinateEditorComponent } from './editors/coordinate/coordinate-editor.component'; import { BinaryEditorComponent } from './editors/binary-editor/binary-editor.component'; import * as i0 from "@angular/core"; export class IxtTableModule { static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtTableModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); } static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "16.2.12", ngImport: i0, type: IxtTableModule, declarations: [IxtTableComponent, AirportCodeEditorComponent, CoordinateEditorComponent, BinaryEditorComponent], imports: [CommonModule, FormsModule, ReactiveFormsModule, MatIconModule, MatAutocompleteModule], exports: [IxtTableComponent] }); } static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtTableModule, imports: [CommonModule, FormsModule, ReactiveFormsModule, MatIconModule, MatAutocompleteModule] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtTableModule, decorators: [{ type: NgModule, args: [{ declarations: [ IxtTableComponent, AirportCodeEditorComponent, CoordinateEditorComponent, BinaryEditorComponent ], imports: [ CommonModule, FormsModule, ReactiveFormsModule, MatIconModule, MatAutocompleteModule ], exports: [IxtTableComponent] }] }] }); //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXh0LXRhYmxlLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL2l4dC10YWJsZS9peHQtdGFibGUubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxXQUFXLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUNsRSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDdkQsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDdkUsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDMUQsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0sc0RBQXNELENBQUM7QUFDbEcsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sa0RBQWtELENBQUM7QUFDN0YsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0saURBQWlELENBQUM7O0FBbUJ4RixNQUFNLE9BQU8sY0FBYzsrR0FBZCxjQUFjO2dIQUFkLGNBQWMsaUJBZHZCLGlCQUFpQjtZQUNqQiwwQkFBMEI7WUFDMUIseUJBQXlCO1lBQ3pCLHFCQUFxQixhQUdyQixZQUFZO1lBQ1osV0FBVztZQUNYLG1CQUFtQjtZQUNuQixhQUFhO1lBQ2IscUJBQXFCLGFBRWIsaUJBQWlCO2dIQUVoQixjQUFjLFlBUnZCLFlBQVk7WUFDWixXQUFXO1lBQ1gsbUJBQW1CO1lBQ25CLGFBQWE7WUFDYixxQkFBcUI7OzRGQUlaLGNBQWM7a0JBaEIxQixRQUFRO21CQUFDO29CQUNSLFlBQVksRUFBRTt3QkFDWixpQkFBaUI7d0JBQ2pCLDBCQUEwQjt3QkFDMUIseUJBQXlCO3dCQUN6QixxQkFBcUI7cUJBQ3RCO29CQUNELE9BQU8sRUFBRTt3QkFDUCxZQUFZO3dCQUNaLFdBQVc7d0JBQ1gsbUJBQW1CO3dCQUNuQixhQUFhO3dCQUNiLHFCQUFxQjtxQkFDdEI7b0JBQ0QsT0FBTyxFQUFFLENBQUMsaUJBQWlCLENBQUM7aUJBQzdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcclxuaW1wb3J0IHsgRm9ybXNNb2R1bGUsIFJlYWN0aXZlRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XHJcbmltcG9ydCB7IE1hdEljb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9pY29uJztcclxuaW1wb3J0IHsgTWF0QXV0b2NvbXBsZXRlTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvYXV0b2NvbXBsZXRlJztcclxuaW1wb3J0IHsgSXh0VGFibGVDb21wb25lbnQgfSBmcm9tICcuL2l4dC10YWJsZS5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBBaXJwb3J0Q29kZUVkaXRvckNvbXBvbmVudCB9IGZyb20gJy4vZWRpdG9ycy9haXJwb3J0LWNvZGUvYWlycG9ydC1jb2RlLWVkaXRvci5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBDb29yZGluYXRlRWRpdG9yQ29tcG9uZW50IH0gZnJvbSAnLi9lZGl0b3JzL2Nvb3JkaW5hdGUvY29vcmRpbmF0ZS1lZGl0b3IuY29tcG9uZW50JztcclxuaW1wb3J0IHsgQmluYXJ5RWRpdG9yQ29tcG9uZW50IH0gZnJvbSAnLi9lZGl0b3JzL2JpbmFyeS1lZGl0b3IvYmluYXJ5LWVkaXRvci5jb21wb25lbnQnO1xyXG5cclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgZGVjbGFyYXRpb25zOiBbXHJcbiAgICBJeHRUYWJsZUNvbXBvbmVudCxcclxuICAgIEFpcnBvcnRDb2RlRWRpdG9yQ29tcG9uZW50LFxyXG4gICAgQ29vcmRpbmF0ZUVkaXRvckNvbXBvbmVudCxcclxuICAgIEJpbmFyeUVkaXRvckNvbXBvbmVudFxyXG4gIF0sXHJcbiAgaW1wb3J0czogW1xyXG4gICAgQ29tbW9uTW9kdWxlLFxyXG4gICAgRm9ybXNNb2R1bGUsICAgICAgICAgICAvLyBNYWtlIHN1cmUgdGhpcyBpcyBoZXJlXHJcbiAgICBSZWFjdGl2ZUZvcm1zTW9kdWxlLFxyXG4gICAgTWF0SWNvbk1vZHVsZSxcclxuICAgIE1hdEF1dG9jb21wbGV0ZU1vZHVsZVxyXG4gIF0sXHJcbiAgZXhwb3J0czogW0l4dFRhYmxlQ29tcG9uZW50XVxyXG59KVxyXG5leHBvcnQgY2xhc3MgSXh0VGFibGVNb2R1bGUgeyB9Il19
|       |   |   +-- ixt-tabset
|       |   |   |   --- ixt-tab.component.mjs: import { Component, Input, TemplateRef, ViewChild } from '@angular/core'; import * as i0 from "@angular/core"; export class IxtTabComponent { constructor() { this.title = ''; } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtTabComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); } static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: IxtTabComponent, selector: "ixt-tab", inputs: { title: "title" }, viewQueries: [{ propertyName: "implicitContent", first: true, predicate: TemplateRef, descendants: true, static: true }], ngImport: i0, template: "<ng-template>\r\n <ng-content></ng-content>\r\n</ng-template>\r\n", styles: [":host{display:flex;flex:1;min-height:0;min-width:0}\n"] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtTabComponent, decorators: [{ type: Component, args: [{ selector: 'ixt-tab', template: "<ng-template>\r\n <ng-content></ng-content>\r\n</ng-template>\r\n", styles: [":host{display:flex;flex:1;min-height:0;min-width:0}\n"] }] }], propDecorators: { title: [{ type: Input }], implicitContent: [{ type: ViewChild, args: [TemplateRef, { static: true }] }] } }); //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXh0LXRhYi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9peHQtdGFic2V0L2l4dC10YWIuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvaXh0LXRhYnNldC9peHQtdGFiLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7O0FBT3pFLE1BQU0sT0FBTyxlQUFlO0lBTDVCO1FBTVcsVUFBSyxHQUFXLEVBQUUsQ0FBQztLQUU3QjsrR0FIWSxlQUFlO21HQUFmLGVBQWUsNEhBRWYsV0FBVyw4RENUeEIsb0VBR0E7OzRGRElhLGVBQWU7a0JBTDNCLFNBQVM7K0JBQ0UsU0FBUzs4QkFLVixLQUFLO3NCQUFiLEtBQUs7Z0JBQ29DLGVBQWU7c0JBQXhELFNBQVM7dUJBQUMsV0FBVyxFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIFRlbXBsYXRlUmVmLCBWaWV3Q2hpbGQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnaXh0LXRhYicsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL2l4dC10YWIuY29tcG9uZW50Lmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL2l4dC10YWIuY29tcG9uZW50LnNjc3MnXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgSXh0VGFiQ29tcG9uZW50IHtcclxuICBASW5wdXQoKSB0aXRsZTogc3RyaW5nID0gJyc7XHJcbiAgQFZpZXdDaGlsZChUZW1wbGF0ZVJlZiwgeyBzdGF0aWM6IHRydWUgfSkgaW1wbGljaXRDb250ZW50ITogVGVtcGxhdGVSZWY8YW55PjtcclxufVxyXG4iLCI8bmctdGVtcGxhdGU+XHJcbiAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxyXG48L25nLXRlbXBsYXRlPlxyXG4iXX0=
|       |   |   |   --- ixt-tabset.component.mjs: import { Component, ContentChildren } from '@angular/core'; import { IxtTabComponent } from './ixt-tab.component'; import * as i0 from "@angular/core"; import * as i1 from "@angular/common"; export class IxtTabsetComponent { constructor() { this.selectedIndex = 0; this.notificationText = 'Content Band Icons or Info'; } ngAfterContentInit() { // Set initial active tab if there are tabs if (this.tabs?.first) { this.selectTab(this.tabs.first); } // Listen for dynamic tab changes this.tabs?.changes.subscribe(() => { if (this.tabs.length && this.selectedIndex >= this.tabs.length) { this.selectTab(this.tabs.last); } }); } selectTab(tab) { this.selectedIndex = this.tabs.toArray().indexOf(tab); } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtTabsetComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); } static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: IxtTabsetComponent, selector: "ixt-tabset", queries: [{ propertyName: "tabs", predicate: IxtTabComponent }], ngImport: i0, template: "<div class=\"button-row\">\r\n <button *ngFor=\"let tab of tabs; let idx = index\"\r\n [class.selected]=\"selectedIndex === idx\"\r\n (click)=\"selectTab(tab)\">\r\n {{ tab.title }}\r\n </button>\r\n</div>\r\n<div class=\"content\">\r\n <div class=\"top-band\">\r\n <span>\uD83D\uDD14</span>\r\n <span>{{ notificationText }}</span>\r\n </div>\r\n <div *ngFor=\"let tab of tabs; let idx = index\"\r\n [id]=\"'tab' + (idx + 1)\"\r\n class=\"main-content\"\r\n [class.active]=\"selectedIndex === idx\">\r\n <ng-container *ngTemplateOutlet=\"tab.implicitContent\"></ng-container>\r\n </div>\r\n</div>\r\n", styles: [":host{display:flex;flex-direction:column;flex:1;min-height:0;min-width:0;height:100%}.button-row{display:flex;gap:10px;justify-content:flex-start;border-bottom:2px solid #007BFF;margin-bottom:-2px}.button-row button{background-color:#f0f0f0;border:1px solid #ccc;border-bottom:none;padding:10px 20px;cursor:pointer;font-size:16px;transition:background-color .3s,color .3s}.button-row button:hover{background-color:#e0e0e0}.button-row button.selected{background-color:#007bff;color:#fff;border:1px solid #007BFF;border-bottom:2px solid #007BFF;font-weight:700}.content{border:2px solid #007BFF;margin-top:-2px;display:flex;flex-direction:column;flex:1;min-height:0}.content .top-band{background-color:#007bff;color:#fff;padding:10px;display:flex;align-items:center;gap:10px}.content .main-content{display:none;flex:1;min-height:0}.content .main-content.active{display:flex;flex-direction:column;padding:20px;box-sizing:border-box}\n"], dependencies: [{ kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtTabsetComponent, decorators: [{ type: Component, args: [{ selector: 'ixt-tabset', template: "<div class=\"button-row\">\r\n <button *ngFor=\"let tab of tabs; let idx = index\"\r\n [class.selected]=\"selectedIndex === idx\"\r\n (click)=\"selectTab(tab)\">\r\n {{ tab.title }}\r\n </button>\r\n</div>\r\n<div class=\"content\">\r\n <div class=\"top-band\">\r\n <span>\uD83D\uDD14</span>\r\n <span>{{ notificationText }}</span>\r\n </div>\r\n <div *ngFor=\"let tab of tabs; let idx = index\"\r\n [id]=\"'tab' + (idx + 1)\"\r\n class=\"main-content\"\r\n [class.active]=\"selectedIndex === idx\">\r\n <ng-container *ngTemplateOutlet=\"tab.implicitContent\"></ng-container>\r\n </div>\r\n</div>\r\n", styles: [":host{display:flex;flex-direction:column;flex:1;min-height:0;min-width:0;height:100%}.button-row{display:flex;gap:10px;justify-content:flex-start;border-bottom:2px solid #007BFF;margin-bottom:-2px}.button-row button{background-color:#f0f0f0;border:1px solid #ccc;border-bottom:none;padding:10px 20px;cursor:pointer;font-size:16px;transition:background-color .3s,color .3s}.button-row button:hover{background-color:#e0e0e0}.button-row button.selected{background-color:#007bff;color:#fff;border:1px solid #007BFF;border-bottom:2px solid #007BFF;font-weight:700}.content{border:2px solid #007BFF;margin-top:-2px;display:flex;flex-direction:column;flex:1;min-height:0}.content .top-band{background-color:#007bff;color:#fff;padding:10px;display:flex;align-items:center;gap:10px}.content .main-content{display:none;flex:1;min-height:0}.content .main-content.active{display:flex;flex-direction:column;padding:20px;box-sizing:border-box}\n"] }] }], propDecorators: { tabs: [{ type: ContentChildren, args: [IxtTabComponent] }] } }); //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXh0LXRhYnNldC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9peHQtdGFic2V0L2l4dC10YWJzZXQuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvaXh0LXRhYnNldC9peHQtdGFic2V0LmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsZUFBZSxFQUErQixNQUFNLGVBQWUsQ0FBQztBQUN4RixPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0scUJBQXFCLENBQUM7OztBQU90RCxNQUFNLE9BQU8sa0JBQWtCO0lBTC9CO1FBUUUsa0JBQWEsR0FBVyxDQUFDLENBQUM7UUFDMUIscUJBQWdCLEdBQVcsNEJBQTRCLENBQUM7S0FtQnpEO0lBakJDLGtCQUFrQjtRQUNoQiwyQ0FBMkM7UUFDM0MsSUFBSSxJQUFJLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRTtZQUNwQixJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7U0FDakM7UUFFRCxpQ0FBaUM7UUFDakMsSUFBSSxDQUFDLElBQUksRUFBRSxPQUFPLENBQUMsU0FBUyxDQUFDLEdBQUcsRUFBRTtZQUNoQyxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxJQUFJLElBQUksQ0FBQyxhQUFhLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUU7Z0JBQzlELElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQzthQUNoQztRQUNILENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVELFNBQVMsQ0FBQyxHQUFvQjtRQUM1QixJQUFJLENBQUMsYUFBYSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ3hELENBQUM7K0dBdEJVLGtCQUFrQjttR0FBbEIsa0JBQWtCLHVFQUNaLGVBQWUsNkJDVGxDLGdwQkFtQkE7OzRGRFhhLGtCQUFrQjtrQkFMOUIsU0FBUzsrQkFDRSxZQUFZOzhCQUtZLElBQUk7c0JBQXJDLGVBQWU7dUJBQUMsZUFBZSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgQ29udGVudENoaWxkcmVuLCBRdWVyeUxpc3QsIEFmdGVyQ29udGVudEluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgSXh0VGFiQ29tcG9uZW50IH0gZnJvbSAnLi9peHQtdGFiLmNvbXBvbmVudCc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2l4dC10YWJzZXQnLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9peHQtdGFic2V0LmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9peHQtdGFic2V0LmNvbXBvbmVudC5zY3NzJ11cclxufSlcclxuZXhwb3J0IGNsYXNzIEl4dFRhYnNldENvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyQ29udGVudEluaXQge1xyXG4gIEBDb250ZW50Q2hpbGRyZW4oSXh0VGFiQ29tcG9uZW50KSB0YWJzITogUXVlcnlMaXN0PEl4dFRhYkNvbXBvbmVudD47XHJcblxyXG4gIHNlbGVjdGVkSW5kZXg6IG51bWJlciA9IDA7XHJcbiAgbm90aWZpY2F0aW9uVGV4dDogc3RyaW5nID0gJ0NvbnRlbnQgQmFuZCBJY29ucyBvciBJbmZvJztcclxuXHJcbiAgbmdBZnRlckNvbnRlbnRJbml0KCkge1xyXG4gICAgLy8gU2V0IGluaXRpYWwgYWN0aXZlIHRhYiBpZiB0aGVyZSBhcmUgdGFic1xyXG4gICAgaWYgKHRoaXMudGFicz8uZmlyc3QpIHtcclxuICAgICAgdGhpcy5zZWxlY3RUYWIodGhpcy50YWJzLmZpcnN0KTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBMaXN0ZW4gZm9yIGR5bmFtaWMgdGFiIGNoYW5nZXNcclxuICAgIHRoaXMudGFicz8uY2hhbmdlcy5zdWJzY3JpYmUoKCkgPT4ge1xyXG4gICAgICBpZiAodGhpcy50YWJzLmxlbmd0aCAmJiB0aGlzLnNlbGVjdGVkSW5kZXggPj0gdGhpcy50YWJzLmxlbmd0aCkge1xyXG4gICAgICAgIHRoaXMuc2VsZWN0VGFiKHRoaXMudGFicy5sYXN0KTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBzZWxlY3RUYWIodGFiOiBJeHRUYWJDb21wb25lbnQpIHtcclxuICAgIHRoaXMuc2VsZWN0ZWRJbmRleCA9IHRoaXMudGFicy50b0FycmF5KCkuaW5kZXhPZih0YWIpO1xyXG4gIH1cclxufVxyXG4iLCI8ZGl2IGNsYXNzPVwiYnV0dG9uLXJvd1wiPlxyXG4gIDxidXR0b24gKm5nRm9yPVwibGV0IHRhYiBvZiB0YWJzOyBsZXQgaWR4ID0gaW5kZXhcIlxyXG4gICAgICAgICAgW2NsYXNzLnNlbGVjdGVkXT1cInNlbGVjdGVkSW5kZXggPT09IGlkeFwiXHJcbiAgICAgICAgICAoY2xpY2spPVwic2VsZWN0VGFiKHRhYilcIj5cclxuICAgIHt7IHRhYi50aXRsZSB9fVxyXG4gIDwvYnV0dG9uPlxyXG48L2Rpdj5cclxuPGRpdiBjbGFzcz1cImNvbnRlbnRcIj5cclxuICA8ZGl2IGNsYXNzPVwidG9wLWJhbmRcIj5cclxuICAgIDxzcGFuPvCflJQ8L3NwYW4+XHJcbiAgICA8c3Bhbj57eyBub3RpZmljYXRpb25UZXh0IH19PC9zcGFuPlxyXG4gIDwvZGl2PlxyXG4gIDxkaXYgKm5nRm9yPVwibGV0IHRhYiBvZiB0YWJzOyBsZXQgaWR4ID0gaW5kZXhcIlxyXG4gICAgICAgW2lkXT1cIid0YWInICsgKGlkeCArIDEpXCJcclxuICAgICAgIGNsYXNzPVwibWFpbi1jb250ZW50XCJcclxuICAgICAgIFtjbGFzcy5hY3RpdmVdPVwic2VsZWN0ZWRJbmRleCA9PT0gaWR4XCI+XHJcbiAgICA8bmctY29udGFpbmVyICpuZ1RlbXBsYXRlT3V0bGV0PVwidGFiLmltcGxpY2l0Q29udGVudFwiPjwvbmctY29udGFpbmVyPlxyXG4gIDwvZGl2PlxyXG48L2Rpdj5cclxuIl19
|       |   |   |   --- ixt-tabset.index.mjs: export * from './ixt-tabset.component'; export * from './ixt-tab.component'; // Updated path export * from './ixt-tabset.interfaces'; export * from './ixt-tabset.module'; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXh0LXRhYnNldC5pbmRleC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL2l4dC10YWJzZXQvaXh0LXRhYnNldC5pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxjQUFjLHdCQUF3QixDQUFDO0FBQ3ZDLGNBQWMscUJBQXFCLENBQUMsQ0FBRSxlQUFlO0FBQ3JELGNBQWMseUJBQXlCLENBQUM7QUFDeEMsY0FBYyxxQkFBcUIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gJy4vaXh0LXRhYnNldC5jb21wb25lbnQnO1xyXG5leHBvcnQgKiBmcm9tICcuL2l4dC10YWIuY29tcG9uZW50JzsgIC8vIFVwZGF0ZWQgcGF0aFxyXG5leHBvcnQgKiBmcm9tICcuL2l4dC10YWJzZXQuaW50ZXJmYWNlcyc7XHJcbmV4cG9ydCAqIGZyb20gJy4vaXh0LXRhYnNldC5tb2R1bGUnO1xyXG4iXX0=
|       |   |   |   --- ixt-tabset.interfaces.mjs: export {}; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXh0LXRhYnNldC5pbnRlcmZhY2VzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvaXh0LXRhYnNldC9peHQtdGFic2V0LmludGVyZmFjZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBpbnRlcmZhY2UgSVRhYkNvbnRlbnQge1xyXG4gIGlkOiBzdHJpbmc7XHJcbiAgdGl0bGU6IHN0cmluZztcclxuICBjb250ZW50OiBzdHJpbmc7XHJcbiAgYWN0aXZlOiBib29sZWFuO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIElUYWJzZXRDb25maWcge1xyXG4gIG5vdGlmaWNhdGlvblRleHQ/OiBzdHJpbmc7XHJcbiAgc2hvd05vdGlmaWNhdGlvbkJhbmQ/OiBib29sZWFuO1xyXG4gIGFuaW1hdGlvbkR1cmF0aW9uPzogbnVtYmVyO1xyXG59XHJcbiJdfQ==
|       |   |   |   --- ixt-tabset.module.mjs: import { NgModule } from '@angular/core'; import { CommonModule } from '@angular/common'; import { IxtTabsetComponent } from './ixt-tabset.component'; import { IxtTabComponent } from './ixt-tab.component'; // Updated path import * as i0 from "@angular/core"; export class IxtTabsetModule { static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtTabsetModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); } static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "16.2.12", ngImport: i0, type: IxtTabsetModule, declarations: [IxtTabsetComponent, IxtTabComponent], imports: [CommonModule], exports: [IxtTabsetComponent, IxtTabComponent] }); } static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtTabsetModule, imports: [CommonModule] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtTabsetModule, decorators: [{ type: NgModule, args: [{ declarations: [ IxtTabsetComponent, IxtTabComponent ], imports: [ CommonModule ], exports: [ IxtTabsetComponent, IxtTabComponent ] }] }] }); //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXh0LXRhYnNldC5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9peHQtdGFic2V0L2l4dC10YWJzZXQubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQzVELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQyxDQUFFLGVBQWU7O0FBZXZFLE1BQU0sT0FBTyxlQUFlOytHQUFmLGVBQWU7Z0hBQWYsZUFBZSxpQkFYeEIsa0JBQWtCO1lBQ2xCLGVBQWUsYUFHZixZQUFZLGFBR1osa0JBQWtCO1lBQ2xCLGVBQWU7Z0hBR04sZUFBZSxZQVB4QixZQUFZOzs0RkFPSCxlQUFlO2tCQWIzQixRQUFRO21CQUFDO29CQUNSLFlBQVksRUFBRTt3QkFDWixrQkFBa0I7d0JBQ2xCLGVBQWU7cUJBQ2hCO29CQUNELE9BQU8sRUFBRTt3QkFDUCxZQUFZO3FCQUNiO29CQUNELE9BQU8sRUFBRTt3QkFDUCxrQkFBa0I7d0JBQ2xCLGVBQWU7cUJBQ2hCO2lCQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcclxuaW1wb3J0IHsgSXh0VGFic2V0Q29tcG9uZW50IH0gZnJvbSAnLi9peHQtdGFic2V0LmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IEl4dFRhYkNvbXBvbmVudCB9IGZyb20gJy4vaXh0LXRhYi5jb21wb25lbnQnOyAgLy8gVXBkYXRlZCBwYXRoXHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGRlY2xhcmF0aW9uczogW1xyXG4gICAgSXh0VGFic2V0Q29tcG9uZW50LFxyXG4gICAgSXh0VGFiQ29tcG9uZW50XHJcbiAgXSxcclxuICBpbXBvcnRzOiBbXHJcbiAgICBDb21tb25Nb2R1bGVcclxuICBdLFxyXG4gIGV4cG9ydHM6IFtcclxuICAgIEl4dFRhYnNldENvbXBvbmVudCxcclxuICAgIEl4dFRhYkNvbXBvbmVudFxyXG4gIF1cclxufSlcclxuZXhwb3J0IGNsYXNzIEl4dFRhYnNldE1vZHVsZSB7IH1cclxuIl19
|       |   |   +-- ixt-tree
|       |   |   |   --- ixt-tree.component.mjs: // ixt-tree.component.ts import { Component, Input, Output, EventEmitter } from '@angular/core'; import * as i0 from "@angular/core"; import * as i1 from "@angular/common"; export class IxtTreeComponent { constructor() { this.nodes = []; this.nodeExpanded = new EventEmitter(); this.nodeCollapsed = new EventEmitter(); this.nodeSelected = new EventEmitter(); } toggleNode(node, event) { event.stopPropagation(); if (node.children && node.children.length > 0) { node.expanded = !node.expanded; if (node.expanded) { this.nodeExpanded.emit(node); } else { this.nodeCollapsed.emit(node); } } } selectNode(node, event) { event.stopPropagation(); this.nodeSelected.emit(node); } trackByFn(index, item) { return item.id; } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtTreeComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); } static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: IxtTreeComponent, selector: "ixt-tree", inputs: { nodes: "nodes" }, outputs: { nodeExpanded: "nodeExpanded", nodeCollapsed: "nodeCollapsed", nodeSelected: "nodeSelected" }, ngImport: i0, template: "<ul class=\"tree-container\">\r\n <ng-container *ngFor=\"let node of nodes; trackBy: trackByFn\">\r\n <li class=\"tree-node\" (click)=\"selectNode(node, $event)\">\r\n <div class=\"node-content\">\r\n <span class=\"icon-container\" (click)=\"toggleNode(node, $event)\">\r\n <ng-container *ngIf=\"node.children && node.children.length > 0\">\r\n <span class=\"expand-icon\" [class.expanded]=\"node.expanded\">\r\n {{node.expanded ? '\u25BC' : '\u25B6'}}\r\n </span>\r\n </ng-container>\r\n <span class=\"node-icon\">\r\n {{(node.children && node.children.length > 0) ? '\uD83D\uDCC1' : '\uD83D\uDCC4'}}\r\n </span>\r\n </span>\r\n <span class=\"node-label\">{{node.label}}</span>\r\n </div>\r\n <ul *ngIf=\"node.expanded && node.children\" class=\"tree-children\">\r\n <ixt-tree\r\n [nodes]=\"node.children\"\r\n (nodeExpanded)=\"nodeExpanded.emit($event)\"\r\n (nodeCollapsed)=\"nodeCollapsed.emit($event)\"\r\n (nodeSelected)=\"nodeSelected.emit($event)\">\r\n </ixt-tree>\r\n </ul>\r\n </li>\r\n </ng-container>\r\n</ul>\r\n\r\n", styles: [".tree-container{list-style:none;padding:0;margin:0}.tree-node{padding:0;margin:0}.tree-node .node-content{display:flex;align-items:center;padding:4px 8px;cursor:pointer;transition:background-color .2s ease}.tree-node .node-content:hover{background-color:#0000000a}.tree-node .icon-container{display:flex;align-items:center;margin-right:4px}.tree-node .icon-container .expand-icon{font-size:12px;width:16px;height:16px;display:inline-flex;align-items:center;justify-content:center;cursor:pointer;transition:transform .2s ease}.tree-node .icon-container .expand-icon.expanded{transform:rotate(0)}.tree-node .icon-container .expand-icon:not(.expanded){transform:rotate(-90deg)}.tree-node .icon-container .node-icon{font-size:14px;margin-right:4px;opacity:.7}.tree-node .node-label{font-size:14px;color:#000000de}.tree-children{list-style:none;padding-left:24px;margin:0}\n"], dependencies: [{ kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: IxtTreeComponent, selector: "ixt-tree", inputs: ["nodes"], outputs: ["nodeExpanded", "nodeCollapsed", "nodeSelected"] }] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtTreeComponent, decorators: [{ type: Component, args: [{ selector: 'ixt-tree', template: "<ul class=\"tree-container\">\r\n <ng-container *ngFor=\"let node of nodes; trackBy: trackByFn\">\r\n <li class=\"tree-node\" (click)=\"selectNode(node, $event)\">\r\n <div class=\"node-content\">\r\n <span class=\"icon-container\" (click)=\"toggleNode(node, $event)\">\r\n <ng-container *ngIf=\"node.children && node.children.length > 0\">\r\n <span class=\"expand-icon\" [class.expanded]=\"node.expanded\">\r\n {{node.expanded ? '\u25BC' : '\u25B6'}}\r\n </span>\r\n </ng-container>\r\n <span class=\"node-icon\">\r\n {{(node.children && node.children.length > 0) ? '\uD83D\uDCC1' : '\uD83D\uDCC4'}}\r\n </span>\r\n </span>\r\n <span class=\"node-label\">{{node.label}}</span>\r\n </div>\r\n <ul *ngIf=\"node.expanded && node.children\" class=\"tree-children\">\r\n <ixt-tree\r\n [nodes]=\"node.children\"\r\n (nodeExpanded)=\"nodeExpanded.emit($event)\"\r\n (nodeCollapsed)=\"nodeCollapsed.emit($event)\"\r\n (nodeSelected)=\"nodeSelected.emit($event)\">\r\n </ixt-tree>\r\n </ul>\r\n </li>\r\n </ng-container>\r\n</ul>\r\n\r\n", styles: [".tree-container{list-style:none;padding:0;margin:0}.tree-node{padding:0;margin:0}.tree-node .node-content{display:flex;align-items:center;padding:4px 8px;cursor:pointer;transition:background-color .2s ease}.tree-node .node-content:hover{background-color:#0000000a}.tree-node .icon-container{display:flex;align-items:center;margin-right:4px}.tree-node .icon-container .expand-icon{font-size:12px;width:16px;height:16px;display:inline-flex;align-items:center;justify-content:center;cursor:pointer;transition:transform .2s ease}.tree-node .icon-container .expand-icon.expanded{transform:rotate(0)}.tree-node .icon-container .expand-icon:not(.expanded){transform:rotate(-90deg)}.tree-node .icon-container .node-icon{font-size:14px;margin-right:4px;opacity:.7}.tree-node .node-label{font-size:14px;color:#000000de}.tree-children{list-style:none;padding-left:24px;margin:0}\n"] }] }], propDecorators: { nodes: [{ type: Input }], nodeExpanded: [{ type: Output }], nodeCollapsed: [{ type: Output }], nodeSelected: [{ type: Output }] } }); //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXh0LXRyZWUuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvaXh0LXRyZWUvaXh0LXRyZWUuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvaXh0LXRyZWUvaXh0LXRyZWUuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsd0JBQXdCO0FBQ3hCLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQUUsTUFBTSxlQUFlLENBQUM7OztBQWV2RSxNQUFNLE9BQU8sZ0JBQWdCO0lBTDdCO1FBTVcsVUFBSyxHQUFlLEVBQUUsQ0FBQztRQUN0QixpQkFBWSxHQUFHLElBQUksWUFBWSxFQUFZLENBQUM7UUFDNUMsa0JBQWEsR0FBRyxJQUFJLFlBQVksRUFBWSxDQUFDO1FBQzdDLGlCQUFZLEdBQUcsSUFBSSxZQUFZLEVBQVksQ0FBQztLQXVCdkQ7SUFyQkMsVUFBVSxDQUFDLElBQWMsRUFBRSxLQUFZO1FBQ3JDLEtBQUssQ0FBQyxlQUFlLEVBQUUsQ0FBQztRQUV4QixJQUFJLElBQUksQ0FBQyxRQUFRLElBQUksSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO1lBQzdDLElBQUksQ0FBQyxRQUFRLEdBQUcsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDO1lBQy9CLElBQUksSUFBSSxDQUFDLFFBQVEsRUFBRTtnQkFDakIsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7YUFDOUI7aUJBQU07Z0JBQ0wsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7YUFDL0I7U0FDRjtJQUNILENBQUM7SUFFRCxVQUFVLENBQUMsSUFBYyxFQUFFLEtBQVk7UUFDckMsS0FBSyxDQUFDLGVBQWUsRUFBRSxDQUFDO1FBQ3hCLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQy9CLENBQUM7SUFFRCxTQUFTLENBQUMsS0FBYSxFQUFFLElBQWM7UUFDckMsT0FBTyxJQUFJLENBQUMsRUFBRSxDQUFDO0lBQ2pCLENBQUM7K0dBMUJVLGdCQUFnQjttR0FBaEIsZ0JBQWdCLHFMQ2hCN0IsNnJDQTRCQSxnb0NEWmEsZ0JBQWdCOzs0RkFBaEIsZ0JBQWdCO2tCQUw1QixTQUFTOytCQUNFLFVBQVU7OEJBS1gsS0FBSztzQkFBYixLQUFLO2dCQUNJLFlBQVk7c0JBQXJCLE1BQU07Z0JBQ0csYUFBYTtzQkFBdEIsTUFBTTtnQkFDRyxZQUFZO3NCQUFyQixNQUFNIiwic291cmNlc0NvbnRlbnQiOlsiLy8gaXh0LXRyZWUuY29tcG9uZW50LnRzXHJcbmltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE91dHB1dCwgRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFRyZWVOb2RlIHtcclxuICBpZDogc3RyaW5nO1xyXG4gIGxhYmVsOiBzdHJpbmc7XHJcbiAgZXhwYW5kZWQ/OiBib29sZWFuO1xyXG4gIGNoaWxkcmVuPzogVHJlZU5vZGVbXTtcclxuICBpc0xlYWY/OiBib29sZWFuO1xyXG59XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2l4dC10cmVlJyxcclxuICB0ZW1wbGF0ZVVybDogJy4vaXh0LXRyZWUuY29tcG9uZW50Lmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL2l4dC10cmVlLmNvbXBvbmVudC5zY3NzJ11cclxufSlcclxuZXhwb3J0IGNsYXNzIEl4dFRyZWVDb21wb25lbnQge1xyXG4gIEBJbnB1dCgpIG5vZGVzOiBUcmVlTm9kZVtdID0gW107XHJcbiAgQE91dHB1dCgpIG5vZGVFeHBhbmRlZCA9IG5ldyBFdmVudEVtaXR0ZXI8VHJlZU5vZGU+KCk7XHJcbiAgQE91dHB1dCgpIG5vZGVDb2xsYXBzZWQgPSBuZXcgRXZlbnRFbWl0dGVyPFRyZWVOb2RlPigpO1xyXG4gIEBPdXRwdXQoKSBub2RlU2VsZWN0ZWQgPSBuZXcgRXZlbnRFbWl0dGVyPFRyZWVOb2RlPigpO1xyXG5cclxuICB0b2dnbGVOb2RlKG5vZGU6IFRyZWVOb2RlLCBldmVudDogRXZlbnQpOiB2b2lkIHtcclxuICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xyXG5cclxuICAgIGlmIChub2RlLmNoaWxkcmVuICYmIG5vZGUuY2hpbGRyZW4ubGVuZ3RoID4gMCkge1xyXG4gICAgICBub2RlLmV4cGFuZGVkID0gIW5vZGUuZXhwYW5kZWQ7XHJcbiAgICAgIGlmIChub2RlLmV4cGFuZGVkKSB7XHJcbiAgICAgICAgdGhpcy5ub2RlRXhwYW5kZWQuZW1pdChub2RlKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICB0aGlzLm5vZGVDb2xsYXBzZWQuZW1pdChub2RlKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgc2VsZWN0Tm9kZShub2RlOiBUcmVlTm9kZSwgZXZlbnQ6IEV2ZW50KTogdm9pZCB7XHJcbiAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcclxuICAgIHRoaXMubm9kZVNlbGVjdGVkLmVtaXQobm9kZSk7XHJcbiAgfVxyXG5cclxuICB0cmFja0J5Rm4oaW5kZXg6IG51bWJlciwgaXRlbTogVHJlZU5vZGUpOiBzdHJpbmcge1xyXG4gICAgcmV0dXJuIGl0ZW0uaWQ7XHJcbiAgfVxyXG59XHJcblxyXG4iLCI8dWwgY2xhc3M9XCJ0cmVlLWNvbnRhaW5lclwiPlxyXG4gIDxuZy1jb250YWluZXIgKm5nRm9yPVwibGV0IG5vZGUgb2Ygbm9kZXM7IHRyYWNrQnk6IHRyYWNrQnlGblwiPlxyXG4gICAgPGxpIGNsYXNzPVwidHJlZS1ub2RlXCIgKGNsaWNrKT1cInNlbGVjdE5vZGUobm9kZSwgJGV2ZW50KVwiPlxyXG4gICAgICA8ZGl2IGNsYXNzPVwibm9kZS1jb250ZW50XCI+XHJcbiAgICAgICAgPHNwYW4gY2xhc3M9XCJpY29uLWNvbnRhaW5lclwiIChjbGljayk9XCJ0b2dnbGVOb2RlKG5vZGUsICRldmVudClcIj5cclxuICAgICAgICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCJub2RlLmNoaWxkcmVuICYmIG5vZGUuY2hpbGRyZW4ubGVuZ3RoID4gMFwiPlxyXG4gICAgICAgICAgICA8c3BhbiBjbGFzcz1cImV4cGFuZC1pY29uXCIgW2NsYXNzLmV4cGFuZGVkXT1cIm5vZGUuZXhwYW5kZWRcIj5cclxuICAgICAgICAgICAgICB7e25vZGUuZXhwYW5kZWQgPyAn4pa8JyA6ICfilrYnfX1cclxuICAgICAgICAgICAgPC9zcGFuPlxyXG4gICAgICAgICAgPC9uZy1jb250YWluZXI+XHJcbiAgICAgICAgICA8c3BhbiBjbGFzcz1cIm5vZGUtaWNvblwiPlxyXG4gICAgICAgICAgICB7eyhub2RlLmNoaWxkcmVuICYmIG5vZGUuY2hpbGRyZW4ubGVuZ3RoID4gMCkgPyAn8J+TgScgOiAn8J+ThCd9fVxyXG4gICAgICAgICAgPC9zcGFuPlxyXG4gICAgICAgIDwvc3Bhbj5cclxuICAgICAgICA8c3BhbiBjbGFzcz1cIm5vZGUtbGFiZWxcIj57e25vZGUubGFiZWx9fTwvc3Bhbj5cclxuICAgICAgPC9kaXY+XHJcbiAgICAgIDx1bCAqbmdJZj1cIm5vZGUuZXhwYW5kZWQgJiYgbm9kZS5jaGlsZHJlblwiIGNsYXNzPVwidHJlZS1jaGlsZHJlblwiPlxyXG4gICAgICAgIDxpeHQtdHJlZVxyXG4gICAgICAgICAgW25vZGVzXT1cIm5vZGUuY2hpbGRyZW5cIlxyXG4gICAgICAgICAgKG5vZGVFeHBhbmRlZCk9XCJub2RlRXhwYW5kZWQuZW1pdCgkZXZlbnQpXCJcclxuICAgICAgICAgIChub2RlQ29sbGFwc2VkKT1cIm5vZGVDb2xsYXBzZWQuZW1pdCgkZXZlbnQpXCJcclxuICAgICAgICAgIChub2RlU2VsZWN0ZWQpPVwibm9kZVNlbGVjdGVkLmVtaXQoJGV2ZW50KVwiPlxyXG4gICAgICAgIDwvaXh0LXRyZWU+XHJcbiAgICAgIDwvdWw+XHJcbiAgICA8L2xpPlxyXG4gIDwvbmctY29udGFpbmVyPlxyXG48L3VsPlxyXG5cclxuIl19
|       |   |   |   --- ixt-tree.index.mjs: // ixt-tree.index.ts export * from './ixt-tree.component'; export * from './ixt-tree.module'; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXh0LXRyZWUuaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9peHQtdHJlZS9peHQtdHJlZS5pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsY0FBYyxzQkFBc0IsQ0FBQztBQUNyQyxjQUFjLG1CQUFtQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gaXh0LXRyZWUuaW5kZXgudHNcclxuZXhwb3J0ICogZnJvbSAnLi9peHQtdHJlZS5jb21wb25lbnQnO1xyXG5leHBvcnQgKiBmcm9tICcuL2l4dC10cmVlLm1vZHVsZSc7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFRyZWVOb2RlIHtcclxuICBpZDogc3RyaW5nO1xyXG4gIGxhYmVsOiBzdHJpbmc7XHJcbiAgZXhwYW5kZWQ/OiBib29sZWFuO1xyXG4gIGNoaWxkcmVuPzogVHJlZU5vZGVbXTtcclxuICBpc0xlYWY/OiBib29sZWFuO1xyXG59Il19
|       |   |   |   --- ixt-tree.module.mjs: import { NgModule } from '@angular/core'; import { CommonModule } from '@angular/common'; import { FormsModule } from '@angular/forms'; import { IxtTreeComponent } from './ixt-tree.component'; import * as i0 from "@angular/core"; export class IxtTreeModule { static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtTreeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); } static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "16.2.12", ngImport: i0, type: IxtTreeModule, declarations: [IxtTreeComponent], imports: [CommonModule, FormsModule], exports: [IxtTreeComponent] }); } static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtTreeModule, imports: [CommonModule, FormsModule] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtTreeModule, decorators: [{ type: NgModule, args: [{ declarations: [ IxtTreeComponent ], imports: [ CommonModule, FormsModule ], exports: [ IxtTreeComponent ] }] }] }); //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXh0LXRyZWUubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvaXh0LXRyZWUvaXh0LXRyZWUubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM3QyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQzs7QUFjeEQsTUFBTSxPQUFPLGFBQWE7K0dBQWIsYUFBYTtnSEFBYixhQUFhLGlCQVZ0QixnQkFBZ0IsYUFHaEIsWUFBWTtZQUNaLFdBQVcsYUFHWCxnQkFBZ0I7Z0hBR1AsYUFBYSxZQVB0QixZQUFZO1lBQ1osV0FBVzs7NEZBTUYsYUFBYTtrQkFaekIsUUFBUTttQkFBQztvQkFDUixZQUFZLEVBQUU7d0JBQ1osZ0JBQWdCO3FCQUNqQjtvQkFDRCxPQUFPLEVBQUU7d0JBQ1AsWUFBWTt3QkFDWixXQUFXO3FCQUNaO29CQUNELE9BQU8sRUFBRTt3QkFDUCxnQkFBZ0I7cUJBQ2pCO2lCQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcclxuaW1wb3J0IHsgRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XHJcbmltcG9ydCB7IEl4dFRyZWVDb21wb25lbnQgfSBmcm9tICcuL2l4dC10cmVlLmNvbXBvbmVudCc7XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGRlY2xhcmF0aW9uczogW1xyXG4gICAgSXh0VHJlZUNvbXBvbmVudFxyXG4gIF0sXHJcbiAgaW1wb3J0czogW1xyXG4gICAgQ29tbW9uTW9kdWxlLFxyXG4gICAgRm9ybXNNb2R1bGVcclxuICBdLFxyXG4gIGV4cG9ydHM6IFtcclxuICAgIEl4dFRyZWVDb21wb25lbnRcclxuICBdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBJeHRUcmVlTW9kdWxlIHsgfVxyXG4iXX0=
|       |   |   +-- ixt-viewport
|       |   |   |   --- ixt-viewport.component.mjs: // ixt-canvas.component.ts import { Component, ViewChild, HostListener } from '@angular/core'; import * as i0 from "@angular/core"; export class IxtViewportComponent { constructor() { // Drawing state this.isDrawing = false; this.lastPoint = null; // Zooming state this.isZooming = false; this.zoomStart = null; this.zoomRect = null; this.transform = { scale: 1, offsetX: 0, offsetY: 0 }; // Drawing settings this.lineWidth = 2; this.strokeStyle = '#000000'; } ngAfterViewInit() { const canvas = this.canvasRef.nativeElement; this.ctx = canvas.getContext('2d'); this.resizeCanvas(); this.initializeCanvas(); this.drawTestGraphics(); } drawTestGraphics() { // Clear canvas this.clear(); // Draw some shapes this.ctx.save(); // Apply current transform this.ctx.scale(this.transform.scale, this.transform.scale); this.ctx.translate(this.transform.offsetX, this.transform.offsetY); // Rectangle this.ctx.fillStyle = '#ff0000'; this.ctx.fillRect(50, 50, 100, 100); // Circle this.ctx.beginPath(); this.ctx.fillStyle = '#0000ff'; this.ctx.arc(250, 100, 50, 0, Math.PI * 2); this.ctx.fill(); // Star this.drawStar(400, 100, 5, 50, 25); // Text this.ctx.fillStyle = '#000000'; this.ctx.font = '20px Arial'; this.ctx.fillText('Test Graphics', 50, 200); // Grid pattern this.drawGrid(); this.ctx.restore(); } drawGrid() { this.ctx.strokeStyle = '#cccccc'; this.ctx.lineWidth = 0.5; // Draw vertical lines for (let x = 0; x < 800; x += 50) { this.ctx.beginPath(); this.ctx.moveTo(x, 0); this.ctx.lineTo(x, 600); this.ctx.stroke(); } // Draw horizontal lines for (let y = 0; y < 600; y += 50) { this.ctx.beginPath(); this.ctx.moveTo(0, y); this.ctx.lineTo(800, y); this.ctx.stroke(); } } drawStar(cx, cy, spikes, outerRadius, innerRadius) { this.ctx.beginPath(); this.ctx.fillStyle = '#ffff00'; let rot = Math.PI / 2 * 3; let x = cx; let y = cy; let step = Math.PI / spikes; this.ctx.moveTo(cx, cy - outerRadius); for (let i = 0; i < spikes; i++) { x = cx + Math.cos(rot) * outerRadius; y = cy + Math.sin(rot) * outerRadius; this.ctx.lineTo(x, y); rot += step; x = cx + Math.cos(rot) * innerRadius; y = cy + Math.sin(rot) * innerRadius; this.ctx.lineTo(x, y); rot += step; } this.ctx.lineTo(cx, cy - outerRadius); this.ctx.closePath(); this.ctx.fill(); } resizeCanvas() { const canvas = this.canvasRef.nativeElement; canvas.width = canvas.offsetWidth; canvas.height = canvas.offsetHeight; this.initializeCanvas(); this.drawTestGraphics(); } initializeCanvas() { this.ctx.lineWidth = this.lineWidth; this.ctx.strokeStyle = this.strokeStyle; this.ctx.lineCap = 'round'; this.ctx.lineJoin = 'round'; } onMouseDown(event) { if (event.shiftKey) { // Start zooming when shift is held this.isZooming = true; this.zoomStart = this.getMousePos(event); this.zoomRect = null; } else { this.isDrawing = true; this.lastPoint = this.getMousePos(event); } } onMouseMove(event) { if (this.isZooming && this.zoomStart) { const currentPoint = this.getMousePos(event); // Calculate rubber band rectangle this.zoomRect = { x: Math.min(this.zoomStart.x, currentPoint.x), y: Math.min(this.zoomStart.y, currentPoint.y), width: Math.abs(currentPoint.x - this.zoomStart.x), height: Math.abs(currentPoint.y - this.zoomStart.y) }; // Redraw scene with rubber band this.drawTestGraphics(); this.drawRubberBand(); } else if (this.isDrawing && this.lastPoint) { const currentPoint = this.getMousePos(event); this.draw(this.lastPoint, currentPoint); this.lastPoint = currentPoint; } } onMouseUp(event) { if (this.isZooming && this.zoomRect) { // Calculate new transform based on zoom rectangle const canvas = this.canvasRef.nativeElement; const scaleX = canvas.width / this.zoomRect.width; const scaleY = canvas.height / this.zoomRect.height; const newScale = Math.min(scaleX, scaleY); // Update transform this.transform.scale *= newScale; this.transform.offsetX -= this.zoomRect.x / this.transform.scale; this.transform.offsetY -= this.zoomRect.y / this.transform.scale; // Redraw with new transform this.drawTestGraphics(); } this.isDrawing = false; this.isZooming = false; this.lastPoint = null; this.zoomStart = null; this.zoomRect = null; } onMouseLeave() { this.isDrawing = false; this.isZooming = false; this.lastPoint = null; this.zoomStart = null; this.zoomRect = null; } drawRubberBand() { if (!this.zoomRect) return; this.ctx.save(); this.ctx.strokeStyle = '#000000'; this.ctx.lineWidth = 1; this.ctx.setLineDash([5, 5]); // Draw rubber band rectangle this.ctx.strokeRect(this.zoomRect.x, this.zoomRect.y, this.zoomRect.width, this.zoomRect.height); this.ctx.restore(); } getMousePos(event) { const rect = this.canvasRef.nativeElement.getBoundingClientRect(); return { x: event.clientX - rect.left, y: event.clientY - rect.top }; } draw(start, end) { this.ctx.save(); this.ctx.scale(this.transform.scale, this.transform.scale); this.ctx.translate(this.transform.offsetX, this.transform.offsetY); this.ctx.beginPath(); this.ctx.moveTo(start.x / this.transform.scale, start.y / this.transform.scale); this.ctx.lineTo(end.x / this.transform.scale, end.y / this.transform.scale); this.ctx.stroke(); this.ctx.closePath(); this.ctx.restore(); } // Public methods setColor(color) { this.strokeStyle = color; this.ctx.strokeStyle = color; } setLineWidth(width) { this.lineWidth = width; this.ctx.lineWidth = width; } clear() { const canvas = this.canvasRef.nativeElement; this.ctx.clearRect(0, 0, canvas.width, canvas.height); } resetZoom() { this.transform = { scale: 1, offsetX: 0, offsetY: 0 }; this.drawTestGraphics(); } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtViewportComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); } static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: IxtViewportComponent, selector: "ixt-viewport", host: { listeners: { "window:resize": "resizeCanvas()", "mousedown": "onMouseDown($event)", "mousemove": "onMouseMove($event)", "mouseup": "onMouseUp($event)", "mouseleave": "onMouseLeave()" } }, viewQueries: [{ propertyName: "canvasRef", first: true, predicate: ["canvas"], descendants: true }], ngImport: i0, template: "<!-- ixt-canvas.component.html -->\r\n<div class=\"viewport-container\">\r\n <canvas #canvas></canvas>\r\n </div>", styles: [".viewport-container{width:100%;height:100%;min-height:400px;background-color:#fff;border:1px solid #cccccc}.viewport-container canvas{width:100%;height:100%;cursor:crosshair}\n"] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtViewportComponent, decorators: [{ type: Component, args: [{ selector: 'ixt-viewport', template: "<!-- ixt-canvas.component.html -->\r\n<div class=\"viewport-container\">\r\n <canvas #canvas></canvas>\r\n </div>", styles: [".viewport-container{width:100%;height:100%;min-height:400px;background-color:#fff;border:1px solid #cccccc}.viewport-container canvas{width:100%;height:100%;cursor:crosshair}\n"] }] }], propDecorators: { canvasRef: [{ type: ViewChild, args: ['canvas'] }], resizeCanvas: [{ type: HostListener, args: ['window:resize'] }], onMouseDown: [{ type: HostListener, args: ['mousedown', ['$event']] }], onMouseMove: [{ type: HostListener, args: ['mousemove', ['$event']] }], onMouseUp: [{ type: HostListener, args: ['mouseup', ['$event']] }], onMouseLeave: [{ type: HostListener, args: ['mouseleave'] }] } }); //# sourceMappingURL=data:application/json;base64,
|       |   |   |   --- ixt-viewport.index.mjs: // ixt-canvas.index.ts export * from './ixt-viewport.component'; export * from './ixt-viewport.module'; // // You might want to export interfaces/types if they're needed elsewhere // export interface DrawingConfig { // color?: string; // lineWidth?: number; // } //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXh0LXZpZXdwb3J0LmluZGV4LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvaXh0LXZpZXdwb3J0L2l4dC12aWV3cG9ydC5pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxzQkFBc0I7QUFDdEIsY0FBYywwQkFBMEIsQ0FBQztBQUN6QyxjQUFjLHVCQUF1QixDQUFDO0FBRXRDLDJFQUEyRTtBQUMzRSxtQ0FBbUM7QUFDbkMsb0JBQW9CO0FBQ3BCLHdCQUF3QjtBQUN4QixJQUFJIiwic291cmNlc0NvbnRlbnQiOlsiLy8gaXh0LWNhbnZhcy5pbmRleC50c1xyXG5leHBvcnQgKiBmcm9tICcuL2l4dC12aWV3cG9ydC5jb21wb25lbnQnO1xyXG5leHBvcnQgKiBmcm9tICcuL2l4dC12aWV3cG9ydC5tb2R1bGUnO1xyXG5cclxuLy8gLy8gWW91IG1pZ2h0IHdhbnQgdG8gZXhwb3J0IGludGVyZmFjZXMvdHlwZXMgaWYgdGhleSdyZSBuZWVkZWQgZWxzZXdoZXJlXHJcbi8vIGV4cG9ydCBpbnRlcmZhY2UgRHJhd2luZ0NvbmZpZyB7XHJcbi8vICAgY29sb3I/OiBzdHJpbmc7XHJcbi8vICAgbGluZVdpZHRoPzogbnVtYmVyO1xyXG4vLyB9Il19
|       |   |   |   --- ixt-viewport.module.mjs: // ixt-canvas.module.ts import { NgModule } from '@angular/core'; import { CommonModule } from '@angular/common'; import { IxtViewportComponent } from './ixt-viewport.component'; import * as i0 from "@angular/core"; export class IxtViewportModule { static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtViewportModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); } static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "16.2.12", ngImport: i0, type: IxtViewportModule, declarations: [IxtViewportComponent], imports: [CommonModule], exports: [IxtViewportComponent] }); } static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtViewportModule, imports: [CommonModule] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtViewportModule, decorators: [{ type: NgModule, args: [{ declarations: [ IxtViewportComponent ], imports: [ CommonModule ], exports: [ IxtViewportComponent ] }] }] }); //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXh0LXZpZXdwb3J0Lm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL2l4dC12aWV3cG9ydC9peHQtdmlld3BvcnQubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHVCQUF1QjtBQUN2QixPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQzs7QUFhaEUsTUFBTSxPQUFPLGlCQUFpQjsrR0FBakIsaUJBQWlCO2dIQUFqQixpQkFBaUIsaUJBVDFCLG9CQUFvQixhQUdwQixZQUFZLGFBR1osb0JBQW9CO2dIQUdYLGlCQUFpQixZQU4xQixZQUFZOzs0RkFNSCxpQkFBaUI7a0JBWDdCLFFBQVE7bUJBQUM7b0JBQ1IsWUFBWSxFQUFFO3dCQUNaLG9CQUFvQjtxQkFDckI7b0JBQ0QsT0FBTyxFQUFFO3dCQUNQLFlBQVk7cUJBQ2I7b0JBQ0QsT0FBTyxFQUFFO3dCQUNQLG9CQUFvQjtxQkFDckI7aUJBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpeHQtY2FudmFzLm1vZHVsZS50c1xyXG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xyXG5pbXBvcnQgeyBJeHRWaWV3cG9ydENvbXBvbmVudCB9IGZyb20gJy4vaXh0LXZpZXdwb3J0LmNvbXBvbmVudCc7XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGRlY2xhcmF0aW9uczogW1xyXG4gICAgSXh0Vmlld3BvcnRDb21wb25lbnRcclxuICBdLFxyXG4gIGltcG9ydHM6IFtcclxuICAgIENvbW1vbk1vZHVsZVxyXG4gIF0sXHJcbiAgZXhwb3J0czogW1xyXG4gICAgSXh0Vmlld3BvcnRDb21wb25lbnRcclxuICBdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBJeHRWaWV3cG9ydE1vZHVsZSB7IH0iXX0=
|       |   |   \-- theme
|       |   |       --- theme.colors.mjs: // src/app/theme/theme.colors.ts export const baseThemeColors = { primary: { base: '#4169E1', hover: '#2850c9', active: '#1e40af', text: '#ffffff' }, secondary: { base: '#6c757d', hover: '#5c636a', active: '#4d5154', text: '#ffffff' }, tertiary: { base: '#003057', hover: '#002649', active: '#001C3B', text: '#FFFFFF' // White text for contrast }, success: { base: '#28a745', hover: '#218838', active: '#1e7e34', text: '#ffffff' }, danger: { base: '#dc3545', hover: '#c82333', active: '#bd2130', text: '#ffffff' }, warning: { base: '#ffc107', hover: '#e0a800', active: '#d39e00', text: '#000000' }, info: { base: '#17a2b8', hover: '#138496', active: '#117a8b', text: '#ffffff' }, light: { base: '#f8f9fa', hover: '#e2e6ea', active: '#dae0e5', text: '#000000' }, dark: { base: '#343a40', hover: '#23272b', active: '#1d2124', text: '#ffffff' }, default: { base: '#ffffff', hover: '#f8f9fa', active: '#e9ecef', text: '#000000' } }; // src/app/theme/theme.colors.ts export const unitedThemeColors = { primary: { base: '#0033A0', hover: '#00297A', active: '#002060', text: '#FFFFFF' // White text for contrast }, secondary: { base: '#6D2077', hover: '#5A1A63', active: '#48154F', text: '#FFFFFF' // White text for contrast }, tertiary: { base: '#003057', hover: '#002649', active: '#001C3B', text: '#FFFFFF' // White text for contrast }, success: { base: '#4CAF50', hover: '#43A047', active: '#388E3C', text: '#FFFFFF' // White text for contrast }, warning: { base: '#FF9800', hover: '#FB8C00', active: '#F57C00', text: '#000000' // Black text for readability }, danger: { base: '#E53935', hover: '#D32F2F', active: '#C62828', text: '#FFFFFF' // White text for contrast }, info: { base: '#17A2B8', hover: '#138496', active: '#117A8B', text: '#FFFFFF' // White text for contrast }, light: { base: '#F8F9FA', hover: '#E2E6EA', active: '#DAE0E5', text: '#000000' // Black text for readability }, dark: { base: '#343A40', hover: '#23272B', active: '#1D2124', text: '#FFFFFF' // White text for contrast }, default: { base: '#FFFFFF', hover: '#F8F9FA', active: '#E9ECEF', text: '#000000' // Black text for readability } }; //# sourceMappingURL=data:application/json;base64,
|       |   |       --- theme.types.mjs: export {}; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhlbWUudHlwZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy90aGVtZS90aGVtZS50eXBlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiIiwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2FwcC90aGVtZS90aGVtZS50eXBlcy50c1xyXG5leHBvcnQgdHlwZSBUaGVtZVZhcmlhbnQgPSBcclxuICB8ICdwcmltYXJ5JyAgICAvLyBNYWluIGJyYW5kIGNvbG9yLCBrZXkgYWN0aW9uc1xyXG4gIHwgJ3NlY29uZGFyeScgIC8vIFN1cHBvcnRpbmcgY29sb3JcclxuICB8ICd0ZXJ0aWFyeSdcclxuICB8ICdzdWNjZXNzJyAgICAvLyBQb3NpdGl2ZSBhY3Rpb25zL3N0YXRlc1xyXG4gIHwgJ2RhbmdlcicgICAgIC8vIEVycm9ycywgZGVzdHJ1Y3RpdmUgYWN0aW9uc1xyXG4gIHwgJ3dhcm5pbmcnICAgIC8vIENhdXRpb24gc3RhdGVzXHJcbiAgfCAnaW5mbycgICAgICAgLy8gSW5mb3JtYXRpb25hbCBzdGF0ZXNcclxuICB8ICdsaWdodCcgICAgICAvLyBMaWdodCBiYWNrZ3JvdW5kc1xyXG4gIHwgJ2RhcmsnICAgICAgIC8vIERhcmsgdGV4dC9iYWNrZ3JvdW5kc1xyXG4gIHwgJ2RlZmF1bHQnOyAgIC8vIERlZmF1bHQgc3RhdGVcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgVGhlbWVDb2xvciB7XHJcbiAgYmFzZTogc3RyaW5nO1xyXG4gIGhvdmVyOiBzdHJpbmc7XHJcbiAgYWN0aXZlOiBzdHJpbmc7XHJcbiAgdGV4dDogc3RyaW5nO1xyXG59XHJcblxyXG5leHBvcnQgdHlwZSBUaGVtZUNvbG9ycyA9IFJlY29yZDxUaGVtZVZhcmlhbnQsIFRoZW1lQ29sb3I+OyJdfQ==
|       |   --- dvanauken-ixtlan.mjs: /** * Generated bundle index. Do not edit. */ export * from './public-api'; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHZhbmF1a2VuLWl4dGxhbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9kdmFuYXVrZW4taXh0bGFuLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztHQUVHO0FBRUgsY0FBYyxjQUFjLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEdlbmVyYXRlZCBidW5kbGUgaW5kZXguIERvIG5vdCBlZGl0LlxuICovXG5cbmV4cG9ydCAqIGZyb20gJy4vcHVibGljLWFwaSc7XG4iXX0=
|       |   --- public-api.mjs: // File: src/public-api.ts export * from './components/ixt-table/ixt-table.interfaces'; // Core UI Components export * from './components/ixt-button/ixt-button.index'; export * from './components/ixt-dialog/ixt-dialog.index'; export * from './components/ixt-tabset/ixt-tabset.index'; export * from './components/ixt-panel/ixt-panel.index'; export * from './components/ixt-menu/ixt-menu.index'; export * from './components/ixt-tree/ixt-tree.index'; export * from './components/ixt-accordian/ixt-accordian.index'; // Canvas & Viewport Components export * from './components/ixt-canvas/ixt-canvas.index'; export * from './components/ixt-viewport/ixt-viewport.index'; // Form Components export * from './components/ixt-expression-builder/ixt-expression-builder.index'; // Diagram Components export * from './components/ixt-diagram/ixt-diagram.index'; export * from './components/ixt-diagram/types/clazz/ixt-clazz.index'; export * from './components/ixt-diagram/types/deployment/ixt-deployment.index'; export * from './components/ixt-diagram/types/EBNF/ixt.ebnf.index'; export * from './components/ixt-diagram/types/flow/ixt-flow.index'; export * from './components/ixt-diagram/types/gannt/gannt.index'; export * from './components/ixt-diagram/types/network/ixt-network.index'; export * from './components/ixt-diagram/types/sankey/ixt-sankey.index'; export * from './components/ixt-diagram/types/wireframe/ixt-wireframe.index'; // Layer Management export * from './components/ixt-layer-manager/ixt-layer-manager.index'; // Calendar Component export * from './components/ixt-calendar/ixt-calendar.index'; // Map Component export * from './components/ixt-map/ixt-map.index'; // Split Pane Component export * from './components/ixt-splitpane/index'; // Add to src/public-api.ts export * from './components/theme/theme.types'; export * from './components/theme/theme.colors'; // In ixtlan/src/public-api.ts export * from './components/ixt-table/ixt-table.module'; export * from './components/ixt-table/ixt-table.component'; export * from './components/ixt-table/ixt-table.interfaces'; //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljLWFwaS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9wdWJsaWMtYXBpLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDBCQUEwQjtBQUMxQixjQUFjLDZDQUE2QyxDQUFDO0FBRTVELHFCQUFxQjtBQUNyQixjQUFjLDBDQUEwQyxDQUFDO0FBQ3pELGNBQWMsMENBQTBDLENBQUM7QUFDekQsY0FBYywwQ0FBMEMsQ0FBQztBQUN6RCxjQUFjLHdDQUF3QyxDQUFDO0FBQ3ZELGNBQWMsc0NBQXNDLENBQUM7QUFDckQsY0FBYyxzQ0FBc0MsQ0FBQztBQUNyRCxjQUFjLGdEQUFnRCxDQUFDO0FBRS9ELCtCQUErQjtBQUMvQixjQUFjLDBDQUEwQyxDQUFDO0FBQ3pELGNBQWMsOENBQThDLENBQUM7QUFFN0Qsa0JBQWtCO0FBQ2xCLGNBQWMsa0VBQWtFLENBQUM7QUFFakYscUJBQXFCO0FBQ3JCLGNBQWMsNENBQTRDLENBQUM7QUFDM0QsY0FBYyxzREFBc0QsQ0FBQztBQUNyRSxjQUFjLGdFQUFnRSxDQUFDO0FBQy9FLGNBQWMsb0RBQW9ELENBQUM7QUFDbkUsY0FBYyxvREFBb0QsQ0FBQztBQUNuRSxjQUFjLGtEQUFrRCxDQUFDO0FBQ2pFLGNBQWMsMERBQTBELENBQUM7QUFDekUsY0FBYyx3REFBd0QsQ0FBQztBQUN2RSxjQUFjLDhEQUE4RCxDQUFDO0FBRTdFLG1CQUFtQjtBQUNuQixjQUFjLHdEQUF3RCxDQUFDO0FBRXZFLHFCQUFxQjtBQUNyQixjQUFjLDhDQUE4QyxDQUFDO0FBRTdELGdCQUFnQjtBQUNoQixjQUFjLG9DQUFvQyxDQUFDO0FBRW5ELHVCQUF1QjtBQUN2QixjQUFjLGtDQUFrQyxDQUFDO0FBRWpELDJCQUEyQjtBQUMzQixjQUFjLGdDQUFnQyxDQUFDO0FBQy9DLGNBQWMsaUNBQWlDLENBQUM7QUFFaEQsOEJBQThCO0FBQzlCLGNBQWMseUNBQXlDLENBQUM7QUFDeEQsY0FBYyw0Q0FBNEMsQ0FBQztBQUMzRCxjQUFjLDZDQUE2QyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZTogc3JjL3B1YmxpYy1hcGkudHNcclxuZXhwb3J0ICogZnJvbSAnLi9jb21wb25lbnRzL2l4dC10YWJsZS9peHQtdGFibGUuaW50ZXJmYWNlcyc7XHJcblxyXG4vLyBDb3JlIFVJIENvbXBvbmVudHNcclxuZXhwb3J0ICogZnJvbSAnLi9jb21wb25lbnRzL2l4dC1idXR0b24vaXh0LWJ1dHRvbi5pbmRleCc7XHJcbmV4cG9ydCAqIGZyb20gJy4vY29tcG9uZW50cy9peHQtZGlhbG9nL2l4dC1kaWFsb2cuaW5kZXgnO1xyXG5leHBvcnQgKiBmcm9tICcuL2NvbXBvbmVudHMvaXh0LXRhYnNldC9peHQtdGFic2V0LmluZGV4JztcclxuZXhwb3J0ICogZnJvbSAnLi9jb21wb25lbnRzL2l4dC1wYW5lbC9peHQtcGFuZWwuaW5kZXgnO1xyXG5leHBvcnQgKiBmcm9tICcuL2NvbXBvbmVudHMvaXh0LW1lbnUvaXh0LW1lbnUuaW5kZXgnO1xyXG5leHBvcnQgKiBmcm9tICcuL2NvbXBvbmVudHMvaXh0LXRyZWUvaXh0LXRyZWUuaW5kZXgnO1xyXG5leHBvcnQgKiBmcm9tICcuL2NvbXBvbmVudHMvaXh0LWFjY29yZGlhbi9peHQtYWNjb3JkaWFuLmluZGV4JztcclxuXHJcbi8vIENhbnZhcyAmIFZpZXdwb3J0IENvbXBvbmVudHNcclxuZXhwb3J0ICogZnJvbSAnLi9jb21wb25lbnRzL2l4dC1jYW52YXMvaXh0LWNhbnZhcy5pbmRleCc7XHJcbmV4cG9ydCAqIGZyb20gJy4vY29tcG9uZW50cy9peHQtdmlld3BvcnQvaXh0LXZpZXdwb3J0LmluZGV4JztcclxuXHJcbi8vIEZvcm0gQ29tcG9uZW50c1xyXG5leHBvcnQgKiBmcm9tICcuL2NvbXBvbmVudHMvaXh0LWV4cHJlc3Npb24tYnVpbGRlci9peHQtZXhwcmVzc2lvbi1idWlsZGVyLmluZGV4JztcclxuXHJcbi8vIERpYWdyYW0gQ29tcG9uZW50c1xyXG5leHBvcnQgKiBmcm9tICcuL2NvbXBvbmVudHMvaXh0LWRpYWdyYW0vaXh0LWRpYWdyYW0uaW5kZXgnO1xyXG5leHBvcnQgKiBmcm9tICcuL2NvbXBvbmVudHMvaXh0LWRpYWdyYW0vdHlwZXMvY2xhenovaXh0LWNsYXp6LmluZGV4JztcclxuZXhwb3J0ICogZnJvbSAnLi9jb21wb25lbnRzL2l4dC1kaWFncmFtL3R5cGVzL2RlcGxveW1lbnQvaXh0LWRlcGxveW1lbnQuaW5kZXgnO1xyXG5leHBvcnQgKiBmcm9tICcuL2NvbXBvbmVudHMvaXh0LWRpYWdyYW0vdHlwZXMvRUJORi9peHQuZWJuZi5pbmRleCc7XHJcbmV4cG9ydCAqIGZyb20gJy4vY29tcG9uZW50cy9peHQtZGlhZ3JhbS90eXBlcy9mbG93L2l4dC1mbG93LmluZGV4JztcclxuZXhwb3J0ICogZnJvbSAnLi9jb21wb25lbnRzL2l4dC1kaWFncmFtL3R5cGVzL2dhbm50L2dhbm50LmluZGV4JztcclxuZXhwb3J0ICogZnJvbSAnLi9jb21wb25lbnRzL2l4dC1kaWFncmFtL3R5cGVzL25ldHdvcmsvaXh0LW5ldHdvcmsuaW5kZXgnO1xyXG5leHBvcnQgKiBmcm9tICcuL2NvbXBvbmVudHMvaXh0LWRpYWdyYW0vdHlwZXMvc2Fua2V5L2l4dC1zYW5rZXkuaW5kZXgnO1xyXG5leHBvcnQgKiBmcm9tICcuL2NvbXBvbmVudHMvaXh0LWRpYWdyYW0vdHlwZXMvd2lyZWZyYW1lL2l4dC13aXJlZnJhbWUuaW5kZXgnO1xyXG5cclxuLy8gTGF5ZXIgTWFuYWdlbWVudFxyXG5leHBvcnQgKiBmcm9tICcuL2NvbXBvbmVudHMvaXh0LWxheWVyLW1hbmFnZXIvaXh0LWxheWVyLW1hbmFnZXIuaW5kZXgnO1xyXG5cclxuLy8gQ2FsZW5kYXIgQ29tcG9uZW50XHJcbmV4cG9ydCAqIGZyb20gJy4vY29tcG9uZW50cy9peHQtY2FsZW5kYXIvaXh0LWNhbGVuZGFyLmluZGV4JztcclxuXHJcbi8vIE1hcCBDb21wb25lbnRcclxuZXhwb3J0ICogZnJvbSAnLi9jb21wb25lbnRzL2l4dC1tYXAvaXh0LW1hcC5pbmRleCc7XHJcblxyXG4vLyBTcGxpdCBQYW5lIENvbXBvbmVudFxyXG5leHBvcnQgKiBmcm9tICcuL2NvbXBvbmVudHMvaXh0LXNwbGl0cGFuZS9pbmRleCc7XHJcblxyXG4vLyBBZGQgdG8gc3JjL3B1YmxpYy1hcGkudHNcclxuZXhwb3J0ICogZnJvbSAnLi9jb21wb25lbnRzL3RoZW1lL3RoZW1lLnR5cGVzJztcclxuZXhwb3J0ICogZnJvbSAnLi9jb21wb25lbnRzL3RoZW1lL3RoZW1lLmNvbG9ycyc7XHJcblxyXG4vLyBJbiBpeHRsYW4vc3JjL3B1YmxpYy1hcGkudHNcclxuZXhwb3J0ICogZnJvbSAnLi9jb21wb25lbnRzL2l4dC10YWJsZS9peHQtdGFibGUubW9kdWxlJztcclxuZXhwb3J0ICogZnJvbSAnLi9jb21wb25lbnRzL2l4dC10YWJsZS9peHQtdGFibGUuY29tcG9uZW50JztcclxuZXhwb3J0ICogZnJvbSAnLi9jb21wb25lbnRzL2l4dC10YWJsZS9peHQtdGFibGUuaW50ZXJmYWNlcyc7XHJcblxyXG4vLyBJbiBzcmMvcHVibGljLWFwaS50cywgYWRkOlxyXG5leHBvcnQgaW50ZXJmYWNlIFRhYmxlQ29uZmlnIHtcclxuICBjb2x1bW5zOiB7XHJcbiAgICBba2V5OiBzdHJpbmddOiB7XHJcbiAgICAgIHRpdGxlOiBzdHJpbmc7XHJcbiAgICAgIHR5cGU/OiBzdHJpbmc7XHJcbiAgICAgIHNvcnRhYmxlPzogYm9vbGVhbjsgXHJcbiAgICAgIGZpbHRlcmFibGU/OiBib29sZWFuO1xyXG4gICAgfVxyXG4gIH07XHJcbiAgc29ydGFibGU/OiBib29sZWFuO1xyXG4gIGZpbHRlcmFibGU/OiBib29sZWFuO1xyXG4gIHBhZ2VTaXplPzogbnVtYmVyO1xyXG59Il19
|       +-- fesm2022
|       |   --- dvanauken-ixtlan.mjs: import * as i0 from '@angular/core'; import { EventEmitter, Component, Input, Output, NgModule, ViewContainerRef, ViewChild, Injectable, TemplateRef, ContentChildren, HostListener, ChangeDetectionStrategy, Host, forwardRef } from '@angular/core'; import * as i1 from '@angular/common'; import { CommonModule } from '@angular/common'; import { MatButtonModule } from '@angular/material/button'; import { MatIconModule } from '@angular/material/icon'; import { firstValueFrom, Subscription, BehaviorSubject } from 'rxjs'; import * as i2 from '@angular/forms'; import { FormsModule, FormControl, ReactiveFormsModule, NG_VALUE_ACCESSOR } from '@angular/forms'; import * as i1$1 from '@angular/common/http'; import * as i4 from '@angular/router'; import { RouterModule } from '@angular/router'; import { trigger, state, style, transition, animate } from '@angular/animations'; import { BrowserAnimationsModule } from '@angular/platform-browser/animations'; import * as i2$1 from '@angular/cdk/drag-drop'; import { DragDropModule, moveItemInArray } from '@angular/cdk/drag-drop'; import * as d3 from 'd3'; import { MatAutocompleteModule } from '@angular/material/autocomplete'; import { debounceTime, distinctUntilChanged } from 'rxjs/operators'; // src/app/theme/theme.colors.ts const baseThemeColors = { primary: { base: '#4169E1', hover: '#2850c9', active: '#1e40af', text: '#ffffff' }, secondary: { base: '#6c757d', hover: '#5c636a', active: '#4d5154', text: '#ffffff' }, tertiary: { base: '#003057', hover: '#002649', active: '#001C3B', text: '#FFFFFF' // White text for contrast }, success: { base: '#28a745', hover: '#218838', active: '#1e7e34', text: '#ffffff' }, danger: { base: '#dc3545', hover: '#c82333', active: '#bd2130', text: '#ffffff' }, warning: { base: '#ffc107', hover: '#e0a800', active: '#d39e00', text: '#000000' }, info: { base: '#17a2b8', hover: '#138496', active: '#117a8b', text: '#ffffff' }, light: { base: '#f8f9fa', hover: '#e2e6ea', active: '#dae0e5', text: '#000000' }, dark: { base: '#343a40', hover: '#23272b', active: '#1d2124', text: '#ffffff' }, default: { base: '#ffffff', hover: '#f8f9fa', active: '#e9ecef', text: '#000000' } }; // src/app/theme/theme.colors.ts const unitedThemeColors = { primary: { base: '#0033A0', hover: '#00297A', active: '#002060', text: '#FFFFFF' // White text for contrast }, secondary: { base: '#6D2077', hover: '#5A1A63', active: '#48154F', text: '#FFFFFF' // White text for contrast }, tertiary: { base: '#003057', hover: '#002649', active: '#001C3B', text: '#FFFFFF' // White text for contrast }, success: { base: '#4CAF50', hover: '#43A047', active: '#388E3C', text: '#FFFFFF' // White text for contrast }, warning: { base: '#FF9800', hover: '#FB8C00', active: '#F57C00', text: '#000000' // Black text for readability }, danger: { base: '#E53935', hover: '#D32F2F', active: '#C62828', text: '#FFFFFF' // White text for contrast }, info: { base: '#17A2B8', hover: '#138496', active: '#117A8B', text: '#FFFFFF' // White text for contrast }, light: { base: '#F8F9FA', hover: '#E2E6EA', active: '#DAE0E5', text: '#000000' // Black text for readability }, dark: { base: '#343A40', hover: '#23272B', active: '#1D2124', text: '#FFFFFF' // White text for contrast }, default: { base: '#FFFFFF', hover: '#F8F9FA', active: '#E9ECEF', text: '#000000' // Black text for readability } }; // button.component.ts class IxtButtonComponent { constructor() { this.variant = 'primary'; this.size = 'md'; this.disabled = false; this.type = 'button'; this.theme = baseThemeColors; this.onClick = new EventEmitter(); this.isHovered = false; this.isActive = false; } get buttonStyles() { const variantColors = this.theme[this.variant]; let backgroundColor = variantColors.base; if (this.isActive) { backgroundColor = variantColors.active; } else if (this.isHovered) { backgroundColor = variantColors.hover; } const padding = { sm: '0.25rem 0.5rem', md: '0.5rem 1rem', lg: '0.75rem 1.5rem' }[this.size]; const fontSize = { sm: '0.875rem', md: '1rem', lg: '1.125rem' }[this.size]; return { backgroundColor, color: variantColors.text, padding, fontSize }; } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtButtonComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); } static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: IxtButtonComponent, selector: "ixt-button", inputs: { variant: "variant", size: "size", disabled: "disabled", type: "type", theme: "theme" }, outputs: { onClick: "onClick" }, ngImport: i0, template: ` <button [attr.type]="type" [disabled]="disabled" [ngStyle]="buttonStyles" (click)="onClick.emit($event)" (mouseenter)="isHovered = true" (mouseleave)="isHovered = false" (mousedown)="isActive = true" (mouseup)="isActive = false" (blur)="isActive = false; isHovered = false" > <ng-content select="[prefix]"></ng-content> <ng-content></ng-content> <ng-content select="[suffix]"></ng-content> </button> `, isInline: true, styles: [":host{display:inline-block}button{font-family:inherit;border:none;border-radius:4px;cursor:pointer;display:inline-flex;align-items:center;gap:.5rem;padding:.5rem 1rem;transition:background-color .2s,opacity .2s}button:disabled{cursor:not-allowed;opacity:.65}\n"], dependencies: [{ kind: "directive", type: i1.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtButtonComponent, decorators: [{ type: Component, args: [{ selector: 'ixt-button', template: ` <button [attr.type]="type" [disabled]="disabled" [ngStyle]="buttonStyles" (click)="onClick.emit($event)" (mouseenter)="isHovered = true" (mouseleave)="isHovered = false" (mousedown)="isActive = true" (mouseup)="isActive = false" (blur)="isActive = false; isHovered = false" > <ng-content select="[prefix]"></ng-content> <ng-content></ng-content> <ng-content select="[suffix]"></ng-content> </button> `, styles: [":host{display:inline-block}button{font-family:inherit;border:none;border-radius:4px;cursor:pointer;display:inline-flex;align-items:center;gap:.5rem;padding:.5rem 1rem;transition:background-color .2s,opacity .2s}button:disabled{cursor:not-allowed;opacity:.65}\n"] }] }], propDecorators: { variant: [{ type: Input }], size: [{ type: Input }], disabled: [{ type: Input }], type: [{ type: Input }], theme: [{ type: Input }], onClick: [{ type: Output }] } }); // ixt-button.module.ts class IxtButtonModule { static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtButtonModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); } static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "16.2.12", ngImport: i0, type: IxtButtonModule, declarations: [IxtButtonComponent], imports: [CommonModule, MatButtonModule, MatIconModule], exports: [IxtButtonComponent] }); } static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtButtonModule, imports: [CommonModule, MatButtonModule, MatIconModule] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtButtonModule, decorators: [{ type: NgModule, args: [{ declarations: [IxtButtonComponent], imports: [ CommonModule, MatButtonModule, MatIconModule, ], exports: [IxtButtonComponent] }] }] }); // index.ts class IxtDialogComponent { constructor() { this.modal = true; this.title = ''; this.variant = 'primary'; this.theme = baseThemeColors; this.close = new EventEmitter(); } open() { if (this.modal) { this.dialog.nativeElement.showModal(); } else { this.dialog.nativeElement.show(); } } closeDialog(result) { this.dialog.nativeElement.close(); this.close.emit(result); } get themeStyles() { const colors = this.theme[this.variant]; return { 'background-color': colors.base, 'color': colors.text, '--theme-hover': colors.hover, '--theme-active': colors.active, '--theme-text': colors.text }; } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtDialogComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); } static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: IxtDialogComponent, selector: "ixt-dialog", inputs: { modal: "modal", title: "title", variant: "variant", theme: "theme" }, outputs: { close: "close" }, viewQueries: [{ propertyName: "dialog", first: true, predicate: ["dialog"], descendants: true }, { propertyName: "contentHost", first: true, predicate: ["contentHost"], descendants: true, read: ViewContainerRef, static: true }], ngImport: i0, template: "<dialog #dialog role=\"dialog\" [ngStyle]=\"themeStyles\">\r\n <div role=\"document\">\r\n <header>\r\n <h2>{{ title }}</h2>\r\n </header>\r\n <section>\r\n <ng-template #contentHost></ng-template>\r\n </section>\r\n <footer>\r\n <button type=\"button\" (click)=\"closeDialog(false)\">Cancel</button>\r\n <button type=\"button\" (click)=\"closeDialog(true)\">OK</button>\r\n </footer>\r\n </div>\r\n</dialog>", styles: ["dialog[role=dialog]{border:1px solid var(--border-color);border-radius:8px;padding:0;position:fixed;top:50%;left:50%;transform:translate(-50%,-50%);z-index:1000;min-width:400px;max-width:600px;background:#fff;box-shadow:0 4px 6px #0000001a}dialog[role=dialog] div[role=document]{display:flex;flex-direction:column}dialog[role=dialog] header{background-color:var(--theme-base);padding:16px 24px;border-top-left-radius:8px;border-top-right-radius:8px}dialog[role=dialog] header h2{color:var(--theme-text);margin:0;font-size:1.25rem;font-weight:500}dialog[role=dialog] section{padding:24px;min-height:80px;max-height:60vh;overflow-y:auto}dialog[role=dialog] footer{padding:16px 24px;display:flex;justify-content:flex-end;gap:12px;border-top:1px solid var(--border-color);background:#f8f9fa;border-bottom-left-radius:8px;border-bottom-right-radius:8px}dialog[role=dialog] footer button{padding:8px 16px;border-radius:4px;font-weight:500;cursor:pointer;transition:background-color .2s}dialog[role=dialog] footer button:first-child{background:#fff;border:1px solid var(--border-color);color:#666}dialog[role=dialog] footer button:first-child:hover{background:#f0f0f0}dialog[role=dialog] footer button:last-child{background:var(--theme-base);color:var(--theme-text);border:none}dialog[role=dialog] footer button:last-child:hover{background:var(--theme-hover)}dialog[role=dialog] footer button:last-child:active{background:var(--theme-active)}\n"], dependencies: [{ kind: "directive", type: i1.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtDialogComponent, decorators: [{ type: Component, args: [{ selector: 'ixt-dialog', template: "<dialog #dialog role=\"dialog\" [ngStyle]=\"themeStyles\">\r\n <div role=\"document\">\r\n <header>\r\n <h2>{{ title }}</h2>\r\n </header>\r\n <section>\r\n <ng-template #contentHost></ng-template>\r\n </section>\r\n <footer>\r\n <button type=\"button\" (click)=\"closeDialog(false)\">Cancel</button>\r\n <button type=\"button\" (click)=\"closeDialog(true)\">OK</button>\r\n </footer>\r\n </div>\r\n</dialog>", styles: ["dialog[role=dialog]{border:1px solid var(--border-color);border-radius:8px;padding:0;position:fixed;top:50%;left:50%;transform:translate(-50%,-50%);z-index:1000;min-width:400px;max-width:600px;background:#fff;box-shadow:0 4px 6px #0000001a}dialog[role=dialog] div[role=document]{display:flex;flex-direction:column}dialog[role=dialog] header{background-color:var(--theme-base);padding:16px 24px;border-top-left-radius:8px;border-top-right-radius:8px}dialog[role=dialog] header h2{color:var(--theme-text);margin:0;font-size:1.25rem;font-weight:500}dialog[role=dialog] section{padding:24px;min-height:80px;max-height:60vh;overflow-y:auto}dialog[role=dialog] footer{padding:16px 24px;display:flex;justify-content:flex-end;gap:12px;border-top:1px solid var(--border-color);background:#f8f9fa;border-bottom-left-radius:8px;border-bottom-right-radius:8px}dialog[role=dialog] footer button{padding:8px 16px;border-radius:4px;font-weight:500;cursor:pointer;transition:background-color .2s}dialog[role=dialog] footer button:first-child{background:#fff;border:1px solid var(--border-color);color:#666}dialog[role=dialog] footer button:first-child:hover{background:#f0f0f0}dialog[role=dialog] footer button:last-child{background:var(--theme-base);color:var(--theme-text);border:none}dialog[role=dialog] footer button:last-child:hover{background:var(--theme-hover)}dialog[role=dialog] footer button:last-child:active{background:var(--theme-active)}\n"] }] }], ctorParameters: function () { return []; }, propDecorators: { dialog: [{ type: ViewChild, args: ['dialog'] }], contentHost: [{ type: ViewChild, args: ['contentHost', { read: ViewContainerRef, static: true }] }], modal: [{ type: Input }], title: [{ type: Input }], variant: [{ type: Input }], theme: [{ type: Input }], close: [{ type: Output }] } }); // ixt-success-dialog.component.ts class SuccessDialogComponent { constructor() { this.variant = 'success'; this.theme = baseThemeColors; } get themeStyles() { const colors = this.theme[this.variant]; return { 'background-color': `${colors.base}15`, 'color': '#0f0', 'border-color': colors.base }; } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: SuccessDialogComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); } static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: SuccessDialogComponent, selector: "ixt-success-dialog", inputs: { message: "message", variant: "variant", theme: "theme" }, ngImport: i0, template: "<div role=\"alert\">\r\n <p>{{ message || 'Operation completed successfully!' }}</p>\r\n</div>", styles: ["div[role=alert]{text-align:center;padding:20px;color:var(--theme-base)}div[role=alert] p{margin:0;font-size:1.1rem;line-height:1.5}\n"] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: SuccessDialogComponent, decorators: [{ type: Component, args: [{ selector: 'ixt-success-dialog', template: "<div role=\"alert\">\r\n <p>{{ message || 'Operation completed successfully!' }}</p>\r\n</div>", styles: ["div[role=alert]{text-align:center;padding:20px;color:var(--theme-base)}div[role=alert] p{margin:0;font-size:1.1rem;line-height:1.5}\n"] }] }], propDecorators: { message: [{ type: Input }], variant: [{ type: Input }], theme: [{ type: Input }] } }); // ixt-dialog.service.ts class IxtDialogService { constructor(componentFactoryResolver, appRef, injector) { this.componentFactoryResolver = componentFactoryResolver; this.appRef = appRef; this.injector = injector; } // async openDialog(component: Type<any>, title: string, message: string, modal: boolean = true): Promise<boolean> { // this.dialogComponentRef = this.componentFactoryResolver // .resolveComponentFactory(IxtDialogComponent) // .create(this.injector); // const instance = this.dialogComponentRef.instance; // instance.title = title; // instance.modal = modal; // this.appRef.attachView(this.dialogComponentRef.hostView); // const domElem = (this.dialogComponentRef.hostView as any).rootNodes[0]; // document.body.appendChild(domElem); // // Allow time for component initialization // await new Promise(resolve => requestAnimationFrame(resolve)); // // Just create once and set message // const contentComponent = instance.contentHost.createComponent(component); // contentComponent.instance.message = message; // instance.open(); // // Wait for dialog result // const result = await firstValueFrom(instance.close); // document.body.removeChild(domElem); // this.appRef.detachView(this.dialogComponentRef.hostView); // this.dialogComponentRef.destroy(); // return result; // } async openDialog(component, title, message, modal = true) { this.dialogComponentRef = this.componentFactoryResolver .resolveComponentFactory(IxtDialogComponent) .create(this.injector); const instance = this.dialogComponentRef.instance; instance.title = title; instance.modal = modal; this.appRef.attachView(this.dialogComponentRef.hostView); const domElem = this.dialogComponentRef.hostView.rootNodes[0]; document.body.appendChild(domElem); // Ensure ViewContainerRef is ready await new Promise(resolve => requestAnimationFrame(resolve)); // Clear any existing content instance.contentHost.clear(); // Create the component in the ViewContainerRef const contentComponentRef = instance.contentHost.createComponent(component); contentComponentRef.instance.message = message; instance.open(); const result = await firstValueFrom(instance.close); document.body.removeChild(domElem); this.appRef.detachView(this.dialogComponentRef.hostView); this.dialogComponentRef.destroy(); return result; } // async openDialog(component: Type<any>, title: string, message: string, modal: boolean = true): Promise<boolean> { // // Dynamically create the dialog component // this.dialogComponentRef = this.componentFactoryResolver // .resolveComponentFactory(IxtDialogComponent) // .create(this.injector); // // Attach the component to the view // this.appRef.attachView(this.dialogComponentRef.hostView); // // Append the component to the DOM // const componentElement = (this.dialogComponentRef.hostView as any).rootNodes[0]; // document.body.appendChild(componentElement); // // Set inputs on the dialog component // const instance = this.dialogComponentRef.instance; // instance.title = title; // instance.message = message; // Set message input // instance.modal = modal; // // Open the dialog // instance.open(); // // Return a promise that resolves when the dialog emits `close` // return firstValueFrom(instance.close); // } closeDialog(result) { if (this.dialogComponentRef) { this.dialogComponentRef.instance.closeDialog(result); } } // async success(message: string, title: string): Promise<boolean> { // return await this.openDialog(SuccessDialogComponent, title, true); // } // async success(message: string, title: string): Promise<boolean> { // const dialogRef = this.componentFactoryResolver // .resolveComponentFactory(SuccessDialogComponent) // .create(this.injector); // // Set the message before creating dialog // dialogRef.instance.message = message; // return await this.openDialog(SuccessDialogComponent, message, title, true); // } async success(message, title) { return await this.openDialog(SuccessDialogComponent, title, message, true); } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtDialogService, deps: [{ token: i0.ComponentFactoryResolver }, { token: i0.ApplicationRef }, { token: i0.Injector }], target: i0.ɵɵFactoryTarget.Injectable }); } static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtDialogService, providedIn: 'root' }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtDialogService, decorators: [{ type: Injectable, args: [{ providedIn: 'root' }] }], ctorParameters: function () { return [{ type: i0.ComponentFactoryResolver }, { type: i0.ApplicationRef }, { type: i0.Injector }]; } }); // ixt-dialog.module.ts class IxtDialogModule { static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtDialogModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); } static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "16.2.12", ngImport: i0, type: IxtDialogModule, declarations: [IxtDialogComponent, SuccessDialogComponent // Add this ], imports: [CommonModule, MatButtonModule, MatIconModule, FormsModule], exports: [IxtDialogComponent] }); } static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtDialogModule, providers: [IxtDialogService] // Add this , imports: [CommonModule, MatButtonModule, MatIconModule, FormsModule] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtDialogModule, decorators: [{ type: NgModule, args: [{ declarations: [ IxtDialogComponent, SuccessDialogComponent // Add this ], imports: [ CommonModule, MatButtonModule, MatIconModule, FormsModule ], exports: [IxtDialogComponent], providers: [IxtDialogService] // Add this }] }] }); class IxtTabComponent { constructor() { this.title = ''; } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtTabComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); } static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: IxtTabComponent, selector: "ixt-tab", inputs: { title: "title" }, viewQueries: [{ propertyName: "implicitContent", first: true, predicate: TemplateRef, descendants: true, static: true }], ngImport: i0, template: "<ng-template>\r\n <ng-content></ng-content>\r\n</ng-template>\r\n", styles: [":host{display:flex;flex:1;min-height:0;min-width:0}\n"] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtTabComponent, decorators: [{ type: Component, args: [{ selector: 'ixt-tab', template: "<ng-template>\r\n <ng-content></ng-content>\r\n</ng-template>\r\n", styles: [":host{display:flex;flex:1;min-height:0;min-width:0}\n"] }] }], propDecorators: { title: [{ type: Input }], implicitContent: [{ type: ViewChild, args: [TemplateRef, { static: true }] }] } }); class IxtTabsetComponent { constructor() { this.selectedIndex = 0; this.notificationText = 'Content Band Icons or Info'; } ngAfterContentInit() { // Set initial active tab if there are tabs if (this.tabs?.first) { this.selectTab(this.tabs.first); } // Listen for dynamic tab changes this.tabs?.changes.subscribe(() => { if (this.tabs.length && this.selectedIndex >= this.tabs.length) { this.selectTab(this.tabs.last); } }); } selectTab(tab) { this.selectedIndex = this.tabs.toArray().indexOf(tab); } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtTabsetComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); } static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: IxtTabsetComponent, selector: "ixt-tabset", queries: [{ propertyName: "tabs", predicate: IxtTabComponent }], ngImport: i0, template: "<div class=\"button-row\">\r\n <button *ngFor=\"let tab of tabs; let idx = index\"\r\n [class.selected]=\"selectedIndex === idx\"\r\n (click)=\"selectTab(tab)\">\r\n {{ tab.title }}\r\n </button>\r\n</div>\r\n<div class=\"content\">\r\n <div class=\"top-band\">\r\n <span>\uD83D\uDD14</span>\r\n <span>{{ notificationText }}</span>\r\n </div>\r\n <div *ngFor=\"let tab of tabs; let idx = index\"\r\n [id]=\"'tab' + (idx + 1)\"\r\n class=\"main-content\"\r\n [class.active]=\"selectedIndex === idx\">\r\n <ng-container *ngTemplateOutlet=\"tab.implicitContent\"></ng-container>\r\n </div>\r\n</div>\r\n", styles: [":host{display:flex;flex-direction:column;flex:1;min-height:0;min-width:0;height:100%}.button-row{display:flex;gap:10px;justify-content:flex-start;border-bottom:2px solid #007BFF;margin-bottom:-2px}.button-row button{background-color:#f0f0f0;border:1px solid #ccc;border-bottom:none;padding:10px 20px;cursor:pointer;font-size:16px;transition:background-color .3s,color .3s}.button-row button:hover{background-color:#e0e0e0}.button-row button.selected{background-color:#007bff;color:#fff;border:1px solid #007BFF;border-bottom:2px solid #007BFF;font-weight:700}.content{border:2px solid #007BFF;margin-top:-2px;display:flex;flex-direction:column;flex:1;min-height:0}.content .top-band{background-color:#007bff;color:#fff;padding:10px;display:flex;align-items:center;gap:10px}.content .main-content{display:none;flex:1;min-height:0}.content .main-content.active{display:flex;flex-direction:column;padding:20px;box-sizing:border-box}\n"], dependencies: [{ kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtTabsetComponent, decorators: [{ type: Component, args: [{ selector: 'ixt-tabset', template: "<div class=\"button-row\">\r\n <button *ngFor=\"let tab of tabs; let idx = index\"\r\n [class.selected]=\"selectedIndex === idx\"\r\n (click)=\"selectTab(tab)\">\r\n {{ tab.title }}\r\n </button>\r\n</div>\r\n<div class=\"content\">\r\n <div class=\"top-band\">\r\n <span>\uD83D\uDD14</span>\r\n <span>{{ notificationText }}</span>\r\n </div>\r\n <div *ngFor=\"let tab of tabs; let idx = index\"\r\n [id]=\"'tab' + (idx + 1)\"\r\n class=\"main-content\"\r\n [class.active]=\"selectedIndex === idx\">\r\n <ng-container *ngTemplateOutlet=\"tab.implicitContent\"></ng-container>\r\n </div>\r\n</div>\r\n", styles: [":host{display:flex;flex-direction:column;flex:1;min-height:0;min-width:0;height:100%}.button-row{display:flex;gap:10px;justify-content:flex-start;border-bottom:2px solid #007BFF;margin-bottom:-2px}.button-row button{background-color:#f0f0f0;border:1px solid #ccc;border-bottom:none;padding:10px 20px;cursor:pointer;font-size:16px;transition:background-color .3s,color .3s}.button-row button:hover{background-color:#e0e0e0}.button-row button.selected{background-color:#007bff;color:#fff;border:1px solid #007BFF;border-bottom:2px solid #007BFF;font-weight:700}.content{border:2px solid #007BFF;margin-top:-2px;display:flex;flex-direction:column;flex:1;min-height:0}.content .top-band{background-color:#007bff;color:#fff;padding:10px;display:flex;align-items:center;gap:10px}.content .main-content{display:none;flex:1;min-height:0}.content .main-content.active{display:flex;flex-direction:column;padding:20px;box-sizing:border-box}\n"] }] }], propDecorators: { tabs: [{ type: ContentChildren, args: [IxtTabComponent] }] } }); class IxtTabsetModule { static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtTabsetModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); } static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "16.2.12", ngImport: i0, type: IxtTabsetModule, declarations: [IxtTabsetComponent, IxtTabComponent], imports: [CommonModule], exports: [IxtTabsetComponent, IxtTabComponent] }); } static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtTabsetModule, imports: [CommonModule] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtTabsetModule, decorators: [{ type: NgModule, args: [{ declarations: [ IxtTabsetComponent, IxtTabComponent ], imports: [ CommonModule ], exports: [ IxtTabsetComponent, IxtTabComponent ] }] }] }); class IxtPanelComponent { constructor() { this.padding = true; this.bordered = true; this.elevated = false; } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtPanelComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); } static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: IxtPanelComponent, selector: "ixt-panel", inputs: { title: "title", caption: "caption", padding: "padding", bordered: "bordered", elevated: "elevated" }, ngImport: i0, template: "<div class=\"ixt-panel\" [class.bordered]=\"bordered\" [class.elevated]=\"elevated\">\r\n <div class=\"panel-title\" *ngIf=\"title\">\r\n {{ title }}\r\n </div>\r\n \r\n <div class=\"panel-content\" [class.with-padding]=\"padding\">\r\n <ng-content></ng-content>\r\n </div>\r\n \r\n <div class=\"panel-caption\" *ngIf=\"caption\">\r\n {{ caption }}\r\n </div>\r\n </div>\r\n ", styles: [":host{display:flex;flex-direction:column;flex:1;min-height:0}.ixt-panel{display:flex;flex-direction:column;flex:1;background:#fff;border-radius:8px;overflow:hidden;min-height:0}.ixt-panel.bordered{border:1px solid rgba(0,0,0,.12)}.ixt-panel.elevated{box-shadow:0 2px 1px -1px #0003,0 1px 1px #00000024,0 1px 3px #0000001f}.ixt-panel .panel-title{background-color:#06f;color:#fff;padding:16px 20px;font-size:16px;font-weight:500;letter-spacing:.15px;line-height:1.5;border-radius:8px 8px 0 0}.ixt-panel .panel-content{flex:1;min-height:0;overflow:auto}.ixt-panel .panel-content.with-padding{padding:20px}.ixt-panel .panel-caption{background-color:#f5f5f5;color:#000000de;padding:12px 20px;font-size:14px;border-top:1px solid rgba(0,0,0,.12);border-radius:0 0 8px 8px}\n"], dependencies: [{ kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtPanelComponent, decorators: [{ type: Component, args: [{ selector: 'ixt-panel', template: "<div class=\"ixt-panel\" [class.bordered]=\"bordered\" [class.elevated]=\"elevated\">\r\n <div class=\"panel-title\" *ngIf=\"title\">\r\n {{ title }}\r\n </div>\r\n \r\n <div class=\"panel-content\" [class.with-padding]=\"padding\">\r\n <ng-content></ng-content>\r\n </div>\r\n \r\n <div class=\"panel-caption\" *ngIf=\"caption\">\r\n {{ caption }}\r\n </div>\r\n </div>\r\n ", styles: [":host{display:flex;flex-direction:column;flex:1;min-height:0}.ixt-panel{display:flex;flex-direction:column;flex:1;background:#fff;border-radius:8px;overflow:hidden;min-height:0}.ixt-panel.bordered{border:1px solid rgba(0,0,0,.12)}.ixt-panel.elevated{box-shadow:0 2px 1px -1px #0003,0 1px 1px #00000024,0 1px 3px #0000001f}.ixt-panel .panel-title{background-color:#06f;color:#fff;padding:16px 20px;font-size:16px;font-weight:500;letter-spacing:.15px;line-height:1.5;border-radius:8px 8px 0 0}.ixt-panel .panel-content{flex:1;min-height:0;overflow:auto}.ixt-panel .panel-content.with-padding{padding:20px}.ixt-panel .panel-caption{background-color:#f5f5f5;color:#000000de;padding:12px 20px;font-size:14px;border-top:1px solid rgba(0,0,0,.12);border-radius:0 0 8px 8px}\n"] }] }], propDecorators: { title: [{ type: Input }], caption: [{ type: Input }], padding: [{ type: Input }], bordered: [{ type: Input }], elevated: [{ type: Input }] } }); class IxtPanelModule { static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtPanelModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); } static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "16.2.12", ngImport: i0, type: IxtPanelModule, declarations: [IxtPanelComponent], imports: [CommonModule, FormsModule], exports: [IxtPanelComponent] }); } static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtPanelModule, imports: [CommonModule, FormsModule] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtPanelModule, decorators: [{ type: NgModule, args: [{ declarations: [ IxtPanelComponent ], imports: [ CommonModule, FormsModule ], exports: [ IxtPanelComponent ] }] }] }); class IxtMenuComponent { get themeStyles() { const colors = this.theme[this.variant]; return { 'background-color': colors.base, 'color': colors.text, '--theme-hover': colors.hover, '--theme-active': colors.active }; } constructor(http) { this.http = http; this.linkAlignment = 'start'; this.src = ''; this.brandName = ''; this.brandLink = '/'; this.showSearch = false; this.searchPlaceholder = 'Search...'; // Theme inputs this.variant = 'tertiary'; this.theme = unitedThemeColors; this.searchSubmitted = new EventEmitter(); this.menuItems = []; this.searchTerm = ''; } ngOnInit() { if (this.src) { this.loadMenu(); } } loadMenu() { this.http.get(this.src).subscribe({ next: (data) => { this.menuItems = data.items; }, error: (error) => { console.error('Error loading menu:', error); } }); } onSearch(event) { event.preventDefault(); if (this.searchTerm.trim()) { this.searchSubmitted.emit(this.searchTerm); } } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtMenuComponent, deps: [{ token: i1$1.HttpClient }], target: i0.ɵɵFactoryTarget.Component }); } static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: IxtMenuComponent, selector: "ixt-menu", inputs: { linkAlignment: "linkAlignment", src: "src", brandName: "brandName", brandLogo: "brandLogo", brandLink: "brandLink", showSearch: "showSearch", searchPlaceholder: "searchPlaceholder", variant: "variant", theme: "theme" }, outputs: { searchSubmitted: "searchSubmitted" }, ngImport: i0, template: "<nav class=\"navbar\" [ngStyle]=\"themeStyles\" fxLayout=\"row\" fxLayoutAlign=\"start center\" fxFill>\r\n <div class=\"navbar-brand\" fxFlex=\"none\">\r\n <a [routerLink]=\"brandLink\" class=\"brand-link\">\r\n <img *ngIf=\"brandLogo\" [src]=\"brandLogo\" alt=\"Brand Logo\" class=\"brand-logo\">\r\n <span class=\"brand-name\">{{ brandName }}</span>\r\n </a>\r\n </div>\r\n\r\n <div class=\"nav-items\">\r\n <a *ngFor=\"let item of menuItems\" \r\n [routerLink]=\"item.link\" \r\n class=\"nav-link\">\r\n {{ item.name }}\r\n </a>\r\n </div>\r\n\r\n <div *ngIf=\"showSearch\" fxFlex=\"none\" class=\"search-container\">\r\n <form (ngSubmit)=\"onSearch($event)\" class=\"search-form\">\r\n <div class=\"input-group\">\r\n <input type=\"text\" \r\n [(ngModel)]=\"searchTerm\"\r\n name=\"search\"\r\n [placeholder]=\"searchPlaceholder\"\r\n class=\"form-control\">\r\n <button type=\"submit\" class=\"btn\">\r\n Search\r\n </button>\r\n </div>\r\n </form>\r\n </div>\r\n</nav>", styles: [":host{display:block;margin:0}.navbar{display:flex;align-items:center;justify-content:space-between;padding:.5rem 1rem}.navbar .navbar-brand .brand-link{display:flex;align-items:center;text-decoration:none;color:inherit}.navbar .navbar-brand .brand-link:hover{opacity:.9}.navbar .navbar-brand .brand-logo{height:30px;margin-right:.5rem}.navbar .navbar-brand .brand-name{font-size:1.25rem;font-weight:700;white-space:nowrap}.navbar .nav-items{padding:0 1rem}.navbar .nav-link{color:inherit;text-decoration:none;padding:.5rem .75rem;font-weight:400;opacity:.8;transition:all .15s ease-in-out}.navbar .nav-link:hover,.navbar .nav-link:active{background-color:var(--theme-hover)}.navbar .nav-link:active{opacity:1}.navbar .search-container{align-items:center}.navbar .search-container .search-form{margin:.5rem}\n"], dependencies: [{ kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i1.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }, { kind: "directive", type: i2.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { kind: "directive", type: i2.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { kind: "directive", type: i2.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "directive", type: i2.NgForm, selector: "form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]", inputs: ["ngFormOptions"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { kind: "directive", type: i4.RouterLink, selector: "[routerLink]", inputs: ["target", "queryParams", "fragment", "queryParamsHandling", "state", "relativeTo", "preserveFragment", "skipLocationChange", "replaceUrl", "routerLink"] }] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtMenuComponent, decorators: [{ type: Component, args: [{ selector: 'ixt-menu', template: "<nav class=\"navbar\" [ngStyle]=\"themeStyles\" fxLayout=\"row\" fxLayoutAlign=\"start center\" fxFill>\r\n <div class=\"navbar-brand\" fxFlex=\"none\">\r\n <a [routerLink]=\"brandLink\" class=\"brand-link\">\r\n <img *ngIf=\"brandLogo\" [src]=\"brandLogo\" alt=\"Brand Logo\" class=\"brand-logo\">\r\n <span class=\"brand-name\">{{ brandName }}</span>\r\n </a>\r\n </div>\r\n\r\n <div class=\"nav-items\">\r\n <a *ngFor=\"let item of menuItems\" \r\n [routerLink]=\"item.link\" \r\n class=\"nav-link\">\r\n {{ item.name }}\r\n </a>\r\n </div>\r\n\r\n <div *ngIf=\"showSearch\" fxFlex=\"none\" class=\"search-container\">\r\n <form (ngSubmit)=\"onSearch($event)\" class=\"search-form\">\r\n <div class=\"input-group\">\r\n <input type=\"text\" \r\n [(ngModel)]=\"searchTerm\"\r\n name=\"search\"\r\n [placeholder]=\"searchPlaceholder\"\r\n class=\"form-control\">\r\n <button type=\"submit\" class=\"btn\">\r\n Search\r\n </button>\r\n </div>\r\n </form>\r\n </div>\r\n</nav>", styles: [":host{display:block;margin:0}.navbar{display:flex;align-items:center;justify-content:space-between;padding:.5rem 1rem}.navbar .navbar-brand .brand-link{display:flex;align-items:center;text-decoration:none;color:inherit}.navbar .navbar-brand .brand-link:hover{opacity:.9}.navbar .navbar-brand .brand-logo{height:30px;margin-right:.5rem}.navbar .navbar-brand .brand-name{font-size:1.25rem;font-weight:700;white-space:nowrap}.navbar .nav-items{padding:0 1rem}.navbar .nav-link{color:inherit;text-decoration:none;padding:.5rem .75rem;font-weight:400;opacity:.8;transition:all .15s ease-in-out}.navbar .nav-link:hover,.navbar .nav-link:active{background-color:var(--theme-hover)}.navbar .nav-link:active{opacity:1}.navbar .search-container{align-items:center}.navbar .search-container .search-form{margin:.5rem}\n"] }] }], ctorParameters: function () { return [{ type: i1$1.HttpClient }]; }, propDecorators: { linkAlignment: [{ type: Input }], src: [{ type: Input }], brandName: [{ type: Input }], brandLogo: [{ type: Input }], brandLink: [{ type: Input }], showSearch: [{ type: Input }], searchPlaceholder: [{ type: Input }], variant: [{ type: Input }], theme: [{ type: Input }], searchSubmitted: [{ type: Output }] } }); class IxtMenuModule { static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtMenuModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); } static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "16.2.12", ngImport: i0, type: IxtMenuModule, declarations: [IxtMenuComponent], imports: [CommonModule, FormsModule, RouterModule], exports: [IxtMenuComponent] }); } static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtMenuModule, imports: [CommonModule, FormsModule, RouterModule] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtMenuModule, decorators: [{ type: NgModule, args: [{ declarations: [ IxtMenuComponent ], imports: [ CommonModule, FormsModule, RouterModule ], exports: [ IxtMenuComponent ] }] }] }); // ixt-menu.index.ts // ixt-tree.component.ts class IxtTreeComponent { constructor() { this.nodes = []; this.nodeExpanded = new EventEmitter(); this.nodeCollapsed = new EventEmitter(); this.nodeSelected = new EventEmitter(); } toggleNode(node, event) { event.stopPropagation(); if (node.children && node.children.length > 0) { node.expanded = !node.expanded; if (node.expanded) { this.nodeExpanded.emit(node); } else { this.nodeCollapsed.emit(node); } } } selectNode(node, event) { event.stopPropagation(); this.nodeSelected.emit(node); } trackByFn(index, item) { return item.id; } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtTreeComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); } static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: IxtTreeComponent, selector: "ixt-tree", inputs: { nodes: "nodes" }, outputs: { nodeExpanded: "nodeExpanded", nodeCollapsed: "nodeCollapsed", nodeSelected: "nodeSelected" }, ngImport: i0, template: "<ul class=\"tree-container\">\r\n <ng-container *ngFor=\"let node of nodes; trackBy: trackByFn\">\r\n <li class=\"tree-node\" (click)=\"selectNode(node, $event)\">\r\n <div class=\"node-content\">\r\n <span class=\"icon-container\" (click)=\"toggleNode(node, $event)\">\r\n <ng-container *ngIf=\"node.children && node.children.length > 0\">\r\n <span class=\"expand-icon\" [class.expanded]=\"node.expanded\">\r\n {{node.expanded ? '\u25BC' : '\u25B6'}}\r\n </span>\r\n </ng-container>\r\n <span class=\"node-icon\">\r\n {{(node.children && node.children.length > 0) ? '\uD83D\uDCC1' : '\uD83D\uDCC4'}}\r\n </span>\r\n </span>\r\n <span class=\"node-label\">{{node.label}}</span>\r\n </div>\r\n <ul *ngIf=\"node.expanded && node.children\" class=\"tree-children\">\r\n <ixt-tree\r\n [nodes]=\"node.children\"\r\n (nodeExpanded)=\"nodeExpanded.emit($event)\"\r\n (nodeCollapsed)=\"nodeCollapsed.emit($event)\"\r\n (nodeSelected)=\"nodeSelected.emit($event)\">\r\n </ixt-tree>\r\n </ul>\r\n </li>\r\n </ng-container>\r\n</ul>\r\n\r\n", styles: [".tree-container{list-style:none;padding:0;margin:0}.tree-node{padding:0;margin:0}.tree-node .node-content{display:flex;align-items:center;padding:4px 8px;cursor:pointer;transition:background-color .2s ease}.tree-node .node-content:hover{background-color:#0000000a}.tree-node .icon-container{display:flex;align-items:center;margin-right:4px}.tree-node .icon-container .expand-icon{font-size:12px;width:16px;height:16px;display:inline-flex;align-items:center;justify-content:center;cursor:pointer;transition:transform .2s ease}.tree-node .icon-container .expand-icon.expanded{transform:rotate(0)}.tree-node .icon-container .expand-icon:not(.expanded){transform:rotate(-90deg)}.tree-node .icon-container .node-icon{font-size:14px;margin-right:4px;opacity:.7}.tree-node .node-label{font-size:14px;color:#000000de}.tree-children{list-style:none;padding-left:24px;margin:0}\n"], dependencies: [{ kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: IxtTreeComponent, selector: "ixt-tree", inputs: ["nodes"], outputs: ["nodeExpanded", "nodeCollapsed", "nodeSelected"] }] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtTreeComponent, decorators: [{ type: Component, args: [{ selector: 'ixt-tree', template: "<ul class=\"tree-container\">\r\n <ng-container *ngFor=\"let node of nodes; trackBy: trackByFn\">\r\n <li class=\"tree-node\" (click)=\"selectNode(node, $event)\">\r\n <div class=\"node-content\">\r\n <span class=\"icon-container\" (click)=\"toggleNode(node, $event)\">\r\n <ng-container *ngIf=\"node.children && node.children.length > 0\">\r\n <span class=\"expand-icon\" [class.expanded]=\"node.expanded\">\r\n {{node.expanded ? '\u25BC' : '\u25B6'}}\r\n </span>\r\n </ng-container>\r\n <span class=\"node-icon\">\r\n {{(node.children && node.children.length > 0) ? '\uD83D\uDCC1' : '\uD83D\uDCC4'}}\r\n </span>\r\n </span>\r\n <span class=\"node-label\">{{node.label}}</span>\r\n </div>\r\n <ul *ngIf=\"node.expanded && node.children\" class=\"tree-children\">\r\n <ixt-tree\r\n [nodes]=\"node.children\"\r\n (nodeExpanded)=\"nodeExpanded.emit($event)\"\r\n (nodeCollapsed)=\"nodeCollapsed.emit($event)\"\r\n (nodeSelected)=\"nodeSelected.emit($event)\">\r\n </ixt-tree>\r\n </ul>\r\n </li>\r\n </ng-container>\r\n</ul>\r\n\r\n", styles: [".tree-container{list-style:none;padding:0;margin:0}.tree-node{padding:0;margin:0}.tree-node .node-content{display:flex;align-items:center;padding:4px 8px;cursor:pointer;transition:background-color .2s ease}.tree-node .node-content:hover{background-color:#0000000a}.tree-node .icon-container{display:flex;align-items:center;margin-right:4px}.tree-node .icon-container .expand-icon{font-size:12px;width:16px;height:16px;display:inline-flex;align-items:center;justify-content:center;cursor:pointer;transition:transform .2s ease}.tree-node .icon-container .expand-icon.expanded{transform:rotate(0)}.tree-node .icon-container .expand-icon:not(.expanded){transform:rotate(-90deg)}.tree-node .icon-container .node-icon{font-size:14px;margin-right:4px;opacity:.7}.tree-node .node-label{font-size:14px;color:#000000de}.tree-children{list-style:none;padding-left:24px;margin:0}\n"] }] }], propDecorators: { nodes: [{ type: Input }], nodeExpanded: [{ type: Output }], nodeCollapsed: [{ type: Output }], nodeSelected: [{ type: Output }] } }); class IxtTreeModule { static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtTreeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); } static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "16.2.12", ngImport: i0, type: IxtTreeModule, declarations: [IxtTreeComponent], imports: [CommonModule, FormsModule], exports: [IxtTreeComponent] }); } static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtTreeModule, imports: [CommonModule, FormsModule] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtTreeModule, decorators: [{ type: NgModule, args: [{ declarations: [ IxtTreeComponent ], imports: [ CommonModule, FormsModule ], exports: [ IxtTreeComponent ] }] }] }); // ixt-tree.index.ts // ixt-accordian.component.ts class IxtAccordianComponent { constructor() { this.panels = []; this.allowMultiple = false; } togglePanel(index) { if (!this.allowMultiple) { this.panels.forEach((panel, i) => { if (i !== index) panel.isOpen = false; }); } this.panels[index].isOpen = !this.panels[index].isOpen; } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtAccordianComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); } static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: IxtAccordianComponent, selector: "ixt-accordian", inputs: { panels: "panels", allowMultiple: "allowMultiple" }, ngImport: i0, template: "<!-- ixt-accordian.component.html -->\r\n<div class=\"ixt-accordion\">\r\n <div class=\"accordion-panel\" *ngFor=\"let panel of panels; let i = index\">\r\n <div class=\"panel-header\" (click)=\"togglePanel(i)\">\r\n <span class=\"panel-title\">{{panel.title}}</span>\r\n <span class=\"material-icons\" [class.open]=\"panel.isOpen\">\r\n expand_more\r\n </span>\r\n </div>\r\n <div class=\"panel-content\" [@slideInOut]=\"panel.isOpen ? 'open' : 'closed'\">\r\n {{panel.content}}\r\n </div>\r\n </div>\r\n </div>", styles: [".ixt-accordion{width:100%;border:1px solid #e0e0e0;border-radius:4px;overflow:hidden}.accordion-panel{border-bottom:1px solid #e0e0e0}.accordion-panel:last-child{border-bottom:none}.panel-header{display:flex;justify-content:space-between;align-items:center;padding:16px;background-color:#fff;cursor:pointer;transition:background-color .2s ease}.panel-header:hover{background-color:#f5f5f5}.panel-title{font-size:16px;font-weight:500}.material-icons{color:#4169e1;transition:transform .2s ease}.material-icons.open{transform:rotate(180deg)}.panel-content{padding:0 16px;background-color:#fff;overflow:hidden}\n"], dependencies: [{ kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }], animations: [ trigger('slideInOut', [ state('open', style({ height: '*', opacity: 1 })), state('closed', style({ height: '0', opacity: 0 })), transition('closed <=> open', [ animate('200ms ease-in-out') ]) ]) ] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtAccordianComponent, decorators: [{ type: Component, args: [{ selector: 'ixt-accordian', animations: [ trigger('slideInOut', [ state('open', style({ height: '*', opacity: 1 })), state('closed', style({ height: '0', opacity: 0 })), transition('closed <=> open', [ animate('200ms ease-in-out') ]) ]) ], template: "<!-- ixt-accordian.component.html -->\r\n<div class=\"ixt-accordion\">\r\n <div class=\"accordion-panel\" *ngFor=\"let panel of panels; let i = index\">\r\n <div class=\"panel-header\" (click)=\"togglePanel(i)\">\r\n <span class=\"panel-title\">{{panel.title}}</span>\r\n <span class=\"material-icons\" [class.open]=\"panel.isOpen\">\r\n expand_more\r\n </span>\r\n </div>\r\n <div class=\"panel-content\" [@slideInOut]=\"panel.isOpen ? 'open' : 'closed'\">\r\n {{panel.content}}\r\n </div>\r\n </div>\r\n </div>", styles: [".ixt-accordion{width:100%;border:1px solid #e0e0e0;border-radius:4px;overflow:hidden}.accordion-panel{border-bottom:1px solid #e0e0e0}.accordion-panel:last-child{border-bottom:none}.panel-header{display:flex;justify-content:space-between;align-items:center;padding:16px;background-color:#fff;cursor:pointer;transition:background-color .2s ease}.panel-header:hover{background-color:#f5f5f5}.panel-title{font-size:16px;font-weight:500}.material-icons{color:#4169e1;transition:transform .2s ease}.material-icons.open{transform:rotate(180deg)}.panel-content{padding:0 16px;background-color:#fff;overflow:hidden}\n"] }] }], propDecorators: { panels: [{ type: Input }], allowMultiple: [{ type: Input }] } }); class IxtAccordianModule { static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtAccordianModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); } static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "16.2.12", ngImport: i0, type: IxtAccordianModule, declarations: [IxtAccordianComponent], imports: [CommonModule, BrowserAnimationsModule], exports: [IxtAccordianComponent] }); } static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtAccordianModule, imports: [CommonModule, BrowserAnimationsModule] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtAccordianModule, decorators: [{ type: NgModule, args: [{ declarations: [ IxtAccordianComponent ], imports: [ CommonModule, BrowserAnimationsModule ], exports: [ IxtAccordianComponent ] }] }] }); // src/components/ixt-accordian/ixt-accordian.index.ts // ixt-canvas.component.ts class IxtCanvasComponent { constructor() { this.isDrawing = false; this.lastPoint = null; // Drawing settings this.lineWidth = 2; this.strokeStyle = '#000000'; } ngAfterViewInit() { const canvas = this.canvasRef.nativeElement; this.ctx = canvas.getContext('2d'); // Set canvas size to match container this.resizeCanvas(); // Initialize canvas settings this.initializeCanvas(); } resizeCanvas() { const canvas = this.canvasRef.nativeElement; canvas.width = canvas.offsetWidth; canvas.height = canvas.offsetHeight; this.initializeCanvas(); } initializeCanvas() { this.ctx.lineWidth = this.lineWidth; this.ctx.strokeStyle = this.strokeStyle; this.ctx.lineCap = 'round'; this.ctx.lineJoin = 'round'; } onMouseDown(event) { this.isDrawing = true; this.lastPoint = this.getMousePos(event); } onMouseMove(event) { if (!this.isDrawing) return; const currentPoint = this.getMousePos(event); this.draw(this.lastPoint, currentPoint); this.lastPoint = currentPoint; } onMouseUp() { this.isDrawing = false; this.lastPoint = null; } getMousePos(event) { const rect = this.canvasRef.nativeElement.getBoundingClientRect(); return { x: event.clientX - rect.left, y: event.clientY - rect.top }; } draw(start, end) { this.ctx.beginPath(); this.ctx.moveTo(start.x, start.y); this.ctx.lineTo(end.x, end.y); this.ctx.stroke(); this.ctx.closePath(); } // Public methods for external control setColor(color) { this.strokeStyle = color; this.ctx.strokeStyle = color; } setLineWidth(width) { this.lineWidth = width; this.ctx.lineWidth = width; } clear() { const canvas = this.canvasRef.nativeElement; this.ctx.clearRect(0, 0, canvas.width, canvas.height); } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtCanvasComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); } static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: IxtCanvasComponent, selector: "ixt-canvas", host: { listeners: { "window:resize": "resizeCanvas()", "mousedown": "onMouseDown($event)", "mousemove": "onMouseMove($event)", "mouseup": "onMouseUp()", "mouseleave": "onMouseUp()" } }, viewQueries: [{ propertyName: "canvasRef", first: true, predicate: ["canvas"], descendants: true }], ngImport: i0, template: "IxtCanvas Template\r\n\r\n<!-- ixt-canvas.component.html -->\r\n<div class=\"canvas-container\">\r\n <canvas #canvas></canvas>\r\n</div>", styles: [".canvas-container{width:100%;height:100%;min-height:400px;background-color:#fff;border:1px solid #cccccc}.canvas-container canvas{width:100%;height:100%;cursor:crosshair}\n"] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtCanvasComponent, decorators: [{ type: Component, args: [{ selector: 'ixt-canvas', template: "IxtCanvas Template\r\n\r\n<!-- ixt-canvas.component.html -->\r\n<div class=\"canvas-container\">\r\n <canvas #canvas></canvas>\r\n</div>", styles: [".canvas-container{width:100%;height:100%;min-height:400px;background-color:#fff;border:1px solid #cccccc}.canvas-container canvas{width:100%;height:100%;cursor:crosshair}\n"] }] }], propDecorators: { canvasRef: [{ type: ViewChild, args: ['canvas'] }], resizeCanvas: [{ type: HostListener, args: ['window:resize'] }], onMouseDown: [{ type: HostListener, args: ['mousedown', ['$event']] }], onMouseMove: [{ type: HostListener, args: ['mousemove', ['$event']] }], onMouseUp: [{ type: HostListener, args: ['mouseup'] }, { type: HostListener, args: ['mouseleave'] }] } }); // ixt-canvas.module.ts class IxtCanvasModule { static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtCanvasModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); } static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "16.2.12", ngImport: i0, type: IxtCanvasModule, declarations: [IxtCanvasComponent], imports: [CommonModule], exports: [IxtCanvasComponent] }); } static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtCanvasModule, imports: [CommonModule] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtCanvasModule, decorators: [{ type: NgModule, args: [{ declarations: [ IxtCanvasComponent ], imports: [ CommonModule ], exports: [ IxtCanvasComponent ] }] }] }); // ixt-canvas.index.ts // ixt-canvas.component.ts class IxtViewportComponent { constructor() { // Drawing state this.isDrawing = false; this.lastPoint = null; // Zooming state this.isZooming = false; this.zoomStart = null; this.zoomRect = null; this.transform = { scale: 1, offsetX: 0, offsetY: 0 }; // Drawing settings this.lineWidth = 2; this.strokeStyle = '#000000'; } ngAfterViewInit() { const canvas = this.canvasRef.nativeElement; this.ctx = canvas.getContext('2d'); this.resizeCanvas(); this.initializeCanvas(); this.drawTestGraphics(); } drawTestGraphics() { // Clear canvas this.clear(); // Draw some shapes this.ctx.save(); // Apply current transform this.ctx.scale(this.transform.scale, this.transform.scale); this.ctx.translate(this.transform.offsetX, this.transform.offsetY); // Rectangle this.ctx.fillStyle = '#ff0000'; this.ctx.fillRect(50, 50, 100, 100); // Circle this.ctx.beginPath(); this.ctx.fillStyle = '#0000ff'; this.ctx.arc(250, 100, 50, 0, Math.PI * 2); this.ctx.fill(); // Star this.drawStar(400, 100, 5, 50, 25); // Text this.ctx.fillStyle = '#000000'; this.ctx.font = '20px Arial'; this.ctx.fillText('Test Graphics', 50, 200); // Grid pattern this.drawGrid(); this.ctx.restore(); } drawGrid() { this.ctx.strokeStyle = '#cccccc'; this.ctx.lineWidth = 0.5; // Draw vertical lines for (let x = 0; x < 800; x += 50) { this.ctx.beginPath(); this.ctx.moveTo(x, 0); this.ctx.lineTo(x, 600); this.ctx.stroke(); } // Draw horizontal lines for (let y = 0; y < 600; y += 50) { this.ctx.beginPath(); this.ctx.moveTo(0, y); this.ctx.lineTo(800, y); this.ctx.stroke(); } } drawStar(cx, cy, spikes, outerRadius, innerRadius) { this.ctx.beginPath(); this.ctx.fillStyle = '#ffff00'; let rot = Math.PI / 2 * 3; let x = cx; let y = cy; let step = Math.PI / spikes; this.ctx.moveTo(cx, cy - outerRadius); for (let i = 0; i < spikes; i++) { x = cx + Math.cos(rot) * outerRadius; y = cy + Math.sin(rot) * outerRadius; this.ctx.lineTo(x, y); rot += step; x = cx + Math.cos(rot) * innerRadius; y = cy + Math.sin(rot) * innerRadius; this.ctx.lineTo(x, y); rot += step; } this.ctx.lineTo(cx, cy - outerRadius); this.ctx.closePath(); this.ctx.fill(); } resizeCanvas() { const canvas = this.canvasRef.nativeElement; canvas.width = canvas.offsetWidth; canvas.height = canvas.offsetHeight; this.initializeCanvas(); this.drawTestGraphics(); } initializeCanvas() { this.ctx.lineWidth = this.lineWidth; this.ctx.strokeStyle = this.strokeStyle; this.ctx.lineCap = 'round'; this.ctx.lineJoin = 'round'; } onMouseDown(event) { if (event.shiftKey) { // Start zooming when shift is held this.isZooming = true; this.zoomStart = this.getMousePos(event); this.zoomRect = null; } else { this.isDrawing = true; this.lastPoint = this.getMousePos(event); } } onMouseMove(event) { if (this.isZooming && this.zoomStart) { const currentPoint = this.getMousePos(event); // Calculate rubber band rectangle this.zoomRect = { x: Math.min(this.zoomStart.x, currentPoint.x), y: Math.min(this.zoomStart.y, currentPoint.y), width: Math.abs(currentPoint.x - this.zoomStart.x), height: Math.abs(currentPoint.y - this.zoomStart.y) }; // Redraw scene with rubber band this.drawTestGraphics(); this.drawRubberBand(); } else if (this.isDrawing && this.lastPoint) { const currentPoint = this.getMousePos(event); this.draw(this.lastPoint, currentPoint); this.lastPoint = currentPoint; } } onMouseUp(event) { if (this.isZooming && this.zoomRect) { // Calculate new transform based on zoom rectangle const canvas = this.canvasRef.nativeElement; const scaleX = canvas.width / this.zoomRect.width; const scaleY = canvas.height / this.zoomRect.height; const newScale = Math.min(scaleX, scaleY); // Update transform this.transform.scale *= newScale; this.transform.offsetX -= this.zoomRect.x / this.transform.scale; this.transform.offsetY -= this.zoomRect.y / this.transform.scale; // Redraw with new transform this.drawTestGraphics(); } this.isDrawing = false; this.isZooming = false; this.lastPoint = null; this.zoomStart = null; this.zoomRect = null; } onMouseLeave() { this.isDrawing = false; this.isZooming = false; this.lastPoint = null; this.zoomStart = null; this.zoomRect = null; } drawRubberBand() { if (!this.zoomRect) return; this.ctx.save(); this.ctx.strokeStyle = '#000000'; this.ctx.lineWidth = 1; this.ctx.setLineDash([5, 5]); // Draw rubber band rectangle this.ctx.strokeRect(this.zoomRect.x, this.zoomRect.y, this.zoomRect.width, this.zoomRect.height); this.ctx.restore(); } getMousePos(event) { const rect = this.canvasRef.nativeElement.getBoundingClientRect(); return { x: event.clientX - rect.left, y: event.clientY - rect.top }; } draw(start, end) { this.ctx.save(); this.ctx.scale(this.transform.scale, this.transform.scale); this.ctx.translate(this.transform.offsetX, this.transform.offsetY); this.ctx.beginPath(); this.ctx.moveTo(start.x / this.transform.scale, start.y / this.transform.scale); this.ctx.lineTo(end.x / this.transform.scale, end.y / this.transform.scale); this.ctx.stroke(); this.ctx.closePath(); this.ctx.restore(); } // Public methods setColor(color) { this.strokeStyle = color; this.ctx.strokeStyle = color; } setLineWidth(width) { this.lineWidth = width; this.ctx.lineWidth = width; } clear() { const canvas = this.canvasRef.nativeElement; this.ctx.clearRect(0, 0, canvas.width, canvas.height); } resetZoom() { this.transform = { scale: 1, offsetX: 0, offsetY: 0 }; this.drawTestGraphics(); } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtViewportComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); } static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: IxtViewportComponent, selector: "ixt-viewport", host: { listeners: { "window:resize": "resizeCanvas()", "mousedown": "onMouseDown($event)", "mousemove": "onMouseMove($event)", "mouseup": "onMouseUp($event)", "mouseleave": "onMouseLeave()" } }, viewQueries: [{ propertyName: "canvasRef", first: true, predicate: ["canvas"], descendants: true }], ngImport: i0, template: "<!-- ixt-canvas.component.html -->\r\n<div class=\"viewport-container\">\r\n <canvas #canvas></canvas>\r\n </div>", styles: [".viewport-container{width:100%;height:100%;min-height:400px;background-color:#fff;border:1px solid #cccccc}.viewport-container canvas{width:100%;height:100%;cursor:crosshair}\n"] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtViewportComponent, decorators: [{ type: Component, args: [{ selector: 'ixt-viewport', template: "<!-- ixt-canvas.component.html -->\r\n<div class=\"viewport-container\">\r\n <canvas #canvas></canvas>\r\n </div>", styles: [".viewport-container{width:100%;height:100%;min-height:400px;background-color:#fff;border:1px solid #cccccc}.viewport-container canvas{width:100%;height:100%;cursor:crosshair}\n"] }] }], propDecorators: { canvasRef: [{ type: ViewChild, args: ['canvas'] }], resizeCanvas: [{ type: HostListener, args: ['window:resize'] }], onMouseDown: [{ type: HostListener, args: ['mousedown', ['$event']] }], onMouseMove: [{ type: HostListener, args: ['mousemove', ['$event']] }], onMouseUp: [{ type: HostListener, args: ['mouseup', ['$event']] }], onMouseLeave: [{ type: HostListener, args: ['mouseleave'] }] } }); // ixt-canvas.module.ts class IxtViewportModule { static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtViewportModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); } static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "16.2.12", ngImport: i0, type: IxtViewportModule, declarations: [IxtViewportComponent], imports: [CommonModule], exports: [IxtViewportComponent] }); } static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtViewportModule, imports: [CommonModule] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtViewportModule, decorators: [{ type: NgModule, args: [{ declarations: [ IxtViewportComponent ], imports: [ CommonModule ], exports: [ IxtViewportComponent ] }] }] }); // ixt-canvas.index.ts // // You might want to export interfaces/types if they're needed elsewhere // export interface DrawingConfig { // color?: string; // lineWidth?: number; // } // ixt-expression-builder.component.ts class IxtExpressionBuilderComponent { constructor() { this.group = { type: 'group', operator: 'and', children: [] }; this.level = 0; this.groupChange = new EventEmitter(); this.fields = [ { id: 'al', label: 'Airline', type: 'text' }, { id: 'base', label: 'Base', type: 'text' }, { id: 'ref', label: 'Reference', type: 'text' } ]; this.operators = { text: [ { id: 'eq', label: '=', type: 'single' }, { id: 'neq', label: '≠', type: 'single' }, { id: 'in', label: 'IN', type: 'multiple' }, { id: 'not_in', label: 'NOT IN', type: 'multiple' } ] }; } get rootGroup() { return this.group; } ngOnInit() { if (!this.group || this.group.children.length === 0) { this.group = { type: 'group', operator: 'and', children: [ { type: 'expression', field: 'al', operator: 'eq', value: 'AA', values: [] }, { type: 'group', operator: 'or', children: [ { type: 'expression', field: 'base', operator: 'in', value: '', values: ['DFW', 'ORD', 'MIA'] }, { type: 'expression', field: 'ref', operator: 'in', value: '', values: ['DFW', 'ORD', 'MIA'] } ] } ] }; this.emitChange(); // Notify parent of the initial value } } // Rest of your code remains the same... addExpression() { const newExpression = { type: 'expression', field: '', operator: '', value: '', values: [] }; this.group.children.push(newExpression); this.emitChange(); } addGroup() { const newGroup = { type: 'group', operator: 'and', children: [] }; this.group.children.push(newGroup); this.emitChange(); } removeExpression(index) { this.group.children.splice(index, 1); this.emitChange(); } getOperators(fieldId) { const field = this.fields.find(f => f.id === fieldId); return field ? this.operators[field.type] || [] : []; } getOperatorType(operatorId) { for (const operators of Object.values(this.operators)) { const operator = operators.find(op => op.id === operatorId); if (operator) { return operator.type; } } return null; } addValue(expression) { if (!expression.values) { expression.values = []; } expression.values.push(''); this.emitChange(); } removeValue(expression, index) { if (expression.values) { expression.values.splice(index, 1); this.emitChange(); } } onChildGroupChange(index, childGroup) { this.group.children[index] = childGroup; this.emitChange(); } toJsonLogic() { return this.convertToJsonLogic(this.group); } convertToJsonLogic(node) { if (node.type === 'expression') { if (node.operator === 'in' || node.operator === 'not_in') { return { [node.operator === 'in' ? 'in' : '!in']: [ { var: node.field }, node.values || [] ] }; } return { [node.operator]: [ { var: node.field }, node.value ] }; } if (node.children.length === 0) return true; if (node.children.length === 1) { return this.convertToJsonLogic(node.children[0]); } return { [node.operator]: node.children.map(child => this.convertToJsonLogic(child)) }; } emitChange() { this.groupChange.emit(this.group); } updateValue(expression, index, value) { if (!expression.values) { expression.values = []; } expression.values[index] = value; this.emitChange(); } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtExpressionBuilderComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); } static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: IxtExpressionBuilderComponent, selector: "ixt-expression-builder", inputs: { group: "group", level: "level" }, outputs: { groupChange: "groupChange" }, ngImport: i0, template: "<!-- ixt-expression-builder.component.html -->\r\n<div class=\"expression-builder\">\r\n <div class=\"group-container\">\r\n <select [(ngModel)]=\"group.operator\" class=\"group-operator\">\r\n <option value=\"and\">AND</option>\r\n <option value=\"or\">OR</option>\r\n </select>\r\n\r\n <div class=\"expressions-list\">\r\n <div *ngFor=\"let node of rootGroup.children; let i = index\" class=\"expression-row\">\r\n <div *ngIf=\"node.type === 'expression'\" class=\"expression-container\">\r\n <select [(ngModel)]=\"node.field\" class=\"field-select\">\r\n <option value=\"\">Select Field</option>\r\n <option *ngFor=\"let field of fields\" [value]=\"field.id\">\r\n {{field.label}}\r\n </option>\r\n </select>\r\n\r\n <select [(ngModel)]=\"node.operator\" class=\"operator-select\">\r\n <option value=\"\">Select Operator</option>\r\n <option *ngFor=\"let op of getOperators(node.field)\" [value]=\"op.id\">\r\n {{op.label}}\r\n </option>\r\n </select>\r\n\r\n <ng-container [ngSwitch]=\"getOperatorType(node.operator)\">\r\n <input *ngSwitchCase=\"'single'\" \r\n type=\"text\" \r\n [(ngModel)]=\"node.value\" \r\n class=\"value-input\">\r\n \r\n <div *ngSwitchCase=\"'multiple'\" class=\"multi-value-container\">\r\n <div *ngFor=\"let val of node.values; let j = index\" class=\"multi-value-item\">\r\n <input type=\"text\" [(ngModel)]=\"node.values[j]\">\r\n <button (click)=\"removeValue(node, j)\" class=\"remove-btn\">\u00D7</button>\r\n </div>\r\n <button (click)=\"addValue(node)\" class=\"add-value\">+ Add Value</button>\r\n </div>\r\n </ng-container>\r\n\r\n <button (click)=\"removeExpression(i)\" class=\"remove-btn\">\u00D7</button>\r\n </div>\r\n\r\n <div *ngIf=\"node.type === 'group'\" class=\"nested-group\">\r\n <ixt-expression-builder\r\n [group]=\"node\"\r\n [level]=\"level + 1\"\r\n (groupChange)=\"onChildGroupChange(i, $event)\">\r\n </ixt-expression-builder>\r\n </div>\r\n </div>\r\n </div>\r\n\r\n <div class=\"action-buttons\">\r\n <button (click)=\"addExpression()\" class=\"add-btn\">Add Expression</button>\r\n <button (click)=\"addGroup()\" class=\"add-btn\">Add Group</button>\r\n </div>\r\n </div>\r\n</div>", styles: [".expression-builder{padding:1rem}.expression-builder .group-container{border-left:2px solid #ccc;margin-left:1rem;padding-left:1rem}.expression-builder .group-container:first-child{border-left:none;margin-left:0}.expression-builder .expression-row{margin:.5rem 0}.expression-builder .expression-container{display:flex;gap:.5rem;align-items:center}.expression-builder .expression-container select,.expression-builder .expression-container input{padding:.25rem .5rem;border:1px solid #ccc;border-radius:4px;min-width:120px}.expression-builder .expression-container .field-select,.expression-builder .expression-container .operator-select{flex:0 0 auto}.expression-builder .expression-container .value-input{flex:1 1 auto}.expression-builder .multi-value-container{display:flex;flex-direction:column;gap:.25rem;flex:1 1 auto}.expression-builder .multi-value-container .multi-value-item{display:flex;gap:.25rem}.expression-builder .multi-value-container .multi-value-item input{flex:1 1 auto}.expression-builder .action-buttons{margin-top:1rem;display:flex;gap:.5rem}.expression-builder button{padding:.25rem .5rem;border:1px solid #ccc;border-radius:4px;background:#fff;cursor:pointer}.expression-builder button:hover{background:#f0f0f0}.expression-builder button.add-btn{color:#06c;border-color:#06c}.expression-builder .remove-btn{padding:.25rem .5rem;color:red;border:none;background:transparent}.expression-builder .group-operator{margin-bottom:.5rem;font-weight:500}\n"], dependencies: [{ kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i1.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { kind: "directive", type: i1.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { kind: "directive", type: i2.NgSelectOption, selector: "option", inputs: ["ngValue", "value"] }, { kind: "directive", type: i2.ɵNgSelectMultipleOption, selector: "option", inputs: ["ngValue", "value"] }, { kind: "directive", type: i2.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i2.SelectControlValueAccessor, selector: "select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]", inputs: ["compareWith"] }, { kind: "directive", type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i2.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "component", type: IxtExpressionBuilderComponent, selector: "ixt-expression-builder", inputs: ["group", "level"], outputs: ["groupChange"] }] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtExpressionBuilderComponent, decorators: [{ type: Component, args: [{ selector: 'ixt-expression-builder', template: "<!-- ixt-expression-builder.component.html -->\r\n<div class=\"expression-builder\">\r\n <div class=\"group-container\">\r\n <select [(ngModel)]=\"group.operator\" class=\"group-operator\">\r\n <option value=\"and\">AND</option>\r\n <option value=\"or\">OR</option>\r\n </select>\r\n\r\n <div class=\"expressions-list\">\r\n <div *ngFor=\"let node of rootGroup.children; let i = index\" class=\"expression-row\">\r\n <div *ngIf=\"node.type === 'expression'\" class=\"expression-container\">\r\n <select [(ngModel)]=\"node.field\" class=\"field-select\">\r\n <option value=\"\">Select Field</option>\r\n <option *ngFor=\"let field of fields\" [value]=\"field.id\">\r\n {{field.label}}\r\n </option>\r\n </select>\r\n\r\n <select [(ngModel)]=\"node.operator\" class=\"operator-select\">\r\n <option value=\"\">Select Operator</option>\r\n <option *ngFor=\"let op of getOperators(node.field)\" [value]=\"op.id\">\r\n {{op.label}}\r\n </option>\r\n </select>\r\n\r\n <ng-container [ngSwitch]=\"getOperatorType(node.operator)\">\r\n <input *ngSwitchCase=\"'single'\" \r\n type=\"text\" \r\n [(ngModel)]=\"node.value\" \r\n class=\"value-input\">\r\n \r\n <div *ngSwitchCase=\"'multiple'\" class=\"multi-value-container\">\r\n <div *ngFor=\"let val of node.values; let j = index\" class=\"multi-value-item\">\r\n <input type=\"text\" [(ngModel)]=\"node.values[j]\">\r\n <button (click)=\"removeValue(node, j)\" class=\"remove-btn\">\u00D7</button>\r\n </div>\r\n <button (click)=\"addValue(node)\" class=\"add-value\">+ Add Value</button>\r\n </div>\r\n </ng-container>\r\n\r\n <button (click)=\"removeExpression(i)\" class=\"remove-btn\">\u00D7</button>\r\n </div>\r\n\r\n <div *ngIf=\"node.type === 'group'\" class=\"nested-group\">\r\n <ixt-expression-builder\r\n [group]=\"node\"\r\n [level]=\"level + 1\"\r\n (groupChange)=\"onChildGroupChange(i, $event)\">\r\n </ixt-expression-builder>\r\n </div>\r\n </div>\r\n </div>\r\n\r\n <div class=\"action-buttons\">\r\n <button (click)=\"addExpression()\" class=\"add-btn\">Add Expression</button>\r\n <button (click)=\"addGroup()\" class=\"add-btn\">Add Group</button>\r\n </div>\r\n </div>\r\n</div>", styles: [".expression-builder{padding:1rem}.expression-builder .group-container{border-left:2px solid #ccc;margin-left:1rem;padding-left:1rem}.expression-builder .group-container:first-child{border-left:none;margin-left:0}.expression-builder .expression-row{margin:.5rem 0}.expression-builder .expression-container{display:flex;gap:.5rem;align-items:center}.expression-builder .expression-container select,.expression-builder .expression-container input{padding:.25rem .5rem;border:1px solid #ccc;border-radius:4px;min-width:120px}.expression-builder .expression-container .field-select,.expression-builder .expression-container .operator-select{flex:0 0 auto}.expression-builder .expression-container .value-input{flex:1 1 auto}.expression-builder .multi-value-container{display:flex;flex-direction:column;gap:.25rem;flex:1 1 auto}.expression-builder .multi-value-container .multi-value-item{display:flex;gap:.25rem}.expression-builder .multi-value-container .multi-value-item input{flex:1 1 auto}.expression-builder .action-buttons{margin-top:1rem;display:flex;gap:.5rem}.expression-builder button{padding:.25rem .5rem;border:1px solid #ccc;border-radius:4px;background:#fff;cursor:pointer}.expression-builder button:hover{background:#f0f0f0}.expression-builder button.add-btn{color:#06c;border-color:#06c}.expression-builder .remove-btn{padding:.25rem .5rem;color:red;border:none;background:transparent}.expression-builder .group-operator{margin-bottom:.5rem;font-weight:500}\n"] }] }], propDecorators: { group: [{ type: Input }], level: [{ type: Input }], groupChange: [{ type: Output }] } }); class IxtExpressionBuilderModule { static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtExpressionBuilderModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); } static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "16.2.12", ngImport: i0, type: IxtExpressionBuilderModule, declarations: [IxtExpressionBuilderComponent], imports: [CommonModule, FormsModule], exports: [IxtExpressionBuilderComponent] }); } static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtExpressionBuilderModule, imports: [CommonModule, FormsModule] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtExpressionBuilderModule, decorators: [{ type: NgModule, args: [{ declarations: [ IxtExpressionBuilderComponent ], imports: [ CommonModule, FormsModule ], exports: [ IxtExpressionBuilderComponent ] }] }] }); // ixt-expression-builder.index.ts // ixt-diagram.component.ts class IxtDiagramComponent { constructor() { // Sample data matching the example diagram this.participants = [ { type: 'actor', name: 'SD Login Customer', x: 100 }, { type: 'component', name: 'LoginUI', x: 300 }, { type: 'component', name: 'LoginControl', x: 500 }, { type: 'component', name: 'UserDB', x: 700 } ]; // Update the activation data to match the screenshot this.activations = [ { participant: 'LoginUI', startY: 150, endY: 420 }, { participant: 'LoginControl', startY: 200, endY: 420 }, { participant: 'UserDB', startY: 250, endY: 320 } // Adjusted timing ]; // Update message types to ensure sync messages have filled arrowheads this.messages = [ { from: 'SD Login Customer', to: 'LoginUI', text: 'Login(Un/Pw)', y: 150, type: 'sync' }, { from: 'LoginUI', to: 'LoginControl', text: 'login(Un/Pw)', y: 200, type: 'sync' }, { from: 'LoginControl', to: 'UserDB', text: 'search(Un/Pw)', y: 250, type: 'sync' }, { from: 'UserDB', to: 'LoginControl', text: 'status', y: 300, type: 'return' }, { from: 'LoginControl', to: 'LoginControl', text: 'validateUser', y: 350, type: 'self' }, { from: 'LoginControl', to: 'LoginUI', text: 'status', y: 400, type: 'return' } ]; } ngOnInit() { this.initializeCanvas(); this.drawDiagram(); } initializeCanvas() { const context = this.canvas.nativeElement.getContext('2d'); if (!context) { throw new Error('Canvas 2D context not supported'); } this.ctx = context; this.ctx.font = '12px Arial'; this.ctx.textAlign = 'center'; } drawDiagram() { this.clearCanvas(); this.drawParticipants(); this.drawLifelines(); this.drawActivations(); this.drawMessages(); } clearCanvas() { const canvas = this.canvas.nativeElement; this.ctx.clearRect(0, 0, canvas.width, canvas.height); } drawParticipants() { this.participants.forEach(participant => { if (participant.type === 'actor') { this.drawActor(participant); } else { this.drawComponent(participant); } }); } drawActor(participant) { const x = participant.x; const y = 30; this.ctx.strokeStyle = '#000'; // Draw stick figure // Head this.ctx.beginPath(); this.ctx.arc(x, y, 10, 0, Math.PI * 2); this.ctx.stroke(); // Body this.ctx.beginPath(); this.ctx.moveTo(x, y + 10); this.ctx.lineTo(x, y + 30); this.ctx.stroke(); // Arms this.ctx.beginPath(); this.ctx.moveTo(x - 15, y + 20); this.ctx.lineTo(x + 15, y + 20); this.ctx.stroke(); // Legs this.ctx.beginPath(); this.ctx.moveTo(x, y + 30); this.ctx.lineTo(x - 10, y + 45); this.ctx.moveTo(x, y + 30); this.ctx.lineTo(x + 10, y + 45); this.ctx.stroke(); // Label this.ctx.fillStyle = '#000'; this.drawLabel(participant.name, x, y + 60); } drawComponent(participant) { const width = 100; const height = 40; const x = participant.x - width / 2; const y = 30; // Draw box this.ctx.strokeStyle = '#000'; this.ctx.fillStyle = '#fff'; this.ctx.beginPath(); this.ctx.rect(x, y, width, height); this.ctx.fill(); this.ctx.stroke(); // Draw text this.ctx.fillStyle = '#000'; this.drawLabel(participant.name, participant.x, y + height / 2); } drawLifelines() { this.ctx.setLineDash([5, 5]); this.ctx.strokeStyle = '#666'; this.participants.forEach(participant => { this.ctx.beginPath(); this.ctx.moveTo(participant.x, 90); this.ctx.lineTo(participant.x, 500); this.ctx.stroke(); }); this.ctx.setLineDash([]); // Reset line style } drawMessages() { this.messages.forEach(message => { const fromX = this.getParticipantX(message.from); const toX = this.getParticipantX(message.to); this.ctx.strokeStyle = '#000'; this.ctx.fillStyle = '#000'; if (message.type === 'sync') { this.drawSyncMessage(fromX, toX, message); } else if (message.type === 'return') { this.drawReturnMessage(fromX, toX, message); } else if (message.type === 'self') { this.drawSelfMessage(fromX, message); } }); } drawReturnMessage(fromX, toX, message) { // Dashed line with open arrow this.ctx.setLineDash([5, 5]); this.ctx.beginPath(); this.ctx.moveTo(fromX, message.y); this.ctx.lineTo(toX, message.y); this.ctx.stroke(); this.ctx.setLineDash([]); // Open arrowhead this.drawArrowhead(toX, message.y, fromX < toX ? 'right' : 'left', false); // Message text this.drawLabel(message.text, (fromX + toX) / 2, message.y - 10); } drawSelfMessage(x, message) { const offset = 20; this.ctx.beginPath(); this.ctx.moveTo(x, message.y); this.ctx.lineTo(x + offset, message.y); this.ctx.lineTo(x + offset, message.y + 20); this.ctx.lineTo(x, message.y + 20); this.ctx.stroke(); // Filled arrowhead this.drawArrowhead(x, message.y + 20, 'left', true); // Message text this.drawLabel(message.text, x + offset + 20, message.y + 10); } drawLabel(text, x, y) { this.ctx.fillStyle = '#000'; this.ctx.textAlign = 'center'; this.ctx.textBaseline = 'middle'; this.ctx.fillText(text, x, y); } getParticipantX(name) { const participant = this.participants.find(p => p.name === name); if (!participant) { throw new Error(`Participant ${name} not found`); } return participant.x; } // Only showing the modified methods - the rest of the component remains the same drawActivations() { this.ctx.fillStyle = '#fff'; this.ctx.strokeStyle = '#000'; this.activations.forEach(activation => { const participant = this.participants.find(p => p.name === activation.participant); if (participant) { // Make activation bars wider and ensure they're solid const width = 16; // Increased from 10 const x = participant.x - width / 2; // Draw solid white rectangle this.ctx.beginPath(); this.ctx.fillStyle = '#fff'; this.ctx.fillRect(x, activation.startY, width, activation.endY - activation.startY); this.ctx.strokeRect(x, activation.startY, width, activation.endY - activation.startY); } }); } drawArrowhead(x, y, direction, filled) { const size = 10; // Increased from 8 const angle = Math.PI / 6; const dir = direction === 'right' ? 1 : -1; this.ctx.beginPath(); this.ctx.moveTo(x, y); // Calculate arrow points const x1 = x - dir * size * Math.cos(angle); const y1 = y - size * Math.sin(angle); const x2 = x - dir * size * Math.cos(-angle); const y2 = y - size * Math.sin(-angle); this.ctx.lineTo(x1, y1); this.ctx.lineTo(x2, y2); if (filled) { this.ctx.closePath(); this.ctx.fillStyle = '#000'; this.ctx.fill(); } this.ctx.stroke(); } drawSyncMessage(fromX, toX, message) { // Draw solid line this.ctx.beginPath(); this.ctx.strokeStyle = '#000'; this.ctx.lineWidth = 1; this.ctx.moveTo(fromX, message.y); this.ctx.lineTo(toX, message.y); this.ctx.stroke(); // Always draw filled arrowhead for sync messages this.drawArrowhead(toX, message.y, fromX < toX ? 'right' : 'left', true); // Message text this.drawLabel(message.text, (fromX + toX) / 2, message.y - 10); } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtDiagramComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); } static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: IxtDiagramComponent, selector: "ixt-diagram", viewQueries: [{ propertyName: "canvas", first: true, predicate: ["diagramCanvas"], descendants: true, static: true }], ngImport: i0, template: ` <canvas #diagramCanvas width="800" height="600" [style.border]="'1px solid #ccc'"> </canvas> `, isInline: true }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtDiagramComponent, decorators: [{ type: Component, args: [{ selector: 'ixt-diagram', template: ` <canvas #diagramCanvas width="800" height="600" [style.border]="'1px solid #ccc'"> </canvas> ` }] }], propDecorators: { canvas: [{ type: ViewChild, args: ['diagramCanvas', { static: true }] }] } }); // Later we can add additional exports like: // export * from './ixt-diagram.service'; // export * from './ixt-diagram.models'; // export * from './ixt-diagram.utils'; // ixt-diagram.module.ts class IxtDiagramModule { static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtDiagramModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); } static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "16.2.12", ngImport: i0, type: IxtDiagramModule, declarations: [IxtDiagramComponent], imports: [CommonModule], exports: [IxtDiagramComponent] }); } static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtDiagramModule, imports: [CommonModule] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtDiagramModule, decorators: [{ type: NgModule, args: [{ declarations: [ IxtDiagramComponent ], imports: [ CommonModule ], exports: [ IxtDiagramComponent ] }] }] }); // ixt-diagram.index.ts // uml-diagram.component.ts class IxtClazzDiagram { constructor() { this.classes = [ { id: 'book', name: 'Book', attributes: ['- isbn: string', '- title: string', '- author: string'], methods: ['+ getDetails(): string'], x: 100, y: 100, width: 200, height: 150 }, { id: 'library', name: 'Library', attributes: ['- name: string', '- books: Book[]'], methods: ['+ addBook(book: Book): void', '+ removeBook(isbn: string): void'], x: 400, y: 100, width: 200, height: 150 }, // Add more classes as needed ]; this.relationships = [ { from: 'library', to: 'book', type: 'composition' } ]; this.isDragging = false; this.selectedClass = null; this.dragOffset = { x: 0, y: 0 }; this.animationFrameId = null; } ngAfterViewInit() { const canvas = this.canvasRef.nativeElement; this.ctx = canvas.getContext('2d'); this.resizeCanvas(); this.draw(); window.addEventListener('resize', this.resizeCanvas.bind(this)); } ngOnDestroy() { window.removeEventListener('resize', this.resizeCanvas.bind(this)); if (this.animationFrameId) { cancelAnimationFrame(this.animationFrameId); } } resizeCanvas() { const canvas = this.canvasRef.nativeElement; canvas.width = canvas.offsetWidth; canvas.height = canvas.offsetHeight; } draw() { const canvas = this.canvasRef.nativeElement; this.ctx.clearRect(0, 0, canvas.width, canvas.height); // Draw relationships first (so they appear under the classes) this.drawRelationships(); // Draw classes this.classes.forEach(cls => this.drawClass(cls)); this.animationFrameId = requestAnimationFrame(() => this.draw()); } drawClass(cls) { // Draw class box this.ctx.strokeStyle = '#000'; this.ctx.fillStyle = '#fff'; this.ctx.lineWidth = 1; // Main rectangle this.ctx.beginPath(); this.ctx.rect(cls.x, cls.y, cls.width, cls.height); this.ctx.fill(); this.ctx.stroke(); // Class name section this.ctx.font = 'bold 14px Arial'; this.ctx.textAlign = 'center'; this.ctx.fillStyle = '#000'; this.ctx.fillText(cls.name, cls.x + cls.width / 2, cls.y + 25); // Separator lines const attributesY = cls.y + 35; const methodsY = attributesY + (cls.attributes.length * 20) + 10; this.ctx.beginPath(); this.ctx.moveTo(cls.x, attributesY); this.ctx.lineTo(cls.x + cls.width, attributesY); this.ctx.stroke(); // Draw attributes this.ctx.font = '12px Arial'; this.ctx.textAlign = 'left'; cls.attributes.forEach((attr, index) => { this.ctx.fillText(attr, cls.x + 10, attributesY + 20 + (index * 20)); }); // Draw methods this.ctx.beginPath(); this.ctx.moveTo(cls.x, methodsY); this.ctx.lineTo(cls.x + cls.width, methodsY); this.ctx.stroke(); cls.methods.forEach((method, index) => { this.ctx.fillText(method, cls.x + 10, methodsY + 20 + (index * 20)); }); } drawRelationships() { this.relationships.forEach(rel => { const fromClass = this.classes.find(c => c.id === rel.from); const toClass = this.classes.find(c => c.id === rel.to); if (!fromClass || !toClass) return; // Calculate connection points const start = this.getConnectionPoint(fromClass, toClass); const end = this.getConnectionPoint(toClass, fromClass); this.ctx.beginPath(); this.ctx.moveTo(start.x, start.y); this.ctx.lineTo(end.x, end.y); // Draw different arrow heads based on relationship type if (rel.type === 'inheritance') { this.drawInheritanceArrow(end.x, end.y, this.getAngle(start, end)); } else if (rel.type === 'implementation') { this.drawImplementationArrow(end.x, end.y, this.getAngle(start, end)); } else if (rel.type === 'composition') { this.drawCompositionDiamond(end.x, end.y, this.getAngle(start, end)); } this.ctx.stroke(); }); } getConnectionPoint(from, to) { // Calculate center points const fromCenter = { x: from.x + from.width / 2, y: from.y + from.height / 2 }; const toCenter = { x: to.x + to.width / 2, y: to.y + to.height / 2 }; // Calculate angle between centers const angle = Math.atan2(toCenter.y - fromCenter.y, toCenter.x - fromCenter.x); // Calculate intersection with rectangle const cos = Math.cos(angle); const sin = Math.sin(angle); let x, y; if (Math.abs(cos) > Math.abs(sin)) { // Intersect with vertical sides x = cos > 0 ? from.x + from.width : from.x; y = fromCenter.y + (x - fromCenter.x) * sin / cos; } else { // Intersect with horizontal sides y = sin > 0 ? from.y + from.height : from.y; x = fromCenter.x + (y - fromCenter.y) * cos / sin; } return { x, y }; } getAngle(start, end) { return Math.atan2(end.y - start.y, end.x - start.x); } drawInheritanceArrow(x, y, angle) { const size = 15; const angleLeft = angle + Math.PI * 0.8; const angleRight = angle - Math.PI * 0.8; this.ctx.beginPath(); this.ctx.moveTo(x, y); this.ctx.lineTo(x - size * Math.cos(angleLeft), y - size * Math.sin(angleLeft)); this.ctx.lineTo(x - size * Math.cos(angleRight), y - size * Math.sin(angleRight)); this.ctx.closePath(); this.ctx.fillStyle = '#fff'; this.ctx.fill(); this.ctx.stroke(); } drawImplementationArrow(x, y, angle) { // Similar to inheritance but with dashed line this.ctx.setLineDash([5, 5]); this.drawInheritanceArrow(x, y, angle); this.ctx.setLineDash([]); } drawCompositionDiamond(x, y, angle) { const size = 10; this.ctx.beginPath(); this.ctx.moveTo(x, y); this.ctx.lineTo(x - size * Math.cos(angle + Math.PI / 4), y - size * Math.sin(angle + Math.PI / 4)); this.ctx.lineTo(x - size * 2 * Math.cos(angle), y - size * 2 * Math.sin(angle)); this.ctx.lineTo(x - size * Math.cos(angle - Math.PI / 4), y - size * Math.sin(angle - Math.PI / 4)); this.ctx.closePath(); this.ctx.fillStyle = '#000'; this.ctx.fill(); } onMouseDown(event) { const rect = this.canvasRef.nativeElement.getBoundingClientRect(); const x = event.clientX - rect.left; const y = event.clientY - rect.top; // Check if click is inside any class this.selectedClass = this.classes.find(cls => x >= cls.x && x <= cls.x + cls.width && y >= cls.y && y <= cls.y + cls.height) || null; if (this.selectedClass) { this.isDragging = true; this.dragOffset = { x: x - this.selectedClass.x, y: y - this.selectedClass.y }; } } onMouseMove(event) { if (this.isDragging && this.selectedClass) { const rect = this.canvasRef.nativeElement.getBoundingClientRect(); this.selectedClass.x = event.clientX - rect.left - this.dragOffset.x; this.selectedClass.y = event.clientY - rect.top - this.dragOffset.y; } } onMouseUp() { this.isDragging = false; this.selectedClass = null; } applyForceDirectedLayout() { const REPULSION = 50000; // Repulsion force between nodes const ATTRACTION = 0.01; // Attraction force for relationships const DAMPING = 0.95; // Damping factor to prevent oscillation const ITERATIONS = 50; // Number of iterations for the algorithm // Initialize velocities const velocities = new Map(this.classes.map(cls => [cls.id, { x: 0, y: 0 }])); for (let i = 0; i < ITERATIONS; i++) { // Calculate forces this.classes.forEach(cls1 => { let fx = 0; let fy = 0; // Repulsion between all classes this.classes.forEach(cls2 => { if (cls1 !== cls2) { const dx = cls1.x - cls2.x; const dy = cls1.y - cls2.y; const distance = Math.sqrt(dx * dx + dy * dy); if (distance > 0) { const force = REPULSION / (distance * distance); fx += (dx / distance) * force; fy += (dy / distance) * force; } } }); // Attraction for related classes this.relationships.forEach(rel => { if (rel.from === cls1.id || rel.to === cls1.id) { const other = this.classes.find(c => c.id === (rel.from === cls1.id ? rel.to : rel.from)); if (other) { const dx = cls1.x - other.x; const dy = cls1.y - other.y; const distance = Math.sqrt(dx * dx + dy * dy); fx -= dx * ATTRACTION; fy -= dy * ATTRACTION; } } }); // Update velocity const velocity = velocities.get(cls1.id); velocity.x = (velocity.x + fx) * DAMPING; velocity.y = (velocity.y + fy) * DAMPING; // Update position cls1.x += velocity.x; cls1.y += velocity.y; }); } // Center the diagram const bounds = this.calculateBounds(); const centerX = this.canvasRef.nativeElement.width / 2; const centerY = this.canvasRef.nativeElement.height / 2; const offsetX = centerX - (bounds.maxX + bounds.minX) / 2; const offsetY = centerY - (bounds.maxY + bounds.minY) / 2; this.classes.forEach(cls => { cls.x += offsetX; cls.y += offsetY; }); } calculateBounds() { const bounds = { minX: Infinity, minY: Infinity, maxX: -Infinity, maxY: -Infinity }; this.classes.forEach(cls => { bounds.minX = Math.min(bounds.minX, cls.x); bounds.minY = Math.min(bounds.minY, cls.y); bounds.maxX = Math.max(bounds.maxX, cls.x + cls.width); bounds.maxY = Math.max(bounds.maxY, cls.y + cls.height); }); return bounds; } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtClazzDiagram, deps: [], target: i0.ɵɵFactoryTarget.Component }); } static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: IxtClazzDiagram, selector: "ixt-clazz", viewQueries: [{ propertyName: "canvasRef", first: true, predicate: ["canvas"], descendants: true }], ngImport: i0, template: ` <div class="container"> <button (click)="applyForceDirectedLayout()">Auto Layout</button> <canvas #canvas (mousedown)="onMouseDown($event)" (mousemove)="onMouseMove($event)" (mouseup)="onMouseUp()"> </canvas> </div> `, isInline: true, styles: [".container{width:100%;height:100vh;overflow:hidden}canvas{border:1px solid #ccc}\n"] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtClazzDiagram, decorators: [{ type: Component, args: [{ selector: 'ixt-clazz', template: ` <div class="container"> <button (click)="applyForceDirectedLayout()">Auto Layout</button> <canvas #canvas (mousedown)="onMouseDown($event)" (mousemove)="onMouseMove($event)" (mouseup)="onMouseUp()"> </canvas> </div> `, styles: [".container{width:100%;height:100vh;overflow:hidden}canvas{border:1px solid #ccc}\n"] }] }], propDecorators: { canvasRef: [{ type: ViewChild, args: ['canvas'] }] } }); // ixt-clazz.module.ts class IxtClazzModule { static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtClazzModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); } static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "16.2.12", ngImport: i0, type: IxtClazzModule, declarations: [IxtClazzDiagram], imports: [CommonModule], exports: [IxtClazzDiagram] }); } static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtClazzModule, imports: [CommonModule] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtClazzModule, decorators: [{ type: NgModule, args: [{ declarations: [ IxtClazzDiagram ], imports: [ CommonModule ], exports: [ IxtClazzDiagram ] }] }] }); // ixt-clazz.index.ts class IxtDeploymentDiagram { constructor() { this.width = 800; this.height = 600; this.nodes = [ { id: '1', type: 'server', x: 100, y: 100, width: 120, height: 80, label: 'Web Server' }, { id: '2', type: 'database', x: 400, y: 100, width: 100, height: 100, label: 'Database' }, { id: '3', type: 'service', x: 250, y: 300, width: 150, height: 70, label: 'Message Queue' }, { id: '4', type: 'container', x: 500, y: 300, width: 130, height: 90, label: 'Docker Container' } ]; this.connections = [ { from: '1', to: '2', type: 'communicates' }, { from: '1', to: '3', type: 'depends' }, { from: '3', to: '4', type: 'deploys' } ]; this.draggedNode = null; this.dragStartX = 0; this.dragStartY = 0; this.nodeOffsetX = 0; this.nodeOffsetY = 0; // Force-directed layout parameters this.REPULSION = 8000; // Repulsion force between nodes this.ATTRACTION = 0.06; // Attraction force along connections this.DAMPING = 0.9; // Velocity damping factor this.MIN_DISTANCE = 150; // Minimum distance between nodes } ngOnInit() { const canvas = this.canvasRef.nativeElement; this.ctx = canvas.getContext('2d'); this.draw(); } draw() { const ctx = this.ctx; ctx.clearRect(0, 0, this.width, this.height); // Draw connections first (under nodes) this.drawConnections(); // Draw nodes this.nodes.forEach(node => this.drawNode(node)); } drawNode(node) { const ctx = this.ctx; ctx.save(); // Shadow ctx.shadowColor = 'rgba(0, 0, 0, 0.2)'; ctx.shadowBlur = 5; ctx.shadowOffsetX = 2; ctx.shadowOffsetY = 2; // Node shape ctx.beginPath(); switch (node.type) { case 'server': this.drawServer(node); break; case 'database': this.drawDatabase(node); break; case 'service': this.drawService(node); break; case 'container': this.drawContainer(node); break; } // Label ctx.fillStyle = '#333'; ctx.font = '12px Arial'; ctx.textAlign = 'center'; ctx.textBaseline = 'middle'; ctx.fillText(node.label, node.x + node.width / 2, node.y + node.height / 2); ctx.restore(); } drawServer(node) { const ctx = this.ctx; ctx.fillStyle = '#e8f4f8'; ctx.strokeStyle = '#4a90e2'; ctx.lineWidth = 2; // Main rectangle ctx.fillRect(node.x, node.y, node.width, node.height); ctx.strokeRect(node.x, node.y, node.width, node.height); // Server rack lines for (let i = 1; i < 4; i++) { const y = node.y + (node.height * i / 4); ctx.beginPath(); ctx.moveTo(node.x, y); ctx.lineTo(node.x + node.width, y); ctx.stroke(); } } drawDatabase(node) { const ctx = this.ctx; ctx.fillStyle = '#f8e8f4'; ctx.strokeStyle = '#9c27b0'; ctx.lineWidth = 2; // Cylinder shape const cylinderHeight = node.height * 0.8; const ellipseHeight = node.height * 0.2; // Draw cylinder body ctx.beginPath(); ctx.moveTo(node.x, node.y + ellipseHeight); ctx.lineTo(node.x, node.y + cylinderHeight); ctx.bezierCurveTo(node.x, node.y + node.height, node.x + node.width, node.y + node.height, node.x + node.width, node.y + cylinderHeight); ctx.lineTo(node.x + node.width, node.y + ellipseHeight); ctx.fill(); ctx.stroke(); // Draw top ellipse ctx.beginPath(); ctx.ellipse(node.x + node.width / 2, node.y + ellipseHeight, node.width / 2, ellipseHeight, 0, 0, 2 * Math.PI); ctx.fill(); ctx.stroke(); } drawService(node) { const ctx = this.ctx; ctx.fillStyle = '#f4f8e8'; ctx.strokeStyle = '#8bc34a'; ctx.lineWidth = 2; // Hexagon const side = node.width / 4; ctx.beginPath(); ctx.moveTo(node.x + side, node.y); ctx.lineTo(node.x + node.width - side, node.y); ctx.lineTo(node.x + node.width, node.y + node.height / 2); ctx.lineTo(node.x + node.width - side, node.y + node.height); ctx.lineTo(node.x + side, node.y + node.height); ctx.lineTo(node.x, node.y + node.height / 2); ctx.closePath(); ctx.fill(); ctx.stroke(); } drawContainer(node) { const ctx = this.ctx; ctx.fillStyle = '#f8f0e8'; ctx.strokeStyle = '#ff9800'; ctx.lineWidth = 2; // Container shape with docker-like waves ctx.fillRect(node.x, node.y, node.width, node.height); ctx.strokeRect(node.x, node.y, node.width, node.height); // Wave pattern const waveHeight = 8; const waveWidth = node.width / 4; ctx.beginPath(); for (let x = node.x; x < node.x + node.width; x += waveWidth) { ctx.bezierCurveTo(x + waveWidth / 3, node.y + waveHeight, x + 2 * waveWidth / 3, node.y - waveHeight, x + waveWidth, node.y); } ctx.stroke(); } drawConnections() { const ctx = this.ctx; ctx.save(); this.connections.forEach(conn => { const fromNode = this.nodes.find(n => n.id === conn.from); const toNode = this.nodes.find(n => n.id === conn.to); // Calculate connection points using smart routing const points = this.calculateConnectionPoints(fromNode, toNode); ctx.beginPath(); ctx.moveTo(points[0].x, points[0].y); // Draw connection line with different styles based on type switch (conn.type) { case 'deploys': ctx.setLineDash([5, 5]); ctx.strokeStyle = '#4a90e2'; break; case 'depends': ctx.setLineDash([]); ctx.strokeStyle = '#ff9800'; break; case 'communicates': ctx.setLineDash([10, 3]); ctx.strokeStyle = '#8bc34a'; break; } ctx.lineWidth = 2; // Draw connection using bezier curves for smooth routing if (points.length === 4) { ctx.bezierCurveTo(points[1].x, points[1].y, points[2].x, points[2].y, points[3].x, points[3].y); } else { points.slice(1).forEach(point => { ctx.lineTo(point.x, point.y); }); } ctx.stroke(); // Draw arrow this.drawArrow(points[points.length - 2], points[points.length - 1]); }); ctx.restore(); } calculateConnectionPoints(from, to) { // Smart routing algorithm to avoid crossing nodes const fromCenter = { x: from.x + from.width / 2, y: from.y + from.height / 2 }; const toCenter = { x: to.x + to.width / 2, y: to.y + to.height / 2 }; // Calculate intermediate points for bezier curve const dx = toCenter.x - fromCenter.x; const dy = toCenter.y - fromCenter.y; const distance = Math.sqrt(dx * dx + dy * dy); return [ fromCenter, { x: fromCenter.x + dx / 3, y: fromCenter.y + dy / 3 }, { x: fromCenter.x + 2 * dx / 3, y: fromCenter.y + 2 * dy / 3 }, toCenter ]; } drawArrow(from, to) { const ctx = this.ctx; const angle = Math.atan2(to.y - from.y, to.x - from.x); const arrowLength = 10; ctx.beginPath(); ctx.moveTo(to.x, to.y); ctx.lineTo(to.x - arrowLength * Math.cos(angle - Math.PI / 6), to.y - arrowLength * Math.sin(angle - Math.PI / 6)); ctx.moveTo(to.x, to.y); ctx.lineTo(to.x - arrowLength * Math.cos(angle + Math.PI / 6), to.y - arrowLength * Math.sin(angle + Math.PI / 6)); ctx.stroke(); } onMouseDown(event) { const rect = this.canvasRef.nativeElement.getBoundingClientRect(); const x = event.clientX - rect.left; const y = event.clientY - rect.top; // Find clicked node this.draggedNode = this.nodes.find(node => x >= node.x && x <= node.x + node.width && y >= node.y && y <= node.y + node.height) || null; if (this.draggedNode) { this.dragStartX = x; this.dragStartY = y; this.nodeOffsetX = x - this.draggedNode.x; this.nodeOffsetY = y - this.draggedNode.y; } } onMouseMove(event) { if (!this.draggedNode) return; const rect = this.canvasRef.nativeElement.getBoundingClientRect(); const x = event.clientX - rect.left; const y = event.clientY - rect.top; this.draggedNode.x = x - this.nodeOffsetX; this.draggedNode.y = y - this.nodeOffsetY; // Keep node within canvas bounds this.draggedNode.x = Math.max(0, Math.min(this.width - this.draggedNode.width, this.draggedNode.x)); this.draggedNode.y = Math.max(0, Math.min(this.height - this.draggedNode.height, this.draggedNode.y)); this.draw(); } onMouseUp() { this.draggedNode = null; } autoLayout() { const iterations = 50; const nodeVelocities = this.nodes.map(() => ({ x: 0, y: 0 })); // Run force-directed layout algorithm for (let i = 0; i < iterations; i++) { // Calculate forces this.nodes.forEach((node1, i) => { let fx = 0; let fy = 0; // Repulsion between all nodes this.nodes.forEach((node2, j) => { if (i === j) return; const dx = node2.x - node1.x; const dy = node2.y - node1.y; const distance = Math.sqrt(dx * dx + dy * dy); if (distance < this.MIN_DISTANCE) { const force = this.REPULSION / (distance * distance); fx -= (dx / distance) * force; fy -= (dy / distance) * force; } }); // Attraction along connections this.connections.forEach(conn => { if (conn.from === node1.id || conn.to === node1.id) { const other = this.nodes.find(n => n.id === (conn.from === node1.id ? conn.to : conn.from)); const dx = other.x - node1.x; const dy = other.y - node1.y; const distance = Math.sqrt(dx * dx + dy * dy); fx += dx * this.ATTRACTION; fy += dy * this.ATTRACTION; } }); // Update velocities with damping nodeVelocities[i].x = (nodeVelocities[i].x + fx) * this.DAMPING; nodeVelocities[i].y = (nodeVelocities[i].y + fy) * this.DAMPING; }); // Update positions this.nodes.forEach((node, i) => { node.x += nodeVelocities[i].x; node.y += nodeVelocities[i].y; // Keep nodes within bounds node.x = Math.max(0, Math.min(this.width - node.width, node.x)); node.y = Math.max(0, Math.min(this.height - node.height, node.y)); }); } // Check for overlaps and adjust if necessary this.resolveOverlaps(); this.draw(); } resolveOverlaps() { const padding = 20; // Minimum space between nodes let hasOverlap = true; let iterations = 0; const maxIterations = 100; while (hasOverlap && iterations < maxIterations) { hasOverlap = false; iterations++; for (let i = 0; i < this.nodes.length; i++) { for (let j = i + 1; j < this.nodes.length; j++) { const node1 = this.nodes[i]; const node2 = this.nodes[j]; // Check for overlap if (this.isOverlapping(node1, node2, padding)) { hasOverlap = true; // Calculate overlap resolution vector const dx = node2.x - node1.x; const dy = node2.y - node1.y; const distance = Math.sqrt(dx * dx + dy * dy); // Minimum distance needed const minDistance = Math.sqrt(Math.pow(node1.width / 2 + node2.width / 2 + padding, 2) + Math.pow(node1.height / 2 + node2.height / 2 + padding, 2)); // Move nodes apart const moveX = (dx / distance) * (minDistance - distance) / 2; const moveY = (dy / distance) * (minDistance - distance) / 2; node1.x -= moveX; node1.y -= moveY; node2.x += moveX; node2.y += moveY; // Keep within bounds this.nodes.forEach(node => { node.x = Math.max(0, Math.min(this.width - node.width, node.x)); node.y = Math.max(0, Math.min(this.height - node.height, node.y)); }); } } } } } isOverlapping(node1, node2, padding) { return !(node1.x + node1.width + padding < node2.x || node2.x + node2.width + padding < node1.x || node1.y + node1.height + padding < node2.y || node2.y + node2.height + padding < node1.y); } // Optional: Add capability to save/load layouts saveLayout() { return JSON.stringify({ nodes: this.nodes, connections: this.connections }); } loadLayout(layoutJson) { const layout = JSON.parse(layoutJson); this.nodes = layout.nodes; this.connections = layout.connections; this.draw(); } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtDeploymentDiagram, deps: [], target: i0.ɵɵFactoryTarget.Component }); } static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: IxtDeploymentDiagram, selector: "ixt-deployment", viewQueries: [{ propertyName: "canvasRef", first: true, predicate: ["canvas"], descendants: true, static: true }], ngImport: i0, template: ` <div class="diagram-container"> <canvas #canvas (mousedown)="onMouseDown($event)" (mousemove)="onMouseMove($event)" (mouseup)="onMouseUp()" [width]="width" [height]="height"> </canvas> <button (click)="autoLayout()" class="auto-layout-btn">Auto Layout</button> </div> `, isInline: true, styles: [".diagram-container{position:relative;border:1px solid #ccc}.auto-layout-btn{position:absolute;top:10px;right:10px;padding:8px 16px;background:#4a90e2;color:#fff;border:none;border-radius:4px;cursor:pointer}canvas{cursor:move}\n"] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtDeploymentDiagram, decorators: [{ type: Component, args: [{ selector: 'ixt-deployment', template: ` <div class="diagram-container"> <canvas #canvas (mousedown)="onMouseDown($event)" (mousemove)="onMouseMove($event)" (mouseup)="onMouseUp()" [width]="width" [height]="height"> </canvas> <button (click)="autoLayout()" class="auto-layout-btn">Auto Layout</button> </div> `, styles: [".diagram-container{position:relative;border:1px solid #ccc}.auto-layout-btn{position:absolute;top:10px;right:10px;padding:8px 16px;background:#4a90e2;color:#fff;border:none;border-radius:4px;cursor:pointer}canvas{cursor:move}\n"] }] }], propDecorators: { canvasRef: [{ type: ViewChild, args: ['canvas', { static: true }] }] } }); // ixt-deployment.module.ts class IxtDeploymentModule { static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtDeploymentModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); } static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "16.2.12", ngImport: i0, type: IxtDeploymentModule, declarations: [IxtDeploymentDiagram], imports: [CommonModule], exports: [IxtDeploymentDiagram] }); } static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtDeploymentModule, imports: [CommonModule] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtDeploymentModule, decorators: [{ type: NgModule, args: [{ declarations: [ IxtDeploymentDiagram ], imports: [ CommonModule ], exports: [ IxtDeploymentDiagram ] }] }] }); // ixt-deployment.index.ts // ixt-ebnf.diagram.ts class IxtEbnfDiagram { constructor() { this.width = 1200; this.height = 800; this.nodes = [ // Git command grammar nodes { id: 'git', x: 50, y: 50, width: 80, height: 40, isDragging: false, type: 'terminal', label: 'git' }, { id: 'command', x: 200, y: 50, width: 120, height: 40, isDragging: false, type: 'nonterminal', label: 'command' }, { id: 'commit', x: 400, y: 50, width: 100, height: 40, isDragging: false, type: 'terminal', label: 'commit' }, { id: 'push', x: 400, y: 150, width: 100, height: 40, isDragging: false, type: 'terminal', label: 'push' }, { id: 'pull', x: 400, y: 250, width: 100, height: 40, isDragging: false, type: 'terminal', label: 'pull' }, { id: 'branch', x: 400, y: 350, width: 100, height: 40, isDragging: false, type: 'terminal', label: 'branch' }, { id: 'options', x: 600, y: 50, width: 120, height: 40, isDragging: false, type: 'nonterminal', label: 'options' }, { id: 'args', x: 800, y: 50, width: 100, height: 40, isDragging: false, type: 'nonterminal', label: 'args' } ]; this.edges = [ { from: 'git', to: 'command', type: 'sequence' }, { from: 'command', to: 'commit', type: 'alternative' }, { from: 'command', to: 'push', type: 'alternative' }, { from: 'command', to: 'pull', type: 'alternative' }, { from: 'command', to: 'branch', type: 'alternative' }, { from: 'commit', to: 'options', type: 'sequence' }, { from: 'options', to: 'args', type: 'optional' } ]; this.draggedNode = null; this.lastX = 0; this.lastY = 0; // Add zoom functionality this.scale = 1; // Add node selection and highlighting this.selectedNode = null; } ngOnInit() { this.ctx = this.canvasRef.nativeElement.getContext('2d'); this.draw(); } drawNodes() { this.nodes.forEach(node => { this.ctx.beginPath(); // Different styles for different node types switch (node.type) { case 'terminal': this.ctx.rect(node.x, node.y, node.width, node.height); break; case 'nonterminal': this.roundRect(node.x, node.y, node.width, node.height, 10); break; case 'operator': this.ctx.ellipse(node.x + node.width / 2, node.y + node.height / 2, node.width / 2, node.height / 2, 0, 0, Math.PI * 2); break; } this.ctx.strokeStyle = '#333'; this.ctx.lineWidth = 2; this.ctx.stroke(); // Draw label this.ctx.fillStyle = '#000'; this.ctx.font = '14px Arial'; this.ctx.textAlign = 'center'; this.ctx.textBaseline = 'middle'; this.ctx.fillText(node.label, node.x + node.width / 2, node.y + node.height / 2); }); } drawEdges() { this.edges.forEach(edge => { const fromNode = this.nodes.find(n => n.id === edge.from); const toNode = this.nodes.find(n => n.id === edge.to); // Calculate connection points using smart routing const points = this.calculateEdgePoints(fromNode, toNode); this.ctx.beginPath(); this.ctx.moveTo(points[0].x, points[0].y); // Draw curved lines for better aesthetics if (points.length === 3) { this.ctx.quadraticCurveTo(points[1].x, points[1].y, points[2].x, points[2].y); } this.ctx.strokeStyle = '#666'; this.ctx.lineWidth = 1.5; this.ctx.stroke(); // Draw arrow this.drawArrow(points[points.length - 2], points[points.length - 1]); // Draw edge type indicator if (edge.type !== 'sequence') { const midPoint = this.getMidPoint(points); this.drawEdgeType(edge.type, midPoint); } }); } calculateEdgePoints(from, to) { // Smart routing algorithm to avoid crossing nodes const points = []; const fromCenter = { x: from.x + from.width / 2, y: from.y + from.height / 2 }; const toCenter = { x: to.x + to.width / 2, y: to.y + to.height / 2 }; // Add intermediate points for better routing if (Math.abs(fromCenter.y - toCenter.y) > 100) { points.push({ x: fromCenter.x + from.width / 2, y: fromCenter.y }, { x: (fromCenter.x + toCenter.x) / 2, y: fromCenter.y }, { x: (fromCenter.x + toCenter.x) / 2, y: toCenter.y }, { x: toCenter.x - to.width / 2, y: toCenter.y }); } else { points.push({ x: fromCenter.x + from.width / 2, y: fromCenter.y }, { x: (fromCenter.x + toCenter.x) / 2, y: (fromCenter.y + toCenter.y) / 2 }, { x: toCenter.x - to.width / 2, y: toCenter.y }); } return points; } drawArrow(from, to) { const angle = Math.atan2(to.y - from.y, to.x - from.x); const length = 10; this.ctx.beginPath(); this.ctx.moveTo(to.x, to.y); this.ctx.lineTo(to.x - length * Math.cos(angle - Math.PI / 6), to.y - length * Math.sin(angle - Math.PI / 6)); this.ctx.moveTo(to.x, to.y); this.ctx.lineTo(to.x - length * Math.cos(angle + Math.PI / 6), to.y - length * Math.sin(angle + Math.PI / 6)); this.ctx.stroke(); } drawEdgeType(type, point) { this.ctx.fillStyle = '#fff'; this.ctx.strokeStyle = '#666'; switch (type) { case 'alternative': this.ctx.beginPath(); this.ctx.arc(point.x, point.y, 8, 0, Math.PI * 2); this.ctx.fill(); this.ctx.stroke(); this.ctx.fillStyle = '#666'; this.ctx.fillText('|', point.x, point.y + 1); break; case 'optional': this.ctx.beginPath(); this.ctx.arc(point.x, point.y, 8, 0, Math.PI * 2); this.ctx.fill(); this.ctx.stroke(); this.ctx.fillStyle = '#666'; this.ctx.fillText('?', point.x, point.y + 1); break; case 'repetition': this.ctx.beginPath(); this.ctx.arc(point.x, point.y, 8, 0, Math.PI * 2); this.ctx.fill(); this.ctx.stroke(); this.ctx.fillStyle = '#666'; this.ctx.fillText('*', point.x, point.y + 1); break; } } roundRect(x, y, width, height, radius) { this.ctx.beginPath(); this.ctx.moveTo(x + radius, y); this.ctx.lineTo(x + width - radius, y); this.ctx.arcTo(x + width, y, x + width, y + radius, radius); this.ctx.lineTo(x + width, y + height - radius); this.ctx.arcTo(x + width, y + height, x + width - radius, y + height, radius); this.ctx.lineTo(x + radius, y + height); this.ctx.arcTo(x, y + height, x, y + height - radius, radius); this.ctx.lineTo(x, y + radius); this.ctx.arcTo(x, y, x + radius, y, radius); this.ctx.closePath(); } onMouseDown(event) { const rect = this.canvasRef.nativeElement.getBoundingClientRect(); const x = event.clientX - rect.left; const y = event.clientY - rect.top; this.nodes.forEach(node => { if (x >= node.x && x <= node.x + node.width && y >= node.y && y <= node.y + node.height) { node.isDragging = true; this.draggedNode = node; this.lastX = x; this.lastY = y; } }); } onMouseMove(event) { if (!this.draggedNode) return; const rect = this.canvasRef.nativeElement.getBoundingClientRect(); const x = event.clientX - rect.left; const y = event.clientY - rect.top; const dx = x - this.lastX; const dy = y - this.lastY; this.draggedNode.x += dx; this.draggedNode.y += dy; this.lastX = x; this.lastY = y; this.draw(); } onMouseUp() { if (this.draggedNode) { this.draggedNode.isDragging = false; this.draggedNode = null; } } autoLayout() { // Force-directed layout with hierarchical constraints const iterations = 100; const k = 100; // Spring constant const c = 200; // Repulsion constant for (let i = 0; i < iterations; i++) { // Calculate forces this.nodes.forEach(node1 => { let fx = 0; let fy = 0; // Repulsion between nodes this.nodes.forEach(node2 => { if (node1 !== node2) { const dx = node1.x - node2.x; const dy = node1.y - node2.y; const distance = Math.sqrt(dx * dx + dy * dy); if (distance < 200) { fx += (c / (distance * distance)) * dx / distance; fy += (c / (distance * distance)) * dy / distance; } } }); // Spring forces for edges this.edges.forEach(edge => { if (edge.from === node1.id || edge.to === node1.id) { const other = this.nodes.find(n => n.id === (edge.from === node1.id ? edge.to : edge.from)); const dx = node1.x - other.x; const dy = node1.y - other.y; const distance = Math.sqrt(dx * dx + dy * dy); fx -= k * dx / distance; fy -= k * dy / distance; } }); // Apply forces with damping const damping = 0.9; node1.x += fx * damping; node1.y += fy * damping; // Keep nodes within bounds node1.x = Math.max(node1.width / 2, Math.min(this.width - node1.width / 2, node1.x)); node1.y = Math.max(node1.height / 2, Math.min(this.height - node1.height / 2, node1.y)); }); } } applyHierarchicalConstraints() { // Group nodes by their levels const levels = {}; const visited = new Set(); const assignLevel = (nodeId, level) => { if (visited.has(nodeId)) return; visited.add(nodeId); const node = this.nodes.find(n => n.id === nodeId); levels[level] = levels[level] || []; levels[level].push(node); // Process children this.edges .filter(e => e.from === nodeId) .forEach(e => assignLevel(e.to, level + 1)); }; // Start with root nodes (nodes with no incoming edges) const rootNodes = this.nodes.filter(node => !this.edges.some(e => e.to === node.id)); rootNodes.forEach(node => assignLevel(node.id, 0)); // Adjust vertical positions based on levels Object.entries(levels).forEach(([level, nodes]) => { const levelY = Number(level) * 150 + 50; const levelWidth = this.width - 100; const spacing = levelWidth / (nodes.length + 1); nodes.forEach((node, index) => { node.y = levelY; node.x = spacing * (index + 1); }); }); } minimizeCrossings() { // Barycentric method to reduce edge crossings const levels = this.getLevels(); for (let i = 1; i < Object.keys(levels).length; i++) { const currentLevel = levels[i]; const upperLevel = levels[i - 1]; currentLevel.forEach(node => { // Calculate barycenter const incomingEdges = this.edges.filter(e => e.to === node.id); if (incomingEdges.length > 0) { const avgX = incomingEdges.reduce((sum, edge) => { const sourceNode = upperLevel.find(n => n.id === edge.from); return sum + sourceNode.x; }, 0) / incomingEdges.length; node.x = avgX; } }); // Sort nodes horizontally within level currentLevel.sort((a, b) => a.x - b.x); // Space nodes evenly const levelWidth = this.width - 100; const spacing = levelWidth / (currentLevel.length + 1); currentLevel.forEach((node, index) => { node.x = spacing * (index + 1); }); } } getLevels() { const levels = {}; const visited = new Set(); const getNodeLevel = (nodeId) => { if (visited.has(nodeId)) return -1; visited.add(nodeId); const incomingEdges = this.edges.filter(e => e.to === nodeId); if (incomingEdges.length === 0) return 0; const parentLevels = incomingEdges.map(e => getNodeLevel(e.from)); return Math.max(...parentLevels) + 1; }; this.nodes.forEach(node => { visited.clear(); const level = getNodeLevel(node.id); levels[level] = levels[level] || []; levels[level].push(node); }); return levels; } // Add export functionality exportLayout() { const layout = { nodes: this.nodes.map(node => ({ id: node.id, x: node.x, y: node.y, type: node.type, label: node.label })), edges: this.edges }; return JSON.stringify(layout, null, 2); } // Add import functionality importLayout(layoutStr) { try { const layout = JSON.parse(layoutStr); // Update node positions layout.nodes.forEach((importedNode) => { const node = this.nodes.find(n => n.id === importedNode.id); if (node) { node.x = importedNode.x; node.y = importedNode.y; } }); this.draw(); } catch (error) { console.error('Failed to import layout:', error); } } zoomIn() { this.scale = Math.min(this.scale * 1.2, 3); this.applyZoom(); } zoomOut() { this.scale = Math.max(this.scale / 1.2, 0.3); this.applyZoom(); } applyZoom() { this.ctx.setTransform(1, 0, 0, 1, 0, 0); this.ctx.clearRect(0, 0, this.width, this.height); this.ctx.setTransform(this.scale, 0, 0, this.scale, 0, 0); this.draw(); } selectNode(event) { const rect = this.canvasRef.nativeElement.getBoundingClientRect(); const x = (event.clientX - rect.left) / this.scale; const y = (event.clientY - rect.top) / this.scale; this.selectedNode = null; for (const node of this.nodes) { if (x >= node.x && x <= node.x + node.width && y >= node.y && y <= node.y + node.height) { this.selectedNode = node; break; } } this.draw(); } drawSelectedNode() { if (!this.selectedNode) return; this.ctx.strokeStyle = '#4a90e2'; this.ctx.lineWidth = 3; this.ctx.strokeRect(this.selectedNode.x - 2, this.selectedNode.y - 2, this.selectedNode.width + 4, this.selectedNode.height + 4); } // Override the original draw method to include selection draw() { this.ctx.clearRect(0, 0, this.width / this.scale, this.height / this.scale); this.drawEdges(); this.drawNodes(); if (this.selectedNode) { this.drawSelectedNode(); } } getMidPoint(points) { if (!points || points.length === 0) { return { x: 0, y: 0 }; } if (points.length === 1) { return points[0]; } const midIndex = Math.floor((points.length - 1) / 2); if (points.length % 2 === 0) { // Even number of points - average the two middle points const point1 = points[midIndex]; const point2 = points[midIndex + 1]; return { x: (point1.x + point2.x) / 2, y: (point1.y + point2.y) / 2 }; } else { // Odd number of points - return the middle point return points[midIndex]; } } getPointOnCurve(points, t) { if (points.length === 2) { // Linear interpolation return { x: points[0].x + (points[1].x - points[0].x) * t, y: points[0].y + (points[1].y - points[0].y) * t }; } else if (points.length === 3) { // Quadratic bezier const mt = 1 - t; return { x: mt * mt * points[0].x + 2 * mt * t * points[1].x + t * t * points[2].x, y: mt * mt * points[0].y + 2 * mt * t * points[1].y + t * t * points[2].y }; } else if (points.length === 4) { // Cubic bezier const mt = 1 - t; return { x: mt * mt * mt * points[0].x + 3 * mt * mt * t * points[1].x + 3 * mt * t * t * points[2].x + t * t * t * points[3].x, y: mt * mt * mt * points[0].y + 3 * mt * mt * t * points[1].y + 3 * mt * t * t * points[2].y + t * t * t * points[3].y }; } // Fall back to linear interpolation between first and last points return this.getPointOnCurve([points[0], points[points.length - 1]], t); } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtEbnfDiagram, deps: [], target: i0.ɵɵFactoryTarget.Component }); } static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: IxtEbnfDiagram, selector: "ixt-ebnf", viewQueries: [{ propertyName: "canvasRef", first: true, predicate: ["canvas"], descendants: true, static: true }], ngImport: i0, template: ` <div class="diagram-container"> <canvas #canvas (mousedown)="onMouseDown($event)" (mousemove)="onMouseMove($event)" (mouseup)="onMouseUp()" [width]="width" [height]="height"> </canvas> <button class="auto-layout-btn" (click)="autoLayout()">Auto Layout</button> </div> `, isInline: true, styles: [".diagram-container{position:relative;border:1px solid #ccc}.auto-layout-btn{position:absolute;top:10px;right:10px;padding:8px 16px;background:#4a90e2;color:#fff;border:none;border-radius:4px;cursor:pointer}\n"] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtEbnfDiagram, decorators: [{ type: Component, args: [{ selector: 'ixt-ebnf', template: ` <div class="diagram-container"> <canvas #canvas (mousedown)="onMouseDown($event)" (mousemove)="onMouseMove($event)" (mouseup)="onMouseUp()" [width]="width" [height]="height"> </canvas> <button class="auto-layout-btn" (click)="autoLayout()">Auto Layout</button> </div> `, styles: [".diagram-container{position:relative;border:1px solid #ccc}.auto-layout-btn{position:absolute;top:10px;right:10px;padding:8px 16px;background:#4a90e2;color:#fff;border:none;border-radius:4px;cursor:pointer}\n"] }] }], propDecorators: { canvasRef: [{ type: ViewChild, args: ['canvas', { static: true }] }] } }); // ixt-ebnf.module.ts class IxtEbnfModule { static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtEbnfModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); } static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "16.2.12", ngImport: i0, type: IxtEbnfModule, declarations: [IxtEbnfDiagram], imports: [CommonModule], exports: [IxtEbnfDiagram] }); } static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtEbnfModule, imports: [CommonModule] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtEbnfModule, decorators: [{ type: NgModule, args: [{ declarations: [ IxtEbnfDiagram ], imports: [ CommonModule ], exports: [ IxtEbnfDiagram ] }] }] }); // ixt-ebnf.types.ts // ixt-ebnf.index.ts // ixt-flow-diagram.component.ts class IxtFlowDiagram { constructor() { this.nodes = []; this.edges = []; this.selectedNode = null; this.dragOffset = { x: 0, y: 0 }; // Force-directed layout parameters this.REPULSION = 8000; // Node repulsion force this.ATTRACTION = 0.1; // Edge attraction force this.DAMPING = 0.9; // Velocity damping this.MIN_DISTANCE = 150; // Minimum distance between nodes // Initialize sample deployment pipeline this.initializeGraph(); } ngOnInit() { } ngAfterViewInit() { const canvas = this.canvasRef.nativeElement; this.ctx = canvas.getContext('2d'); this.draw(); } initializeGraph() { // Initialize nodes with random positions this.nodes = [ { id: 'source', x: 100, y: 100, width: 120, height: 60, type: 'rectangle', label: 'Source Code', isDragging: false }, { id: 'build', x: 300, y: 100, width: 120, height: 60, type: 'rectangle', label: 'Build', isDragging: false }, { id: 'test', x: 500, y: 100, width: 100, height: 100, type: 'diamond', label: 'Tests', isDragging: false }, { id: 'staging', x: 700, y: 100, width: 120, height: 60, type: 'rectangle', label: 'Staging', isDragging: false }, { id: 'approval', x: 900, y: 100, width: 80, height: 80, type: 'circle', label: 'Approval', isDragging: false }, { id: 'prod', x: 1100, y: 100, width: 120, height: 60, type: 'rectangle', label: 'Production', isDragging: false } ]; // Define relationships this.edges = [ { from: 'source', to: 'build', label: 'commit' }, { from: 'build', to: 'test', label: 'artifact' }, { from: 'test', to: 'staging', label: 'passed' }, { from: 'staging', to: 'approval', label: 'deploy' }, { from: 'approval', to: 'prod', label: 'approved' } ]; } draw() { const canvas = this.canvasRef.nativeElement; this.ctx.clearRect(0, 0, canvas.width, canvas.height); // Draw edges first (so they appear behind nodes) this.edges.forEach(edge => this.drawEdge(edge)); // Draw nodes this.nodes.forEach(node => this.drawNode(node)); } drawNode(node) { this.ctx.save(); this.ctx.fillStyle = node.isDragging ? '#e0e0e0' : '#ffffff'; this.ctx.strokeStyle = '#333333'; this.ctx.lineWidth = 2; switch (node.type) { case 'rectangle': this.ctx.beginPath(); this.ctx.rect(node.x, node.y, node.width, node.height); break; case 'diamond': this.ctx.beginPath(); this.ctx.moveTo(node.x + node.width / 2, node.y); this.ctx.lineTo(node.x + node.width, node.y + node.height / 2); this.ctx.lineTo(node.x + node.width / 2, node.y + node.height); this.ctx.lineTo(node.x, node.y + node.height / 2); this.ctx.closePath(); break; case 'circle': this.ctx.beginPath(); this.ctx.arc(node.x + node.width / 2, node.y + node.height / 2, Math.min(node.width, node.height) / 2, 0, Math.PI * 2); break; } this.ctx.fill(); this.ctx.stroke(); // Draw label this.ctx.fillStyle = '#000000'; this.ctx.font = '14px Arial'; this.ctx.textAlign = 'center'; this.ctx.textBaseline = 'middle'; this.ctx.fillText(node.label, node.x + node.width / 2, node.y + node.height / 2); this.ctx.restore(); } drawEdge(edge) { const fromNode = this.nodes.find(n => n.id === edge.from); const toNode = this.nodes.find(n => n.id === edge.to); // Calculate edge points using smart routing const points = this.calculateEdgePoints(fromNode, toNode); this.ctx.save(); this.ctx.strokeStyle = '#666666'; this.ctx.lineWidth = 2; // Draw path this.ctx.beginPath(); this.ctx.moveTo(points[0].x, points[0].y); // Draw curved path using bezier curves if (points.length === 4) { this.ctx.bezierCurveTo(points[1].x, points[1].y, points[2].x, points[2].y, points[3].x, points[3].y); } this.ctx.stroke(); // Draw arrow this.drawArrow(points[points.length - 2], points[points.length - 1]); // Draw label if exists if (edge.label) { const midPoint = this.getMidPoint(points); this.ctx.fillStyle = '#000000'; this.ctx.font = '12px Arial'; this.ctx.textAlign = 'center'; this.ctx.textBaseline = 'middle'; this.ctx.fillText(edge.label, midPoint.x, midPoint.y - 10); } this.ctx.restore(); } calculateEdgePoints(from, to) { const fromCenter = { x: from.x + from.width / 2, y: from.y + from.height / 2 }; const toCenter = { x: to.x + to.width / 2, y: to.y + to.height / 2 }; // Calculate control points for bezier curve const dx = toCenter.x - fromCenter.x; const dy = toCenter.y - fromCenter.y; const distance = Math.sqrt(dx * dx + dy * dy); const control1 = { x: fromCenter.x + dx / 3, y: fromCenter.y + dy / 3 }; const control2 = { x: fromCenter.x + 2 * dx / 3, y: fromCenter.y + 2 * dy / 3 }; return [fromCenter, control1, control2, toCenter]; } drawArrow(from, to) { const headLength = 10; const angle = Math.atan2(to.y - from.y, to.x - from.x); this.ctx.beginPath(); this.ctx.moveTo(to.x, to.y); this.ctx.lineTo(to.x - headLength * Math.cos(angle - Math.PI / 6), to.y - headLength * Math.sin(angle - Math.PI / 6)); this.ctx.moveTo(to.x, to.y); this.ctx.lineTo(to.x - headLength * Math.cos(angle + Math.PI / 6), to.y - headLength * Math.sin(angle + Math.PI / 6)); this.ctx.stroke(); } getMidPoint(points) { const mid = Math.floor(points.length / 2); return points[mid]; } // Mouse event handlers onMouseDown(event) { const rect = this.canvasRef.nativeElement.getBoundingClientRect(); const x = event.clientX - rect.left; const y = event.clientY - rect.top; // Find clicked node this.selectedNode = this.nodes.find(node => x >= node.x && x <= node.x + node.width && y >= node.y && y <= node.y + node.height) || null; if (this.selectedNode) { this.selectedNode.isDragging = true; this.dragOffset = { x: x - this.selectedNode.x, y: y - this.selectedNode.y }; } } onMouseMove(event) { if (this.selectedNode?.isDragging) { const rect = this.canvasRef.nativeElement.getBoundingClientRect(); const x = event.clientX - rect.left; const y = event.clientY - rect.top; this.selectedNode.x = x - this.dragOffset.x; this.selectedNode.y = y - this.dragOffset.y; this.draw(); } } onMouseUp() { if (this.selectedNode) { this.selectedNode.isDragging = false; this.selectedNode = null; } } // Auto layout implementation using force-directed algorithm autoLayout() { const iterations = 100; const velocities = this.nodes.map(() => ({ x: 0, y: 0 })); for (let i = 0; i < iterations; i++) { // Calculate forces this.nodes.forEach((node1, i) => { velocities[i] = { x: 0, y: 0 }; // Repulsion forces between nodes this.nodes.forEach((node2, j) => { if (i !== j) { const dx = node2.x - node1.x; const dy = node2.y - node1.y; const distance = Math.sqrt(dx * dx + dy * dy); if (distance < this.MIN_DISTANCE) { const force = this.REPULSION / (distance * distance); velocities[i].x -= (dx / distance) * force; velocities[i].y -= (dy / distance) * force; } } }); // Attraction forces along edges this.edges.forEach(edge => { if (edge.from === node1.id) { const node2 = this.nodes.find(n => n.id === edge.to); const dx = node2.x - node1.x; const dy = node2.y - node1.y; const distance = Math.sqrt(dx * dx + dy * dy); velocities[i].x += dx * this.ATTRACTION; velocities[i].y += dy * this.ATTRACTION; } }); }); // Apply velocities with damping this.nodes.forEach((node, i) => { node.x += velocities[i].x * this.DAMPING; node.y += velocities[i].y * this.DAMPING; }); } this.draw(); } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtFlowDiagram, deps: [], target: i0.ɵɵFactoryTarget.Component }); } static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: IxtFlowDiagram, selector: "ixt-flow", viewQueries: [{ propertyName: "canvasRef", first: true, predicate: ["canvas"], descendants: true }], ngImport: i0, template: ` <div class="flow-diagram-container"> <canvas #canvas (mousedown)="onMouseDown($event)" (mousemove)="onMouseMove($event)" (mouseup)="onMouseUp()" width="1200" height="800"> </canvas> <button (click)="autoLayout()" class="auto-layout-btn">Auto Layout</button> </div> `, isInline: true, styles: [".flow-diagram-container{position:relative;border:1px solid #ccc}.auto-layout-btn{position:absolute;top:10px;right:10px;padding:8px 16px;background:#4caf50;color:#fff;border:none;border-radius:4px;cursor:pointer}.auto-layout-btn:hover{background:#45a049}\n"] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtFlowDiagram, decorators: [{ type: Component, args: [{ selector: 'ixt-flow', template: ` <div class="flow-diagram-container"> <canvas #canvas (mousedown)="onMouseDown($event)" (mousemove)="onMouseMove($event)" (mouseup)="onMouseUp()" width="1200" height="800"> </canvas> <button (click)="autoLayout()" class="auto-layout-btn">Auto Layout</button> </div> `, styles: [".flow-diagram-container{position:relative;border:1px solid #ccc}.auto-layout-btn{position:absolute;top:10px;right:10px;padding:8px 16px;background:#4caf50;color:#fff;border:none;border-radius:4px;cursor:pointer}.auto-layout-btn:hover{background:#45a049}\n"] }] }], ctorParameters: function () { return []; }, propDecorators: { canvasRef: [{ type: ViewChild, args: ['canvas'] }] } }); // ixt-flow.module.ts class IxtFlowModule { static forRoot() { return { ngModule: IxtFlowModule, providers: [] }; } static forChild() { return { ngModule: IxtFlowModule, providers: [] }; } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtFlowModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); } static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "16.2.12", ngImport: i0, type: IxtFlowModule, declarations: [IxtFlowDiagram], imports: [CommonModule], exports: [IxtFlowDiagram] }); } static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtFlowModule, imports: [CommonModule] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtFlowModule, decorators: [{ type: NgModule, args: [{ declarations: [ IxtFlowDiagram ], imports: [ CommonModule ], exports: [ IxtFlowDiagram ], providers: [] }] }] }); // ixt-flow.index.ts // ixt-gannt.diagram.ts class IxtGanntDiagram { constructor() { this.flights = []; // Canvas dimensions this.canvasWidth = 2400; // 24 hours * 100 pixels per hour this.canvasHeight = 500; // 5 aircraft lanes * 100 pixels height // Layout constants this.HOUR_WIDTH = 100; this.LANE_HEIGHT = 100; this.MIN_FLIGHT_DURATION = 60; // 1 hour in minutes this.MAX_FLIGHT_DURATION = 240; // 4 hours in minutes this.MIN_GROUND_TIME = 30; // 30 minutes between flights // Drag state this.isDragging = false; this.selectedPuck = null; this.dragOffsetX = 0; this.dragOffsetY = 0; this.isResizing = false; this.resizeEdge = null; // Sample airports for domestic routes this.airports = ['ORD', 'LAX', 'SFO', 'EWR', 'DEN', 'IAH', 'DFW']; this.generateSampleFlights(); } ngOnInit() { } ngAfterViewInit() { this.ctx = this.canvasRef.nativeElement.getContext('2d'); this.draw(); } generateSampleFlights() { // Generate sample flights for each aircraft for (let aircraft = 0; aircraft < 5; aircraft++) { let startTime = new Date(); startTime.setHours(6, 0, 0, 0); // Start at 6 AM // Generate 2-3 flights per aircraft const numFlights = 2 + Math.floor(Math.random() * 2); for (let i = 0; i < numFlights; i++) { const duration = 60 + Math.floor(Math.random() * 180); // 1-4 hours const fromStation = this.airports[Math.floor(Math.random() * this.airports.length)]; let toStation; do { toStation = this.airports[Math.floor(Math.random() * this.airports.length)]; } while (toStation === fromStation); const endTime = new Date(startTime.getTime() + duration * 60000); this.flights.push({ id: `${aircraft}-${i}`, startTime: new Date(startTime), endTime: new Date(endTime), aircraft, fromStation, toStation, x: this.timeToX(startTime), y: aircraft * this.LANE_HEIGHT, width: this.calculateWidth(startTime, endTime) }); // Add ground time for next flight startTime = new Date(endTime.getTime() + this.MIN_GROUND_TIME * 60000); } } } timeToX(time) { const hours = time.getHours() + time.getMinutes() / 60; return hours * this.HOUR_WIDTH; } calculateWidth(start, end) { const durationHours = (end.getTime() - start.getTime()) / (1000 * 60 * 60); return durationHours * this.HOUR_WIDTH; } draw() { this.ctx.clearRect(0, 0, this.canvasWidth, this.canvasHeight); this.drawGrid(); this.drawTimeline(); this.drawFlights(); } drawGrid() { this.ctx.strokeStyle = '#ddd'; this.ctx.lineWidth = 1; // Draw horizontal lines (aircraft lanes) for (let i = 0; i <= 5; i++) { const y = i * this.LANE_HEIGHT; this.ctx.beginPath(); this.ctx.moveTo(0, y); this.ctx.lineTo(this.canvasWidth, y); this.ctx.stroke(); } // Draw vertical lines (hour markers) for (let i = 0; i <= 24; i++) { const x = i * this.HOUR_WIDTH; this.ctx.beginPath(); this.ctx.moveTo(x, 0); this.ctx.lineTo(x, this.canvasHeight); this.ctx.stroke(); } } drawTimeline() { this.ctx.fillStyle = '#333'; this.ctx.font = '12px Arial'; this.ctx.textAlign = 'center'; for (let i = 0; i <= 24; i++) { const x = i * this.HOUR_WIDTH; const timeStr = i === 0 || i === 24 ? '12 MN' : i === 12 ? '12 NN' : i > 12 ? `${i - 12} PM` : `${i} AM`; this.ctx.fillText(timeStr, x, 20); } } drawFlights() { this.flights.forEach(flight => { // Draw flight puck this.ctx.fillStyle = '#4a90e2'; this.ctx.strokeStyle = '#2171c7'; this.ctx.lineWidth = 2; const puckHeight = 60; const y = flight.y + (this.LANE_HEIGHT - puckHeight) / 2; // Draw rounded rectangle this.ctx.beginPath(); this.ctx.roundRect(flight.x, y, flight.width, puckHeight, 10); this.ctx.fill(); this.ctx.stroke(); // Draw flight information this.ctx.fillStyle = 'white'; this.ctx.font = '12px Arial'; this.ctx.textAlign = 'center'; const startTime = flight.startTime.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }); const endTime = flight.endTime.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }); const flightInfo = `${flight.fromStation} - ${flight.toStation}`; this.ctx.fillText(flightInfo, flight.x + flight.width / 2, y + puckHeight / 2); this.ctx.fillText(`${startTime} - ${endTime}`, flight.x + flight.width / 2, y + puckHeight / 2 + 15); }); } onMouseDown(event) { const rect = this.canvasRef.nativeElement.getBoundingClientRect(); const x = event.clientX - rect.left; const y = event.clientY - rect.top; // Check if clicked on a flight puck const clickedPuck = this.findClickedPuck(x, y); if (clickedPuck) { this.selectedPuck = clickedPuck; this.isDragging = true; this.dragOffsetX = x - clickedPuck.x; this.dragOffsetY = y - clickedPuck.y; } } onMouseMove(event) { if (!this.isDragging || !this.selectedPuck) return; const rect = this.canvasRef.nativeElement.getBoundingClientRect(); const x = event.clientX - rect.left - this.dragOffsetX; const y = event.clientY - rect.top - this.dragOffsetY; // Snap to lanes const newAircraft = Math.floor((y + this.LANE_HEIGHT / 2) / this.LANE_HEIGHT); if (newAircraft >= 0 && newAircraft < 5) { this.selectedPuck.aircraft = newAircraft; this.selectedPuck.y = newAircraft * this.LANE_HEIGHT; } // Update x position (time) const minX = 0; const maxX = this.canvasWidth - this.selectedPuck.width; this.selectedPuck.x = Math.max(minX, Math.min(x, maxX)); // Check for conflicts if (this.hasConflict(this.selectedPuck)) { // Revert position if conflict detected this.selectedPuck.x = this.timeToX(this.selectedPuck.startTime); } else { // Update times based on new position const hourOffset = this.selectedPuck.x / this.HOUR_WIDTH; const newStartTime = new Date(); newStartTime.setHours(Math.floor(hourOffset)); newStartTime.setMinutes((hourOffset % 1) * 60); this.selectedPuck.startTime = newStartTime; this.selectedPuck.endTime = new Date(newStartTime.getTime() + (this.selectedPuck.width / this.HOUR_WIDTH) * 60 * 60 * 1000); } this.draw(); } onMouseUp() { this.isDragging = false; this.selectedPuck = null; this.resizeEdge = null; } findClickedPuck(x, y) { return this.flights.find(flight => x >= flight.x && x <= flight.x + flight.width && y >= flight.y && y <= flight.y + this.LANE_HEIGHT) || null; } hasConflict(puck) { return this.flights.some(flight => { if (flight === puck) return false; if (flight.aircraft !== puck.aircraft) return false; const puckStart = puck.x / this.HOUR_WIDTH; const puckEnd = (puck.x + puck.width) / this.HOUR_WIDTH; const flightStart = flight.x / this.HOUR_WIDTH; const flightEnd = (flight.x + flight.width) / this.HOUR_WIDTH; // Check if there's less than minimum ground time between flights return !(puckEnd + (this.MIN_GROUND_TIME / 60) <= flightStart || flightEnd + (this.MIN_GROUND_TIME / 60) <= puckStart); }); } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtGanntDiagram, deps: [], target: i0.ɵɵFactoryTarget.Component }); } static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: IxtGanntDiagram, selector: "gannt-diagram", viewQueries: [{ propertyName: "canvasRef", first: true, predicate: ["schedulerCanvas"], descendants: true }], ngImport: i0, template: ` <div class="scheduler-container" (mousemove)="onMouseMove($event)" (mouseup)="onMouseUp()"> <canvas #schedulerCanvas [width]="canvasWidth" [height]="canvasHeight" (mousedown)="onMouseDown($event)"> </canvas> </div> `, isInline: true, styles: [".scheduler-container{width:100%;height:600px;overflow:auto;position:relative;background:#f5f5f5}canvas{cursor:default}\n"] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtGanntDiagram, decorators: [{ type: Component, args: [{ selector: 'gannt-diagram', template: ` <div class="scheduler-container" (mousemove)="onMouseMove($event)" (mouseup)="onMouseUp()"> <canvas #schedulerCanvas [width]="canvasWidth" [height]="canvasHeight" (mousedown)="onMouseDown($event)"> </canvas> </div> `, styles: [".scheduler-container{width:100%;height:600px;overflow:auto;position:relative;background:#f5f5f5}canvas{cursor:default}\n"] }] }], ctorParameters: function () { return []; }, propDecorators: { canvasRef: [{ type: ViewChild, args: ['schedulerCanvas'] }] } }); // ixt-gannt.module.ts class IxtGanntModule { static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtGanntModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); } static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "16.2.12", ngImport: i0, type: IxtGanntModule, declarations: [IxtGanntDiagram], imports: [CommonModule], exports: [IxtGanntDiagram] }); } static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtGanntModule, imports: [CommonModule] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtGanntModule, decorators: [{ type: NgModule, args: [{ declarations: [ IxtGanntDiagram ], imports: [ CommonModule ], exports: [ IxtGanntDiagram ] }] }] }); // ixt-gannt.index.ts class IxtNetworkDiagram { constructor() { this.animationFrameId = 0; this.isDragging = false; this.selectedNode = null; this.mouseOffset = { x: 0, y: 0 }; this.width = 1200; this.height = 800; // Sample network configuration this.nodes = [ { id: 'api', label: 'API Gateway', type: 'gateway', x: 200, y: 200, width: 120, height: 60, vx: 0, vy: 0 }, { id: 'auth', label: 'Auth Service', type: 'service', x: 400, y: 150, width: 120, height: 60, vx: 0, vy: 0 }, { id: 'users', label: 'User Service', type: 'service', x: 600, y: 200, width: 120, height: 60, vx: 0, vy: 0 }, { id: 'userdb', label: 'User DB', type: 'database', x: 800, y: 200, width: 100, height: 60, vx: 0, vy: 0 }, { id: 'cache', label: 'Redis Cache', type: 'cache', x: 400, y: 300, width: 100, height: 60, vx: 0, vy: 0 }, { id: 'lb', label: 'Load Balancer', type: 'loadbalancer', x: 200, y: 100, width: 120, height: 60, vx: 0, vy: 0 } ]; this.edges = [ { from: 'lb', to: 'api', type: 'sync' }, { from: 'api', to: 'auth', type: 'sync' }, { from: 'api', to: 'users', type: 'sync' }, { from: 'users', to: 'userdb', type: 'sync' }, { from: 'auth', to: 'cache', type: 'async' }, { from: 'users', to: 'cache', type: 'async' } ]; this.subscriptions = new Subscription(); } ngAfterViewInit() { const canvas = this.canvasRef.nativeElement; this.ctx = canvas.getContext('2d'); // Set up high DPI canvas const dpr = window.devicePixelRatio || 1; canvas.width = this.width * dpr; canvas.height = this.height * dpr; canvas.style.width = `${this.width}px`; canvas.style.height = `${this.height}px`; this.ctx.scale(dpr, dpr); this.draw(); } ngOnDestroy() { if (this.animationFrameId) { cancelAnimationFrame(this.animationFrameId); } this.subscriptions.unsubscribe(); } draw() { this.ctx.clearRect(0, 0, this.width, this.height); // Draw edges first (so they appear under nodes) this.drawEdges(); // Draw nodes this.nodes.forEach(node => this.drawNode(node)); this.animationFrameId = requestAnimationFrame(() => this.draw()); } drawNode(node) { const { x, y, width, height, label, type } = node; // Draw shadow this.ctx.shadowColor = 'rgba(0, 0, 0, 0.2)'; this.ctx.shadowBlur = 10; this.ctx.shadowOffsetX = 3; this.ctx.shadowOffsetY = 3; // Draw node background this.ctx.beginPath(); this.ctx.roundRect(x, y, width, height, 8); // Different colors for different node types const colors = { service: '#4a90e2', database: '#50b83c', loadbalancer: '#8c4a9e', gateway: '#f5a623', cache: '#e2725b' }; this.ctx.fillStyle = colors[type]; this.ctx.fill(); // Reset shadow this.ctx.shadowColor = 'transparent'; // Draw node label this.ctx.fillStyle = 'white'; this.ctx.font = '14px Arial'; this.ctx.textAlign = 'center'; this.ctx.textBaseline = 'middle'; this.ctx.fillText(label, x + width / 2, y + height / 2); } drawEdges() { this.edges.forEach(edge => { const fromNode = this.nodes.find(n => n.id === edge.from); const toNode = this.nodes.find(n => n.id === edge.to); // Calculate edge points using smart routing const points = this.calculateEdgePoints(fromNode, toNode); this.ctx.beginPath(); this.ctx.moveTo(points[0].x, points[0].y); // Draw curved lines for a more professional look if (points.length === 3) { this.ctx.quadraticCurveTo(points[1].x, points[1].y, points[2].x, points[2].y); } // Style based on edge type this.ctx.strokeStyle = edge.type === 'async' ? '#999' : '#666'; this.ctx.setLineDash(edge.type === 'async' ? [5, 5] : []); this.ctx.lineWidth = 2; this.ctx.stroke(); // Draw arrow this.drawArrow(points[points.length - 2], points[points.length - 1]); }); } calculateEdgePoints(from, to) { // Smart edge routing to avoid node intersections const startPoint = { x: from.x + from.width / 2, y: from.y + from.height / 2 }; const endPoint = { x: to.x + to.width / 2, y: to.y + to.height / 2 }; // Calculate control point for curved lines const controlPoint = { x: (startPoint.x + endPoint.x) / 2, y: (startPoint.y + endPoint.y) / 2 }; // Adjust control point based on node positions if (Math.abs(from.y - to.y) < Math.max(from.height, to.height)) { controlPoint.y -= 50; // Curve upward if nodes are at similar heights } return [startPoint, controlPoint, endPoint]; } drawArrow(from, to) { const angle = Math.atan2(to.y - from.y, to.x - from.x); const arrowLength = 10; this.ctx.beginPath(); this.ctx.moveTo(to.x - arrowLength * Math.cos(angle - Math.PI / 6), to.y - arrowLength * Math.sin(angle - Math.PI / 6)); this.ctx.lineTo(to.x, to.y); this.ctx.lineTo(to.x - arrowLength * Math.cos(angle + Math.PI / 6), to.y - arrowLength * Math.sin(angle + Math.PI / 6)); this.ctx.stroke(); } onMouseDown(event) { const rect = this.canvasRef.nativeElement.getBoundingClientRect(); const x = event.clientX - rect.left; const y = event.clientY - rect.top; // Check if we clicked on a node this.selectedNode = this.nodes.find(node => x >= node.x && x <= node.x + node.width && y >= node.y && y <= node.y + node.height) || null; if (this.selectedNode) { this.isDragging = true; this.mouseOffset.x = x - this.selectedNode.x; this.mouseOffset.y = y - this.selectedNode.y; } } onMouseMove(event) { if (this.isDragging && this.selectedNode) { const rect = this.canvasRef.nativeElement.getBoundingClientRect(); const x = event.clientX - rect.left; const y = event.clientY - rect.top; this.selectedNode.x = x - this.mouseOffset.x; this.selectedNode.y = y - this.mouseOffset.y; // Keep node within canvas bounds this.selectedNode.x = Math.max(0, Math.min(this.width - this.selectedNode.width, this.selectedNode.x)); this.selectedNode.y = Math.max(0, Math.min(this.height - this.selectedNode.height, this.selectedNode.y)); } } onMouseUp() { this.isDragging = false; this.selectedNode = null; } applyForceDirectedLayout() { const simulation = { alpha: 1, alphaMin: 0.001, alphaDecay: 0.0228, velocityDecay: 0.4, linkDistance: 200, linkStrength: 1, repulsion: -400, iterations: 300 }; const animate = () => { if (simulation.alpha > simulation.alphaMin && simulation.iterations > 0) { this.calculateForces(simulation); simulation.alpha *= 1 - simulation.alphaDecay; simulation.iterations--; requestAnimationFrame(animate); } }; requestAnimationFrame(animate); } calculateForces(simulation) { // Apply forces between all node pairs for (let i = 0; i < this.nodes.length; i++) { for (let j = i + 1; j < this.nodes.length; j++) { const nodeA = this.nodes[i]; const nodeB = this.nodes[j]; const dx = nodeB.x - nodeA.x; const dy = nodeB.y - nodeA.y; const distance = Math.sqrt(dx * dx + dy * dy); if (distance === 0) continue; // Repulsive force between all nodes const force = simulation.repulsion / (distance * distance); const forceX = (dx / distance) * force; const forceY = (dy / distance) * force; nodeA.vx -= forceX; nodeA.vy -= forceY; nodeB.vx += forceX; nodeB.vy += forceY; } } // Apply attractive forces along edges this.edges.forEach(edge => { const source = this.nodes.find(n => n.id === edge.from); const target = this.nodes.find(n => n.id === edge.to); const dx = target.x - source.x; const dy = target.y - source.y; const distance = Math.sqrt(dx * dx + dy * dy); if (distance === 0) return; const force = (distance - simulation.linkDistance) * simulation.linkStrength; const forceX = (dx / distance) * force; const forceY = (dy / distance) * force; source.vx += forceX; source.vy += forceY; target.vx -= forceX; target.vy -= forceY; }); // Update positions this.nodes.forEach(node => { node.vx *= simulation.velocityDecay; node.vy *= simulation.velocityDecay; node.x += node.vx; node.y += node.vy; // Constrain to canvas bounds node.x = Math.max(0, Math.min(this.width - node.width, node.x)); node.y = Math.max(0, Math.min(this.height - node.height, node.y)); }); } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtNetworkDiagram, deps: [], target: i0.ɵɵFactoryTarget.Component }); } static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: IxtNetworkDiagram, selector: "ixt-network-diagram", viewQueries: [{ propertyName: "canvasRef", first: true, predicate: ["canvas"], descendants: true }], ngImport: i0, template: ` <div class="diagram-container"> <canvas #canvas [width]="width" [height]="height" (mousedown)="onMouseDown($event)" (mousemove)="onMouseMove($event)" (mouseup)="onMouseUp()"> </canvas> <button (click)="applyForceDirectedLayout()" class="layout-button"> Auto Layout </button> </div> `, isInline: true, styles: [".diagram-container{position:relative;border:1px solid #ccc;margin:20px}.layout-button{position:absolute;top:10px;right:10px;padding:8px 16px;background:#4a90e2;color:#fff;border:none;border-radius:4px;cursor:pointer}.layout-button:hover{background:#357abd}\n"] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtNetworkDiagram, decorators: [{ type: Component, args: [{ selector: 'ixt-network-diagram', template: ` <div class="diagram-container"> <canvas #canvas [width]="width" [height]="height" (mousedown)="onMouseDown($event)" (mousemove)="onMouseMove($event)" (mouseup)="onMouseUp()"> </canvas> <button (click)="applyForceDirectedLayout()" class="layout-button"> Auto Layout </button> </div> `, styles: [".diagram-container{position:relative;border:1px solid #ccc;margin:20px}.layout-button{position:absolute;top:10px;right:10px;padding:8px 16px;background:#4a90e2;color:#fff;border:none;border-radius:4px;cursor:pointer}.layout-button:hover{background:#357abd}\n"] }] }], propDecorators: { canvasRef: [{ type: ViewChild, args: ['canvas'] }] } }); // ixt-network.module.ts class IxtNetworkModule { static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtNetworkModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); } static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "16.2.12", ngImport: i0, type: IxtNetworkModule, declarations: [IxtNetworkDiagram], imports: [CommonModule], exports: [IxtNetworkDiagram] }); } static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtNetworkModule, imports: [CommonModule] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtNetworkModule, decorators: [{ type: NgModule, args: [{ declarations: [ IxtNetworkDiagram ], imports: [ CommonModule ], exports: [ IxtNetworkDiagram ] }] }] }); // ixt-network.index.ts class IxtSankeyDiagram { constructor() { // Sample data this.nodes = [ { name: 'Total Energy', value: 1000 }, { name: 'Residential', value: 300 }, { name: 'Commercial', value: 400 }, { name: 'Industrial', value: 300 }, { name: 'Electricity', value: 450 }, { name: 'Natural Gas', value: 350 }, { name: 'Oil', value: 200 } ]; this.links = [ { source: 0, target: 1, value: 300 }, { source: 0, target: 2, value: 400 }, { source: 0, target: 3, value: 300 }, { source: 1, target: 4, value: 200 }, { source: 1, target: 5, value: 100 }, { source: 2, target: 4, value: 250 }, { source: 2, target: 5, value: 150 }, { source: 3, target: 5, value: 100 }, { source: 3, target: 6, value: 200 } ]; this.PADDING = 50; this.NODE_WIDTH = 20; this.NODE_SPACING = 50; this.COLORS = [ '#1f77b4', '#ff7f0e', '#2ca02c', '#d62728', '#9467bd', '#8c564b', '#e377c2' ]; } ngOnInit() { this.initializeCanvas(); this.drawSankey(); } initializeCanvas() { const canvas = this.canvas.nativeElement; this.ctx = canvas.getContext('2d'); // Handle high DPI displays const dpr = window.devicePixelRatio || 1; canvas.width = canvas.offsetWidth * dpr; canvas.height = canvas.offsetHeight * dpr; this.ctx.scale(dpr, dpr); } drawSankey() { const canvas = this.canvas.nativeElement; const width = canvas.offsetWidth; const height = canvas.offsetHeight; // Calculate node positions const nodeColumns = this.calculateNodeColumns(); const nodePositions = this.calculateNodePositions(nodeColumns, width, height); // Draw links this.links.forEach((link, index) => { const sourcePos = nodePositions[link.source]; const targetPos = nodePositions[link.target]; const sourceY = sourcePos.y + (sourcePos.height / 2); const targetY = targetPos.y + (targetPos.height / 2); this.drawLink(sourcePos.x + this.NODE_WIDTH, sourceY, targetPos.x, targetY, link.value, this.COLORS[index % this.COLORS.length]); }); // Draw nodes nodePositions.forEach((pos, index) => { this.drawNode(pos.x, pos.y, this.NODE_WIDTH, pos.height, this.nodes[index].name, this.COLORS[index % this.COLORS.length]); }); } calculateNodeColumns() { const columns = new Array(this.nodes.length).fill(0); const visited = new Set(); const assignColumn = (nodeIndex, column) => { if (!visited.has(nodeIndex)) { columns[nodeIndex] = Math.max(columns[nodeIndex], column); visited.add(nodeIndex); this.links .filter(link => link.source === nodeIndex) .forEach(link => assignColumn(link.target, column + 1)); } }; assignColumn(0, 0); return columns; } calculateNodePositions(columns, width, height) { const maxColumn = Math.max(...columns); const columnWidth = (width - 2 * this.PADDING) / maxColumn; const positions = this.nodes.map((node, index) => { const x = this.PADDING + columns[index] * columnWidth; const nodeHeight = (node.value / this.nodes[0].value) * (height - 2 * this.PADDING); return { x, y: (height - nodeHeight) / 2, height: nodeHeight }; }); return positions; } drawNode(x, y, width, height, label, color) { this.ctx.fillStyle = color; this.ctx.fillRect(x, y, width, height); // Draw label this.ctx.fillStyle = '#000'; this.ctx.font = '12px Arial'; this.ctx.textAlign = 'right'; this.ctx.textBaseline = 'middle'; this.ctx.fillText(label, x - 5, y + height / 2); } drawLink(x1, y1, x2, y2, value, color) { const controlPoint1X = x1 + (x2 - x1) / 3; const controlPoint2X = x1 + 2 * (x2 - x1) / 3; this.ctx.beginPath(); this.ctx.moveTo(x1, y1); this.ctx.bezierCurveTo(controlPoint1X, y1, controlPoint2X, y2, x2, y2); this.ctx.strokeStyle = color; this.ctx.lineWidth = Math.max(1, value / 20); this.ctx.stroke(); } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtSankeyDiagram, deps: [], target: i0.ɵɵFactoryTarget.Component }); } static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: IxtSankeyDiagram, selector: "ixt-sankey-diagram", viewQueries: [{ propertyName: "canvas", first: true, predicate: ["sankeyCanvas"], descendants: true, static: true }], ngImport: i0, template: ` <div class="sankey-container"> <canvas #sankeyCanvas></canvas> </div> `, isInline: true, styles: [".sankey-container{width:800px;height:600px}canvas{width:100%;height:100%}\n"] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtSankeyDiagram, decorators: [{ type: Component, args: [{ selector: 'ixt-sankey-diagram', template: ` <div class="sankey-container"> <canvas #sankeyCanvas></canvas> </div> `, styles: [".sankey-container{width:800px;height:600px}canvas{width:100%;height:100%}\n"] }] }], propDecorators: { canvas: [{ type: ViewChild, args: ['sankeyCanvas', { static: true }] }] } }); // ixt-sankey.module.ts class IxtSankeyModule { static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtSankeyModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); } static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "16.2.12", ngImport: i0, type: IxtSankeyModule, declarations: [IxtSankeyDiagram], imports: [CommonModule], exports: [IxtSankeyDiagram] }); } static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtSankeyModule, imports: [CommonModule] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtSankeyModule, decorators: [{ type: NgModule, args: [{ declarations: [ IxtSankeyDiagram ], imports: [ CommonModule ], exports: [ IxtSankeyDiagram ] }] }] }); // ixt-sankey.index.ts // ixt-wireframe-diagram.ts class IxtWireframeDiagram { constructor() { this.shapes = []; this.selectedShapes = new Set(); this.isDragging = false; this.dragStart = { x: 0, y: 0 }; this.dragOffset = { x: 0, y: 0 }; this.scale = 1; this.panOffset = { x: 0, y: 0 }; this.showGrid = true; this.snapEnabled = false; this.gridSize = 20; this.availableShapes = [ { name: 'Button', type: 'button', defaultWidth: 100, defaultHeight: 30 }, { name: 'Text Field', type: 'textfield', defaultWidth: 200, defaultHeight: 30 }, { name: 'Checkbox', type: 'checkbox', defaultWidth: 20, defaultHeight: 20 }, { name: 'Radio Button', type: 'radio', defaultWidth: 20, defaultHeight: 20 }, { name: 'Select', type: 'select', defaultWidth: 200, defaultHeight: 30 }, { name: 'Table', type: 'table', defaultWidth: 400, defaultHeight: 300 }, { name: 'Panel', type: 'panel', defaultWidth: 300, defaultHeight: 200 }, { name: 'Dialog', type: 'dialog', defaultWidth: 400, defaultHeight: 300 }, { name: 'Menu', type: 'menu', defaultWidth: 150, defaultHeight: 200 }, { name: 'Tree', type: 'tree', defaultWidth: 200, defaultHeight: 400 } ]; // Undo/Redo support this.undoStack = []; this.redoStack = []; } ngOnInit() { this.initializeCanvas(); this.initializeRulers(); this.draw(); } initializeCanvas() { const canvas = this.mainCanvas.nativeElement; this.ctx = canvas.getContext('2d'); this.resizeCanvas(); window.addEventListener('resize', () => this.resizeCanvas()); } resizeCanvas() { const canvas = this.mainCanvas.nativeElement; const container = canvas.parentElement; canvas.width = container.clientWidth; canvas.height = container.clientHeight; this.draw(); } initializeRulers() { // Initialize top ruler const topRuler = this.topRuler.nativeElement; const topCtx = topRuler.getContext('2d'); topRuler.width = this.mainCanvas.nativeElement.width; topRuler.height = 20; // Initialize left ruler const leftRuler = this.leftRuler.nativeElement; const leftCtx = leftRuler.getContext('2d'); leftRuler.width = 20; leftRuler.height = this.mainCanvas.nativeElement.height; this.drawRulers(); } drawRulers() { // Draw top ruler const topCtx = this.topRuler.nativeElement.getContext('2d'); topCtx.clearRect(0, 0, this.topRuler.nativeElement.width, this.topRuler.nativeElement.height); // Draw left ruler const leftCtx = this.leftRuler.nativeElement.getContext('2d'); leftCtx.clearRect(0, 0, this.leftRuler.nativeElement.width, this.leftRuler.nativeElement.height); // Draw measurements on rulers // ... (implementation for drawing ruler measurements) } draw() { this.ctx.clearRect(0, 0, this.mainCanvas.nativeElement.width, this.mainCanvas.nativeElement.height); if (this.showGrid) { this.drawGrid(); } this.shapes.forEach(shape => this.drawShape(shape)); } drawGrid() { const canvas = this.mainCanvas.nativeElement; this.ctx.strokeStyle = '#eee'; this.ctx.lineWidth = 1; // Draw vertical lines for (let x = 0; x < canvas.width; x += this.gridSize) { this.ctx.beginPath(); this.ctx.moveTo(x, 0); this.ctx.lineTo(x, canvas.height); this.ctx.stroke(); } // Draw horizontal lines for (let y = 0; y < canvas.height; y += this.gridSize) { this.ctx.beginPath(); this.ctx.moveTo(0, y); this.ctx.lineTo(canvas.width, y); this.ctx.stroke(); } } drawShape(shape) { const isSelected = this.selectedShapes.has(shape.id); this.ctx.save(); this.ctx.scale(this.scale, this.scale); this.ctx.translate(this.panOffset.x, this.panOffset.y); // Draw shape based on type switch (shape.type) { case 'button': this.drawButton(shape, isSelected); break; case 'textfield': this.drawTextField(shape, isSelected); break; // ... (implement other shape drawing methods) } this.ctx.restore(); } drawButton(shape, isSelected) { this.ctx.fillStyle = '#f0f0f0'; this.ctx.strokeStyle = isSelected ? '#0066ff' : '#000'; this.ctx.lineWidth = isSelected ? 2 : 1; this.ctx.beginPath(); this.ctx.roundRect(shape.x, shape.y, shape.width, shape.height, 5); this.ctx.fill(); this.ctx.stroke(); if (shape.text) { this.ctx.fillStyle = '#000'; this.ctx.textAlign = 'center'; this.ctx.textBaseline = 'middle'; this.ctx.fillText(shape.text, shape.x + shape.width / 2, shape.y + shape.height / 2); } } drawTextField(shape, isSelected) { this.ctx.fillStyle = '#fff'; this.ctx.strokeStyle = isSelected ? '#0066ff' : '#000'; this.ctx.lineWidth = isSelected ? 2 : 1; this.ctx.beginPath(); this.ctx.rect(shape.x, shape.y, shape.width, shape.height); this.ctx.fill(); this.ctx.stroke(); if (shape.text) { this.ctx.fillStyle = '#000'; this.ctx.textAlign = 'left'; this.ctx.textBaseline = 'middle'; this.ctx.fillText(shape.text, shape.x + 5, shape.y + shape.height / 2); } } onDragStart(event, shape) { event.dataTransfer?.setData('text/plain', shape.type); } onMouseDown(event) { const pos = this.getCanvasPosition(event); this.isDragging = true; this.dragStart = pos; // Check if clicked on a shape const clickedShape = this.findShapeAtPosition(pos); if (clickedShape) { if (!event.ctrlKey) { this.selectedShapes.clear(); } this.selectedShapes.add(clickedShape.id); this.dragOffset = { x: pos.x - clickedShape.x, y: pos.y - clickedShape.y }; } else { this.selectedShapes.clear(); } this.draw(); } onMouseMove(event) { if (!this.isDragging) return; const pos = this.getCanvasPosition(event); const dx = pos.x - this.dragStart.x; const dy = pos.y - this.dragStart.y; if (this.selectedShapes.size > 0) { this.shapes.forEach(shape => { if (this.selectedShapes.has(shape.id)) { shape.x += dx; shape.y += dy; if (this.snapEnabled) { shape.x = Math.round(shape.x / this.gridSize) * this.gridSize; shape.y = Math.round(shape.y / this.gridSize) * this.gridSize; } } }); } else { // Pan the canvas this.panOffset.x += dx; this.panOffset.y += dy; } this.dragStart = pos; this.draw(); } onMouseUp(_event) { this.isDragging = false; } onWheel(event) { event.preventDefault(); const pos = this.getCanvasPosition(event); // Calculate zoom const delta = event.deltaY > 0 ? 0.9 : 1.1; const newScale = this.scale * delta; // Limit zoom range if (newScale >= 0.1 && newScale <= 5) { this.scale = newScale; // Adjust pan offset to zoom towards mouse position this.panOffset.x = pos.x - (pos.x - this.panOffset.x) * delta; this.panOffset.y = pos.y - (pos.y - this.panOffset.y) * delta; this.draw(); } } getCanvasPosition(event) { const rect = this.mainCanvas.nativeElement.getBoundingClientRect(); return { x: (event.clientX - rect.left) / this.scale - this.panOffset.x, y: (event.clientY - rect.top) / this.scale - this.panOffset.y }; } findShapeAtPosition(pos) { // Search shapes in reverse order to find top-most shape first for (let i = this.shapes.length - 1; i >= 0; i--) { const shape = this.shapes[i]; if (pos.x >= shape.x && pos.x <= shape.x + shape.width && pos.y >= shape.y && pos.y <= shape.y + shape.height) { return shape; } } return null; } toggleGrid() { this.showGrid = !this.showGrid; this.draw(); } toggleSnap() { this.snapEnabled = !this.snapEnabled; } resetZoom() { this.scale = 1; this.panOffset = { x: 0, y: 0 }; this.draw(); } alignSelected(alignment) { if (this.selectedShapes.size < 2) return; const selectedShapes = this.shapes.filter(s => this.selectedShapes.has(s.id)); switch (alignment) { case 'left': const leftMost = Math.min(...selectedShapes.map(s => s.x)); selectedShapes.forEach(s => s.x = leftMost); break; case 'center': const centerX = selectedShapes.reduce((acc, s) => acc + s.x + s.width / 2, 0) / selectedShapes.length; selectedShapes.forEach(s => s.x = centerX - s.width / 2); break; case 'right': const rightMost = Math.max(...selectedShapes.map(s => s.x + s.width)); selectedShapes.forEach(s => s.x = rightMost - s.width); break; case 'top': const topMost = Math.min(...selectedShapes.map(s => s.y)); selectedShapes.forEach(s => s.y = topMost); break; case 'middle': const centerY = selectedShapes.reduce((acc, s) => acc + s.y + s.height / 2, 0) / selectedShapes.length; selectedShapes.forEach(s => s.y = centerY - s.height / 2); break; case 'bottom': const bottomMost = Math.max(...selectedShapes.map(s => s.y + s.height)); selectedShapes.forEach(s => s.y = bottomMost - s.height); break; } this.draw(); } // Add shape when dropped from palette onDrop(event) { event.preventDefault(); const shapeType = event.dataTransfer?.getData('text/plain'); const pos = this.getCanvasPosition(event); if (shapeType) { const template = this.availableShapes.find(s => s.type === shapeType); if (template) { const newShape = { id: `shape-${Date.now()}`, type: shapeType, x: pos.x, y: pos.y, width: template.defaultWidth, height: template.defaultHeight, text: '', layer: this.shapes.length, properties: {} }; this.shapes.push(newShape); this.selectedShapes.clear(); this.selectedShapes.add(newShape.id); this.draw(); } } } // Handle text editing for shapes onDoubleClick(event) { const pos = this.getCanvasPosition(event); const shape = this.findShapeAtPosition(pos); if (shape) { const text = prompt('Enter text:', shape.text); if (text !== null) { shape.text = text; this.draw(); } } } // Resize selected shapes initializeResizeHandles() { const handleSize = 8; const handles = [ { cursor: 'nw-resize', x: 0, y: 0 }, { cursor: 'n-resize', x: 0.5, y: 0 }, { cursor: 'ne-resize', x: 1, y: 0 }, { cursor: 'w-resize', x: 0, y: 0.5 }, { cursor: 'e-resize', x: 1, y: 0.5 }, { cursor: 'sw-resize', x: 0, y: 1 }, { cursor: 's-resize', x: 0.5, y: 1 }, { cursor: 'se-resize', x: 1, y: 1 } ]; this.selectedShapes.forEach(id => { const shape = this.shapes.find(s => s.id === id); if (shape) { handles.forEach(handle => { const x = shape.x + shape.width * handle.x - handleSize / 2; const y = shape.y + shape.height * handle.y - handleSize / 2; this.ctx.fillStyle = '#fff'; this.ctx.strokeStyle = '#0066ff'; this.ctx.fillRect(x, y, handleSize, handleSize); this.ctx.strokeRect(x, y, handleSize, handleSize); }); } }); } // Layer management bringToFront() { if (this.selectedShapes.size === 0) return; const maxLayer = Math.max(...this.shapes.map(s => s.layer)); this.shapes.forEach(shape => { if (this.selectedShapes.has(shape.id)) { shape.layer = maxLayer + 1; } }); this.sortShapesByLayer(); this.draw(); } sendToBack() { if (this.selectedShapes.size === 0) return; const minLayer = Math.min(...this.shapes.map(s => s.layer)); this.shapes.forEach(shape => { if (this.selectedShapes.has(shape.id)) { shape.layer = minLayer - 1; } }); this.sortShapesByLayer(); this.draw(); } sortShapesByLayer() { this.shapes.sort((a, b) => a.layer - b.layer); } // Save and load functionality saveToJSON() { return JSON.stringify({ shapes: this.shapes, scale: this.scale, panOffset: this.panOffset, showGrid: this.showGrid, snapEnabled: this.snapEnabled }); } loadFromJSON(json) { try { const data = JSON.parse(json); this.shapes = data.shapes; this.scale = data.scale; this.panOffset = data.panOffset; this.showGrid = data.showGrid; this.snapEnabled = data.snapEnabled; this.selectedShapes.clear(); this.draw(); } catch (error) { console.error('Error loading wireframe:', error); } } // Export functionality exportAsPNG() { return this.mainCanvas.nativeElement.toDataURL('image/png'); } saveState() { this.undoStack.push(this.saveToJSON()); this.redoStack = []; } undo() { if (this.undoStack.length > 0) { const currentState = this.saveToJSON(); this.redoStack.push(currentState); const previousState = this.undoStack.pop(); this.loadFromJSON(previousState); } } redo() { if (this.redoStack.length > 0) { const currentState = this.saveToJSON(); this.undoStack.push(currentState); const nextState = this.redoStack.pop(); this.loadFromJSON(nextState); } } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtWireframeDiagram, deps: [], target: i0.ɵɵFactoryTarget.Component }); } static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: IxtWireframeDiagram, selector: "ixt-wireframe", viewQueries: [{ propertyName: "mainCanvas", first: true, predicate: ["mainCanvas"], descendants: true, static: true }, { propertyName: "topRuler", first: true, predicate: ["topRuler"], descendants: true, static: true }, { propertyName: "leftRuler", first: true, predicate: ["leftRuler"], descendants: true, static: true }], ngImport: i0, template: ` <div class="wireframe-container"> <!-- Left Toolbar --> <div class="toolbar"> <div class="shape-palette"> <div *ngFor="let shape of availableShapes" class="shape-item" draggable="true" (dragstart)="onDragStart($event, shape)"> {{ shape.name }} </div> </div> </div> <!-- Main Canvas Area --> <div class="canvas-container"> <!-- Top Ruler --> <canvas #topRuler class="ruler top-ruler"></canvas> <!-- Left Ruler --> <canvas #leftRuler class="ruler left-ruler"></canvas> <!-- Main Canvas --> <div class="canvas-wrapper"> <canvas #mainCanvas (mousedown)="onMouseDown($event)" (mousemove)="onMouseMove($event)" (mouseup)="onMouseUp($event)" (wheel)="onWheel($event)"> </canvas> </div> </div> <!-- Controls --> <div class="controls"> <button (click)="toggleGrid()">Toggle Grid</button> <button (click)="toggleSnap()">Toggle Snap</button> <button (click)="resetZoom()">Reset Zoom</button> <div class="alignment-controls"> <button (click)="alignSelected('left')">Align Left</button> <button (click)="alignSelected('center')">Align Center</button> <button (click)="alignSelected('right')">Align Right</button> <button (click)="alignSelected('top')">Align Top</button> <button (click)="alignSelected('middle')">Align Middle</button> <button (click)="alignSelected('bottom')">Align Bottom</button> </div> </div> </div> `, isInline: true, styles: [".wireframe-container{display:flex;height:100%}.toolbar{width:200px;border-right:1px solid #ccc;padding:10px}.canvas-container{flex:1;position:relative}.ruler{position:absolute;background:#f5f5f5}.top-ruler{height:20px;left:20px;right:0}.left-ruler{width:20px;top:20px;bottom:0}.canvas-wrapper{position:absolute;inset:20px 0 0 20px;overflow:hidden}.controls{position:absolute;top:10px;right:10px;z-index:100}.shape-item{padding:8px;margin:4px;border:1px solid #ccc;cursor:move}\n"], dependencies: [{ kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtWireframeDiagram, decorators: [{ type: Component, args: [{ selector: 'ixt-wireframe', template: ` <div class="wireframe-container"> <!-- Left Toolbar --> <div class="toolbar"> <div class="shape-palette"> <div *ngFor="let shape of availableShapes" class="shape-item" draggable="true" (dragstart)="onDragStart($event, shape)"> {{ shape.name }} </div> </div> </div> <!-- Main Canvas Area --> <div class="canvas-container"> <!-- Top Ruler --> <canvas #topRuler class="ruler top-ruler"></canvas> <!-- Left Ruler --> <canvas #leftRuler class="ruler left-ruler"></canvas> <!-- Main Canvas --> <div class="canvas-wrapper"> <canvas #mainCanvas (mousedown)="onMouseDown($event)" (mousemove)="onMouseMove($event)" (mouseup)="onMouseUp($event)" (wheel)="onWheel($event)"> </canvas> </div> </div> <!-- Controls --> <div class="controls"> <button (click)="toggleGrid()">Toggle Grid</button> <button (click)="toggleSnap()">Toggle Snap</button> <button (click)="resetZoom()">Reset Zoom</button> <div class="alignment-controls"> <button (click)="alignSelected('left')">Align Left</button> <button (click)="alignSelected('center')">Align Center</button> <button (click)="alignSelected('right')">Align Right</button> <button (click)="alignSelected('top')">Align Top</button> <button (click)="alignSelected('middle')">Align Middle</button> <button (click)="alignSelected('bottom')">Align Bottom</button> </div> </div> </div> `, styles: [".wireframe-container{display:flex;height:100%}.toolbar{width:200px;border-right:1px solid #ccc;padding:10px}.canvas-container{flex:1;position:relative}.ruler{position:absolute;background:#f5f5f5}.top-ruler{height:20px;left:20px;right:0}.left-ruler{width:20px;top:20px;bottom:0}.canvas-wrapper{position:absolute;inset:20px 0 0 20px;overflow:hidden}.controls{position:absolute;top:10px;right:10px;z-index:100}.shape-item{padding:8px;margin:4px;border:1px solid #ccc;cursor:move}\n"] }] }], propDecorators: { mainCanvas: [{ type: ViewChild, args: ['mainCanvas', { static: true }] }], topRuler: [{ type: ViewChild, args: ['topRuler', { static: true }] }], leftRuler: [{ type: ViewChild, args: ['leftRuler', { static: true }] }] } }); // ixt-wireframe.module.ts class IxtWireframeModule { // If you need to do any module-level configuration, you can use the forRoot pattern static forRoot() { return { ngModule: IxtWireframeModule, providers: [ // Add any providers that should be singleton across the app ] }; } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtWireframeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); } static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "16.2.12", ngImport: i0, type: IxtWireframeModule, declarations: [IxtWireframeDiagram], imports: [CommonModule, FormsModule, DragDropModule], exports: [IxtWireframeDiagram] }); } static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtWireframeModule, imports: [CommonModule, FormsModule, DragDropModule] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtWireframeModule, decorators: [{ type: NgModule, args: [{ declarations: [ IxtWireframeDiagram ], imports: [ CommonModule, FormsModule, DragDropModule ], exports: [ IxtWireframeDiagram ], providers: [] }] }] }); // ixt-wireframe.index.ts // ixt-layer-manager.component.ts class IxtLayerManagerComponent { constructor() { this.layers = []; this.layerChange = new EventEmitter(); this.layerOrderChange = new EventEmitter(); this.selectedLayer = null; this.showColorPicker = false; this.activeProperty = null; this.showStrokeStylePicker = false; this.strokeStyles = ['solid', 'dashed', 'dotted']; } ngOnInit() { this.sortLayers(); } sortLayers() { this.layers.sort((a, b) => a.order - b.order); } onDrop(event) { moveItemInArray(this.layers, event.previousIndex, event.currentIndex); this.layers.forEach((layer, index) => { layer.order = index; }); this.layerOrderChange.emit(this.layers); } toggleVisibility(layer) { layer.visible = !layer.visible; this.layerChange.emit(this.layers); } openColorPicker(layer, property) { this.selectedLayer = layer; this.activeProperty = property; this.showColorPicker = true; } openStrokeStylePicker(layer) { this.selectedLayer = layer; this.showStrokeStylePicker = true; } onColorSelect(color) { if (this.selectedLayer && this.activeProperty) { if (this.activeProperty === 'fill') { this.selectedLayer.fillColor = color; } else { this.selectedLayer.strokeColor = color; } this.layerChange.emit(this.layers); } } onStrokeStyleSelect(style) { if (this.selectedLayer) { this.selectedLayer.strokeStyle = style; this.layerChange.emit(this.layers); this.closeStrokeStylePicker(); } } closeColorPicker() { this.showColorPicker = false; this.selectedLayer = null; this.activeProperty = null; } closeStrokeStylePicker() { this.showStrokeStylePicker = false; this.selectedLayer = null; } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtLayerManagerComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); } static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: IxtLayerManagerComponent, selector: "ixt-layer-manager", inputs: { layers: "layers" }, outputs: { layerChange: "layerChange", layerOrderChange: "layerOrderChange" }, ngImport: i0, template: "<!-- ixt-layer-manager.component.html -->\r\n<div class=\"layer-manager\">\r\n <div class=\"manager-header\">\r\n <div class=\"header-content\">\r\n <span class=\"header-icon\">\u27F0</span>\r\n <h2>Layers</h2>\r\n </div>\r\n </div>\r\n\r\n <div class=\"layer-list\" cdkDropList (cdkDropListDropped)=\"onDrop($event)\">\r\n <div class=\"layer-puck\" *ngFor=\"let layer of layers\" cdkDrag>\r\n <div class=\"drag-handle\">\u22EE</div>\r\n \r\n <span class=\"layer-name\">{{ layer.name }}</span>\r\n \r\n <div class=\"layer-controls\">\r\n <button class=\"control-btn\" (click)=\"openColorPicker(layer, 'fill')\">\r\n <span class=\"icon\" [style.color]=\"layer.fillColor\">\u25CF</span>\r\n </button>\r\n <button class=\"control-btn\" (click)=\"openColorPicker(layer, 'stroke')\">\r\n <span class=\"icon\" [style.color]=\"layer.strokeColor\">\u25CB</span>\r\n </button>\r\n <button class=\"control-btn\" (click)=\"openStrokeStylePicker(layer)\">\r\n <span class=\"icon\" [ngClass]=\"layer.strokeStyle\">\u2500</span>\r\n </button>\r\n <button class=\"control-btn\" (click)=\"toggleVisibility(layer)\">\r\n <span class=\"icon\">{{ layer.visible ? '\uD83D\uDC41' : '\uD83D\uDC41\u200D\uD83D\uDDE8' }}</span>\r\n </button>\r\n </div>\r\n </div>\r\n </div>\r\n</div>", styles: [".layer-manager{width:100%;height:100%;background:#fff;border:1px solid #e5e7eb;display:flex;flex-direction:column;overflow:hidden}.manager-header{padding:1rem;border-bottom:1px solid #e5e7eb;background:#f9fafb}.manager-header .header-content{display:flex;align-items:center;gap:.5rem}.manager-header .header-content .header-icon{color:#3b82f6}.manager-header .header-content h2{font-size:.875rem;font-weight:500;color:#111827;margin:0}.layer-list{flex:1;overflow-y:auto;padding:.5rem;display:flex;flex-direction:column;gap:.25rem}.layer-puck{display:flex;align-items:center;gap:.75rem;padding:.5rem;background:#fff;border:1px solid #e5e7eb;border-radius:.5rem;cursor:move}.layer-puck:hover{border-color:#3b82f6}.drag-handle{color:#9ca3af;cursor:move;-webkit-user-select:none;user-select:none}.drag-handle:hover{color:#6b7280}.layer-name{flex:1;font-size:.875rem;font-weight:500;color:#374151}.layer-controls{display:flex;gap:.5rem}.control-btn{padding:.25rem;border:none;background:transparent;border-radius:.375rem;cursor:pointer}.control-btn:hover{background:#f3f4f6}.icon{display:inline-block;font-size:1rem;line-height:1}.icon.solid{border-bottom:2px solid currentColor}.icon.dashed{border-bottom:2px dashed currentColor}.icon.dotted{border-bottom:2px dotted currentColor}\n"], dependencies: [{ kind: "directive", type: i1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i2$1.CdkDropList, selector: "[cdkDropList], cdk-drop-list", inputs: ["cdkDropListConnectedTo", "cdkDropListData", "cdkDropListOrientation", "id", "cdkDropListLockAxis", "cdkDropListDisabled", "cdkDropListSortingDisabled", "cdkDropListEnterPredicate", "cdkDropListSortPredicate", "cdkDropListAutoScrollDisabled", "cdkDropListAutoScrollStep"], outputs: ["cdkDropListDropped", "cdkDropListEntered", "cdkDropListExited", "cdkDropListSorted"], exportAs: ["cdkDropList"] }, { kind: "directive", type: i2$1.CdkDrag, selector: "[cdkDrag]", inputs: ["cdkDragData", "cdkDragLockAxis", "cdkDragRootElement", "cdkDragBoundary", "cdkDragStartDelay", "cdkDragFreeDragPosition", "cdkDragDisabled", "cdkDragConstrainPosition", "cdkDragPreviewClass", "cdkDragPreviewContainer"], outputs: ["cdkDragStarted", "cdkDragReleased", "cdkDragEnded", "cdkDragEntered", "cdkDragExited", "cdkDragDropped", "cdkDragMoved"], exportAs: ["cdkDrag"] }] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtLayerManagerComponent, decorators: [{ type: Component, args: [{ selector: 'ixt-layer-manager', template: "<!-- ixt-layer-manager.component.html -->\r\n<div class=\"layer-manager\">\r\n <div class=\"manager-header\">\r\n <div class=\"header-content\">\r\n <span class=\"header-icon\">\u27F0</span>\r\n <h2>Layers</h2>\r\n </div>\r\n </div>\r\n\r\n <div class=\"layer-list\" cdkDropList (cdkDropListDropped)=\"onDrop($event)\">\r\n <div class=\"layer-puck\" *ngFor=\"let layer of layers\" cdkDrag>\r\n <div class=\"drag-handle\">\u22EE</div>\r\n \r\n <span class=\"layer-name\">{{ layer.name }}</span>\r\n \r\n <div class=\"layer-controls\">\r\n <button class=\"control-btn\" (click)=\"openColorPicker(layer, 'fill')\">\r\n <span class=\"icon\" [style.color]=\"layer.fillColor\">\u25CF</span>\r\n </button>\r\n <button class=\"control-btn\" (click)=\"openColorPicker(layer, 'stroke')\">\r\n <span class=\"icon\" [style.color]=\"layer.strokeColor\">\u25CB</span>\r\n </button>\r\n <button class=\"control-btn\" (click)=\"openStrokeStylePicker(layer)\">\r\n <span class=\"icon\" [ngClass]=\"layer.strokeStyle\">\u2500</span>\r\n </button>\r\n <button class=\"control-btn\" (click)=\"toggleVisibility(layer)\">\r\n <span class=\"icon\">{{ layer.visible ? '\uD83D\uDC41' : '\uD83D\uDC41\u200D\uD83D\uDDE8' }}</span>\r\n </button>\r\n </div>\r\n </div>\r\n </div>\r\n</div>", styles: [".layer-manager{width:100%;height:100%;background:#fff;border:1px solid #e5e7eb;display:flex;flex-direction:column;overflow:hidden}.manager-header{padding:1rem;border-bottom:1px solid #e5e7eb;background:#f9fafb}.manager-header .header-content{display:flex;align-items:center;gap:.5rem}.manager-header .header-content .header-icon{color:#3b82f6}.manager-header .header-content h2{font-size:.875rem;font-weight:500;color:#111827;margin:0}.layer-list{flex:1;overflow-y:auto;padding:.5rem;display:flex;flex-direction:column;gap:.25rem}.layer-puck{display:flex;align-items:center;gap:.75rem;padding:.5rem;background:#fff;border:1px solid #e5e7eb;border-radius:.5rem;cursor:move}.layer-puck:hover{border-color:#3b82f6}.drag-handle{color:#9ca3af;cursor:move;-webkit-user-select:none;user-select:none}.drag-handle:hover{color:#6b7280}.layer-name{flex:1;font-size:.875rem;font-weight:500;color:#374151}.layer-controls{display:flex;gap:.5rem}.control-btn{padding:.25rem;border:none;background:transparent;border-radius:.375rem;cursor:pointer}.control-btn:hover{background:#f3f4f6}.icon{display:inline-block;font-size:1rem;line-height:1}.icon.solid{border-bottom:2px solid currentColor}.icon.dashed{border-bottom:2px dashed currentColor}.icon.dotted{border-bottom:2px dotted currentColor}\n"] }] }], propDecorators: { layers: [{ type: Input }], layerChange: [{ type: Output }], layerOrderChange: [{ type: Output }] } }); class IxtLayerManagerModule { static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtLayerManagerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); } static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "16.2.12", ngImport: i0, type: IxtLayerManagerModule, declarations: [IxtLayerManagerComponent], imports: [CommonModule, DragDropModule], exports: [IxtLayerManagerComponent] }); } static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtLayerManagerModule, imports: [CommonModule, DragDropModule] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtLayerManagerModule, decorators: [{ type: NgModule, args: [{ declarations: [IxtLayerManagerComponent], imports: [ CommonModule, DragDropModule ], exports: [IxtLayerManagerComponent] }] }] }); // ixt-layer-manager.index.ts class HolidayCalculator { nthWeekdayOfMonth(year, month, weekday, n) { const date = new Date(year, month, 1); while (date.getDay() !== weekday) { date.setDate(date.getDate() + 1); } date.setDate(date.getDate() + (n - 1) * 7); return date; } lastWeekdayOfMonth(year, month, weekday) { const date = new Date(year, month + 1, 0); while (date.getDay() !== weekday) { date.setDate(date.getDate() - 1); } return date; } } class USAHolidayCalculator extends HolidayCalculator { getHolidays(year) { return [ { name: "New Year's Day", date: new Date(year, 0, 1), type: 'federal' }, { name: "Martin Luther King Jr. Day", date: this.nthWeekdayOfMonth(year, 0, 1, 3), type: 'federal' }, { name: "Presidents Day", date: this.nthWeekdayOfMonth(year, 1, 1, 3), type: 'federal' }, { name: "Easter", date: this.calculateEaster(year), type: 'federal' }, { name: "Memorial Day", date: this.lastWeekdayOfMonth(year, 4, 1), type: 'federal' }, { name: "Independence Day", date: new Date(year, 6, 4), type: 'federal' }, { name: "Labor Day", date: this.nthWeekdayOfMonth(year, 8, 1, 1), type: 'federal' }, { name: "Columbus Day", date: this.nthWeekdayOfMonth(year, 9, 1, 2), type: 'federal' }, { name: "Veterans Day", date: new Date(year, 10, 11), type: 'federal' }, { name: "Thanksgiving", date: this.nthWeekdayOfMonth(year, 10, 4, 4), type: 'federal' }, { name: "Christmas", date: new Date(year, 11, 25), type: 'federal' } ]; } calculateEaster(year) { const a = year % 19; const b = Math.floor(year / 100); const c = year % 100; const d = Math.floor(b / 4); const e = b % 4; const f = Math.floor((b + 8) / 25); const g = Math.floor((b - f + 1) / 3); const h = (19 * a + b - d - g + 15) % 30; const i = Math.floor(c / 4); const k = c % 4; const l = (32 + 2 * e + 2 * i - h - k) % 7; const m = Math.floor((a + 11 * h + 22 * l) / 451); const month = Math.floor((h + l - 7 * m + 114) / 31) - 1; const day = ((h + l - 7 * m + 114) % 31) + 1; return new Date(year, month, day); } } class IndianHolidayCalculator extends HolidayCalculator { getHolidays(year) { return [ { name: "Diwali", date: this.calculateDiwali(year), type: 'cultural' }, { name: "Holi", date: this.calculateHoli(year), type: 'cultural' }, { name: "Republic Day", date: new Date(year, 0, 26), type: 'cultural' }, { name: "Independence Day", date: new Date(year, 7, 15), type: 'cultural' } ]; } calculateDiwali(year) { // Placeholder - needs proper lunar calendar calculation return new Date(year, 9, 24); } calculateHoli(year) { // Placeholder - needs proper lunar calendar calculation return new Date(year, 2, 8); } } class IslamicHolidayCalculator extends HolidayCalculator { getHolidays(year) { // Note: Islamic holidays follow lunar calendar - this needs more complex calculation return [ { name: "Eid al-Fitr", date: this.calculateEidAlFitr(year), type: 'religious' }, { name: "Eid al-Adha", date: this.calculateEidAlAdha(year), type: 'religious' }, { name: "Islamic New Year", date: this.calculateIslamicNewYear(year), type: 'religious' } ]; } calculateEidAlFitr(year) { // Placeholder - needs proper Islamic calendar calculation return new Date(year, 5, 15); } calculateEidAlAdha(year) { // Placeholder - needs proper Islamic calendar calculation return new Date(year, 7, 22); } calculateIslamicNewYear(year) { // Placeholder - needs proper Islamic calendar calculation return new Date(year, 8, 1); } } class IxtCalendarComponent { constructor() { this.holidayCalculators = [ new USAHolidayCalculator(), new IslamicHolidayCalculator(), new IndianHolidayCalculator() ]; this.months = [ 'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December' ]; this.weekDays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']; this.calendarDays = []; this.monthControl = new FormControl(0); this.yearControl = new FormControl(new Date().getFullYear()); this.holidays = []; } ngOnInit() { this.monthControl.valueChanges.subscribe(() => this.generateCalendar()); this.yearControl.valueChanges.subscribe(() => { this.updateHolidays(); this.generateCalendar(); }); this.updateHolidays(); this.generateCalendar(); } updateHolidays() { this.holidays = this.holidayCalculators.flatMap(calc => calc.getHolidays(this.yearControl.value)); } generateCalendar() { const year = this.yearControl.value; const month = this.monthControl.value; const firstDay = new Date(year, month, 1); const lastDay = new Date(year, month + 1, 0); this.calendarDays = []; // Add padding days from previous month for (let i = 0; i < firstDay.getDay(); i++) { const date = new Date(year, month, -i); this.calendarDays.unshift(this.createCalendarDay(date)); } // Add days of current month for (let date = new Date(firstDay); date <= lastDay; date.setDate(date.getDate() + 1)) { this.calendarDays.push(this.createCalendarDay(new Date(date))); } // Add padding days from next month const remainingDays = 42 - this.calendarDays.length; for (let i = 1; i <= remainingDays; i++) { const date = new Date(year, month + 1, i); this.calendarDays.push(this.createCalendarDay(date)); } } createCalendarDay(date) { return { date, isWeekend: date.getDay() === 0 || date.getDay() === 6, holidays: this.holidays.filter(h => h.date.getDate() === date.getDate() && h.date.getMonth() === date.getMonth()) }; } previousMonth() { if (this.monthControl.value === 0) { this.monthControl.setValue(11); this.yearControl.setValue(this.yearControl.value - 1); } else { this.monthControl.setValue(this.monthControl.value - 1); } } nextMonth() { if (this.monthControl.value === 11) { this.monthControl.setValue(0); this.yearControl.setValue(this.yearControl.value + 1); } else { this.monthControl.setValue(this.monthControl.value + 1); } } validateYear() { const year = this.yearControl.value; if (year < 0) this.yearControl.setValue(0); if (year > 2100) this.yearControl.setValue(2100); } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtCalendarComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); } static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: IxtCalendarComponent, selector: "ixt-calendar", ngImport: i0, template: "<div class=\"calendar-container\">\r\n <div class=\"calendar-controls\">\r\n <button (click)=\"previousMonth()\">&lt;</button>\r\n <select [formControl]=\"monthControl\">\r\n <option *ngFor=\"let month of months; let i = index\" [value]=\"i\">\r\n {{month}}\r\n </option>\r\n </select>\r\n <input \r\n type=\"number\" \r\n [formControl]=\"yearControl\"\r\n [min]=\"0\"\r\n [max]=\"2100\"\r\n (blur)=\"validateYear()\"\r\n >\r\n <button (click)=\"nextMonth()\">&gt;</button>\r\n </div>\r\n \r\n <div class=\"calendar-grid\">\r\n <div class=\"weekday-header\" *ngFor=\"let day of weekDays\">{{day}}</div>\r\n <div \r\n *ngFor=\"let day of calendarDays\" \r\n class=\"calendar-day\"\r\n [class.weekend]=\"day.isWeekend\"\r\n [class.holiday]=\"day.holidays.length > 0\"\r\n >\r\n <div class=\"date\">{{day.date.getDate()}}</div>\r\n <div class=\"holiday-name\" *ngFor=\"let holiday of day.holidays\">\r\n {{holiday.name}}\r\n </div>\r\n </div>\r\n </div>\r\n </div>\r\n ", styles: [".calendar-container{max-width:800px;margin:0 auto}.calendar-controls{display:flex;gap:1rem;margin-bottom:1rem;align-items:center}.calendar-grid{display:grid;grid-template-columns:repeat(7,1fr);gap:4px}.weekday-header{padding:.5rem;text-align:center;font-weight:700}.calendar-day{aspect-ratio:1;padding:.5rem;border:1px solid #ccc;min-height:80px}.weekend{background-color:#f5f5f5}.holiday{background-color:#e8f4f8}.holiday-name{font-size:.8rem;color:#666}.date{font-weight:700}\n"], dependencies: [{ kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i2.NgSelectOption, selector: "option", inputs: ["ngValue", "value"] }, { kind: "directive", type: i2.ɵNgSelectMultipleOption, selector: "option", inputs: ["ngValue", "value"] }, { kind: "directive", type: i2.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i2.NumberValueAccessor, selector: "input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]" }, { kind: "directive", type: i2.SelectControlValueAccessor, selector: "select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]", inputs: ["compareWith"] }, { kind: "directive", type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i2.MinValidator, selector: "input[type=number][min][formControlName],input[type=number][min][formControl],input[type=number][min][ngModel]", inputs: ["min"] }, { kind: "directive", type: i2.MaxValidator, selector: "input[type=number][max][formControlName],input[type=number][max][formControl],input[type=number][max][ngModel]", inputs: ["max"] }, { kind: "directive", type: i2.FormControlDirective, selector: "[formControl]", inputs: ["formControl", "disabled", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtCalendarComponent, decorators: [{ type: Component, args: [{ selector: 'ixt-calendar', template: "<div class=\"calendar-container\">\r\n <div class=\"calendar-controls\">\r\n <button (click)=\"previousMonth()\">&lt;</button>\r\n <select [formControl]=\"monthControl\">\r\n <option *ngFor=\"let month of months; let i = index\" [value]=\"i\">\r\n {{month}}\r\n </option>\r\n </select>\r\n <input \r\n type=\"number\" \r\n [formControl]=\"yearControl\"\r\n [min]=\"0\"\r\n [max]=\"2100\"\r\n (blur)=\"validateYear()\"\r\n >\r\n <button (click)=\"nextMonth()\">&gt;</button>\r\n </div>\r\n \r\n <div class=\"calendar-grid\">\r\n <div class=\"weekday-header\" *ngFor=\"let day of weekDays\">{{day}}</div>\r\n <div \r\n *ngFor=\"let day of calendarDays\" \r\n class=\"calendar-day\"\r\n [class.weekend]=\"day.isWeekend\"\r\n [class.holiday]=\"day.holidays.length > 0\"\r\n >\r\n <div class=\"date\">{{day.date.getDate()}}</div>\r\n <div class=\"holiday-name\" *ngFor=\"let holiday of day.holidays\">\r\n {{holiday.name}}\r\n </div>\r\n </div>\r\n </div>\r\n </div>\r\n ", styles: [".calendar-container{max-width:800px;margin:0 auto}.calendar-controls{display:flex;gap:1rem;margin-bottom:1rem;align-items:center}.calendar-grid{display:grid;grid-template-columns:repeat(7,1fr);gap:4px}.weekday-header{padding:.5rem;text-align:center;font-weight:700}.calendar-day{aspect-ratio:1;padding:.5rem;border:1px solid #ccc;min-height:80px}.weekend{background-color:#f5f5f5}.holiday{background-color:#e8f4f8}.holiday-name{font-size:.8rem;color:#666}.date{font-weight:700}\n"] }] }] }); // ixt-calendar.module.ts class IxtCalendarModule { static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtCalendarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); } static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "16.2.12", ngImport: i0, type: IxtCalendarModule, declarations: [IxtCalendarComponent], imports: [CommonModule, ReactiveFormsModule], exports: [IxtCalendarComponent] }); } static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtCalendarModule, imports: [CommonModule, ReactiveFormsModule] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtCalendarModule, decorators: [{ type: NgModule, args: [{ declarations: [IxtCalendarComponent], imports: [CommonModule, ReactiveFormsModule], exports: [IxtCalendarComponent] }] }] }); // ixt-calendar.index.ts // Create the GeoJSON processing service (geo-processing.service.ts) class GeoProcessingService { processFeatures(features, options = {}) { let processedFeatures = [...features]; // Apply route interpolation if needed if (options.interpolateRoutes) { processedFeatures = this.interpolateRoutes(processedFeatures, { pointsPerRoute: options.pointsPerRoute, minPoints: options.minPointsPerRoute }); } // Apply filtering if expression provided if (options.filterExpression) { processedFeatures = this.filterFeatures(processedFeatures, options.filterExpression); } return processedFeatures; } interpolateRoutes(features, options = {}) { const minPoints = options.minPoints || 5; return features.map(feature => { if (feature.geometry.type !== 'LineString') { return feature; } const line = feature.geometry; const coordinates = line.coordinates; if (coordinates.length !== 2) { return feature; } const start = coordinates[0]; const end = coordinates[1]; const route = d3.geoInterpolate(start, end); // Calculate distance and points const distance = d3.geoDistance(start, end) * 3959; // Earth radius in miles const pointsPer5Miles = Math.ceil(distance / 5); const numPoints = Math.max(minPoints, options.pointsPerRoute || pointsPer5Miles); const newCoordinates = Array.from({ length: numPoints }, (_, i) => { const t = i / (numPoints - 1); return route(t); }); return { ...feature, geometry: { ...line, coordinates: newCoordinates } }; }); } filterFeatures(features, expression) { const filterFn = this.createFilterFunction(expression); return features.filter(feature => { try { return filterFn ? filterFn(feature) : true; } catch (e) { console.error('Error applying filter to feature:', e); return true; } }); } createFilterFunction(expression) { if (!expression) return null; try { return new Function('feature', ` try { const properties = feature.properties; return ${expression}; } catch (e) { console.error('Filter expression error:', e); return true; } `); } catch (e) { console.error('Error creating filter function:', e); return null; } } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: GeoProcessingService, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); } static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: GeoProcessingService, providedIn: 'root' }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: GeoProcessingService, decorators: [{ type: Injectable, args: [{ providedIn: 'root' }] }] }); // map-error.service.ts var MapErrorCode; (function (MapErrorCode) { MapErrorCode["INITIALIZATION_FAILED"] = "INIT_FAILED"; MapErrorCode["PROJECTION_FAILED"] = "PROJ_FAILED"; MapErrorCode["DATA_LOAD_FAILED"] = "DATA_LOAD_FAILED"; MapErrorCode["SELECTION_FAILED"] = "SELECT_FAILED"; MapErrorCode["INVALID_DIMENSIONS"] = "INVALID_DIMS"; })(MapErrorCode || (MapErrorCode = {})); class MapErrorService { constructor() { this.errorSubject = new BehaviorSubject(null); this.retryAttemptsMap = new Map(); this.maxRetryAttempts = 3; this.errors$ = this.errorSubject.asObservable(); } reportError(code, message, context) { const error = { code, message, timestamp: new Date(), context }; this.errorSubject.next(error); console.error(`Map Error [${code}]:`, message, context); } clearError() { this.errorSubject.next(null); } shouldRetry(operationKey) { const attempts = this.retryAttemptsMap.get(operationKey) || 0; if (attempts < this.maxRetryAttempts) { this.retryAttemptsMap.set(operationKey, attempts + 1); return true; } return false; } resetRetryCount(operationKey) { this.retryAttemptsMap.delete(operationKey); } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: MapErrorService, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); } static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: MapErrorService, providedIn: 'root' }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: MapErrorService, decorators: [{ type: Injectable, args: [{ providedIn: 'root' }] }] }); // map.service.ts class MapService { constructor(errorService) { this.errorService = errorService; this.selectedElementSource = new BehaviorSubject(null); this.dimensions = new BehaviorSubject({ width: 800, height: 600 }); this.selectedElement$ = this.selectedElementSource.asObservable(); this.dimensions$ = this.dimensions.asObservable(); this.errorSubject = new BehaviorSubject(null); this.retryAttemptsMap = new Map(); this.maxRetryAttempts = 3; this.errors$ = this.errorSubject.asObservable(); } initializeProjection(width, height) { try { if (width <= 0 || height <= 0) { throw new Error('Invalid dimensions'); } this.projection = d3.geoMercator() .fitSize([width, height], { type: 'Sphere' }); this.pathGenerator = d3.geoPath().projection(this.projection); return { projection: this.projection, pathGenerator: this.pathGenerator }; } catch (error) { this.errorService.reportError(MapErrorCode.INITIALIZATION_FAILED, 'Failed to initialize map projection', { width, height, error }); throw error; } } getProjection() { return this.projection; } getPathGenerator() { return this.pathGenerator; } getDimensions() { return this.dimensions.value; } setSelection(element) { const previousElement = this.selectedElementSource.value; if (previousElement) { d3.select(previousElement) .attr('stroke', d3.select(previousElement).attr('data-original-stroke')) .attr('stroke-width', '1'); } this.selectedElementSource.next(element); } clearSelection() { this.setSelection(null); } getBaseDimension(value) { if (typeof value === 'number') return value; const num = parseFloat(value); return isNaN(num) ? 800 : num; } reportError(code, message, context) { const error = { code, message, timestamp: new Date(), context }; this.errorSubject.next(error); console.error(`Map Error [${code}]:`, message, context); } clearError() { this.errorSubject.next(null); } shouldRetry(operationKey) { const attempts = this.retryAttemptsMap.get(operationKey) || 0; if (attempts < this.maxRetryAttempts) { this.retryAttemptsMap.set(operationKey, attempts + 1); return true; } return false; } resetRetryCount(operationKey) { this.retryAttemptsMap.delete(operationKey); } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: MapService, deps: [{ token: MapErrorService }], target: i0.ɵɵFactoryTarget.Injectable }); } static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: MapService, providedIn: 'root' }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: MapService, decorators: [{ type: Injectable, args: [{ providedIn: 'root' }] }], ctorParameters: function () { return [{ type: MapErrorService }]; } }); // layer-render.service.ts class LayerRenderService { constructor(mapService) { this.mapService = mapService; } createLayer(container, features, options, eventHandlers) { const layerGroup = container .append('g') .attr('class', 'map-layer'); return layerGroup .selectAll('path') .data(features) .enter() .append('path') .attr('d', (datum) => this.mapService.getPathGenerator()(datum) || '') .attr('stroke', options.stroke) .attr('fill', options.fill) .attr('stroke-width', '1') .attr('data-original-fill', options.fill) .attr('data-original-stroke', options.stroke) .attr('vector-effect', 'non-scaling-stroke') .style('cursor', 'pointer') .on('click', eventHandlers.onClick) .on('mouseover', eventHandlers.onMouseOver) .on('mouseout', eventHandlers.onMouseOut) .on('mousemove', eventHandlers.onMouseMove); } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: LayerRenderService, deps: [{ token: MapService }], target: i0.ɵɵFactoryTarget.Injectable }); } static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: LayerRenderService, providedIn: 'root' }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: LayerRenderService, decorators: [{ type: Injectable, args: [{ providedIn: 'root' }] }], ctorParameters: function () { return [{ type: MapService }]; } }); // layer-event.service.ts class LayerEventService { constructor(mapService) { this.mapService = mapService; this.hoveredElement = null; } handleClick(event, mapRef) { event.stopPropagation(); const clickedPath = event.currentTarget; if (clickedPath === mapRef['selectedElement']) { mapRef.setSelection(null); this.applyHoverEffect(clickedPath, false); } else { if (mapRef['selectedElement']) { this.applyHoverEffect(mapRef['selectedElement'], false); } mapRef.setSelection(clickedPath); this.applyHoverEffect(clickedPath, true); } } handleMouseOver(event, mapRef) { event.stopPropagation(); const currentPath = event.currentTarget; if (currentPath !== mapRef['selectedElement']) { this.applyHoverEffect(currentPath, true); this.hoveredElement = currentPath; } } handleMouseOut() { if (this.hoveredElement) { this.clearHoverState(this.hoveredElement); this.hoveredElement = null; } } applyHoverEffect(element, isHover) { const d3Element = d3.select(element); const currentFill = element.getAttribute('data-original-fill'); if (currentFill && currentFill !== 'none') { d3Element .attr('fill', currentFill) .attr('stroke-width', isHover ? '2' : '1'); } else { d3Element.attr('stroke-width', isHover ? '2' : '1'); } } clearHoverState(element) { const d3Element = d3.select(element); const originalFill = element.getAttribute('data-original-fill'); d3Element .attr('fill', originalFill) .attr('stroke-width', '1'); } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: LayerEventService, deps: [{ token: MapService }], target: i0.ɵɵFactoryTarget.Injectable }); } static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: LayerEventService, providedIn: 'root' }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: LayerEventService, decorators: [{ type: Injectable, args: [{ providedIn: 'root' }] }], ctorParameters: function () { return [{ type: MapService }]; } }); // layer-state.service.ts class LayerStateService { constructor() { this.state = new BehaviorSubject({ hoveredElement: null, selections: [] }); this.state$ = this.state.asObservable(); } setHoveredElement(element) { this.updateState({ hoveredElement: element }); } addSelection(selection) { const currentState = this.state.value; this.updateState({ selections: [...currentState.selections, selection] }); } clearSelections() { const currentState = this.state.value; currentState.selections.forEach(selection => { if (selection && !selection.empty()) { selection.remove(); } }); this.updateState({ selections: [] }); } updateState(partialState) { this.state.next({ ...this.state.value, ...partialState }); } ngOnDestroy() { this.clearSelections(); this.state.complete(); } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: LayerStateService, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); } static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: LayerStateService, providedIn: 'root' }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: LayerStateService, decorators: [{ type: Injectable, args: [{ providedIn: 'root' }] }] }); class IxtLayerComponent { constructor(mapComponent, elementRef, cdr, geoProcessingService, layerRenderService, layerEventService, layerStateService) { this.mapComponent = mapComponent; this.elementRef = elementRef; this.cdr = cdr; this.geoProcessingService = geoProcessingService; this.layerRenderService = layerRenderService; this.layerEventService = layerEventService; this.layerStateService = layerStateService; this.src = ''; this.stroke = 'black'; this.fill = 'none'; this.click = new EventEmitter(); this.hover = new EventEmitter(); this.initialized = false; this.filterExpression = ''; } ngOnChanges(changes) { if ((changes['src'] || changes['stroke'] || changes['fill']) && this.initialized) { this.initializeLayer(); } } ngAfterContentInit() { const content = this.elementRef.nativeElement.textContent?.trim(); if (content) { this.filterExpression = content; } } setProjection(pathGenerator) { this.pathGenerator = pathGenerator; this.initializeLayer(); } async initializeLayer() { if (this.initialized) return; if (!this.validateContainer()) return; try { const features = await this.loadGeoJsonData(); const handlers = this.createEventHandlers(); this.renderLayer(features, handlers); this.initialized = true; } catch (error) { console.error('Layer initialization failed:', error); } } validateContainer() { const container = this.mapComponent.getContainer(); if (!container || !this.pathGenerator) { console.error('Map container or projection not ready'); return false; } return true; } async loadGeoJsonData() { const data = await d3.json(this.src); return this.geoProcessingService.processFeatures(data.features, { interpolateRoutes: true, filterExpression: this.filterExpression }); } async renderLayer(features, handlers) { const container = this.mapComponent.getContainer(); const selection = this.layerRenderService.createLayer(d3.select(container.nativeElement), features, { stroke: this.stroke, fill: this.fill }, handlers); this.layerStateService.addSelection(selection); this.cdr.markForCheck(); } createEventHandlers() { return { onClick: (event, datum) => { this.layerEventService.handleClick(event, this.mapComponent); this.click.emit(event); }, onMouseOver: (event) => { this.layerEventService.handleMouseOver(event, this.mapComponent); this.hover.emit(event); }, onMouseOut: () => this.layerEventService.handleMouseOut(), onMouseMove: (event) => event.stopPropagation() }; } ngOnDestroy() { this.layerStateService.clearSelections(); } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtLayerComponent, deps: [{ token: IxtMapComponent, host: true }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: GeoProcessingService }, { token: LayerRenderService }, { token: LayerEventService }, { token: LayerStateService }], target: i0.ɵɵFactoryTarget.Component }); } static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: IxtLayerComponent, selector: "ixt-layer", inputs: { src: "src", stroke: "stroke", fill: "fill" }, outputs: { click: "click", hover: "hover" }, usesOnChanges: true, ngImport: i0, template: ` <svg:g> <ng-content></ng-content> </svg:g> `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtLayerComponent, decorators: [{ type: Component, args: [{ selector: 'ixt-layer', template: ` <svg:g> <ng-content></ng-content> </svg:g> `, changeDetection: ChangeDetectionStrategy.OnPush }] }], ctorParameters: function () { return [{ type: IxtMapComponent, decorators: [{ type: Host }] }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: GeoProcessingService }, { type: LayerRenderService }, { type: LayerEventService }, { type: LayerStateService }]; }, propDecorators: { src: [{ type: Input }], stroke: [{ type: Input }], fill: [{ type: Input }], click: [{ type: Output }], hover: [{ type: Output }] } }); class IxtMapComponent { constructor(cdr, mapService) { this.cdr = cdr; this.mapService = mapService; this.width = 800; this.height = 600; this.scale = 1; this.translate = '0,0'; this.selectedElement = null; this.mapSubscriptions = new Subscription(); this.projectionReady = new BehaviorSubject(false); this.projectionReady$ = this.projectionReady.asObservable(); } getDimensions() { return { width: this.mapService.getBaseDimension(this.width), height: this.mapService.getBaseDimension(this.height), scale: Number(this.scale), translate: this.translate }; } getViewBox() { const { width, height } = this.getDimensions(); return `0 0 ${width} ${height}`; } initializeMap() { const dimensions = this.getDimensions(); const { projection, pathGenerator } = this.mapService.initializeProjection(dimensions.width, dimensions.height); this.projection = projection; this.pathGenerator = pathGenerator; this.projectionReady.next(true); if (this.mapGroup) { const mapSelection = d3.select(this.mapGroup.nativeElement); mapSelection.on('click', () => this.clearSelection()); } setTimeout(() => { this.layers.forEach(layer => { layer.setProjection(this.pathGenerator); }); }); } getContainer() { return this.mapGroup; } getPathGenerator() { return this.pathGenerator; } clearSelection() { if (this.selectedElement) { d3.select(this.selectedElement) .attr('stroke', function () { return this.getAttribute('data-original-stroke') || ''; }) .attr('stroke-width', '1'); this.selectedElement = null; this.cdr.markForCheck(); } } setSelection(element) { this.clearSelection(); if (element) { this.selectedElement = element; this.cdr.markForCheck(); } } ngAfterContentInit() { this.initializeMap(); this.mapSubscriptions.add(this.layers.changes.subscribe(() => { this.initializeMap(); this.cdr.markForCheck(); })); } ngOnDestroy() { this.mapSubscriptions.unsubscribe(); this.selectedElement = null; this.projection = null; this.pathGenerator = null; } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtMapComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: MapService }], target: i0.ɵɵFactoryTarget.Component }); } static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: IxtMapComponent, selector: "ixt-map", inputs: { width: "width", height: "height", scale: "scale", translate: "translate" }, queries: [{ propertyName: "layers", predicate: IxtLayerComponent }], viewQueries: [{ propertyName: "mapSvg", first: true, predicate: ["mapSvg"], descendants: true }, { propertyName: "mapGroup", first: true, predicate: ["mapGroup"], descendants: true }], ngImport: i0, template: ` <svg #mapSvg [attr.width]="width" [attr.height]="height" [attr.viewBox]="getViewBox()" style="display: block; background: lightgray;"> <g #mapGroup> <ng-content></ng-content> </g> </svg> `, isInline: true, styles: [":host{display:block}svg{display:block}\n"], changeDetection: i0.ChangeDetectionStrategy.OnPush }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtMapComponent, decorators: [{ type: Component, args: [{ selector: 'ixt-map', template: ` <svg #mapSvg [attr.width]="width" [attr.height]="height" [attr.viewBox]="getViewBox()" style="display: block; background: lightgray;"> <g #mapGroup> <ng-content></ng-content> </g> </svg> `, changeDetection: ChangeDetectionStrategy.OnPush, styles: [":host{display:block}svg{display:block}\n"] }] }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: MapService }]; }, propDecorators: { width: [{ type: Input }], height: [{ type: Input }], scale: [{ type: Input }], translate: [{ type: Input }], mapSvg: [{ type: ViewChild, args: ['mapSvg'] }], mapGroup: [{ type: ViewChild, args: ['mapGroup'] }], layers: [{ type: ContentChildren, args: [IxtLayerComponent] }] } }); // Export all public components from the ixt-map module // Include any additional exports, such as services or interfaces, if they are part of the module class IxtSplitPaneComponent { constructor() { this.firstPanelSize = 50; // default size this.isDragging = false; this.startPosition = 0; this.startSize = 0; } startResize(e) { this.isDragging = true; this.startPosition = e.pageX; this.startSize = this.firstPanelSize; document.addEventListener('mousemove', this.resize.bind(this)); document.addEventListener('mouseup', this.stopResize.bind(this)); } resize(e) { if (!this.isDragging) return; const containerRect = this.divider.nativeElement.parentElement.getBoundingClientRect(); const difference = e.pageX - this.startPosition; let newSize = this.startSize + (difference / containerRect.width * 100); newSize = Math.max(0, Math.min(100, newSize)); this.firstPanelSize = newSize; } stopResize() { this.isDragging = false; document.removeEventListener('mousemove', this.resize.bind(this)); document.removeEventListener('mouseup', this.stopResize.bind(this)); } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtSplitPaneComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); } static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: IxtSplitPaneComponent, selector: "ixt-split-pane", host: { listeners: { "window:mousemove": "resize($event)" } }, viewQueries: [{ propertyName: "divider", first: true, predicate: ["divider"], descendants: true }], ngImport: i0, template: ` <div class="split-container"> <div class="first-panel" [style.flexBasis.%]="firstPanelSize"> <ng-content select=".left-pane"></ng-content> </div> <div #divider class="divider" (mousedown)="startResize($event)"> </div> <div class="second-panel" [style.flexBasis.%]="100 - firstPanelSize"> <ng-content select=".right-pane"></ng-content> </div> </div> `, isInline: true, styles: [":host{display:flex;flex:1;min-height:0;min-width:0;font-family:Segoe UI,-apple-system,BlinkMacSystemFont,Roboto,Helvetica Neue,Arial,sans-serif;font-size:14px;color:#2c3e50;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.split-container{display:flex;flex:1;min-height:0;min-width:0;background:#fff;border:1px solid #e0e4e8;border-radius:4px}.first-panel,.second-panel{display:flex;flex:1;min-height:0;min-width:0;overflow:auto;background:#fff;padding:16px}:is() table{width:100%;border-collapse:collapse}:is() th{text-align:left;font-weight:500;color:#546e7a;padding:8px 16px;border-bottom:2px solid #e0e4e8;font-size:13px;text-transform:uppercase;letter-spacing:.5px}:is() td{padding:12px 16px;border-bottom:1px solid #f0f2f5;color:#37474f;font-size:14px}:is() tr:hover{background-color:#f8fafc}:is(.first-panel,.second-panel)::-webkit-scrollbar{width:8px;height:8px}:is(.first-panel,.second-panel)::-webkit-scrollbar-track{background:#f5f6f8;border-radius:4px}:is(.first-panel,.second-panel)::-webkit-scrollbar-thumb{background:#dde1e6;border-radius:4px}:is():hover{background:#c7ccd1}.divider{display:flex;justify-content:center;width:16px;flex-shrink:0;cursor:col-resize;background:transparent;transition:background-color .2s}.divider:hover{background:#f5f6f8}.divider:hover .divider-line{background:#c7ccd1}.divider{width:6px;background:#ccc;cursor:col-resize;flex-shrink:0;border-left:1px solid #b4b4b4;border-right:1px solid #b4b4b4}.divider:hover{background:#999}\n"] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtSplitPaneComponent, decorators: [{ type: Component, args: [{ selector: 'ixt-split-pane', template: ` <div class="split-container"> <div class="first-panel" [style.flexBasis.%]="firstPanelSize"> <ng-content select=".left-pane"></ng-content> </div> <div #divider class="divider" (mousedown)="startResize($event)"> </div> <div class="second-panel" [style.flexBasis.%]="100 - firstPanelSize"> <ng-content select=".right-pane"></ng-content> </div> </div> `, styles: [":host{display:flex;flex:1;min-height:0;min-width:0;font-family:Segoe UI,-apple-system,BlinkMacSystemFont,Roboto,Helvetica Neue,Arial,sans-serif;font-size:14px;color:#2c3e50;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.split-container{display:flex;flex:1;min-height:0;min-width:0;background:#fff;border:1px solid #e0e4e8;border-radius:4px}.first-panel,.second-panel{display:flex;flex:1;min-height:0;min-width:0;overflow:auto;background:#fff;padding:16px}:is() table{width:100%;border-collapse:collapse}:is() th{text-align:left;font-weight:500;color:#546e7a;padding:8px 16px;border-bottom:2px solid #e0e4e8;font-size:13px;text-transform:uppercase;letter-spacing:.5px}:is() td{padding:12px 16px;border-bottom:1px solid #f0f2f5;color:#37474f;font-size:14px}:is() tr:hover{background-color:#f8fafc}:is(.first-panel,.second-panel)::-webkit-scrollbar{width:8px;height:8px}:is(.first-panel,.second-panel)::-webkit-scrollbar-track{background:#f5f6f8;border-radius:4px}:is(.first-panel,.second-panel)::-webkit-scrollbar-thumb{background:#dde1e6;border-radius:4px}:is():hover{background:#c7ccd1}.divider{display:flex;justify-content:center;width:16px;flex-shrink:0;cursor:col-resize;background:transparent;transition:background-color .2s}.divider:hover{background:#f5f6f8}.divider:hover .divider-line{background:#c7ccd1}.divider{width:6px;background:#ccc;cursor:col-resize;flex-shrink:0;border-left:1px solid #b4b4b4;border-right:1px solid #b4b4b4}.divider:hover{background:#999}\n"] }] }], propDecorators: { divider: [{ type: ViewChild, args: ['divider'] }], resize: [{ type: HostListener, args: ['window:mousemove', ['$event']] }] } }); // ixt-split-pane.module.ts class IxtSplitPaneModule { static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtSplitPaneModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); } static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "16.2.12", ngImport: i0, type: IxtSplitPaneModule, declarations: [IxtSplitPaneComponent], imports: [CommonModule], exports: [IxtSplitPaneComponent] }); } static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtSplitPaneModule, imports: [CommonModule] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtSplitPaneModule, decorators: [{ type: NgModule, args: [{ declarations: [ IxtSplitPaneComponent ], imports: [ CommonModule ], exports: [ IxtSplitPaneComponent ] }] }] }); // public-api.ts (or index.ts) class AirportCodeEditorComponent { constructor(dialogService) { this.dialogService = dialogService; this.existingCodes = []; this.field = 'code'; this.inputControl = new FormControl(''); this.hasError = false; this.errorMessage = ''; // MatrixEditor implementation this.component = AirportCodeEditorComponent; // ControlValueAccessor implementations this.onChanged = () => { }; this.onTouched = () => { }; } ngOnInit() { this.setupValueChanges(); } // MatrixEditor methods getEditConfig() { return { existingValues: this.existingCodes, maxLength: 3, pattern: /^[A-Z]+$/ }; } getDefaultValue() { return ''; } validate(value) { if (!value) return false; const code = String(value).toUpperCase(); if (code.length !== 3) return false; if (!/^[A-Z]+$/.test(code)) return false; if (this.existingCodes.includes(code)) return false; return true; } format(value) { return value ? String(value).toUpperCase() : ''; } async setupValueChanges() { this.inputControl.valueChanges.subscribe(async (value) => { if (value !== null) { const upperValue = value.toUpperCase(); if (upperValue !== value) { this.inputControl.setValue(upperValue, { emitEvent: false }); } if (await this.validateValue(upperValue)) { console.log('Editor emitting code change:', upperValue); this.onChanged(upperValue); } } }); } async validateValue(value) { this.hasError = false; this.errorMessage = ''; if (!value) return false; if (value.length !== (this.config?.['maxLength'] || 3)) { this.hasError = true; this.errorMessage = `Code must be exactly ${this.config?.['maxLength'] || 3} characters`; return false; } const pattern = this.config?.['pattern'] || /^[A-Z]+$/; if (!pattern.test(value)) { this.hasError = true; this.errorMessage = 'Only letters are allowed'; return false; } if (this.config?.existingValues?.includes(value)) { this.hasError = true; this.errorMessage = 'This code already exists'; // await this.dialogService.warning( // `The code "${value}" already exists. Please enter a different code.`, // 'Duplicate Code' // ); return false; } return true; } // ControlValueAccessor interface implementation writeValue(value) { console.log('AirportCodeEditor writeValue:', value); this.inputControl.setValue(value, { emitEvent: false }); } registerOnChange(fn) { console.log('AirportCodeEditor registerOnChange'); this.onChanged = fn; } registerOnTouched(fn) { this.onTouched = fn; } setDisabledState(isDisabled) { if (isDisabled) { this.inputControl.disable(); } else { this.inputControl.enable(); } } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: AirportCodeEditorComponent, deps: [{ token: IxtDialogService }], target: i0.ɵɵFactoryTarget.Component }); } static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: AirportCodeEditorComponent, selector: "airport-code-editor", inputs: { config: "config", existingCodes: "existingCodes", field: "field" }, providers: [ { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AirportCodeEditorComponent), multi: true } ], ngImport: i0, template: ` <div class="editor-container"> <input type="text" [formControl]="inputControl" class="w-24 px-2 py-1 border rounded" [class.border-red-500]="hasError" [attr.maxlength]="config?.['maxLength'] || 3" (blur)="onTouched()" /> <div *ngIf="hasError" class="text-red-500 text-sm mt-1"> {{ errorMessage }} </div> </div> `, isInline: true, styles: [".editor-container{position:relative}\n"], dependencies: [{ kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i2.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i2.FormControlDirective, selector: "[formControl]", inputs: ["formControl", "disabled", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: AirportCodeEditorComponent, decorators: [{ type: Component, args: [{ selector: 'airport-code-editor', template: ` <div class="editor-container"> <input type="text" [formControl]="inputControl" class="w-24 px-2 py-1 border rounded" [class.border-red-500]="hasError" [attr.maxlength]="config?.['maxLength'] || 3" (blur)="onTouched()" /> <div *ngIf="hasError" class="text-red-500 text-sm mt-1"> {{ errorMessage }} </div> </div> `, providers: [ { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AirportCodeEditorComponent), multi: true } ], styles: [".editor-container{position:relative}\n"] }] }], ctorParameters: function () { return [{ type: IxtDialogService }]; }, propDecorators: { config: [{ type: Input }], existingCodes: [{ type: Input }], field: [{ type: Input }] } }); // src/components/ixt-matrix/matrix-editors/binary-editor/binary-editor.component.ts class BinaryEditorComponent { constructor() { this.config = {}; this.selectionChange = new EventEmitter(); this.inputControl = new FormControl(false); this.component = BinaryEditorComponent; this.showLabel = false; this.isChecked = false; this.onChange = () => { }; this.onTouch = () => { }; this.setupDefaults(); this.isChecked = false; } ngOnInit() { this.setupDefaults(); this.setupValueChanges(); } setupDefaults() { this.config = { trueValue: true, falseValue: false, trueDisplay: 'True', falseDisplay: 'False', ...this.config }; } setupValueChanges() { this.inputControl.valueChanges.subscribe((checked) => { if (checked !== null) { const value = checked ? this.config.trueValue : this.config.falseValue; this.isChecked = checked; this.onChange(value); this.selectionChange.emit({ selected: checked, rowData: this.config.rowData, rowIndex: this.config.rowIndex }); } }); } onCheckboxChange(event) { const checkbox = event.target; this.inputControl.setValue(checkbox.checked); this.onTouch(); } getEditConfig() { return { trueValue: this.config.trueValue || true, falseValue: this.config.falseValue || false, trueDisplay: this.config.trueDisplay || 'True', falseDisplay: this.config.falseDisplay || 'False' }; } writeValue(value) { const checked = value === this.config.trueValue; this.isChecked = checked; this.inputControl.setValue(checked, { emitEvent: false }); } registerOnChange(fn) { this.onChange = fn; } registerOnTouched(fn) { this.onTouch = fn; } setDisabledState(isDisabled) { if (isDisabled) { this.inputControl.disable(); } else { this.inputControl.enable(); } } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: BinaryEditorComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); } static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: BinaryEditorComponent, selector: "binary-editor", inputs: { config: "config" }, outputs: { selectionChange: "selectionChange" }, providers: [ { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => BinaryEditorComponent), multi: true } ], ngImport: i0, template: ` <div class="editor-container"> <input type="checkbox" [formControl]="inputControl" [checked]="isChecked" (change)="onCheckboxChange($event)" class="w-4 h-4 rounded border-gray-300" /> <span *ngIf="showLabel" class="ml-2"> {{ isChecked ? config.trueDisplay : config.falseDisplay }} </span> </div> `, isInline: true, dependencies: [{ kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i2.CheckboxControlValueAccessor, selector: "input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]" }, { kind: "directive", type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i2.FormControlDirective, selector: "[formControl]", inputs: ["formControl", "disabled", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: BinaryEditorComponent, decorators: [{ type: Component, args: [{ selector: 'binary-editor', template: ` <div class="editor-container"> <input type="checkbox" [formControl]="inputControl" [checked]="isChecked" (change)="onCheckboxChange($event)" class="w-4 h-4 rounded border-gray-300" /> <span *ngIf="showLabel" class="ml-2"> {{ isChecked ? config.trueDisplay : config.falseDisplay }} </span> </div> `, providers: [ { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => BinaryEditorComponent), multi: true } ] }] }], ctorParameters: function () { return []; }, propDecorators: { config: [{ type: Input }], selectionChange: [{ type: Output }] } }); // src/components/ixt-matrix/matrix-editors/coordinate/coordinate-editor.component.ts class CoordinateEditorComponent { constructor(dialogService) { this.dialogService = dialogService; this.inputControl = new FormControl(''); this.hasError = false; this.errorMessage = ''; // MatrixEditor implementation this.component = CoordinateEditorComponent; this.onChange = () => { }; this.onTouch = () => { }; } ngOnInit() { this.setupValueChanges(); } getEditConfig() { return { type: this.config?.['type'] || 'lat' }; } validate(value) { const num = Number(value); const isLat = this.config?.['type'] === 'lat'; return isLat ? (num >= -90 && num <= 90) : (num >= -180 && num <= 180); } // private setupValueChanges() { // this.inputControl.valueChanges.subscribe(value => { // if (value !== null) { // // Convert string to number for validation // const numValue = Number(value); // if (this.validateValue(numValue)) { // this.onChange(numValue); // } // } // }); // } setupValueChanges() { this.inputControl.valueChanges.subscribe(value => { if (value !== null) { const numValue = Number(value); if (!isNaN(numValue) && this.validateValue(numValue)) { this.onChange(numValue); } else { // Reset to last valid value or empty this.inputControl.setValue('', { emitEvent: false }); } } }); } validateValue(value) { this.hasError = false; this.errorMessage = ''; if (isNaN(value)) { this.hasError = true; this.errorMessage = 'Must be a valid number'; return false; } const isLat = this.config?.['type'] === 'lat'; const min = isLat ? -90 : -180; const max = isLat ? 90 : 180; if (value < min || value > max) { this.hasError = true; this.errorMessage = `Must be between ${min} and ${max}`; return false; } return true; } // ControlValueAccessor methods writeValue(value) { this.inputControl.setValue(value?.toString() || '', { emitEvent: false }); } registerOnChange(fn) { this.onChange = fn; } registerOnTouched(fn) { this.onTouch = fn; } onBlur() { this.onTouch(); } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: CoordinateEditorComponent, deps: [{ token: IxtDialogService }], target: i0.ɵɵFactoryTarget.Component }); } static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: CoordinateEditorComponent, selector: "coordinate-editor", inputs: { config: "config" }, providers: [ { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => CoordinateEditorComponent), multi: true } ], ngImport: i0, template: ` <div class="editor-container"> <input type="number" step="any" [min]="config?.['type'] === 'lat' ? -90 : -180" [max]="config?.['type'] === 'lat' ? 90 : 180" [formControl]="inputControl" class="w-24 px-2 py-1 border rounded" [class.border-red-500]="hasError" [placeholder]="config?.['type'] === 'lat' ? '(-90 to 90)' : '(-180 to 180)'" (blur)="onBlur()" /> <div *ngIf="hasError" class="text-red-500 text-sm mt-1"> {{ errorMessage }} </div> </div>`, isInline: true, dependencies: [{ kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i2.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i2.NumberValueAccessor, selector: "input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]" }, { kind: "directive", type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i2.MinValidator, selector: "input[type=number][min][formControlName],input[type=number][min][formControl],input[type=number][min][ngModel]", inputs: ["min"] }, { kind: "directive", type: i2.MaxValidator, selector: "input[type=number][max][formControlName],input[type=number][max][formControl],input[type=number][max][ngModel]", inputs: ["max"] }, { kind: "directive", type: i2.FormControlDirective, selector: "[formControl]", inputs: ["formControl", "disabled", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: CoordinateEditorComponent, decorators: [{ type: Component, args: [{ selector: 'coordinate-editor', template: ` <div class="editor-container"> <input type="number" step="any" [min]="config?.['type'] === 'lat' ? -90 : -180" [max]="config?.['type'] === 'lat' ? 90 : 180" [formControl]="inputControl" class="w-24 px-2 py-1 border rounded" [class.border-red-500]="hasError" [placeholder]="config?.['type'] === 'lat' ? '(-90 to 90)' : '(-180 to 180)'" (blur)="onBlur()" /> <div *ngIf="hasError" class="text-red-500 text-sm mt-1"> {{ errorMessage }} </div> </div>`, providers: [ { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => CoordinateEditorComponent), multi: true } ] }] }], ctorParameters: function () { return [{ type: IxtDialogService }]; }, propDecorators: { config: [{ type: Input }] } }); // src/components/ixt-matrix/index.ts // Fix these import paths to match your folder structure // src/components/ixt-matrix/services/pagination/pagination.service.ts class PaginationService { constructor() { this.DEFAULT_PAGE_SIZES = [ { value: 10, label: '10' }, { value: 100, label: '100' }, { value: 'all', label: 'All' } ]; this.MINIMUM_ROWS_FOR_PAGINATION = 50; this.state = new BehaviorSubject({ currentPage: 1, pageSize: 10, totalItems: 0 }); this.state$ = this.state.asObservable(); } initialize(totalItems) { this.updateState({ currentPage: 1, pageSize: 10, totalItems }); } shouldShowPagination() { return this.state.getValue().totalItems > this.MINIMUM_ROWS_FOR_PAGINATION; } getCurrentPage() { return this.state.getValue().currentPage; } getPageSize() { return this.state.getValue().pageSize; } getPageSizes() { return this.DEFAULT_PAGE_SIZES; } getTotalPages() { const { totalItems, pageSize } = this.state.getValue(); if (pageSize === 'all' || totalItems <= this.MINIMUM_ROWS_FOR_PAGINATION) { return 1; } return Math.ceil(totalItems / +pageSize); } getVisiblePages() { const totalPages = this.getTotalPages(); const currentPage = this.getCurrentPage(); if (totalPages <= 1) return []; const pages = [1]; const WINDOW_SIZE = 4; let start = Math.max(2, currentPage - WINDOW_SIZE); let end = Math.min(totalPages - 1, currentPage + WINDOW_SIZE); if (start > 2) { pages.push(-1); } for (let i = start; i <= end; i++) { pages.push(i); } if (end < totalPages - 1) { pages.push(-1); } if (totalPages > 1) { pages.push(totalPages); } return pages; } onPageChange(page) { const totalPages = this.getTotalPages(); if (page >= 1 && page <= totalPages) { this.updateState({ ...this.state.getValue(), currentPage: page }); } } onPageSizeChange(newSize) { this.updateState({ ...this.state.getValue(), pageSize: newSize, currentPage: 1 }); } getPaginatedData(data) { const { pageSize, currentPage } = this.state.getValue(); if (pageSize === 'all' || data.length <= this.MINIMUM_ROWS_FOR_PAGINATION) { return data; } const start = (currentPage - 1) * (+pageSize); const end = start + (+pageSize); return data.slice(start, end); } updateState(newState) { this.state.next({ ...this.state.getValue(), ...newState }); } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: PaginationService, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); } static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: PaginationService, providedIn: 'root' }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: PaginationService, decorators: [{ type: Injectable, args: [{ providedIn: 'root' }] }] }); class FilterService { constructor() { this.activeFilters = new Map(); this.filterControls = new Map(); this.showFilters = false; this.filtersChanged = new BehaviorSubject(new Map()); this.filtersChanged$ = this.filtersChanged.asObservable(); } initializeFilter(field, config) { const controls = { value: new FormControl('') }; if (config.type === 'number') { // Fix: Explicitly type the FormControl controls.operator = new FormControl('=', { nonNullable: true }); } this.filterControls.set(field, controls); } getFilterControl(field) { return this.filterControls.get(field)?.value; } getOperatorControl(field) { return this.filterControls.get(field)?.operator; } onFilterChange(field, value, config) { if (value || value === 0) { const defaultOperator = config?.type === 'number' ? 'equals' : 'contains'; const operator = this.getOperatorControl(field)?.value || defaultOperator; this.activeFilters.set(field, { field, operator: operator, value: config?.type === 'number' ? Number(value) : value }); } else { this.activeFilters.delete(field); } this.filtersChanged.next(this.activeFilters); } onOperatorChange(field) { const currentValue = this.getFilterControl(field)?.value; if (currentValue || currentValue === 0) { this.onFilterChange(field, currentValue); } } clearAllFilters() { this.activeFilters.clear(); this.filterControls.forEach(controls => { controls.value.reset(); controls.operator?.reset('='); }); this.filtersChanged.next(this.activeFilters); } toggleFilters(column) { if (this.activeFilterColumn === column) { this.activeFilterColumn = undefined; this.showFilters = false; } else { this.activeFilterColumn = column; this.showFilters = true; } } matchesFilter(item, filter) { if (item === undefined || item === null) return false; // Handle numeric comparisons if (typeof item === 'number' || !isNaN(Number(item))) { const numValue = Number(item); const numFilterValue = Number(filter.value); return this.handleNumericComparison(numValue, numFilterValue, filter.operator); } // String handling const itemValue = String(item).toLowerCase(); const filterValue = String(filter.value).toLowerCase(); switch (filter.operator) { case 'startsWith': return itemValue.startsWith(filterValue); case 'equals': return itemValue === filterValue; case '!=': return itemValue !== filterValue; default: return itemValue.includes(filterValue); } } handleNumericComparison(numValue, numFilterValue, operator) { switch (operator) { case '>': return numValue > numFilterValue; case '<': return numValue < numFilterValue; case '>=': return numValue >= numFilterValue; case '<=': return numValue <= numFilterValue; case '!=': return numValue !== numFilterValue; case 'equals': return numValue === numFilterValue; default: return false; } } get isShowingFilters() { return this.showFilters; } get activeColumn() { return this.activeFilterColumn; } getActiveFilters() { return this.activeFilters; } hasActiveFilters() { return this.activeFilters.size > 0; } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: FilterService, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); } static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: FilterService, providedIn: 'root' }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: FilterService, decorators: [{ type: Injectable, args: [{ providedIn: 'root' }] }] }); // src/components/ixt-matrix/services/sort/sort.service.ts class SortService { constructor() { this.initialState = { column: null, direction: null }; this.state = new BehaviorSubject(this.initialState); this.state$ = this.state.asObservable(); } toggleSort(column) { const currentState = this.state.getValue(); let newDirection = null; if (currentState.column === column) { // Cycle through: null -> asc -> desc -> null if (currentState.direction === null) { newDirection = 'asc'; } else if (currentState.direction === 'asc') { newDirection = 'desc'; } else { newDirection = null; } } else { // New column, start with ascending newDirection = 'asc'; } this.state.next({ column: newDirection ? column : null, direction: newDirection }); } getSortIcon(column) { const { column: sortColumn, direction } = this.state.getValue(); if (sortColumn !== column) { return 'unfold_more'; } return direction === 'asc' ? 'arrow_upward' : 'arrow_downward'; } sortData(data) { const { column, direction } = this.state.getValue(); if (!column || !direction) { return data; } return [...data].sort((a, b) => { const aVal = a[column]; const bVal = b[column]; if (aVal == null) return 1; if (bVal == null) return -1; let comparison; if (typeof aVal === 'string') { comparison = String(aVal).toLowerCase().localeCompare(String(bVal).toLowerCase()); } else { comparison = aVal < bVal ? -1 : (aVal > bVal ? 1 : 0); } return direction === 'asc' ? comparison : -comparison; }); } clearSort() { this.state.next(this.initialState); } getCurrentSort() { return this.state.getValue(); } isColumnSorted(column) { return this.state.getValue().column === column; } getSortDirection(column) { const { column: sortColumn, direction } = this.state.getValue(); return sortColumn === column ? direction : null; } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: SortService, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); } static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: SortService, providedIn: 'root' }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: SortService, decorators: [{ type: Injectable, args: [{ providedIn: 'root' }] }] }); // src/components/ixt-matrix/services/selection/selection.service.ts class SelectionService { constructor() { this.state = new BehaviorSubject({ selectedRows: new Set(), allSelected: false }); this.state$ = this.state.asObservable(); } selectRow(index, selected = true) { const currentState = this.state.getValue(); const newSelectedRows = new Set(currentState.selectedRows); if (selected) { newSelectedRows.add(index); } else { newSelectedRows.delete(index); } this.state.next({ selectedRows: newSelectedRows, allSelected: currentState.allSelected }); } toggleAllRows(selected, totalRows) { const newSelectedRows = new Set(); if (selected) { // Add all row indices for (let i = 0; i < totalRows; i++) { newSelectedRows.add(i); } } this.state.next({ selectedRows: newSelectedRows, allSelected: selected }); } clearSelection() { this.state.next({ selectedRows: new Set(), allSelected: false }); } getSelectedRows() { return this.state.getValue().selectedRows; } isSelected(index) { return this.state.getValue().selectedRows.has(index); } isAllSelected() { return this.state.getValue().allSelected; } getSelectedCount() { return this.state.getValue().selectedRows.size; } setSelectedRows(indices) { const newSelectedRows = new Set(indices); this.state.next({ selectedRows: newSelectedRows, allSelected: false // Reset all selected state when manually setting rows }); } isPartiallySelected(totalRows) { const selectedCount = this.getSelectedCount(); return selectedCount > 0 && selectedCount < totalRows; } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: SelectionService, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); } static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: SelectionService, providedIn: 'root' }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: SelectionService, decorators: [{ type: Injectable, args: [{ providedIn: 'root' }] }] }); // src/components/ixt-matrix/services/edit/edit.service.ts class EditService { constructor() { this.initialState = { editingRows: new Set(), newRows: [], rowChanges: new Map(), editControls: new Map() }; this.state = new BehaviorSubject(this.initialState); this.state$ = this.state.asObservable(); } getDefaultValueForType(type) { switch (type) { case 'number': return 0; case 'enum': return ''; case 'text': default: return ''; } } addNewRow(columnConfigs) { const newRow = {}; if (columnConfigs) { Object.entries(columnConfigs).forEach(([field, config]) => { newRow[field] = this.getDefaultValueForType(config.type); }); } const currentState = this.state.getValue(); const newRows = [...currentState.newRows]; newRows.unshift(newRow); // Start editing the new row const editingRows = new Set(currentState.editingRows); editingRows.add(-newRows.length); this.state.next({ ...currentState, newRows, editingRows }); } startEditing(rowIndex) { const currentState = this.state.getValue(); const editingRows = new Set(currentState.editingRows); editingRows.add(rowIndex); this.state.next({ ...currentState, editingRows }); } cancelEditing(rowIndex) { const currentState = this.state.getValue(); const editingRows = new Set(currentState.editingRows); const rowChanges = new Map(currentState.rowChanges); editingRows.delete(rowIndex); rowChanges.delete(rowIndex); this.state.next({ ...currentState, editingRows, rowChanges }); } onValueChange(event) { const { rowIndex, field, value } = event; const currentState = this.state.getValue(); const rowChanges = new Map(currentState.rowChanges); let changes = rowChanges.get(rowIndex) || {}; changes = { ...changes, [field]: value }; rowChanges.set(rowIndex, changes); this.state.next({ ...currentState, rowChanges }); } getEditControl(rowIndex, field) { const key = `${rowIndex}-${field}`; const currentState = this.state.getValue(); let control = currentState.editControls.get(key); if (!control) { control = new FormControl(''); const editControls = new Map(currentState.editControls); editControls.set(key, control); this.state.next({ ...currentState, editControls }); } return control; } saveChanges(data) { const currentState = this.state.getValue(); const updatedData = [...data]; // Apply changes to existing rows currentState.rowChanges.forEach((changes, rowIndex) => { if (rowIndex >= 0) { updatedData[rowIndex] = { ...updatedData[rowIndex], ...changes }; } }); // Add new rows if (currentState.newRows.length) { // Apply any changes to new rows const processedNewRows = currentState.newRows.map((row, index) => { const changes = currentState.rowChanges.get(-index - 1); return changes ? { ...row, ...changes } : row; }); updatedData.unshift(...processedNewRows); } // Reset state this.state.next(this.initialState); return updatedData; } isNewRow(index) { return index < this.state.getValue().newRows.length; } isEditing(rowIndex) { return this.state.getValue().editingRows.has(rowIndex); } hasChanges() { const currentState = this.state.getValue(); return currentState.rowChanges.size > 0 || currentState.newRows.length > 0; } getNewRows() { return this.state.getValue().newRows; } getRowChanges(rowIndex) { return this.state.getValue().rowChanges.get(rowIndex); } getRowIndex(displayIndex) { return displayIndex - this.state.getValue().newRows.length; } clearEditing() { this.state.next(this.initialState); } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: EditService, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); } static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: EditService, providedIn: 'root' }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: EditService, decorators: [{ type: Injectable, args: [{ providedIn: 'root' }] }] }); class IxtTableComponent { constructor(dialogService, changeDetectorRef, paginationService, filterService, sortService, selectionService, editService) { this.dialogService = dialogService; this.changeDetectorRef = changeDetectorRef; this.paginationService = paginationService; this.filterService = filterService; this.sortService = sortService; this.selectionService = selectionService; this.editService = editService; this.data = []; this.columns = []; this.pageSizeControl = new FormControl(10); this.AirportCodeEditorComponent = AirportCodeEditorComponent; this.CoordinateEditorComponent = CoordinateEditorComponent; } ngOnInit() { this.columns = this.getColumns(this.data); // Initialize pagination this.paginationService.initialize(this.data.length); // Initialize filters if (this.columnConfigs) { Object.entries(this.columnConfigs).forEach(([field, config]) => { this.filterService.initializeFilter(field, config); // Get the control from service and subscribe to changes const control = this.filterService.getFilterControl(field); if (control) { control.valueChanges.pipe(debounceTime(config.debounceTime || 300), distinctUntilChanged()).subscribe(value => { this.filterService.onFilterChange(field, value, config); }); } }); } // Subscribe to filter changes this.filterService.filtersChanged$.subscribe(() => { this.changeDetectorRef.markForCheck(); }); // Subscribe to pagination changes this.paginationService.state$.subscribe(() => { this.changeDetectorRef.markForCheck(); }); // Subscribe to page size changes this.pageSizeControl.valueChanges.subscribe(value => { if (value) { this.paginationService.onPageSizeChange(value); } }); } // edit logic start addNewRow() { this.editService.addNewRow(this.columnConfigs || {}); } cancelEditing(rowIndex) { this.editService.cancelEditing(rowIndex); } getEditorComponent(type) { console.log('getEditorComponent called with:', { type, isCoordinate: type === CoordinateEditorComponent, isAirport: type === AirportCodeEditorComponent }); if (type === AirportCodeEditorComponent) { return new AirportCodeEditorComponent(this.dialogService); } if (type === CoordinateEditorComponent) { return new CoordinateEditorComponent(this.dialogService); } return null; } getEditorType(type) { console.log('getEditorType called with:', { type, isString: typeof type === 'string', isCoordinate: type === CoordinateEditorComponent, isAirport: type === AirportCodeEditorComponent }); if (typeof type === 'string') { return type; } if (type === AirportCodeEditorComponent || type === CoordinateEditorComponent) { console.log('Returning custom for editor type'); return 'custom'; } console.log('Falling back to text type'); return 'text'; } getEditControl(rowIndex, field) { return this.editService.getEditControl(rowIndex, field); } getRowIndex(displayIndex) { return this.editService.getRowIndex(displayIndex); } get hasChanges() { return this.editService.hasChanges(); } isEditing(index) { return this.editService.isEditing(index); } isNewRow(displayIndex) { return this.editService.isNewRow(displayIndex); } get newRowsLength() { return this.editService.getNewRows().length; } onValueChange(rowIndex, field, value) { this.editService.onValueChange({ rowIndex, field, value }); } saveChanges() { this.data = this.editService.saveChanges(this.data); this.changeDetectorRef.markForCheck(); } startEditing(rowIndex) { this.editService.startEditing(rowIndex); } // edit logic end // filter logic start get activeFilterColumn() { return this.filterService.activeColumn; } getFilterControl(col) { return this.filterService.getFilterControl(col); } getOperatorControl(col) { return this.filterService.getOperatorControl(col); } onOperatorChange(field) { this.filterService.onOperatorChange(field); } get showFilters() { return this.filterService.isShowingFilters; } toggleFilters(col) { this.filterService.toggleFilters(col); } // filter logic end // pagination logic start get currentPage() { return this.paginationService.getCurrentPage(); } onPageChange(page) { this.paginationService.onPageChange(page); } onPageSizeChange(size) { this.paginationService.onPageSizeChange(size); } get paginatedData() { // Start with combined data let allData = [...this.editService.getNewRows(), ...this.data]; // Apply filters if (this.filterService.hasActiveFilters()) { const activeFilters = this.filterService.getActiveFilters(); const filteredExisting = this.data.filter(item => Array.from(activeFilters.values()).every(filter => this.filterService.matchesFilter(item[filter.field], filter))); allData = [...this.editService.getNewRows(), ...filteredExisting]; } // Apply sorting allData = this.sortService.sortData(allData); // Apply pagination return this.paginationService.getPaginatedData(allData); } get pageSizes() { return this.paginationService.getPageSizes(); } get showPagination() { return this.paginationService.shouldShowPagination(); } get totalPages() { return this.paginationService.getTotalPages(); } get visiblePages() { return this.paginationService.getVisiblePages(); } // pagination logic end // selection logic start get allSelected() { return this.selectionService.isAllSelected(); } set allSelected(value) { this.selectionService.toggleAllRows(value, this.data.length); } getSelectedRows() { return Array.from(this.selectionService.getSelectedRows()) .map(index => this.data[index]) .filter(row => row !== undefined); } get hasSelectedRows() { return this.selectionService.getSelectedCount() > 0; } isRowSelected(index) { return this.selectionService.isSelected(index); } selectRow(index, selected = true) { this.selectionService.selectRow(index, selected); } setSelectedRows(indices) { this.selectionService.setSelectedRows(indices); } toggleAllRows(selected) { this.selectionService.toggleAllRows(selected, this.data.length); } // selection logic end // sort logic start getSortIcon(column) { return this.sortService.getSortIcon(column); } toggleSort(column) { this.sortService.toggleSort(column); } // sort logic end // i/o logic start formatCoordinate(value) { return value.toFixed(1); } getCodes(data) { if (!data) return []; return data.map(row => row['code']?.toString() || ''); } // i/o logic end // config logic start getColumns(data) { if (!data?.length) return []; const firstRow = data[0]; return Object.keys(firstRow); } get hasData() { return !!this.data?.length; } static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtTableComponent, deps: [{ token: IxtDialogService }, { token: i0.ChangeDetectorRef }, { token: PaginationService }, { token: FilterService }, { token: SortService }, { token: SelectionService }, { token: EditService }], target: i0.ɵɵFactoryTarget.Component }); } static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: IxtTableComponent, selector: "ixt-table", inputs: { data: "data", columnConfigs: "columnConfigs" }, viewQueries: [{ propertyName: "noDataTemplate", first: true, predicate: ["noData"], descendants: true }, { propertyName: "customEditorTpl", first: true, predicate: ["customEditorTpl"], descendants: true }], ngImport: i0, template: "<div class=\"ixt-table__toolbar\">\r\n <button class=\"ixt-table__action-button\" (click)=\"addNewRow()\">\r\n <span class=\"material-icons\">add</span>\r\n </button>\r\n <button class=\"ixt-table__action-button\" [disabled]=\"!hasChanges && newRowsLength === 0\" (click)=\"saveChanges()\">\r\n <span class=\"material-icons\">save</span>\r\n </button>\r\n</div>\r\n\r\n<ng-container *ngIf=\"hasData; else noData\">\r\n <div class=\"ixt-table\">\r\n <!-- Header -->\r\n <div class=\"ixt-table__header\">\r\n <div class=\"ixt-table__cell\">\r\n <binary-editor\r\n [config]=\"{ rowIndex: -1 }\"\r\n [(ngModel)]=\"allSelected\"\r\n (selectionChange)=\"toggleAllRows($event.selected)\">\r\n </binary-editor>\r\n </div>\r\n <div class=\"ixt-table__cell\" *ngFor=\"let col of columns\" [class.ixt-table__cell--first]=\"col === columns[0]\">\r\n <div class=\"ixt-table__cell-content\">\r\n {{columnConfigs?.[col]?.label || col}}\r\n <div class=\"ixt-table__cell-actions\">\r\n <button class=\"ixt-table__sort-toggle\" (click)=\"toggleSort(col)\">\r\n <span class=\"material-icons\">{{getSortIcon(col)}}</span>\r\n </button>\r\n <button class=\"ixt-table__filter-toggle\" (click)=\"toggleFilters(col)\">\r\n <span class=\"material-icons\">filter_alt</span>\r\n </button>\r\n </div>\r\n </div>\r\n </div>\r\n <div class=\"ixt-table__cell\">Actions</div>\r\n </div>\r\n\r\n <!-- Filter Row -->\r\n <div class=\"ixt-table__header\" *ngIf=\"showFilters\">\r\n <div class=\"ixt-table__cell\"></div>\r\n <div class=\"ixt-table__cell\" *ngFor=\"let col of columns\" [class.ixt-table__cell--first]=\"col === columns[0]\">\r\n <ng-container *ngIf=\"activeFilterColumn === col && columnConfigs?.[col]\">\r\n <ng-container [ngSwitch]=\"getEditorType(columnConfigs?.[col]?.type)\">\r\n <!-- Text Filter -->\r\n <input *ngSwitchCase=\"'text'\" [formControl]=\"getFilterControl(col)\"\r\n [placeholder]=\"columnConfigs?.[col]?.placeholder || ''\" class=\"ixt-table__filter-input\">\r\n\r\n <!-- Number Filter -->\r\n <div *ngSwitchCase=\"'number'\" class=\"ixt-table__number-filter\">\r\n <select [formControl]=\"getOperatorControl(col)\" (change)=\"onOperatorChange(col)\">\r\n <option value=\"=\">=</option>\r\n <option value=\">\">&gt;</option>\r\n <option value=\"<\">&lt;</option>\r\n <option value=\">=\">&gt;=</option>\r\n <option value=\"<=\">&lt;=</option>\r\n <option value=\"!=\">!=</option>\r\n </select>\r\n <input type=\"number\" [formControl]=\"getFilterControl(col)\"\r\n [placeholder]=\"columnConfigs?.[col]?.placeholder || ''\" class=\"ixt-table__filter-input\">\r\n </div>\r\n\r\n <!-- Enum Filter -->\r\n <div *ngSwitchCase=\"'enum'\">\r\n <select [formControl]=\"getFilterControl(col)\" class=\"ixt-table__filter-input\">\r\n <option value=\"\">All</option>\r\n <option *ngFor=\"let opt of columnConfigs?.[col]?.enumValues\" [value]=\"opt.value\">\r\n {{opt.label}}\r\n </option>\r\n </select>\r\n </div>\r\n </ng-container>\r\n </ng-container>\r\n </div>\r\n <div class=\"ixt-table__cell\"></div>\r\n </div>\r\n\r\n <!-- Data Rows -->\r\n <div class=\"ixt-table__row\" *ngFor=\"let row of paginatedData; let i = index\" \r\n [class.ixt-table__row--selected]=\"isRowSelected(getRowIndex(i))\">\r\n <div class=\"ixt-table__cell\">\r\n <binary-editor\r\n [config]=\"{ rowIndex: getRowIndex(i), rowData: row }\"\r\n [ngModel]=\"isRowSelected(getRowIndex(i))\"\r\n (selectionChange)=\"selectRow(getRowIndex(i), $event.selected)\">\r\n </binary-editor>\r\n </div>\r\n <div class=\"ixt-table__cell\" *ngFor=\"let col of columns\" [class.ixt-table__cell--first]=\"col === columns[0]\">\r\n <ng-container *ngIf=\"isNewRow(i) || isEditing(getRowIndex(i)); else displayValue\">\r\n <ng-container [ngSwitch]=\"getEditorType(columnConfigs?.[col]?.type)\">\r\n <!-- Text Input -->\r\n <input *ngSwitchCase=\"'text'\" type=\"text\" [ngModel]=\"row[col]\"\r\n (ngModelChange)=\"onValueChange(getRowIndex(i), col, $event)\">\r\n\r\n <!-- Number Input -->\r\n <input *ngSwitchCase=\"'number'\" type=\"number\" [ngModel]=\"row[col]\"\r\n (ngModelChange)=\"onValueChange(getRowIndex(i), col, $event)\">\r\n\r\n <!-- Enum Select -->\r\n <select *ngSwitchCase=\"'enum'\" [ngModel]=\"row[col]\"\r\n (ngModelChange)=\"onValueChange(getRowIndex(i), col, $event)\">\r\n <option *ngFor=\"let opt of columnConfigs?.[col]?.enumValues\" [ngValue]=\"opt.value\">\r\n {{opt.label}}\r\n </option>\r\n </select>\r\n\r\n <!-- Custom Editor -->\r\n <ng-container *ngSwitchCase=\"'custom'\">\r\n <ng-container *ngTemplateOutlet=\"customEditorTpl; context: {\r\n $implicit: getEditorComponent(columnConfigs?.[col]?.type),\r\n row: row,\r\n col: col,\r\n index: i,\r\n control: getEditControl(getRowIndex(i), col)\r\n }\">\r\n </ng-container>\r\n </ng-container>\r\n </ng-container>\r\n </ng-container>\r\n \r\n <ng-template #displayValue>\r\n <ng-container [ngSwitch]=\"columnConfigs?.[col]?.type\">\r\n <ng-container *ngSwitchCase=\"CoordinateEditorComponent\">\r\n {{formatCoordinate(row[col])}}\r\n </ng-container>\r\n <ng-container *ngSwitchDefault>\r\n {{row[col]}}\r\n </ng-container>\r\n </ng-container>\r\n </ng-template>\r\n </div>\r\n \r\n <div class=\"ixt-table__cell\">\r\n <ng-container *ngIf=\"!isNewRow(i) && !isEditing(getRowIndex(i))\">\r\n <button class=\"ixt-table__action-button\" (click)=\"startEditing(getRowIndex(i))\">\r\n <span class=\"material-icons\">edit</span>\r\n </button>\r\n </ng-container>\r\n <ng-container *ngIf=\"isNewRow(i) || isEditing(getRowIndex(i))\">\r\n <button class=\"ixt-table__action-button\" (click)=\"cancelEditing(getRowIndex(i))\">\r\n <span class=\"material-icons\">close</span>\r\n </button>\r\n </ng-container>\r\n </div>\r\n </div>\r\n\r\n <!-- Pagination -->\r\n <div class=\"ixt-table__footer\" *ngIf=\"showPagination\">\r\n <div class=\"ixt-table__pagination\">\r\n <div class=\"ixt-table__page-size\">\r\n <select [formControl]=\"pageSizeControl\">\r\n <option *ngFor=\"let size of pageSizes\" [value]=\"size.value\">\r\n {{size.label}}\r\n </option>\r\n </select>\r\n rows per page\r\n </div>\r\n <div class=\"ixt-table__controls\">\r\n <button (click)=\"onPageChange(1)\" [disabled]=\"currentPage === 1\">\r\n <span class=\"material-icons\">first_page</span>\r\n </button>\r\n <button (click)=\"onPageChange(currentPage - 1)\" [disabled]=\"currentPage === 1\">\r\n <span class=\"material-icons\">chevron_left</span>\r\n </button>\r\n <button *ngFor=\"let page of visiblePages\" [class.active]=\"page === currentPage\" \r\n [class.ellipsis]=\"page === -1\" [disabled]=\"page === -1\" \r\n (click)=\"onPageChange(page)\">\r\n {{page === -1 ? '...' : page}}\r\n </button>\r\n <button (click)=\"onPageChange(currentPage + 1)\" [disabled]=\"currentPage === totalPages\">\r\n <span class=\"material-icons\">chevron_right</span>\r\n </button>\r\n <button (click)=\"onPageChange(totalPages)\" [disabled]=\"currentPage === totalPages\">\r\n <span class=\"material-icons\">last_page</span>\r\n </button>\r\n </div>\r\n </div>\r\n </div>\r\n </div>\r\n</ng-container>\r\n\r\n<!-- Custom Editor Template -->\r\n<ng-template #customEditorTpl let-editor let-row=\"row\" let-col=\"col\" let-index=\"index\" let-control=\"control\">\r\n <coordinate-editor\r\n *ngIf=\"editor?.component === CoordinateEditorComponent\"\r\n [formControl]=\"control\"\r\n [config]=\"{\r\n type: col === 'lat' ? 'lat' : 'lon'\r\n }\">\r\n </coordinate-editor>\r\n\r\n <airport-code-editor \r\n *ngIf=\"editor?.component === AirportCodeEditorComponent\"\r\n [formControl]=\"control\"\r\n [config]=\"editor.getEditConfig()\"\r\n [existingCodes]=\"getCodes(data)\">\r\n </airport-code-editor>\r\n</ng-template>\r\n\r\n<!-- No Data Template -->\r\n<ng-template #noData>\r\n <div class=\"ixt-table__empty\">\r\n No data available\r\n </div>\r\n</ng-template>", styles: [".ixt-table{border:1px solid #e2e8f0;border-radius:.5rem;overflow:auto;max-height:calc(100vh - 600px)}.ixt-table__header{display:flex;background:#f7fafc;border-bottom:1px solid #e2e8f0;font-weight:500}.ixt-table__row{display:flex;border-bottom:1px solid #e2e8f0}.ixt-table__row:hover{background:#f7fafc}.ixt-table__cell{padding:.5rem;width:150px;min-width:150px;box-sizing:border-box;border-right:1px solid #e2e8f0;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.ixt-table__cell:first-child{width:40px;min-width:40px}.ixt-table__cell--first{width:200px;min-width:200px}.ixt-table__cell--actions{width:80px;min-width:80px}.ixt-table__cell-content{display:flex;align-items:center;gap:8px;width:100%}.ixt-table__cell input,.ixt-table__cell select{width:100%;padding:4px 24px 4px 8px;border:1px solid #e2e8f0;border-radius:4px}.ixt-table__cell coordinate-editor input{padding-right:24px}.ixt-table__empty{padding:1rem;text-align:center;color:#718096}.ixt-table__footer{display:flex;justify-content:space-between;align-items:center;padding:.75rem;border-top:1px solid #e2e8f0}.ixt-table__pagination{display:flex;justify-content:space-between;align-items:center;width:100%}.ixt-table__page-size select{padding:.25rem .5rem;border:1px solid #e2e8f0;border-radius:.25rem;margin-right:1rem}.ixt-table__controls{display:flex;align-items:center;gap:.25rem}.ixt-table__controls button{padding:.25rem;min-width:2rem;height:2rem;border:none;background:none;cursor:pointer;border-radius:.25rem;color:#4169e1;display:flex;align-items:center;justify-content:center}.ixt-table__controls button:disabled{color:gray;cursor:not-allowed}.ixt-table__controls button:not(:disabled):hover{background-color:#f7fafc}.ixt-table__controls button.active{background-color:#4169e1;color:#fff}.ixt-table__controls button.ellipsis{cursor:default}.ixt-table__controls button.ellipsis:hover{background:none}.ixt-table__filter-toggle{background:none;border:none;cursor:pointer;padding:4px;color:#4169e1;display:flex;align-items:center}.ixt-table__filter-input{width:100%;padding:.25rem;border:1px solid #e2e8f0;border-radius:.25rem;font-size:.875rem}.ixt-table__filter-input:focus{outline:none;border-color:#4169e1}.ixt-table__number-filter{display:flex;gap:.25rem}.ixt-table__number-filter select{padding:.25rem;border:1px solid #e2e8f0;border-radius:.25rem}.ixt-table .material-icons{font-family:Material Icons;font-weight:400;font-style:normal;display:inline-block;line-height:1;text-transform:none;letter-spacing:normal;word-wrap:normal;white-space:nowrap;direction:ltr}.ixt-table__cell-content{display:flex;align-items:center;gap:8px}.ixt-table__cell-actions{display:flex;align-items:center;gap:4px}.ixt-table__sort-toggle,.ixt-table__filter-toggle{background:none;border:none;padding:4px;cursor:pointer;display:flex;align-items:center;justify-content:center}.ixt-table__sort-toggle:hover,.ixt-table__filter-toggle:hover{background-color:#0000000a;border-radius:4px}.ixt-table__sort-toggle .material-icons,.ixt-table__filter-toggle .material-icons{font-size:18px;color:#0000008a}.ixt-table__toolbar{display:flex;justify-content:flex-end;padding:8px}.ixt-table__save-button,.ixt-table__action-button{background:none;border:none;padding:4px;cursor:pointer}.ixt-table__save-button:disabled,.ixt-table__action-button:disabled{opacity:.5;cursor:not-allowed}.ixt-table__save-button .material-icons,.ixt-table__action-button .material-icons{font-size:18px}.ixt-table input,.ixt-table select{width:100%;padding:4px;border:1px solid #ddd;border-radius:4px}.ixt-table input:focus,.ixt-table select:focus{outline:none;border-color:#007bff}\n"], dependencies: [{ kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i1.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "directive", type: i1.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { kind: "directive", type: i1.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { kind: "directive", type: i1.NgSwitchDefault, selector: "[ngSwitchDefault]" }, { kind: "directive", type: i2.NgSelectOption, selector: "option", inputs: ["ngValue", "value"] }, { kind: "directive", type: i2.ɵNgSelectMultipleOption, selector: "option", inputs: ["ngValue", "value"] }, { kind: "directive", type: i2.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i2.NumberValueAccessor, selector: "input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]" }, { kind: "directive", type: i2.SelectControlValueAccessor, selector: "select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]", inputs: ["compareWith"] }, { kind: "directive", type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i2.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "directive", type: i2.FormControlDirective, selector: "[formControl]", inputs: ["formControl", "disabled", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }, { kind: "component", type: AirportCodeEditorComponent, selector: "airport-code-editor", inputs: ["config", "existingCodes", "field"] }, { kind: "component", type: CoordinateEditorComponent, selector: "coordinate-editor", inputs: ["config"] }, { kind: "component", type: BinaryEditorComponent, selector: "binary-editor", inputs: ["config"], outputs: ["selectionChange"] }] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtTableComponent, decorators: [{ type: Component, args: [{ selector: 'ixt-table', template: "<div class=\"ixt-table__toolbar\">\r\n <button class=\"ixt-table__action-button\" (click)=\"addNewRow()\">\r\n <span class=\"material-icons\">add</span>\r\n </button>\r\n <button class=\"ixt-table__action-button\" [disabled]=\"!hasChanges && newRowsLength === 0\" (click)=\"saveChanges()\">\r\n <span class=\"material-icons\">save</span>\r\n </button>\r\n</div>\r\n\r\n<ng-container *ngIf=\"hasData; else noData\">\r\n <div class=\"ixt-table\">\r\n <!-- Header -->\r\n <div class=\"ixt-table__header\">\r\n <div class=\"ixt-table__cell\">\r\n <binary-editor\r\n [config]=\"{ rowIndex: -1 }\"\r\n [(ngModel)]=\"allSelected\"\r\n (selectionChange)=\"toggleAllRows($event.selected)\">\r\n </binary-editor>\r\n </div>\r\n <div class=\"ixt-table__cell\" *ngFor=\"let col of columns\" [class.ixt-table__cell--first]=\"col === columns[0]\">\r\n <div class=\"ixt-table__cell-content\">\r\n {{columnConfigs?.[col]?.label || col}}\r\n <div class=\"ixt-table__cell-actions\">\r\n <button class=\"ixt-table__sort-toggle\" (click)=\"toggleSort(col)\">\r\n <span class=\"material-icons\">{{getSortIcon(col)}}</span>\r\n </button>\r\n <button class=\"ixt-table__filter-toggle\" (click)=\"toggleFilters(col)\">\r\n <span class=\"material-icons\">filter_alt</span>\r\n </button>\r\n </div>\r\n </div>\r\n </div>\r\n <div class=\"ixt-table__cell\">Actions</div>\r\n </div>\r\n\r\n <!-- Filter Row -->\r\n <div class=\"ixt-table__header\" *ngIf=\"showFilters\">\r\n <div class=\"ixt-table__cell\"></div>\r\n <div class=\"ixt-table__cell\" *ngFor=\"let col of columns\" [class.ixt-table__cell--first]=\"col === columns[0]\">\r\n <ng-container *ngIf=\"activeFilterColumn === col && columnConfigs?.[col]\">\r\n <ng-container [ngSwitch]=\"getEditorType(columnConfigs?.[col]?.type)\">\r\n <!-- Text Filter -->\r\n <input *ngSwitchCase=\"'text'\" [formControl]=\"getFilterControl(col)\"\r\n [placeholder]=\"columnConfigs?.[col]?.placeholder || ''\" class=\"ixt-table__filter-input\">\r\n\r\n <!-- Number Filter -->\r\n <div *ngSwitchCase=\"'number'\" class=\"ixt-table__number-filter\">\r\n <select [formControl]=\"getOperatorControl(col)\" (change)=\"onOperatorChange(col)\">\r\n <option value=\"=\">=</option>\r\n <option value=\">\">&gt;</option>\r\n <option value=\"<\">&lt;</option>\r\n <option value=\">=\">&gt;=</option>\r\n <option value=\"<=\">&lt;=</option>\r\n <option value=\"!=\">!=</option>\r\n </select>\r\n <input type=\"number\" [formControl]=\"getFilterControl(col)\"\r\n [placeholder]=\"columnConfigs?.[col]?.placeholder || ''\" class=\"ixt-table__filter-input\">\r\n </div>\r\n\r\n <!-- Enum Filter -->\r\n <div *ngSwitchCase=\"'enum'\">\r\n <select [formControl]=\"getFilterControl(col)\" class=\"ixt-table__filter-input\">\r\n <option value=\"\">All</option>\r\n <option *ngFor=\"let opt of columnConfigs?.[col]?.enumValues\" [value]=\"opt.value\">\r\n {{opt.label}}\r\n </option>\r\n </select>\r\n </div>\r\n </ng-container>\r\n </ng-container>\r\n </div>\r\n <div class=\"ixt-table__cell\"></div>\r\n </div>\r\n\r\n <!-- Data Rows -->\r\n <div class=\"ixt-table__row\" *ngFor=\"let row of paginatedData; let i = index\" \r\n [class.ixt-table__row--selected]=\"isRowSelected(getRowIndex(i))\">\r\n <div class=\"ixt-table__cell\">\r\n <binary-editor\r\n [config]=\"{ rowIndex: getRowIndex(i), rowData: row }\"\r\n [ngModel]=\"isRowSelected(getRowIndex(i))\"\r\n (selectionChange)=\"selectRow(getRowIndex(i), $event.selected)\">\r\n </binary-editor>\r\n </div>\r\n <div class=\"ixt-table__cell\" *ngFor=\"let col of columns\" [class.ixt-table__cell--first]=\"col === columns[0]\">\r\n <ng-container *ngIf=\"isNewRow(i) || isEditing(getRowIndex(i)); else displayValue\">\r\n <ng-container [ngSwitch]=\"getEditorType(columnConfigs?.[col]?.type)\">\r\n <!-- Text Input -->\r\n <input *ngSwitchCase=\"'text'\" type=\"text\" [ngModel]=\"row[col]\"\r\n (ngModelChange)=\"onValueChange(getRowIndex(i), col, $event)\">\r\n\r\n <!-- Number Input -->\r\n <input *ngSwitchCase=\"'number'\" type=\"number\" [ngModel]=\"row[col]\"\r\n (ngModelChange)=\"onValueChange(getRowIndex(i), col, $event)\">\r\n\r\n <!-- Enum Select -->\r\n <select *ngSwitchCase=\"'enum'\" [ngModel]=\"row[col]\"\r\n (ngModelChange)=\"onValueChange(getRowIndex(i), col, $event)\">\r\n <option *ngFor=\"let opt of columnConfigs?.[col]?.enumValues\" [ngValue]=\"opt.value\">\r\n {{opt.label}}\r\n </option>\r\n </select>\r\n\r\n <!-- Custom Editor -->\r\n <ng-container *ngSwitchCase=\"'custom'\">\r\n <ng-container *ngTemplateOutlet=\"customEditorTpl; context: {\r\n $implicit: getEditorComponent(columnConfigs?.[col]?.type),\r\n row: row,\r\n col: col,\r\n index: i,\r\n control: getEditControl(getRowIndex(i), col)\r\n }\">\r\n </ng-container>\r\n </ng-container>\r\n </ng-container>\r\n </ng-container>\r\n \r\n <ng-template #displayValue>\r\n <ng-container [ngSwitch]=\"columnConfigs?.[col]?.type\">\r\n <ng-container *ngSwitchCase=\"CoordinateEditorComponent\">\r\n {{formatCoordinate(row[col])}}\r\n </ng-container>\r\n <ng-container *ngSwitchDefault>\r\n {{row[col]}}\r\n </ng-container>\r\n </ng-container>\r\n </ng-template>\r\n </div>\r\n \r\n <div class=\"ixt-table__cell\">\r\n <ng-container *ngIf=\"!isNewRow(i) && !isEditing(getRowIndex(i))\">\r\n <button class=\"ixt-table__action-button\" (click)=\"startEditing(getRowIndex(i))\">\r\n <span class=\"material-icons\">edit</span>\r\n </button>\r\n </ng-container>\r\n <ng-container *ngIf=\"isNewRow(i) || isEditing(getRowIndex(i))\">\r\n <button class=\"ixt-table__action-button\" (click)=\"cancelEditing(getRowIndex(i))\">\r\n <span class=\"material-icons\">close</span>\r\n </button>\r\n </ng-container>\r\n </div>\r\n </div>\r\n\r\n <!-- Pagination -->\r\n <div class=\"ixt-table__footer\" *ngIf=\"showPagination\">\r\n <div class=\"ixt-table__pagination\">\r\n <div class=\"ixt-table__page-size\">\r\n <select [formControl]=\"pageSizeControl\">\r\n <option *ngFor=\"let size of pageSizes\" [value]=\"size.value\">\r\n {{size.label}}\r\n </option>\r\n </select>\r\n rows per page\r\n </div>\r\n <div class=\"ixt-table__controls\">\r\n <button (click)=\"onPageChange(1)\" [disabled]=\"currentPage === 1\">\r\n <span class=\"material-icons\">first_page</span>\r\n </button>\r\n <button (click)=\"onPageChange(currentPage - 1)\" [disabled]=\"currentPage === 1\">\r\n <span class=\"material-icons\">chevron_left</span>\r\n </button>\r\n <button *ngFor=\"let page of visiblePages\" [class.active]=\"page === currentPage\" \r\n [class.ellipsis]=\"page === -1\" [disabled]=\"page === -1\" \r\n (click)=\"onPageChange(page)\">\r\n {{page === -1 ? '...' : page}}\r\n </button>\r\n <button (click)=\"onPageChange(currentPage + 1)\" [disabled]=\"currentPage === totalPages\">\r\n <span class=\"material-icons\">chevron_right</span>\r\n </button>\r\n <button (click)=\"onPageChange(totalPages)\" [disabled]=\"currentPage === totalPages\">\r\n <span class=\"material-icons\">last_page</span>\r\n </button>\r\n </div>\r\n </div>\r\n </div>\r\n </div>\r\n</ng-container>\r\n\r\n<!-- Custom Editor Template -->\r\n<ng-template #customEditorTpl let-editor let-row=\"row\" let-col=\"col\" let-index=\"index\" let-control=\"control\">\r\n <coordinate-editor\r\n *ngIf=\"editor?.component === CoordinateEditorComponent\"\r\n [formControl]=\"control\"\r\n [config]=\"{\r\n type: col === 'lat' ? 'lat' : 'lon'\r\n }\">\r\n </coordinate-editor>\r\n\r\n <airport-code-editor \r\n *ngIf=\"editor?.component === AirportCodeEditorComponent\"\r\n [formControl]=\"control\"\r\n [config]=\"editor.getEditConfig()\"\r\n [existingCodes]=\"getCodes(data)\">\r\n </airport-code-editor>\r\n</ng-template>\r\n\r\n<!-- No Data Template -->\r\n<ng-template #noData>\r\n <div class=\"ixt-table__empty\">\r\n No data available\r\n </div>\r\n</ng-template>", styles: [".ixt-table{border:1px solid #e2e8f0;border-radius:.5rem;overflow:auto;max-height:calc(100vh - 600px)}.ixt-table__header{display:flex;background:#f7fafc;border-bottom:1px solid #e2e8f0;font-weight:500}.ixt-table__row{display:flex;border-bottom:1px solid #e2e8f0}.ixt-table__row:hover{background:#f7fafc}.ixt-table__cell{padding:.5rem;width:150px;min-width:150px;box-sizing:border-box;border-right:1px solid #e2e8f0;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.ixt-table__cell:first-child{width:40px;min-width:40px}.ixt-table__cell--first{width:200px;min-width:200px}.ixt-table__cell--actions{width:80px;min-width:80px}.ixt-table__cell-content{display:flex;align-items:center;gap:8px;width:100%}.ixt-table__cell input,.ixt-table__cell select{width:100%;padding:4px 24px 4px 8px;border:1px solid #e2e8f0;border-radius:4px}.ixt-table__cell coordinate-editor input{padding-right:24px}.ixt-table__empty{padding:1rem;text-align:center;color:#718096}.ixt-table__footer{display:flex;justify-content:space-between;align-items:center;padding:.75rem;border-top:1px solid #e2e8f0}.ixt-table__pagination{display:flex;justify-content:space-between;align-items:center;width:100%}.ixt-table__page-size select{padding:.25rem .5rem;border:1px solid #e2e8f0;border-radius:.25rem;margin-right:1rem}.ixt-table__controls{display:flex;align-items:center;gap:.25rem}.ixt-table__controls button{padding:.25rem;min-width:2rem;height:2rem;border:none;background:none;cursor:pointer;border-radius:.25rem;color:#4169e1;display:flex;align-items:center;justify-content:center}.ixt-table__controls button:disabled{color:gray;cursor:not-allowed}.ixt-table__controls button:not(:disabled):hover{background-color:#f7fafc}.ixt-table__controls button.active{background-color:#4169e1;color:#fff}.ixt-table__controls button.ellipsis{cursor:default}.ixt-table__controls button.ellipsis:hover{background:none}.ixt-table__filter-toggle{background:none;border:none;cursor:pointer;padding:4px;color:#4169e1;display:flex;align-items:center}.ixt-table__filter-input{width:100%;padding:.25rem;border:1px solid #e2e8f0;border-radius:.25rem;font-size:.875rem}.ixt-table__filter-input:focus{outline:none;border-color:#4169e1}.ixt-table__number-filter{display:flex;gap:.25rem}.ixt-table__number-filter select{padding:.25rem;border:1px solid #e2e8f0;border-radius:.25rem}.ixt-table .material-icons{font-family:Material Icons;font-weight:400;font-style:normal;display:inline-block;line-height:1;text-transform:none;letter-spacing:normal;word-wrap:normal;white-space:nowrap;direction:ltr}.ixt-table__cell-content{display:flex;align-items:center;gap:8px}.ixt-table__cell-actions{display:flex;align-items:center;gap:4px}.ixt-table__sort-toggle,.ixt-table__filter-toggle{background:none;border:none;padding:4px;cursor:pointer;display:flex;align-items:center;justify-content:center}.ixt-table__sort-toggle:hover,.ixt-table__filter-toggle:hover{background-color:#0000000a;border-radius:4px}.ixt-table__sort-toggle .material-icons,.ixt-table__filter-toggle .material-icons{font-size:18px;color:#0000008a}.ixt-table__toolbar{display:flex;justify-content:flex-end;padding:8px}.ixt-table__save-button,.ixt-table__action-button{background:none;border:none;padding:4px;cursor:pointer}.ixt-table__save-button:disabled,.ixt-table__action-button:disabled{opacity:.5;cursor:not-allowed}.ixt-table__save-button .material-icons,.ixt-table__action-button .material-icons{font-size:18px}.ixt-table input,.ixt-table select{width:100%;padding:4px;border:1px solid #ddd;border-radius:4px}.ixt-table input:focus,.ixt-table select:focus{outline:none;border-color:#007bff}\n"] }] }], ctorParameters: function () { return [{ type: IxtDialogService }, { type: i0.ChangeDetectorRef }, { type: PaginationService }, { type: FilterService }, { type: SortService }, { type: SelectionService }, { type: EditService }]; }, propDecorators: { data: [{ type: Input }], columnConfigs: [{ type: Input }], noDataTemplate: [{ type: ViewChild, args: ['noData'] }], customEditorTpl: [{ type: ViewChild, args: ['customEditorTpl'] }] } }); class IxtTableModule { static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtTableModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); } static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "16.2.12", ngImport: i0, type: IxtTableModule, declarations: [IxtTableComponent, AirportCodeEditorComponent, CoordinateEditorComponent, BinaryEditorComponent], imports: [CommonModule, FormsModule, ReactiveFormsModule, MatIconModule, MatAutocompleteModule], exports: [IxtTableComponent] }); } static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtTableModule, imports: [CommonModule, FormsModule, ReactiveFormsModule, MatIconModule, MatAutocompleteModule] }); } } i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: IxtTableModule, decorators: [{ type: NgModule, args: [{ declarations: [ IxtTableComponent, AirportCodeEditorComponent, CoordinateEditorComponent, BinaryEditorComponent ], imports: [ CommonModule, FormsModule, ReactiveFormsModule, MatIconModule, MatAutocompleteModule ], exports: [IxtTableComponent] }] }] }); // File: src/public-api.ts /** * Generated bundle index. Do not edit. */ export { IndianHolidayCalculator, IslamicHolidayCalculator, IxtAccordianComponent, IxtAccordianModule, IxtButtonComponent, IxtButtonModule, IxtCalendarComponent, IxtCalendarModule, IxtCanvasComponent, IxtCanvasModule, IxtClazzDiagram, IxtClazzModule, IxtDeploymentDiagram, IxtDeploymentModule, IxtDiagramComponent, IxtDiagramModule, IxtDialogComponent, IxtDialogModule, IxtDialogService, IxtEbnfDiagram, IxtEbnfModule, IxtExpressionBuilderComponent, IxtExpressionBuilderModule, IxtFlowDiagram, IxtFlowModule, IxtGanntDiagram, IxtGanntModule, IxtLayerComponent, IxtLayerManagerComponent, IxtLayerManagerModule, IxtMapComponent, IxtMenuComponent, IxtMenuModule, IxtNetworkDiagram, IxtNetworkModule, IxtPanelComponent, IxtPanelModule, IxtSankeyDiagram, IxtSankeyModule, IxtSplitPaneComponent, IxtSplitPaneModule, IxtTabComponent, IxtTableComponent, IxtTableModule, IxtTabsetComponent, IxtTabsetModule, IxtTreeComponent, IxtTreeModule, IxtViewportComponent, IxtViewportModule, IxtWireframeDiagram, IxtWireframeModule, USAHolidayCalculator, baseThemeColors, unitedThemeColors }; //# sourceMappingURL=dvanauken-ixtlan.mjs.map
|       |   --- dvanauken-ixtlan.mjs.map: {"version":3,"file":"dvanauken-ixtlan.mjs","sources":["../../../src/components/theme/theme.colors.ts","../../../src/components/ixt-button/ixt-button.component.ts","../../../src/components/ixt-button/ixt-button.module.ts","../../../src/components/ixt-button/ixt-button.index.ts","../../../src/components/ixt-dialog/ixt-dialog.component.ts","../../../src/components/ixt-dialog/ixt-dialog.component.html","../../../src/components/ixt-dialog/types/success/ixt-success-dialog.component.ts","../../../src/components/ixt-dialog/types/success/ixt-success-dialog.component.html","../../../src/components/ixt-dialog/ixt-dialog.service.ts","../../../src/components/ixt-dialog/ixt-dialog.module.ts","../../../src/components/ixt-tabset/ixt-tab.component.ts","../../../src/components/ixt-tabset/ixt-tab.component.html","../../../src/components/ixt-tabset/ixt-tabset.component.ts","../../../src/components/ixt-tabset/ixt-tabset.component.html","../../../src/components/ixt-tabset/ixt-tabset.module.ts","../../../src/components/ixt-panel/ixt-panel.component.ts","../../../src/components/ixt-panel/ixt-panel.component.html","../../../src/components/ixt-panel/ixt-panel.module.ts","../../../src/components/ixt-menu/ixt-menu.component.ts","../../../src/components/ixt-menu/ixt-menu.component.html","../../../src/components/ixt-menu/ixt-menu.module.ts","../../../src/components/ixt-menu/ixt-menu.index.ts","../../../src/components/ixt-tree/ixt-tree.component.ts","../../../src/components/ixt-tree/ixt-tree.component.html","../../../src/components/ixt-tree/ixt-tree.module.ts","../../../src/components/ixt-tree/ixt-tree.index.ts","../../../src/components/ixt-accordian/ixt-accordian.component.ts","../../../src/components/ixt-accordian/ixt-accordian.component.html","../../../src/components/ixt-accordian/ixt-accordian.module.ts","../../../src/components/ixt-accordian/ixt-accordian.index.ts","../../../src/components/ixt-canvas/ixt-canvas.component.ts","../../../src/components/ixt-canvas/ixt-canvas.component.html","../../../src/components/ixt-canvas/ixt-canvas.module.ts","../../../src/components/ixt-canvas/ixt-canvas.index.ts","../../../src/components/ixt-viewport/ixt-viewport.component.ts","../../../src/components/ixt-viewport/ixt-viewport.component.html","../../../src/components/ixt-viewport/ixt-viewport.module.ts","../../../src/components/ixt-viewport/ixt-viewport.index.ts","../../../src/components/ixt-expression-builder/ixt-expression-builder.component.ts","../../../src/components/ixt-expression-builder/ixt-expression-builder.component.html","../../../src/components/ixt-expression-builder/ixt-expression-builder.module.ts","../../../src/components/ixt-expression-builder/ixt-expression-builder.index.ts","../../../src/components/ixt-diagram/ixt-diagram.component.ts","../../../src/components/ixt-diagram/ixt-diagram.module.ts","../../../src/components/ixt-diagram/ixt-diagram.index.ts","../../../src/components/ixt-diagram/types/clazz/ixt-clazz.diagram.ts","../../../src/components/ixt-diagram/types/clazz/ixt-clazz.module.ts","../../../src/components/ixt-diagram/types/clazz/ixt-clazz.index.ts","../../../src/components/ixt-diagram/types/deployment/ixt-deployment.diagram.ts","../../../src/components/ixt-diagram/types/deployment/ixt-deployment.module.ts","../../../src/components/ixt-diagram/types/deployment/ixt-deployment.index.ts","../../../src/components/ixt-diagram/types/EBNF/ixt-ebnf.diagram.ts","../../../src/components/ixt-diagram/types/EBNF/ixt-ebnf.module.ts","../../../src/components/ixt-diagram/types/EBNF/ixt-ebnf.types.ts","../../../src/components/ixt-diagram/types/EBNF/ixt.ebnf.index.ts","../../../src/components/ixt-diagram/types/flow/ixt-flow.diagram.ts","../../../src/components/ixt-diagram/types/flow/ixt-flow.module.ts","../../../src/components/ixt-diagram/types/flow/ixt-flow.index.ts","../../../src/components/ixt-diagram/types/gannt/gannt.diagram.ts","../../../src/components/ixt-diagram/types/gannt/gannt.module.ts","../../../src/components/ixt-diagram/types/gannt/gannt.index.ts","../../../src/components/ixt-diagram/types/network/ixt-network.diagram.ts","../../../src/components/ixt-diagram/types/network/ixt-network.module.ts","../../../src/components/ixt-diagram/types/network/ixt-network.index.ts","../../../src/components/ixt-diagram/types/sankey/ixt-sankey.diagram.ts","../../../src/components/ixt-diagram/types/sankey/ixt-sankey.module.ts","../../../src/components/ixt-diagram/types/sankey/ixt-sankey.index.ts","../../../src/components/ixt-diagram/types/wireframe/ixt-wireframe.diagram.ts","../../../src/components/ixt-diagram/types/wireframe/ixt-wireframe.module.ts","../../../src/components/ixt-diagram/types/wireframe/ixt-wireframe.index.ts","../../../src/components/ixt-layer-manager/ixt-layer-manager.component.ts","../../../src/components/ixt-layer-manager/ixt-layer-manager.component.html","../../../src/components/ixt-layer-manager/ixt-layer-manager.module.ts","../../../src/components/ixt-layer-manager/ixt-layer-manager.index.ts","../../../src/components/ixt-calendar/models/holiday-calculator.ts","../../../src/components/ixt-calendar/calculators/usa-holidays.ts","../../../src/components/ixt-calendar/calculators/indian-holidays.ts","../../../src/components/ixt-calendar/calculators/islamic-holidays.ts","../../../src/components/ixt-calendar/ixt-calendar.component.ts","../../../src/components/ixt-calendar/ixt-calendar.component.html","../../../src/components/ixt-calendar/ixt-calendar.module.ts","../../../src/components/ixt-calendar/ixt-calendar.index.ts","../../../src/components/ixt-map/geo-processing.service.ts","../../../src/components/ixt-map/map-error.service.ts","../../../src/components/ixt-map/map.service.ts","../../../src/components/ixt-map/layer-render.service.ts","../../../src/components/ixt-map/layer-event.service.ts","../../../src/components/ixt-map/layer-state.service.ts","../../../src/components/ixt-map/ixt-layer.component.ts","../../../src/components/ixt-map/ixt-map.component.ts","../../../src/components/ixt-map/ixt-map.index.ts","../../../src/components/ixt-splitpane/ixt-split-pane.component.ts","../../../src/components/ixt-splitpane/ixt-split-pane.module.ts","../../../src/components/ixt-splitpane/index.ts","../../../src/components/ixt-table/editors/airport-code/airport-code-editor.component.ts","../../../src/components/ixt-table/editors/binary-editor/binary-editor.component.ts","../../../src/components/ixt-table/editors/coordinate/coordinate-editor.component.ts","../../../src/components/ixt-table/ixt-table.index.ts","../../../src/components/ixt-table/services/pagination.service.ts","../../../src/components/ixt-table/services/filter/filter.service.ts","../../../src/components/ixt-table/services/sort/sort.service.ts","../../../src/components/ixt-table/services/selection/selection.service.ts","../../../src/components/ixt-table/services/edit/edit.service.ts","../../../src/components/ixt-table/ixt-table.component.ts","../../../src/components/ixt-table/ixt-table.component.html","../../../src/components/ixt-table/ixt-table.module.ts","../../../src/public-api.ts","../../../src/dvanauken-ixtlan.ts"],"sourcesContent":["import { ThemeColors } from \"./theme.types\";\r\n\r\n// src/app/theme/theme.colors.ts\r\nexport const baseThemeColors: ThemeColors = {\r\n primary: {\r\n base: '#4169E1', // Royal Blue\r\n hover: '#2850c9',\r\n active: '#1e40af',\r\n text: '#ffffff'\r\n },\r\n secondary: {\r\n base: '#6c757d',\r\n hover: '#5c636a',\r\n active: '#4d5154',\r\n text: '#ffffff'\r\n },\r\n tertiary: {\r\n base: '#003057', // Rhapsody Blue (Pantone 289)\r\n hover: '#002649', // Darker shade for hover state\r\n active: '#001C3B', // Even darker shade for active state\r\n text: '#FFFFFF' // White text for contrast\r\n },\r\n success: {\r\n base: '#28a745',\r\n hover: '#218838',\r\n active: '#1e7e34',\r\n text: '#ffffff'\r\n },\r\n danger: {\r\n base: '#dc3545',\r\n hover: '#c82333',\r\n active: '#bd2130',\r\n text: '#ffffff'\r\n },\r\n warning: {\r\n base: '#ffc107',\r\n hover: '#e0a800',\r\n active: '#d39e00',\r\n text: '#000000'\r\n },\r\n info: {\r\n base: '#17a2b8',\r\n hover: '#138496',\r\n active: '#117a8b',\r\n text: '#ffffff'\r\n },\r\n light: {\r\n base: '#f8f9fa',\r\n hover: '#e2e6ea',\r\n active: '#dae0e5',\r\n text: '#000000'\r\n },\r\n dark: {\r\n base: '#343a40',\r\n hover: '#23272b',\r\n active: '#1d2124',\r\n text: '#ffffff'\r\n },\r\n default: {\r\n base: '#ffffff',\r\n hover: '#f8f9fa',\r\n active: '#e9ecef',\r\n text: '#000000'\r\n }\r\n};\r\n\r\n\r\n\r\n// src/app/theme/theme.colors.ts\r\nexport const unitedThemeColors: ThemeColors = {\r\n primary: {\r\n base: '#0033A0', // United Blue\r\n hover: '#00297A', // Darker shade for hover state\r\n active: '#002060', // Even darker shade for active state\r\n text: '#FFFFFF' // White text for contrast\r\n },\r\n secondary: {\r\n base: '#6D2077', // Atlantic Amethyst\r\n hover: '#5A1A63', // Darker shade for hover state\r\n active: '#48154F', // Even darker shade for active state\r\n text: '#FFFFFF' // White text for contrast\r\n },\r\n tertiary: {\r\n base: '#003057', // Rhapsody Blue (Pantone 289)\r\n hover: '#002649', // Darker shade for hover state\r\n active: '#001C3B', // Even darker shade for active state\r\n text: '#FFFFFF' // White text for contrast\r\n },\r\n success: {\r\n base: '#4CAF50', // Subtle green\r\n hover: '#43A047', // Darker shade for hover state\r\n active: '#388E3C', // Even darker shade for active state\r\n text: '#FFFFFF' // White text for contrast\r\n },\r\n warning: {\r\n base: '#FF9800', // Warm yellow-orange\r\n hover: '#FB8C00', // Darker shade for hover state\r\n active: '#F57C00', // Even darker shade for active state\r\n text: '#000000' // Black text for readability\r\n },\r\n danger: {\r\n base: '#E53935', // Tomato red\r\n hover: '#D32F2F', // Darker shade for hover state\r\n active: '#C62828', // Even darker shade for active state\r\n text: '#FFFFFF' // White text for contrast\r\n },\r\n info: {\r\n base: '#17A2B8', // Standard info blue\r\n hover: '#138496', // Darker shade for hover state\r\n active: '#117A8B', // Even darker shade for active state\r\n text: '#FFFFFF' // White text for contrast\r\n },\r\n light: {\r\n base: '#F8F9FA', // Light gray\r\n hover: '#E2E6EA', // Darker shade for hover state\r\n active: '#DAE0E5', // Even darker shade for active state\r\n text: '#000000' // Black text for readability\r\n },\r\n dark: {\r\n base: '#343A40', // Dark gray\r\n hover: '#23272B', // Darker shade for hover state\r\n active: '#1D2124', // Even darker shade for active state\r\n text: '#FFFFFF' // White text for contrast\r\n },\r\n default: {\r\n base: '#FFFFFF', // White\r\n hover: '#F8F9FA', // Light gray for hover state\r\n active: '#E9ECEF', // Darker gray for active state\r\n text: '#000000' // Black text for readability\r\n }\r\n};\r\n\r\n","// button.component.ts\r\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { baseThemeColors } from '../theme/theme.colors';\r\nimport { ThemeVariant, ThemeColors } from '../theme/theme.types';\r\n\r\nexport type ButtonSize = 'sm' | 'md' | 'lg';\r\n\r\n@Component({\r\n selector: 'ixt-button',\r\n template: `\r\n <button\r\n [attr.type]=\"type\"\r\n [disabled]=\"disabled\"\r\n [ngStyle]=\"buttonStyles\"\r\n (click)=\"onClick.emit($event)\"\r\n (mouseenter)=\"isHovered = true\"\r\n (mouseleave)=\"isHovered = false\"\r\n (mousedown)=\"isActive = true\"\r\n (mouseup)=\"isActive = false\"\r\n (blur)=\"isActive = false; isHovered = false\"\r\n >\r\n <ng-content select=\"[prefix]\"></ng-content>\r\n <ng-content></ng-content>\r\n <ng-content select=\"[suffix]\"></ng-content>\r\n </button>\r\n `,\r\n styles: [`\r\n :host {\r\n display: inline-block;\r\n }\r\n\r\n button {\r\n font-family: inherit;\r\n border: none;\r\n border-radius: 4px;\r\n cursor: pointer;\r\n display: inline-flex;\r\n align-items: center;\r\n gap: 0.5rem;\r\n padding: 0.5rem 1rem;\r\n transition: background-color 0.2s, opacity 0.2s;\r\n \r\n &:disabled {\r\n cursor: not-allowed;\r\n opacity: 0.65;\r\n }\r\n }\r\n `]\r\n})\r\nexport class IxtButtonComponent {\r\n @Input() variant: ThemeVariant = 'primary';\r\n @Input() size: ButtonSize = 'md';\r\n @Input() disabled = false;\r\n @Input() type: 'button' | 'submit' | 'reset' = 'button';\r\n @Input() theme: ThemeColors = baseThemeColors;\r\n @Output() onClick = new EventEmitter<MouseEvent>();\r\n\r\n protected isHovered = false;\r\n protected isActive = false;\r\n\r\n protected get buttonStyles(): Record<string, string> {\r\n const variantColors = this.theme[this.variant];\r\n \r\n let backgroundColor = variantColors.base;\r\n if (this.isActive) {\r\n backgroundColor = variantColors.active;\r\n } else if (this.isHovered) {\r\n backgroundColor = variantColors.hover;\r\n }\r\n\r\n const padding = {\r\n sm: '0.25rem 0.5rem',\r\n md: '0.5rem 1rem',\r\n lg: '0.75rem 1.5rem'\r\n }[this.size];\r\n\r\n const fontSize = {\r\n sm: '0.875rem',\r\n md: '1rem',\r\n lg: '1.125rem'\r\n }[this.size];\r\n\r\n return {\r\n backgroundColor,\r\n color: variantColors.text,\r\n padding,\r\n fontSize\r\n };\r\n }\r\n}","// ixt-button.module.ts\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { IxtButtonComponent } from './ixt-button.component';\r\n\r\n@NgModule({\r\n declarations: [IxtButtonComponent],\r\n imports: [\r\n CommonModule,\r\n MatButtonModule,\r\n MatIconModule,\r\n ],\r\n exports: [IxtButtonComponent]\r\n})\r\nexport class IxtButtonModule { }","// index.ts\r\nexport { IxtButtonComponent } from './ixt-button.component';\r\nexport { IxtButtonModule } from './ixt-button.module';\r\nexport type { ButtonSize } from './ixt-button.component';\r\n\r\n","import { Component, ViewChild, ElementRef, Input, Output, EventEmitter, ViewContainerRef, ComponentFactoryResolver, Type, AfterViewInit } from '@angular/core';\r\nimport { baseThemeColors } from './../theme/theme.colors';\r\nimport { ThemeVariant, ThemeColors } from './../theme/theme.types';\r\n\r\n@Component({\r\n selector: 'ixt-dialog',\r\n templateUrl: './ixt-dialog.component.html',\r\n styleUrls: ['./ixt-dialog.component.scss']\r\n})\r\nexport class IxtDialogComponent {\r\n @ViewChild('dialog') public dialog!: ElementRef<HTMLDialogElement>;\r\n @ViewChild('contentHost', { read: ViewContainerRef, static: true }) contentHost!: ViewContainerRef;\r\n @Input() modal: boolean = true;\r\n @Input() title: string = '';\r\n @Input() variant: ThemeVariant = 'primary';\r\n @Input() theme: ThemeColors = baseThemeColors;\r\n @Output() close = new EventEmitter<boolean>();\r\n\r\n constructor() {}\r\n\r\n open() {\r\n if (this.modal) {\r\n this.dialog.nativeElement.showModal();\r\n } else {\r\n this.dialog.nativeElement.show();\r\n }\r\n }\r\n\r\n closeDialog(result: boolean) {\r\n this.dialog.nativeElement.close();\r\n this.close.emit(result);\r\n }\r\n\r\n get themeStyles() {\r\n const colors = this.theme[this.variant];\r\n return {\r\n 'background-color': colors.base,\r\n 'color': colors.text,\r\n '--theme-hover': colors.hover,\r\n '--theme-active': colors.active,\r\n '--theme-text': colors.text\r\n\r\n };\r\n }\r\n}","<dialog #dialog role=\"dialog\" [ngStyle]=\"themeStyles\">\r\n <div role=\"document\">\r\n <header>\r\n <h2>{{ title }}</h2>\r\n </header>\r\n <section>\r\n <ng-template #contentHost></ng-template>\r\n </section>\r\n <footer>\r\n <button type=\"button\" (click)=\"closeDialog(false)\">Cancel</button>\r\n <button type=\"button\" (click)=\"closeDialog(true)\">OK</button>\r\n </footer>\r\n </div>\r\n</dialog>","// ixt-success-dialog.component.ts\r\nimport { Component, Input } from '@angular/core';\r\nimport { ThemeColors, ThemeVariant } from '../../../theme/theme.types';\r\nimport { baseThemeColors } from '../../../theme/theme.colors';\r\n\r\n@Component({\r\n selector: 'ixt-success-dialog',\r\n templateUrl: './ixt-success-dialog.component.html',\r\n styleUrls: ['./ixt-success-dialog.component.scss']\r\n})\r\nexport class SuccessDialogComponent {\r\n @Input() message?: string;\r\n @Input() variant: ThemeVariant = 'success';\r\n @Input() theme: ThemeColors = baseThemeColors;\r\n\r\n get themeStyles() {\r\n const colors = this.theme[this.variant];\r\n return {\r\n 'background-color': `${colors.base}15`, // 15% opacity\r\n 'color': '#0f0', //colors.base,\r\n 'border-color': colors.base\r\n };\r\n }\r\n}","<div role=\"alert\">\r\n <p>{{ message || 'Operation completed successfully!' }}</p>\r\n</div>","// ixt-dialog.service.ts\r\nimport { ApplicationRef, ComponentFactoryResolver, ComponentRef, Injectable, Injector, Type, createComponent } from '@angular/core';\r\nimport { IxtDialogComponent } from './ixt-dialog.component';\r\nimport { firstValueFrom } from 'rxjs';\r\nimport { SuccessDialogComponent } from './types/success/ixt-success-dialog.component';\r\n\r\n@Injectable({\r\n providedIn: 'root'\r\n})\r\nexport class IxtDialogService {\r\n private dialogComponentRef!: ComponentRef<IxtDialogComponent>;\r\n\r\n constructor(\r\n private componentFactoryResolver: ComponentFactoryResolver,\r\n private appRef: ApplicationRef,\r\n private injector: Injector\r\n ) { }\r\n\r\n // async openDialog(component: Type<any>, title: string, message: string, modal: boolean = true): Promise<boolean> {\r\n // this.dialogComponentRef = this.componentFactoryResolver\r\n // .resolveComponentFactory(IxtDialogComponent)\r\n // .create(this.injector);\r\n\r\n // const instance = this.dialogComponentRef.instance;\r\n // instance.title = title;\r\n // instance.modal = modal;\r\n\r\n // this.appRef.attachView(this.dialogComponentRef.hostView);\r\n // const domElem = (this.dialogComponentRef.hostView as any).rootNodes[0];\r\n // document.body.appendChild(domElem);\r\n\r\n // // Allow time for component initialization\r\n // await new Promise(resolve => requestAnimationFrame(resolve));\r\n\r\n // // Just create once and set message\r\n // const contentComponent = instance.contentHost.createComponent(component);\r\n // contentComponent.instance.message = message;\r\n // instance.open();\r\n\r\n // // Wait for dialog result\r\n // const result = await firstValueFrom(instance.close);\r\n // document.body.removeChild(domElem);\r\n // this.appRef.detachView(this.dialogComponentRef.hostView);\r\n // this.dialogComponentRef.destroy();\r\n // return result;\r\n // }\r\n\r\n async openDialog(component: Type<any>, title: string, message: string, modal: boolean = true): Promise<boolean> {\r\n this.dialogComponentRef = this.componentFactoryResolver\r\n .resolveComponentFactory(IxtDialogComponent)\r\n .create(this.injector);\r\n \r\n const instance = this.dialogComponentRef.instance;\r\n instance.title = title;\r\n instance.modal = modal;\r\n \r\n this.appRef.attachView(this.dialogComponentRef.hostView);\r\n const domElem = (this.dialogComponentRef.hostView as any).rootNodes[0];\r\n document.body.appendChild(domElem);\r\n \r\n // Ensure ViewContainerRef is ready\r\n await new Promise(resolve => requestAnimationFrame(resolve));\r\n \r\n // Clear any existing content\r\n instance.contentHost.clear();\r\n // Create the component in the ViewContainerRef\r\n const contentComponentRef = instance.contentHost.createComponent(component);\r\n contentComponentRef.instance.message = message;\r\n \r\n instance.open();\r\n \r\n const result = await firstValueFrom(instance.close);\r\n document.body.removeChild(domElem);\r\n this.appRef.detachView(this.dialogComponentRef.hostView);\r\n this.dialogComponentRef.destroy();\r\n return result;\r\n }\r\n \r\n \r\n // async openDialog(component: Type<any>, title: string, message: string, modal: boolean = true): Promise<boolean> {\r\n // // Dynamically create the dialog component\r\n // this.dialogComponentRef = this.componentFactoryResolver\r\n // .resolveComponentFactory(IxtDialogComponent)\r\n // .create(this.injector);\r\n \r\n // // Attach the component to the view\r\n // this.appRef.attachView(this.dialogComponentRef.hostView);\r\n \r\n // // Append the component to the DOM\r\n // const componentElement = (this.dialogComponentRef.hostView as any).rootNodes[0];\r\n // document.body.appendChild(componentElement);\r\n \r\n // // Set inputs on the dialog component\r\n // const instance = this.dialogComponentRef.instance;\r\n // instance.title = title;\r\n // instance.message = message; // Set message input\r\n // instance.modal = modal;\r\n \r\n // // Open the dialog\r\n // instance.open();\r\n \r\n // // Return a promise that resolves when the dialog emits `close`\r\n // return firstValueFrom(instance.close);\r\n // }\r\n \r\n\r\n closeDialog(result: boolean): void {\r\n if (this.dialogComponentRef) {\r\n this.dialogComponentRef.instance.closeDialog(result);\r\n }\r\n }\r\n\r\n // async success(message: string, title: string): Promise<boolean> {\r\n // return await this.openDialog(SuccessDialogComponent, title, true);\r\n // }\r\n\r\n // async success(message: string, title: string): Promise<boolean> {\r\n // const dialogRef = this.componentFactoryResolver\r\n // .resolveComponentFactory(SuccessDialogComponent)\r\n // .create(this.injector);\r\n\r\n // // Set the message before creating dialog\r\n // dialogRef.instance.message = message;\r\n\r\n // return await this.openDialog(SuccessDialogComponent, message, title, true);\r\n // }\r\n\r\n async success(message: string, title: string): Promise<boolean> {\r\n return await this.openDialog(SuccessDialogComponent, title, message, true);\r\n }\r\n\r\n}","// ixt-dialog.module.ts\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { IxtDialogComponent } from './ixt-dialog.component';\r\nimport { IxtDialogService } from './ixt-dialog.service'; // Add this\r\nimport { FormsModule } from '@angular/forms';\r\nimport { SuccessDialogComponent } from './types/success/ixt-success-dialog.component';\r\n\r\n@NgModule({\r\n declarations: [\r\n IxtDialogComponent,\r\n SuccessDialogComponent // Add this\r\n\r\n ],\r\n imports: [\r\n CommonModule,\r\n MatButtonModule,\r\n MatIconModule,\r\n FormsModule\r\n ],\r\n exports: [IxtDialogComponent],\r\n providers: [IxtDialogService] // Add this\r\n})\r\nexport class IxtDialogModule { }","import { Component, Input, TemplateRef, ViewChild } from '@angular/core';\r\n\r\n@Component({\r\n selector: 'ixt-tab',\r\n templateUrl: './ixt-tab.component.html',\r\n styleUrls: ['./ixt-tab.component.scss']\r\n})\r\nexport class IxtTabComponent {\r\n @Input() title: string = '';\r\n @ViewChild(TemplateRef, { static: true }) implicitContent!: TemplateRef<any>;\r\n}\r\n","<ng-template>\r\n <ng-content></ng-content>\r\n</ng-template>\r\n","import { Component, ContentChildren, QueryList, AfterContentInit } from '@angular/core';\r\nimport { IxtTabComponent } from './ixt-tab.component';\r\n\r\n@Component({\r\n selector: 'ixt-tabset',\r\n templateUrl: './ixt-tabset.component.html',\r\n styleUrls: ['./ixt-tabset.component.scss']\r\n})\r\nexport class IxtTabsetComponent implements AfterContentInit {\r\n @ContentChildren(IxtTabComponent) tabs!: QueryList<IxtTabComponent>;\r\n\r\n selectedIndex: number = 0;\r\n notificationText: string = 'Content Band Icons or Info';\r\n\r\n ngAfterContentInit() {\r\n // Set initial active tab if there are tabs\r\n if (this.tabs?.first) {\r\n this.selectTab(this.tabs.first);\r\n }\r\n\r\n // Listen for dynamic tab changes\r\n this.tabs?.changes.subscribe(() => {\r\n if (this.tabs.length && this.selectedIndex >= this.tabs.length) {\r\n this.selectTab(this.tabs.last);\r\n }\r\n });\r\n }\r\n\r\n selectTab(tab: IxtTabComponent) {\r\n this.selectedIndex = this.tabs.toArray().indexOf(tab);\r\n }\r\n}\r\n","<div class=\"button-row\">\r\n <button *ngFor=\"let tab of tabs; let idx = index\"\r\n [class.selected]=\"selectedIndex === idx\"\r\n (click)=\"selectTab(tab)\">\r\n {{ tab.title }}\r\n </button>\r\n</div>\r\n<div class=\"content\">\r\n <div class=\"top-band\">\r\n <span>🔔</span>\r\n <span>{{ notificationText }}</span>\r\n </div>\r\n <div *ngFor=\"let tab of tabs; let idx = index\"\r\n [id]=\"'tab' + (idx + 1)\"\r\n class=\"main-content\"\r\n [class.active]=\"selectedIndex === idx\">\r\n <ng-container *ngTemplateOutlet=\"tab.implicitContent\"></ng-container>\r\n </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { IxtTabsetComponent } from './ixt-tabset.component';\r\nimport { IxtTabComponent } from './ixt-tab.component'; // Updated path\r\n\r\n@NgModule({\r\n declarations: [\r\n IxtTabsetComponent,\r\n IxtTabComponent\r\n ],\r\n imports: [\r\n CommonModule\r\n ],\r\n exports: [\r\n IxtTabsetComponent,\r\n IxtTabComponent\r\n ]\r\n})\r\nexport class IxtTabsetModule { }\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n selector: 'ixt-panel',\r\n templateUrl: './ixt-panel.component.html',\r\n styleUrls: ['./ixt-panel.component.scss']\r\n})\r\nexport class IxtPanelComponent {\r\n @Input() title?: string;\r\n @Input() caption?: string;\r\n @Input() padding = true;\r\n @Input() bordered = true;\r\n @Input() elevated = false;\r\n}","<div class=\"ixt-panel\" [class.bordered]=\"bordered\" [class.elevated]=\"elevated\">\r\n <div class=\"panel-title\" *ngIf=\"title\">\r\n {{ title }}\r\n </div>\r\n \r\n <div class=\"panel-content\" [class.with-padding]=\"padding\">\r\n <ng-content></ng-content>\r\n </div>\r\n \r\n <div class=\"panel-caption\" *ngIf=\"caption\">\r\n {{ caption }}\r\n </div>\r\n </div>\r\n ","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { IxtPanelComponent } from './ixt-panel.component';\r\n\r\n@NgModule({\r\n declarations: [\r\n IxtPanelComponent\r\n ],\r\n imports: [\r\n CommonModule,\r\n FormsModule\r\n ],\r\n exports: [\r\n IxtPanelComponent\r\n ]\r\n})\r\nexport class IxtPanelModule { }\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { baseThemeColors, unitedThemeColors } from '../theme/theme.colors';\r\nimport { ThemeVariant, ThemeColors } from '../theme/theme.types';\r\n\r\ninterface MenuItem {\r\n name: string;\r\n link: string;\r\n}\r\n\r\ninterface MenuConfig {\r\n items: MenuItem[];\r\n}\r\n\r\n@Component({\r\n selector: 'ixt-menu',\r\n templateUrl: './ixt-menu.component.html',\r\n styleUrls: ['./ixt-menu.component.scss']\r\n})\r\nexport class IxtMenuComponent implements OnInit {\r\n @Input() linkAlignment: string = 'start';\r\n @Input() src: string = '';\r\n @Input() brandName: string = '';\r\n @Input() brandLogo?: string;\r\n @Input() brandLink: string = '/';\r\n @Input() showSearch: boolean = false;\r\n @Input() searchPlaceholder: string = 'Search...';\r\n \r\n // Theme inputs\r\n @Input() variant: ThemeVariant = 'tertiary';\r\n @Input() theme: ThemeColors = unitedThemeColors;\r\n \r\n @Output() searchSubmitted = new EventEmitter<string>();\r\n\r\n menuItems: MenuItem[] = [];\r\n searchTerm: string = '';\r\n\r\n get themeStyles() {\r\n const colors = this.theme[this.variant];\r\n return {\r\n 'background-color': colors.base,\r\n 'color': colors.text,\r\n '--theme-hover': colors.hover,\r\n '--theme-active': colors.active\r\n };\r\n }\r\n\r\n constructor(private http: HttpClient) { }\r\n\r\n ngOnInit(): void {\r\n if (this.src) {\r\n this.loadMenu();\r\n }\r\n }\r\n\r\n loadMenu() {\r\n this.http.get<MenuConfig>(this.src).subscribe({\r\n next: (data) => {\r\n this.menuItems = data.items;\r\n },\r\n error: (error) => {\r\n console.error('Error loading menu:', error);\r\n }\r\n });\r\n }\r\n\r\n onSearch(event: Event) {\r\n event.preventDefault();\r\n if (this.searchTerm.trim()) {\r\n this.searchSubmitted.emit(this.searchTerm);\r\n }\r\n }\r\n}","<nav class=\"navbar\" [ngStyle]=\"themeStyles\" fxLayout=\"row\" fxLayoutAlign=\"start center\" fxFill>\r\n <div class=\"navbar-brand\" fxFlex=\"none\">\r\n <a [routerLink]=\"brandLink\" class=\"brand-link\">\r\n <img *ngIf=\"brandLogo\" [src]=\"brandLogo\" alt=\"Brand Logo\" class=\"brand-logo\">\r\n <span class=\"brand-name\">{{ brandName }}</span>\r\n </a>\r\n </div>\r\n\r\n <div class=\"nav-items\">\r\n <a *ngFor=\"let item of menuItems\" \r\n [routerLink]=\"item.link\" \r\n class=\"nav-link\">\r\n {{ item.name }}\r\n </a>\r\n </div>\r\n\r\n <div *ngIf=\"showSearch\" fxFlex=\"none\" class=\"search-container\">\r\n <form (ngSubmit)=\"onSearch($event)\" class=\"search-form\">\r\n <div class=\"input-group\">\r\n <input type=\"text\" \r\n [(ngModel)]=\"searchTerm\"\r\n name=\"search\"\r\n [placeholder]=\"searchPlaceholder\"\r\n class=\"form-control\">\r\n <button type=\"submit\" class=\"btn\">\r\n Search\r\n </button>\r\n </div>\r\n </form>\r\n </div>\r\n</nav>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { IxtMenuComponent } from './ixt-menu.component';\r\n\r\n@NgModule({\r\n declarations: [\r\n IxtMenuComponent\r\n ],\r\n imports: [\r\n CommonModule,\r\n FormsModule,\r\n RouterModule\r\n ],\r\n exports: [\r\n IxtMenuComponent\r\n ]\r\n})\r\nexport class IxtMenuModule { }","// ixt-menu.index.ts\r\nexport * from './ixt-menu.component';\r\nexport * from './ixt-menu.module';\r\n\r\nexport interface MenuItem {\r\n name: string;\r\n link: string;\r\n}\r\n\r\nexport interface MenuConfig {\r\n items: MenuItem[];\r\n brandName?: string;\r\n brandLogo?: string;\r\n brandLink?: string;\r\n showSearch?: boolean;\r\n searchPlaceholder?: string;\r\n linkAlignment?: 'start' | 'center' | 'end';\r\n}","// ixt-tree.component.ts\r\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\nexport interface TreeNode {\r\n id: string;\r\n label: string;\r\n expanded?: boolean;\r\n children?: TreeNode[];\r\n isLeaf?: boolean;\r\n}\r\n\r\n@Component({\r\n selector: 'ixt-tree',\r\n templateUrl: './ixt-tree.component.html',\r\n styleUrls: ['./ixt-tree.component.scss']\r\n})\r\nexport class IxtTreeComponent {\r\n @Input() nodes: TreeNode[] = [];\r\n @Output() nodeExpanded = new EventEmitter<TreeNode>();\r\n @Output() nodeCollapsed = new EventEmitter<TreeNode>();\r\n @Output() nodeSelected = new EventEmitter<TreeNode>();\r\n\r\n toggleNode(node: TreeNode, event: Event): void {\r\n event.stopPropagation();\r\n\r\n if (node.children && node.children.length > 0) {\r\n node.expanded = !node.expanded;\r\n if (node.expanded) {\r\n this.nodeExpanded.emit(node);\r\n } else {\r\n this.nodeCollapsed.emit(node);\r\n }\r\n }\r\n }\r\n\r\n selectNode(node: TreeNode, event: Event): void {\r\n event.stopPropagation();\r\n this.nodeSelected.emit(node);\r\n }\r\n\r\n trackByFn(index: number, item: TreeNode): string {\r\n return item.id;\r\n }\r\n}\r\n\r\n","<ul class=\"tree-container\">\r\n <ng-container *ngFor=\"let node of nodes; trackBy: trackByFn\">\r\n <li class=\"tree-node\" (click)=\"selectNode(node, $event)\">\r\n <div class=\"node-content\">\r\n <span class=\"icon-container\" (click)=\"toggleNode(node, $event)\">\r\n <ng-container *ngIf=\"node.children && node.children.length > 0\">\r\n <span class=\"expand-icon\" [class.expanded]=\"node.expanded\">\r\n {{node.expanded ? '▼' : '▶'}}\r\n </span>\r\n </ng-container>\r\n <span class=\"node-icon\">\r\n {{(node.children && node.children.length > 0) ? '📁' : '📄'}}\r\n </span>\r\n </span>\r\n <span class=\"node-label\">{{node.label}}</span>\r\n </div>\r\n <ul *ngIf=\"node.expanded && node.children\" class=\"tree-children\">\r\n <ixt-tree\r\n [nodes]=\"node.children\"\r\n (nodeExpanded)=\"nodeExpanded.emit($event)\"\r\n (nodeCollapsed)=\"nodeCollapsed.emit($event)\"\r\n (nodeSelected)=\"nodeSelected.emit($event)\">\r\n </ixt-tree>\r\n </ul>\r\n </li>\r\n </ng-container>\r\n</ul>\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { IxtTreeComponent } from './ixt-tree.component';\r\n\r\n@NgModule({\r\n declarations: [\r\n IxtTreeComponent\r\n ],\r\n imports: [\r\n CommonModule,\r\n FormsModule\r\n ],\r\n exports: [\r\n IxtTreeComponent\r\n ]\r\n})\r\nexport class IxtTreeModule { }\r\n","// ixt-tree.index.ts\r\nexport * from './ixt-tree.component';\r\nexport * from './ixt-tree.module';\r\n\r\nexport interface TreeNode {\r\n id: string;\r\n label: string;\r\n expanded?: boolean;\r\n children?: TreeNode[];\r\n isLeaf?: boolean;\r\n}","// ixt-accordian.component.ts\r\nimport { Component, Input } from '@angular/core';\r\nimport { animate, state, style, transition, trigger } from '@angular/animations';\r\n\r\nexport interface AccordionPanel {\r\n title: string;\r\n content: string;\r\n isOpen?: boolean;\r\n}\r\n\r\n@Component({\r\n selector: 'ixt-accordian',\r\n templateUrl: './ixt-accordian.component.html',\r\n styleUrls: ['./ixt-accordian.component.scss'],\r\n animations: [\r\n trigger('slideInOut', [\r\n state('open', style({\r\n height: '*',\r\n opacity: 1\r\n })),\r\n state('closed', style({\r\n height: '0',\r\n opacity: 0\r\n })),\r\n transition('closed <=> open', [\r\n animate('200ms ease-in-out')\r\n ])\r\n ])\r\n ]\r\n})\r\nexport class IxtAccordianComponent {\r\n @Input() panels: AccordionPanel[] = [];\r\n @Input() allowMultiple = false;\r\n\r\n togglePanel(index: number): void {\r\n if (!this.allowMultiple) {\r\n this.panels.forEach((panel, i) => {\r\n if (i !== index) panel.isOpen = false;\r\n });\r\n }\r\n this.panels[index].isOpen = !this.panels[index].isOpen;\r\n }\r\n}","<!-- ixt-accordian.component.html -->\r\n<div class=\"ixt-accordion\">\r\n <div class=\"accordion-panel\" *ngFor=\"let panel of panels; let i = index\">\r\n <div class=\"panel-header\" (click)=\"togglePanel(i)\">\r\n <span class=\"panel-title\">{{panel.title}}</span>\r\n <span class=\"material-icons\" [class.open]=\"panel.isOpen\">\r\n expand_more\r\n </span>\r\n </div>\r\n <div class=\"panel-content\" [@slideInOut]=\"panel.isOpen ? 'open' : 'closed'\">\r\n {{panel.content}}\r\n </div>\r\n </div>\r\n </div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { IxtAccordianComponent } from './ixt-accordian.component';\r\n\r\n@NgModule({\r\n declarations: [\r\n IxtAccordianComponent\r\n ],\r\n imports: [\r\n CommonModule,\r\n BrowserAnimationsModule\r\n ],\r\n exports: [\r\n IxtAccordianComponent\r\n ]\r\n})\r\nexport class IxtAccordianModule { }","// src/components/ixt-accordian/ixt-accordian.index.ts\r\nexport * from './ixt-accordian.component';\r\nexport * from './ixt-accordian.module';\r\n\r\nexport interface AccordionPanel {\r\n title: string;\r\n content: string;\r\n isOpen?: boolean;\r\n}","// ixt-canvas.component.ts\r\nimport { Component, ElementRef, ViewChild, AfterViewInit, HostListener } from '@angular/core';\r\n\r\ninterface Point {\r\n x: number;\r\n y: number;\r\n}\r\n\r\n@Component({\r\n selector: 'ixt-canvas',\r\n templateUrl: './ixt-canvas.component.html',\r\n styleUrls: ['./ixt-canvas.component.scss']\r\n})\r\nexport class IxtCanvasComponent implements AfterViewInit {\r\n @ViewChild('canvas') private canvasRef!: ElementRef<HTMLCanvasElement>;\r\n \r\n private ctx!: CanvasRenderingContext2D;\r\n private isDrawing = false;\r\n private lastPoint: Point | null = null;\r\n \r\n // Drawing settings\r\n private lineWidth = 2;\r\n private strokeStyle = '#000000';\r\n \r\n ngAfterViewInit() {\r\n const canvas = this.canvasRef.nativeElement;\r\n this.ctx = canvas.getContext('2d')!;\r\n \r\n // Set canvas size to match container\r\n this.resizeCanvas();\r\n \r\n // Initialize canvas settings\r\n this.initializeCanvas();\r\n }\r\n \r\n @HostListener('window:resize')\r\n private resizeCanvas() {\r\n const canvas = this.canvasRef.nativeElement;\r\n canvas.width = canvas.offsetWidth;\r\n canvas.height = canvas.offsetHeight;\r\n this.initializeCanvas();\r\n }\r\n \r\n private initializeCanvas() {\r\n this.ctx.lineWidth = this.lineWidth;\r\n this.ctx.strokeStyle = this.strokeStyle;\r\n this.ctx.lineCap = 'round';\r\n this.ctx.lineJoin = 'round';\r\n }\r\n \r\n @HostListener('mousedown', ['$event'])\r\n onMouseDown(event: MouseEvent) {\r\n this.isDrawing = true;\r\n this.lastPoint = this.getMousePos(event);\r\n }\r\n \r\n @HostListener('mousemove', ['$event'])\r\n onMouseMove(event: MouseEvent) {\r\n if (!this.isDrawing) return;\r\n \r\n const currentPoint = this.getMousePos(event);\r\n this.draw(this.lastPoint!, currentPoint);\r\n this.lastPoint = currentPoint;\r\n }\r\n \r\n @HostListener('mouseup')\r\n @HostListener('mouseleave')\r\n onMouseUp() {\r\n this.isDrawing = false;\r\n this.lastPoint = null;\r\n }\r\n \r\n private getMousePos(event: MouseEvent): Point {\r\n const rect = this.canvasRef.nativeElement.getBoundingClientRect();\r\n return {\r\n x: event.clientX - rect.left,\r\n y: event.clientY - rect.top\r\n };\r\n }\r\n \r\n private draw(start: Point, end: Point) {\r\n this.ctx.beginPath();\r\n this.ctx.moveTo(start.x, start.y);\r\n this.ctx.lineTo(end.x, end.y);\r\n this.ctx.stroke();\r\n this.ctx.closePath();\r\n }\r\n \r\n // Public methods for external control\r\n setColor(color: string) {\r\n this.strokeStyle = color;\r\n this.ctx.strokeStyle = color;\r\n }\r\n \r\n setLineWidth(width: number) {\r\n this.lineWidth = width;\r\n this.ctx.lineWidth = width;\r\n }\r\n \r\n clear() {\r\n const canvas = this.canvasRef.nativeElement;\r\n this.ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n }\r\n}","IxtCanvas Template\r\n\r\n<!-- ixt-canvas.component.html -->\r\n<div class=\"canvas-container\">\r\n <canvas #canvas></canvas>\r\n</div>","// ixt-canvas.module.ts\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { IxtCanvasComponent } from './ixt-canvas.component';\r\n\r\n@NgModule({\r\n declarations: [\r\n IxtCanvasComponent\r\n ],\r\n imports: [\r\n CommonModule\r\n ],\r\n exports: [\r\n IxtCanvasComponent\r\n ]\r\n})\r\nexport class IxtCanvasModule { }","// ixt-canvas.index.ts\r\nexport * from './ixt-canvas.component';\r\nexport * from './ixt-canvas.module';\r\n\r\n// You might want to export interfaces/types if they're needed elsewhere\r\nexport interface DrawingConfig {\r\n color?: string;\r\n lineWidth?: number;\r\n}","// ixt-canvas.component.ts\r\nimport { Component, ElementRef, ViewChild, AfterViewInit, HostListener } from '@angular/core';\r\n\r\ninterface Point {\r\n x: number;\r\n y: number;\r\n}\r\n\r\ninterface Rect {\r\n x: number;\r\n y: number;\r\n width: number;\r\n height: number;\r\n}\r\n\r\n@Component({\r\n selector: 'ixt-viewport',\r\n templateUrl: './ixt-viewport.component.html',\r\n styleUrls: ['./ixt-viewport.component.scss']\r\n})\r\nexport class IxtViewportComponent implements AfterViewInit {\r\n @ViewChild('canvas') private canvasRef!: ElementRef<HTMLCanvasElement>;\r\n private ctx!: CanvasRenderingContext2D;\r\n \r\n // Drawing state\r\n private isDrawing = false;\r\n private lastPoint: Point | null = null;\r\n \r\n // Zooming state\r\n private isZooming = false;\r\n private zoomStart: Point | null = null;\r\n private zoomRect: Rect | null = null;\r\n private transform = {\r\n scale: 1,\r\n offsetX: 0,\r\n offsetY: 0\r\n };\r\n \r\n // Drawing settings\r\n private lineWidth = 2;\r\n private strokeStyle = '#000000';\r\n \r\n ngAfterViewInit() {\r\n const canvas = this.canvasRef.nativeElement;\r\n this.ctx = canvas.getContext('2d')!;\r\n \r\n this.resizeCanvas();\r\n this.initializeCanvas();\r\n this.drawTestGraphics();\r\n }\r\n \r\n private drawTestGraphics() {\r\n // Clear canvas\r\n this.clear();\r\n \r\n // Draw some shapes\r\n this.ctx.save();\r\n \r\n // Apply current transform\r\n this.ctx.scale(this.transform.scale, this.transform.scale);\r\n this.ctx.translate(this.transform.offsetX, this.transform.offsetY);\r\n \r\n // Rectangle\r\n this.ctx.fillStyle = '#ff0000';\r\n this.ctx.fillRect(50, 50, 100, 100);\r\n \r\n // Circle\r\n this.ctx.beginPath();\r\n this.ctx.fillStyle = '#0000ff';\r\n this.ctx.arc(250, 100, 50, 0, Math.PI * 2);\r\n this.ctx.fill();\r\n \r\n // Star\r\n this.drawStar(400, 100, 5, 50, 25);\r\n \r\n // Text\r\n this.ctx.fillStyle = '#000000';\r\n this.ctx.font = '20px Arial';\r\n this.ctx.fillText('Test Graphics', 50, 200);\r\n \r\n // Grid pattern\r\n this.drawGrid();\r\n \r\n this.ctx.restore();\r\n }\r\n \r\n private drawGrid() {\r\n this.ctx.strokeStyle = '#cccccc';\r\n this.ctx.lineWidth = 0.5;\r\n \r\n // Draw vertical lines\r\n for (let x = 0; x < 800; x += 50) {\r\n this.ctx.beginPath();\r\n this.ctx.moveTo(x, 0);\r\n this.ctx.lineTo(x, 600);\r\n this.ctx.stroke();\r\n }\r\n \r\n // Draw horizontal lines\r\n for (let y = 0; y < 600; y += 50) {\r\n this.ctx.beginPath();\r\n this.ctx.moveTo(0, y);\r\n this.ctx.lineTo(800, y);\r\n this.ctx.stroke();\r\n }\r\n }\r\n \r\n private drawStar(cx: number, cy: number, spikes: number, outerRadius: number, innerRadius: number) {\r\n this.ctx.beginPath();\r\n this.ctx.fillStyle = '#ffff00';\r\n \r\n let rot = Math.PI / 2 * 3;\r\n let x = cx;\r\n let y = cy;\r\n let step = Math.PI / spikes;\r\n\r\n this.ctx.moveTo(cx, cy - outerRadius);\r\n \r\n for (let i = 0; i < spikes; i++) {\r\n x = cx + Math.cos(rot) * outerRadius;\r\n y = cy + Math.sin(rot) * outerRadius;\r\n this.ctx.lineTo(x, y);\r\n rot += step;\r\n\r\n x = cx + Math.cos(rot) * innerRadius;\r\n y = cy + Math.sin(rot) * innerRadius;\r\n this.ctx.lineTo(x, y);\r\n rot += step;\r\n }\r\n \r\n this.ctx.lineTo(cx, cy - outerRadius);\r\n this.ctx.closePath();\r\n this.ctx.fill();\r\n }\r\n \r\n @HostListener('window:resize')\r\n private resizeCanvas() {\r\n const canvas = this.canvasRef.nativeElement;\r\n canvas.width = canvas.offsetWidth;\r\n canvas.height = canvas.offsetHeight;\r\n this.initializeCanvas();\r\n this.drawTestGraphics();\r\n }\r\n \r\n private initializeCanvas() {\r\n this.ctx.lineWidth = this.lineWidth;\r\n this.ctx.strokeStyle = this.strokeStyle;\r\n this.ctx.lineCap = 'round';\r\n this.ctx.lineJoin = 'round';\r\n }\r\n \r\n @HostListener('mousedown', ['$event'])\r\n onMouseDown(event: MouseEvent) {\r\n if (event.shiftKey) {\r\n // Start zooming when shift is held\r\n this.isZooming = true;\r\n this.zoomStart = this.getMousePos(event);\r\n this.zoomRect = null;\r\n } else {\r\n this.isDrawing = true;\r\n this.lastPoint = this.getMousePos(event);\r\n }\r\n }\r\n \r\n @HostListener('mousemove', ['$event'])\r\n onMouseMove(event: MouseEvent) {\r\n if (this.isZooming && this.zoomStart) {\r\n const currentPoint = this.getMousePos(event);\r\n \r\n // Calculate rubber band rectangle\r\n this.zoomRect = {\r\n x: Math.min(this.zoomStart.x, currentPoint.x),\r\n y: Math.min(this.zoomStart.y, currentPoint.y),\r\n width: Math.abs(currentPoint.x - this.zoomStart.x),\r\n height: Math.abs(currentPoint.y - this.zoomStart.y)\r\n };\r\n \r\n // Redraw scene with rubber band\r\n this.drawTestGraphics();\r\n this.drawRubberBand();\r\n } else if (this.isDrawing && this.lastPoint) {\r\n const currentPoint = this.getMousePos(event);\r\n this.draw(this.lastPoint, currentPoint);\r\n this.lastPoint = currentPoint;\r\n }\r\n }\r\n \r\n @HostListener('mouseup', ['$event'])\r\n onMouseUp(event: MouseEvent) {\r\n if (this.isZooming && this.zoomRect) {\r\n // Calculate new transform based on zoom rectangle\r\n const canvas = this.canvasRef.nativeElement;\r\n const scaleX = canvas.width / this.zoomRect.width;\r\n const scaleY = canvas.height / this.zoomRect.height;\r\n const newScale = Math.min(scaleX, scaleY);\r\n \r\n // Update transform\r\n this.transform.scale *= newScale;\r\n this.transform.offsetX -= this.zoomRect.x / this.transform.scale;\r\n this.transform.offsetY -= this.zoomRect.y / this.transform.scale;\r\n \r\n // Redraw with new transform\r\n this.drawTestGraphics();\r\n }\r\n \r\n this.isDrawing = false;\r\n this.isZooming = false;\r\n this.lastPoint = null;\r\n this.zoomStart = null;\r\n this.zoomRect = null;\r\n }\r\n \r\n @HostListener('mouseleave')\r\n onMouseLeave() {\r\n this.isDrawing = false;\r\n this.isZooming = false;\r\n this.lastPoint = null;\r\n this.zoomStart = null;\r\n this.zoomRect = null;\r\n }\r\n \r\n private drawRubberBand() {\r\n if (!this.zoomRect) return;\r\n \r\n this.ctx.save();\r\n this.ctx.strokeStyle = '#000000';\r\n this.ctx.lineWidth = 1;\r\n this.ctx.setLineDash([5, 5]);\r\n \r\n // Draw rubber band rectangle\r\n this.ctx.strokeRect(\r\n this.zoomRect.x,\r\n this.zoomRect.y,\r\n this.zoomRect.width,\r\n this.zoomRect.height\r\n );\r\n \r\n this.ctx.restore();\r\n }\r\n \r\n private getMousePos(event: MouseEvent): Point {\r\n const rect = this.canvasRef.nativeElement.getBoundingClientRect();\r\n return {\r\n x: event.clientX - rect.left,\r\n y: event.clientY - rect.top\r\n };\r\n }\r\n \r\n private draw(start: Point, end: Point) {\r\n this.ctx.save();\r\n this.ctx.scale(this.transform.scale, this.transform.scale);\r\n this.ctx.translate(this.transform.offsetX, this.transform.offsetY);\r\n \r\n this.ctx.beginPath();\r\n this.ctx.moveTo(start.x / this.transform.scale, start.y / this.transform.scale);\r\n this.ctx.lineTo(end.x / this.transform.scale, end.y / this.transform.scale);\r\n this.ctx.stroke();\r\n this.ctx.closePath();\r\n \r\n this.ctx.restore();\r\n }\r\n \r\n // Public methods\r\n setColor(color: string) {\r\n this.strokeStyle = color;\r\n this.ctx.strokeStyle = color;\r\n }\r\n \r\n setLineWidth(width: number) {\r\n this.lineWidth = width;\r\n this.ctx.lineWidth = width;\r\n }\r\n \r\n clear() {\r\n const canvas = this.canvasRef.nativeElement;\r\n this.ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n }\r\n \r\n resetZoom() {\r\n this.transform = {\r\n scale: 1,\r\n offsetX: 0,\r\n offsetY: 0\r\n };\r\n this.drawTestGraphics();\r\n }\r\n}","<!-- ixt-canvas.component.html -->\r\n<div class=\"viewport-container\">\r\n <canvas #canvas></canvas>\r\n </div>","// ixt-canvas.module.ts\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { IxtViewportComponent } from './ixt-viewport.component';\r\n\r\n@NgModule({\r\n declarations: [\r\n IxtViewportComponent\r\n ],\r\n imports: [\r\n CommonModule\r\n ],\r\n exports: [\r\n IxtViewportComponent\r\n ]\r\n})\r\nexport class IxtViewportModule { }","// ixt-canvas.index.ts\r\nexport * from './ixt-viewport.component';\r\nexport * from './ixt-viewport.module';\r\n\r\n// // You might want to export interfaces/types if they're needed elsewhere\r\n// export interface DrawingConfig {\r\n// color?: string;\r\n// lineWidth?: number;\r\n// }","// ixt-expression-builder.component.ts\r\nimport { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\r\nimport { Field, Operator, Expression, ExpressionGroup } from './ixt-expression-builder.interfaces';\r\n\r\n@Component({\r\n selector: 'ixt-expression-builder',\r\n templateUrl: './ixt-expression-builder.component.html',\r\n styleUrls: ['./ixt-expression-builder.component.scss'],\r\n})\r\nexport class IxtExpressionBuilderComponent implements OnInit {\r\n @Input() group: ExpressionGroup = {\r\n type: 'group',\r\n operator: 'and',\r\n children: []\r\n };\r\n\r\n @Input() level = 0;\r\n\r\n @Output() groupChange = new EventEmitter<ExpressionGroup>();\r\n\r\n fields: Field[] = [\r\n { id: 'al', label: 'Airline', type: 'text' },\r\n { id: 'base', label: 'Base', type: 'text' },\r\n { id: 'ref', label: 'Reference', type: 'text' }\r\n ];\r\n\r\n operators: Record<string, Operator[]> = {\r\n text: [\r\n { id: 'eq', label: '=', type: 'single' },\r\n { id: 'neq', label: '≠', type: 'single' },\r\n { id: 'in', label: 'IN', type: 'multiple' },\r\n { id: 'not_in', label: 'NOT IN', type: 'multiple' }\r\n ]\r\n };\r\n\r\n get rootGroup(): ExpressionGroup {\r\n return this.group;\r\n }\r\n\r\n ngOnInit(): void {\r\n if (!this.group || this.group.children.length === 0) {\r\n this.group = {\r\n type: 'group',\r\n operator: 'and',\r\n children: [\r\n {\r\n type: 'expression',\r\n field: 'al',\r\n operator: 'eq',\r\n value: 'AA',\r\n values: []\r\n },\r\n {\r\n type: 'group',\r\n operator: 'or',\r\n children: [\r\n {\r\n type: 'expression',\r\n field: 'base',\r\n operator: 'in',\r\n value: '',\r\n values: ['DFW', 'ORD', 'MIA']\r\n },\r\n {\r\n type: 'expression',\r\n field: 'ref',\r\n operator: 'in',\r\n value: '',\r\n values: ['DFW', 'ORD', 'MIA']\r\n }\r\n ]\r\n }\r\n ]\r\n };\r\n this.emitChange(); // Notify parent of the initial value\r\n }\r\n }\r\n\r\n // Rest of your code remains the same...\r\n addExpression(): void {\r\n const newExpression: Expression = {\r\n type: 'expression',\r\n field: '',\r\n operator: '',\r\n value: '',\r\n values: []\r\n };\r\n this.group.children.push(newExpression);\r\n this.emitChange();\r\n }\r\n\r\n addGroup(): void {\r\n const newGroup: ExpressionGroup = {\r\n type: 'group',\r\n operator: 'and',\r\n children: []\r\n };\r\n this.group.children.push(newGroup);\r\n this.emitChange();\r\n }\r\n\r\n removeExpression(index: number): void {\r\n this.group.children.splice(index, 1);\r\n this.emitChange();\r\n }\r\n\r\n getOperators(fieldId: string): Operator[] {\r\n const field = this.fields.find(f => f.id === fieldId);\r\n return field ? this.operators[field.type] || [] : [];\r\n }\r\n\r\n getOperatorType(operatorId: string): 'single' | 'multiple' | null {\r\n for (const operators of Object.values(this.operators)) {\r\n const operator = operators.find(op => op.id === operatorId);\r\n if (operator) {\r\n return operator.type;\r\n }\r\n }\r\n return null;\r\n }\r\n\r\n addValue(expression: Expression): void {\r\n if (!expression.values) {\r\n expression.values = [];\r\n }\r\n expression.values.push('');\r\n this.emitChange();\r\n }\r\n\r\n removeValue(expression: Expression, index: number): void {\r\n if (expression.values) {\r\n expression.values.splice(index, 1);\r\n this.emitChange();\r\n }\r\n }\r\n\r\n onChildGroupChange(index: number, childGroup: ExpressionGroup): void {\r\n this.group.children[index] = childGroup;\r\n this.emitChange();\r\n }\r\n\r\n toJsonLogic(): any {\r\n return this.convertToJsonLogic(this.group);\r\n }\r\n\r\n private convertToJsonLogic(node: Expression | ExpressionGroup): any {\r\n if (node.type === 'expression') {\r\n if (node.operator === 'in' || node.operator === 'not_in') {\r\n return {\r\n [node.operator === 'in' ? 'in' : '!in']: [\r\n { var: node.field },\r\n node.values || []\r\n ]\r\n };\r\n }\r\n return {\r\n [node.operator]: [\r\n { var: node.field },\r\n node.value\r\n ]\r\n };\r\n }\r\n\r\n if (node.children.length === 0) return true;\r\n if (node.children.length === 1) {\r\n return this.convertToJsonLogic(node.children[0]);\r\n }\r\n\r\n return {\r\n [node.operator]: node.children.map(child => this.convertToJsonLogic(child))\r\n };\r\n }\r\n\r\n private emitChange(): void {\r\n this.groupChange.emit(this.group);\r\n }\r\n\r\n updateValue(expression: Expression, index: number, value: string): void {\r\n if (!expression.values) {\r\n expression.values = [];\r\n }\r\n expression.values[index] = value;\r\n this.emitChange();\r\n }\r\n}","<!-- ixt-expression-builder.component.html -->\r\n<div class=\"expression-builder\">\r\n <div class=\"group-container\">\r\n <select [(ngModel)]=\"group.operator\" class=\"group-operator\">\r\n <option value=\"and\">AND</option>\r\n <option value=\"or\">OR</option>\r\n </select>\r\n\r\n <div class=\"expressions-list\">\r\n <div *ngFor=\"let node of rootGroup.children; let i = index\" class=\"expression-row\">\r\n <div *ngIf=\"node.type === 'expression'\" class=\"expression-container\">\r\n <select [(ngModel)]=\"node.field\" class=\"field-select\">\r\n <option value=\"\">Select Field</option>\r\n <option *ngFor=\"let field of fields\" [value]=\"field.id\">\r\n {{field.label}}\r\n </option>\r\n </select>\r\n\r\n <select [(ngModel)]=\"node.operator\" class=\"operator-select\">\r\n <option value=\"\">Select Operator</option>\r\n <option *ngFor=\"let op of getOperators(node.field)\" [value]=\"op.id\">\r\n {{op.label}}\r\n </option>\r\n </select>\r\n\r\n <ng-container [ngSwitch]=\"getOperatorType(node.operator)\">\r\n <input *ngSwitchCase=\"'single'\" \r\n type=\"text\" \r\n [(ngModel)]=\"node.value\" \r\n class=\"value-input\">\r\n \r\n <div *ngSwitchCase=\"'multiple'\" class=\"multi-value-container\">\r\n <div *ngFor=\"let val of node.values; let j = index\" class=\"multi-value-item\">\r\n <input type=\"text\" [(ngModel)]=\"node.values[j]\">\r\n <button (click)=\"removeValue(node, j)\" class=\"remove-btn\">×</button>\r\n </div>\r\n <button (click)=\"addValue(node)\" class=\"add-value\">+ Add Value</button>\r\n </div>\r\n </ng-container>\r\n\r\n <button (click)=\"removeExpression(i)\" class=\"remove-btn\">×</button>\r\n </div>\r\n\r\n <div *ngIf=\"node.type === 'group'\" class=\"nested-group\">\r\n <ixt-expression-builder\r\n [group]=\"node\"\r\n [level]=\"level + 1\"\r\n (groupChange)=\"onChildGroupChange(i, $event)\">\r\n </ixt-expression-builder>\r\n </div>\r\n </div>\r\n </div>\r\n\r\n <div class=\"action-buttons\">\r\n <button (click)=\"addExpression()\" class=\"add-btn\">Add Expression</button>\r\n <button (click)=\"addGroup()\" class=\"add-btn\">Add Group</button>\r\n </div>\r\n </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { IxtExpressionBuilderComponent } from './ixt-expression-builder.component';\r\n\r\n@NgModule({\r\n declarations: [\r\n IxtExpressionBuilderComponent\r\n ],\r\n imports: [\r\n CommonModule,\r\n FormsModule\r\n ],\r\n exports: [\r\n IxtExpressionBuilderComponent\r\n ]\r\n})\r\nexport class IxtExpressionBuilderModule { }\r\n","// ixt-expression-builder.index.ts\r\nexport * from './ixt-expression-builder.component';\r\nexport * from './ixt-expression-builder.module';\r\n\r\nexport interface ExpressionNode {\r\n id: string;\r\n field: string;\r\n operator: string;\r\n value: string;\r\n type: 'expression';\r\n values: string[];\r\n}\r\n\r\nexport interface ExpressionGroup {\r\n type: 'group';\r\n operator: 'and' | 'or';\r\n children: (Expression | ExpressionGroup)[];\r\n}\r\n\r\nexport interface Expression {\r\n type: 'expression';\r\n field: string;\r\n operator: string;\r\n value: string;\r\n values: string[];\r\n}","// ixt-diagram.component.ts\r\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\n\r\ninterface Participant {\r\n type: 'actor' | 'component';\r\n name: string;\r\n x: number;\r\n}\r\n\r\ninterface Message {\r\n from: string;\r\n to: string;\r\n text: string;\r\n y: number;\r\n type: 'sync' | 'return' | 'self';\r\n}\r\n\r\ninterface Activation {\r\n participant: string;\r\n startY: number;\r\n endY: number;\r\n}\r\n\r\n@Component({\r\n selector: 'ixt-diagram',\r\n template: `\r\n <canvas #diagramCanvas \r\n width=\"800\" \r\n height=\"600\"\r\n [style.border]=\"'1px solid #ccc'\">\r\n </canvas>\r\n `\r\n})\r\nexport class IxtDiagramComponent implements OnInit {\r\n @ViewChild('diagramCanvas', { static: true })\r\n private canvas!: ElementRef<HTMLCanvasElement>;\r\n private ctx!: CanvasRenderingContext2D;\r\n\r\n // Sample data matching the example diagram\r\n private participants: Participant[] = [\r\n { type: 'actor', name: 'SD Login Customer', x: 100 },\r\n { type: 'component', name: 'LoginUI', x: 300 },\r\n { type: 'component', name: 'LoginControl', x: 500 },\r\n { type: 'component', name: 'UserDB', x: 700 }\r\n ];\r\n\r\n\r\n\r\n // Update the activation data to match the screenshot\r\n private activations: Activation[] = [\r\n { participant: 'LoginUI', startY: 150, endY: 420 },\r\n { participant: 'LoginControl', startY: 200, endY: 420 },\r\n { participant: 'UserDB', startY: 250, endY: 320 } // Adjusted timing\r\n ];\r\n\r\n // Update message types to ensure sync messages have filled arrowheads\r\n private messages: Message[] = [\r\n { from: 'SD Login Customer', to: 'LoginUI', text: 'Login(Un/Pw)', y: 150, type: 'sync' },\r\n { from: 'LoginUI', to: 'LoginControl', text: 'login(Un/Pw)', y: 200, type: 'sync' },\r\n { from: 'LoginControl', to: 'UserDB', text: 'search(Un/Pw)', y: 250, type: 'sync' },\r\n { from: 'UserDB', to: 'LoginControl', text: 'status', y: 300, type: 'return' },\r\n { from: 'LoginControl', to: 'LoginControl', text: 'validateUser', y: 350, type: 'self' },\r\n { from: 'LoginControl', to: 'LoginUI', text: 'status', y: 400, type: 'return' }\r\n ];\r\n\r\n\r\n\r\n ngOnInit() {\r\n this.initializeCanvas();\r\n this.drawDiagram();\r\n }\r\n\r\n private initializeCanvas() {\r\n const context = this.canvas.nativeElement.getContext('2d');\r\n if (!context) {\r\n throw new Error('Canvas 2D context not supported');\r\n }\r\n this.ctx = context;\r\n this.ctx.font = '12px Arial';\r\n this.ctx.textAlign = 'center';\r\n }\r\n\r\n private drawDiagram() {\r\n this.clearCanvas();\r\n this.drawParticipants();\r\n this.drawLifelines();\r\n this.drawActivations();\r\n this.drawMessages();\r\n }\r\n\r\n private clearCanvas() {\r\n const canvas = this.canvas.nativeElement;\r\n this.ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n }\r\n\r\n private drawParticipants() {\r\n this.participants.forEach(participant => {\r\n if (participant.type === 'actor') {\r\n this.drawActor(participant);\r\n } else {\r\n this.drawComponent(participant);\r\n }\r\n });\r\n }\r\n\r\n private drawActor(participant: Participant) {\r\n const x = participant.x;\r\n const y = 30;\r\n this.ctx.strokeStyle = '#000';\r\n\r\n // Draw stick figure\r\n // Head\r\n this.ctx.beginPath();\r\n this.ctx.arc(x, y, 10, 0, Math.PI * 2);\r\n this.ctx.stroke();\r\n\r\n // Body\r\n this.ctx.beginPath();\r\n this.ctx.moveTo(x, y + 10);\r\n this.ctx.lineTo(x, y + 30);\r\n this.ctx.stroke();\r\n\r\n // Arms\r\n this.ctx.beginPath();\r\n this.ctx.moveTo(x - 15, y + 20);\r\n this.ctx.lineTo(x + 15, y + 20);\r\n this.ctx.stroke();\r\n\r\n // Legs\r\n this.ctx.beginPath();\r\n this.ctx.moveTo(x, y + 30);\r\n this.ctx.lineTo(x - 10, y + 45);\r\n this.ctx.moveTo(x, y + 30);\r\n this.ctx.lineTo(x + 10, y + 45);\r\n this.ctx.stroke();\r\n\r\n // Label\r\n this.ctx.fillStyle = '#000';\r\n this.drawLabel(participant.name, x, y + 60);\r\n }\r\n\r\n private drawComponent(participant: Participant) {\r\n const width = 100;\r\n const height = 40;\r\n const x = participant.x - width / 2;\r\n const y = 30;\r\n\r\n // Draw box\r\n this.ctx.strokeStyle = '#000';\r\n this.ctx.fillStyle = '#fff';\r\n this.ctx.beginPath();\r\n this.ctx.rect(x, y, width, height);\r\n this.ctx.fill();\r\n this.ctx.stroke();\r\n\r\n // Draw text\r\n this.ctx.fillStyle = '#000';\r\n this.drawLabel(participant.name, participant.x, y + height / 2);\r\n }\r\n\r\n private drawLifelines() {\r\n this.ctx.setLineDash([5, 5]);\r\n this.ctx.strokeStyle = '#666';\r\n\r\n this.participants.forEach(participant => {\r\n this.ctx.beginPath();\r\n this.ctx.moveTo(participant.x, 90);\r\n this.ctx.lineTo(participant.x, 500);\r\n this.ctx.stroke();\r\n });\r\n\r\n this.ctx.setLineDash([]); // Reset line style\r\n }\r\n\r\n\r\n private drawMessages() {\r\n this.messages.forEach(message => {\r\n const fromX = this.getParticipantX(message.from);\r\n const toX = this.getParticipantX(message.to);\r\n\r\n this.ctx.strokeStyle = '#000';\r\n this.ctx.fillStyle = '#000';\r\n\r\n if (message.type === 'sync') {\r\n this.drawSyncMessage(fromX, toX, message);\r\n } else if (message.type === 'return') {\r\n this.drawReturnMessage(fromX, toX, message);\r\n } else if (message.type === 'self') {\r\n this.drawSelfMessage(fromX, message);\r\n }\r\n });\r\n }\r\n\r\n\r\n private drawReturnMessage(fromX: number, toX: number, message: Message) {\r\n // Dashed line with open arrow\r\n this.ctx.setLineDash([5, 5]);\r\n this.ctx.beginPath();\r\n this.ctx.moveTo(fromX, message.y);\r\n this.ctx.lineTo(toX, message.y);\r\n this.ctx.stroke();\r\n this.ctx.setLineDash([]);\r\n\r\n // Open arrowhead\r\n this.drawArrowhead(toX, message.y, fromX < toX ? 'right' : 'left', false);\r\n\r\n // Message text\r\n this.drawLabel(message.text, (fromX + toX) / 2, message.y - 10);\r\n }\r\n\r\n private drawSelfMessage(x: number, message: Message) {\r\n const offset = 20;\r\n this.ctx.beginPath();\r\n this.ctx.moveTo(x, message.y);\r\n this.ctx.lineTo(x + offset, message.y);\r\n this.ctx.lineTo(x + offset, message.y + 20);\r\n this.ctx.lineTo(x, message.y + 20);\r\n this.ctx.stroke();\r\n\r\n // Filled arrowhead\r\n this.drawArrowhead(x, message.y + 20, 'left', true);\r\n\r\n // Message text\r\n this.drawLabel(message.text, x + offset + 20, message.y + 10);\r\n }\r\n\r\n\r\n private drawLabel(text: string, x: number, y: number) {\r\n this.ctx.fillStyle = '#000';\r\n this.ctx.textAlign = 'center';\r\n this.ctx.textBaseline = 'middle';\r\n this.ctx.fillText(text, x, y);\r\n }\r\n\r\n private getParticipantX(name: string): number {\r\n const participant = this.participants.find(p => p.name === name);\r\n if (!participant) {\r\n throw new Error(`Participant ${name} not found`);\r\n }\r\n return participant.x;\r\n }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n // Only showing the modified methods - the rest of the component remains the same\r\n\r\n private drawActivations() {\r\n this.ctx.fillStyle = '#fff';\r\n this.ctx.strokeStyle = '#000';\r\n\r\n this.activations.forEach(activation => {\r\n const participant = this.participants.find(p => p.name === activation.participant);\r\n if (participant) {\r\n // Make activation bars wider and ensure they're solid\r\n const width = 16; // Increased from 10\r\n const x = participant.x - width / 2;\r\n\r\n // Draw solid white rectangle\r\n this.ctx.beginPath();\r\n this.ctx.fillStyle = '#fff';\r\n this.ctx.fillRect(x, activation.startY, width, activation.endY - activation.startY);\r\n this.ctx.strokeRect(x, activation.startY, width, activation.endY - activation.startY);\r\n }\r\n });\r\n }\r\n\r\n private drawArrowhead(x: number, y: number, direction: 'left' | 'right', filled: boolean) {\r\n const size = 10; // Increased from 8\r\n const angle = Math.PI / 6;\r\n const dir = direction === 'right' ? 1 : -1;\r\n\r\n this.ctx.beginPath();\r\n this.ctx.moveTo(x, y);\r\n\r\n // Calculate arrow points\r\n const x1 = x - dir * size * Math.cos(angle);\r\n const y1 = y - size * Math.sin(angle);\r\n const x2 = x - dir * size * Math.cos(-angle);\r\n const y2 = y - size * Math.sin(-angle);\r\n\r\n this.ctx.lineTo(x1, y1);\r\n this.ctx.lineTo(x2, y2);\r\n\r\n if (filled) {\r\n this.ctx.closePath();\r\n this.ctx.fillStyle = '#000';\r\n this.ctx.fill();\r\n }\r\n this.ctx.stroke();\r\n }\r\n\r\n private drawSyncMessage(fromX: number, toX: number, message: Message) {\r\n // Draw solid line\r\n this.ctx.beginPath();\r\n this.ctx.strokeStyle = '#000';\r\n this.ctx.lineWidth = 1;\r\n this.ctx.moveTo(fromX, message.y);\r\n this.ctx.lineTo(toX, message.y);\r\n this.ctx.stroke();\r\n\r\n // Always draw filled arrowhead for sync messages\r\n this.drawArrowhead(toX, message.y, fromX < toX ? 'right' : 'left', true);\r\n\r\n // Message text\r\n this.drawLabel(message.text, (fromX + toX) / 2, message.y - 10);\r\n }\r\n\r\n}","// Later we can add additional exports like:\r\n// export * from './ixt-diagram.service';\r\n// export * from './ixt-diagram.models';\r\n// export * from './ixt-diagram.utils';\r\n\r\n// ixt-diagram.module.ts\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { IxtDiagramComponent } from './ixt-diagram.component';\r\n\r\n@NgModule({\r\n declarations: [\r\n IxtDiagramComponent\r\n ],\r\n imports: [\r\n CommonModule\r\n ],\r\n exports: [\r\n IxtDiagramComponent\r\n ]\r\n})\r\nexport class IxtDiagramModule { }\r\n\r\n/* Future imports we might need:\r\nimport { FormsModule } from '@angular/forms';\r\nimport { IxtDiagramService } from './ixt-diagram.service';\r\nimport { IxtDiagramToolbarComponent } from './components/toolbar/toolbar.component';\r\n*/","// ixt-diagram.index.ts\r\nexport * from './ixt-diagram.component';\r\nexport * from './ixt-diagram.module';\r\n\r\n","// uml-diagram.component.ts\r\nimport { Component, ElementRef, ViewChild, AfterViewInit, OnDestroy } from '@angular/core';\r\n\r\ninterface UMLClass {\r\n id: string;\r\n name: string;\r\n attributes: string[];\r\n methods: string[];\r\n x: number;\r\n y: number;\r\n width: number;\r\n height: number;\r\n}\r\n\r\ninterface Relationship {\r\n from: string;\r\n to: string;\r\n type: 'inheritance' | 'implementation' | 'association' | 'composition';\r\n}\r\n\r\n@Component({\r\n selector: 'ixt-clazz',\r\n template: `\r\n <div class=\"container\">\r\n <button (click)=\"applyForceDirectedLayout()\">Auto Layout</button>\r\n <canvas #canvas \r\n (mousedown)=\"onMouseDown($event)\"\r\n (mousemove)=\"onMouseMove($event)\"\r\n (mouseup)=\"onMouseUp()\">\r\n </canvas>\r\n </div>\r\n `,\r\n styles: [`\r\n .container {\r\n width: 100%;\r\n height: 100vh;\r\n overflow: hidden;\r\n }\r\n canvas {\r\n border: 1px solid #ccc;\r\n }\r\n `]\r\n})\r\nexport class IxtClazzDiagram implements AfterViewInit, OnDestroy {\r\n @ViewChild('canvas') canvasRef!: ElementRef<HTMLCanvasElement>;\r\n private ctx!: CanvasRenderingContext2D;\r\n private classes: UMLClass[] = [\r\n {\r\n id: 'book',\r\n name: 'Book',\r\n attributes: ['- isbn: string', '- title: string', '- author: string'],\r\n methods: ['+ getDetails(): string'],\r\n x: 100,\r\n y: 100,\r\n width: 200,\r\n height: 150\r\n },\r\n {\r\n id: 'library',\r\n name: 'Library',\r\n attributes: ['- name: string', '- books: Book[]'],\r\n methods: ['+ addBook(book: Book): void', '+ removeBook(isbn: string): void'],\r\n x: 400,\r\n y: 100,\r\n width: 200,\r\n height: 150\r\n },\r\n // Add more classes as needed\r\n ];\r\n\r\n private relationships: Relationship[] = [\r\n { from: 'library', to: 'book', type: 'composition' }\r\n ];\r\n\r\n private isDragging = false;\r\n private selectedClass: UMLClass | null = null;\r\n private dragOffset = { x: 0, y: 0 };\r\n private animationFrameId: number | null = null;\r\n\r\n ngAfterViewInit() {\r\n const canvas = this.canvasRef.nativeElement;\r\n this.ctx = canvas.getContext('2d')!;\r\n this.resizeCanvas();\r\n this.draw();\r\n window.addEventListener('resize', this.resizeCanvas.bind(this));\r\n }\r\n\r\n ngOnDestroy() {\r\n window.removeEventListener('resize', this.resizeCanvas.bind(this));\r\n if (this.animationFrameId) {\r\n cancelAnimationFrame(this.animationFrameId);\r\n }\r\n }\r\n\r\n private resizeCanvas() {\r\n const canvas = this.canvasRef.nativeElement;\r\n canvas.width = canvas.offsetWidth;\r\n canvas.height = canvas.offsetHeight;\r\n }\r\n\r\n private draw() {\r\n const canvas = this.canvasRef.nativeElement;\r\n this.ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n \r\n // Draw relationships first (so they appear under the classes)\r\n this.drawRelationships();\r\n \r\n // Draw classes\r\n this.classes.forEach(cls => this.drawClass(cls));\r\n \r\n this.animationFrameId = requestAnimationFrame(() => this.draw());\r\n }\r\n\r\n private drawClass(cls: UMLClass) {\r\n // Draw class box\r\n this.ctx.strokeStyle = '#000';\r\n this.ctx.fillStyle = '#fff';\r\n this.ctx.lineWidth = 1;\r\n \r\n // Main rectangle\r\n this.ctx.beginPath();\r\n this.ctx.rect(cls.x, cls.y, cls.width, cls.height);\r\n this.ctx.fill();\r\n this.ctx.stroke();\r\n \r\n // Class name section\r\n this.ctx.font = 'bold 14px Arial';\r\n this.ctx.textAlign = 'center';\r\n this.ctx.fillStyle = '#000';\r\n this.ctx.fillText(cls.name, cls.x + cls.width / 2, cls.y + 25);\r\n \r\n // Separator lines\r\n const attributesY = cls.y + 35;\r\n const methodsY = attributesY + (cls.attributes.length * 20) + 10;\r\n \r\n this.ctx.beginPath();\r\n this.ctx.moveTo(cls.x, attributesY);\r\n this.ctx.lineTo(cls.x + cls.width, attributesY);\r\n this.ctx.stroke();\r\n \r\n // Draw attributes\r\n this.ctx.font = '12px Arial';\r\n this.ctx.textAlign = 'left';\r\n cls.attributes.forEach((attr, index) => {\r\n this.ctx.fillText(attr, cls.x + 10, attributesY + 20 + (index * 20));\r\n });\r\n \r\n // Draw methods\r\n this.ctx.beginPath();\r\n this.ctx.moveTo(cls.x, methodsY);\r\n this.ctx.lineTo(cls.x + cls.width, methodsY);\r\n this.ctx.stroke();\r\n \r\n cls.methods.forEach((method, index) => {\r\n this.ctx.fillText(method, cls.x + 10, methodsY + 20 + (index * 20));\r\n });\r\n }\r\n\r\n private drawRelationships() {\r\n this.relationships.forEach(rel => {\r\n const fromClass = this.classes.find(c => c.id === rel.from);\r\n const toClass = this.classes.find(c => c.id === rel.to);\r\n \r\n if (!fromClass || !toClass) return;\r\n \r\n // Calculate connection points\r\n const start = this.getConnectionPoint(fromClass, toClass);\r\n const end = this.getConnectionPoint(toClass, fromClass);\r\n \r\n this.ctx.beginPath();\r\n this.ctx.moveTo(start.x, start.y);\r\n this.ctx.lineTo(end.x, end.y);\r\n \r\n // Draw different arrow heads based on relationship type\r\n if (rel.type === 'inheritance') {\r\n this.drawInheritanceArrow(end.x, end.y, this.getAngle(start, end));\r\n } else if (rel.type === 'implementation') {\r\n this.drawImplementationArrow(end.x, end.y, this.getAngle(start, end));\r\n } else if (rel.type === 'composition') {\r\n this.drawCompositionDiamond(end.x, end.y, this.getAngle(start, end));\r\n }\r\n \r\n this.ctx.stroke();\r\n });\r\n }\r\n\r\n private getConnectionPoint(from: UMLClass, to: UMLClass): { x: number, y: number } {\r\n // Calculate center points\r\n const fromCenter = {\r\n x: from.x + from.width / 2,\r\n y: from.y + from.height / 2\r\n };\r\n const toCenter = {\r\n x: to.x + to.width / 2,\r\n y: to.y + to.height / 2\r\n };\r\n \r\n // Calculate angle between centers\r\n const angle = Math.atan2(toCenter.y - fromCenter.y, toCenter.x - fromCenter.x);\r\n \r\n // Calculate intersection with rectangle\r\n const cos = Math.cos(angle);\r\n const sin = Math.sin(angle);\r\n \r\n let x, y;\r\n \r\n if (Math.abs(cos) > Math.abs(sin)) {\r\n // Intersect with vertical sides\r\n x = cos > 0 ? from.x + from.width : from.x;\r\n y = fromCenter.y + (x - fromCenter.x) * sin / cos;\r\n } else {\r\n // Intersect with horizontal sides\r\n y = sin > 0 ? from.y + from.height : from.y;\r\n x = fromCenter.x + (y - fromCenter.y) * cos / sin;\r\n }\r\n \r\n return { x, y };\r\n }\r\n\r\n private getAngle(start: { x: number, y: number }, end: { x: number, y: number }): number {\r\n return Math.atan2(end.y - start.y, end.x - start.x);\r\n }\r\n\r\n private drawInheritanceArrow(x: number, y: number, angle: number) {\r\n const size = 15;\r\n const angleLeft = angle + Math.PI * 0.8;\r\n const angleRight = angle - Math.PI * 0.8;\r\n \r\n this.ctx.beginPath();\r\n this.ctx.moveTo(x, y);\r\n this.ctx.lineTo(\r\n x - size * Math.cos(angleLeft),\r\n y - size * Math.sin(angleLeft)\r\n );\r\n this.ctx.lineTo(\r\n x - size * Math.cos(angleRight),\r\n y - size * Math.sin(angleRight)\r\n );\r\n this.ctx.closePath();\r\n this.ctx.fillStyle = '#fff';\r\n this.ctx.fill();\r\n this.ctx.stroke();\r\n }\r\n\r\n private drawImplementationArrow(x: number, y: number, angle: number) {\r\n // Similar to inheritance but with dashed line\r\n this.ctx.setLineDash([5, 5]);\r\n this.drawInheritanceArrow(x, y, angle);\r\n this.ctx.setLineDash([]);\r\n }\r\n\r\n private drawCompositionDiamond(x: number, y: number, angle: number) {\r\n const size = 10;\r\n this.ctx.beginPath();\r\n this.ctx.moveTo(x, y);\r\n this.ctx.lineTo(\r\n x - size * Math.cos(angle + Math.PI / 4),\r\n y - size * Math.sin(angle + Math.PI / 4)\r\n );\r\n this.ctx.lineTo(\r\n x - size * 2 * Math.cos(angle),\r\n y - size * 2 * Math.sin(angle)\r\n );\r\n this.ctx.lineTo(\r\n x - size * Math.cos(angle - Math.PI / 4),\r\n y - size * Math.sin(angle - Math.PI / 4)\r\n );\r\n this.ctx.closePath();\r\n this.ctx.fillStyle = '#000';\r\n this.ctx.fill();\r\n }\r\n\r\n onMouseDown(event: MouseEvent) {\r\n const rect = this.canvasRef.nativeElement.getBoundingClientRect();\r\n const x = event.clientX - rect.left;\r\n const y = event.clientY - rect.top;\r\n \r\n // Check if click is inside any class\r\n this.selectedClass = this.classes.find(cls =>\r\n x >= cls.x && x <= cls.x + cls.width &&\r\n y >= cls.y && y <= cls.y + cls.height\r\n ) || null;\r\n \r\n if (this.selectedClass) {\r\n this.isDragging = true;\r\n this.dragOffset = {\r\n x: x - this.selectedClass.x,\r\n y: y - this.selectedClass.y\r\n };\r\n }\r\n }\r\n\r\n onMouseMove(event: MouseEvent) {\r\n if (this.isDragging && this.selectedClass) {\r\n const rect = this.canvasRef.nativeElement.getBoundingClientRect();\r\n this.selectedClass.x = event.clientX - rect.left - this.dragOffset.x;\r\n this.selectedClass.y = event.clientY - rect.top - this.dragOffset.y;\r\n }\r\n }\r\n\r\n onMouseUp() {\r\n this.isDragging = false;\r\n this.selectedClass = null;\r\n }\r\n\r\n applyForceDirectedLayout() {\r\n const REPULSION = 50000; // Repulsion force between nodes\r\n const ATTRACTION = 0.01; // Attraction force for relationships\r\n const DAMPING = 0.95; // Damping factor to prevent oscillation\r\n const ITERATIONS = 50; // Number of iterations for the algorithm\r\n \r\n // Initialize velocities\r\n const velocities = new Map(this.classes.map(cls => [cls.id, { x: 0, y: 0 }]));\r\n \r\n for (let i = 0; i < ITERATIONS; i++) {\r\n // Calculate forces\r\n this.classes.forEach(cls1 => {\r\n let fx = 0;\r\n let fy = 0;\r\n \r\n // Repulsion between all classes\r\n this.classes.forEach(cls2 => {\r\n if (cls1 !== cls2) {\r\n const dx = cls1.x - cls2.x;\r\n const dy = cls1.y - cls2.y;\r\n const distance = Math.sqrt(dx * dx + dy * dy);\r\n \r\n if (distance > 0) {\r\n const force = REPULSION / (distance * distance);\r\n fx += (dx / distance) * force;\r\n fy += (dy / distance) * force;\r\n }\r\n }\r\n });\r\n \r\n // Attraction for related classes\r\n this.relationships.forEach(rel => {\r\n if (rel.from === cls1.id || rel.to === cls1.id) {\r\n const other = this.classes.find(c => \r\n c.id === (rel.from === cls1.id ? rel.to : rel.from)\r\n );\r\n \r\n if (other) {\r\n const dx = cls1.x - other.x;\r\n const dy = cls1.y - other.y;\r\n const distance = Math.sqrt(dx * dx + dy * dy);\r\n \r\n fx -= dx * ATTRACTION;\r\n fy -= dy * ATTRACTION;\r\n }\r\n }\r\n });\r\n \r\n // Update velocity\r\n const velocity = velocities.get(cls1.id)!;\r\n velocity.x = (velocity.x + fx) * DAMPING;\r\n velocity.y = (velocity.y + fy) * DAMPING;\r\n \r\n // Update position\r\n cls1.x += velocity.x;\r\n cls1.y += velocity.y;\r\n });\r\n }\r\n \r\n // Center the diagram\r\n const bounds = this.calculateBounds();\r\n const centerX = this.canvasRef.nativeElement.width / 2;\r\n const centerY = this.canvasRef.nativeElement.height / 2;\r\n const offsetX = centerX - (bounds.maxX + bounds.minX) / 2;\r\n const offsetY = centerY - (bounds.maxY + bounds.minY) / 2;\r\n \r\n this.classes.forEach(cls => {\r\n cls.x += offsetX;\r\n cls.y += offsetY;\r\n });\r\n }\r\n\r\n private calculateBounds() {\r\n const bounds = {\r\n minX: Infinity,\r\n minY: Infinity,\r\n maxX: -Infinity,\r\n maxY: -Infinity\r\n };\r\n \r\n this.classes.forEach(cls => {\r\n bounds.minX = Math.min(bounds.minX, cls.x);\r\n bounds.minY = Math.min(bounds.minY, cls.y);\r\n bounds.maxX = Math.max(bounds.maxX, cls.x + cls.width);\r\n bounds.maxY = Math.max(bounds.maxY, cls.y + cls.height);\r\n });\r\n \r\n return bounds;\r\n }\r\n}","\r\n// ixt-clazz.module.ts\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { IxtClazzDiagram } from './ixt-clazz.diagram';\r\n\r\n@NgModule({\r\n declarations: [\r\n IxtClazzDiagram\r\n ],\r\n imports: [\r\n CommonModule\r\n ],\r\n exports: [\r\n IxtClazzDiagram\r\n ]\r\n})\r\nexport class IxtClazzModule { }\r\n","// ixt-clazz.index.ts\r\nexport * from './ixt-clazz.diagram';\r\nexport * from './ixt-clazz.module';\r\n\r\n// You might also want to export your interfaces\r\nexport interface UMLClass {\r\n id: string;\r\n name: string;\r\n attributes: string[];\r\n methods: string[];\r\n x: number;\r\n y: number;\r\n width: number;\r\n height: number;\r\n}\r\n\r\nexport interface Relationship {\r\n from: string;\r\n to: string;\r\n type: 'inheritance' | 'implementation' | 'association' | 'composition';\r\n}","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { DeploymentNode, Connection, DeploymentDiagramConfig } from './ixt-deployment.types';\r\nimport { fromEvent } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n selector: 'ixt-deployment',\r\n template: `\r\n <div class=\"diagram-container\">\r\n <canvas #canvas \r\n (mousedown)=\"onMouseDown($event)\"\r\n (mousemove)=\"onMouseMove($event)\"\r\n (mouseup)=\"onMouseUp()\"\r\n [width]=\"width\"\r\n [height]=\"height\">\r\n </canvas>\r\n <button (click)=\"autoLayout()\" class=\"auto-layout-btn\">Auto Layout</button>\r\n </div>\r\n `,\r\n styles: [`\r\n .diagram-container {\r\n position: relative;\r\n border: 1px solid #ccc;\r\n }\r\n .auto-layout-btn {\r\n position: absolute;\r\n top: 10px;\r\n right: 10px;\r\n padding: 8px 16px;\r\n background: #4a90e2;\r\n color: white;\r\n border: none;\r\n border-radius: 4px;\r\n cursor: pointer;\r\n }\r\n canvas {\r\n cursor: move;\r\n }\r\n `]\r\n})\r\nexport class IxtDeploymentDiagram implements OnInit {\r\n @ViewChild('canvas', { static: true }) canvasRef!: ElementRef<HTMLCanvasElement>;\r\n private ctx!: CanvasRenderingContext2D;\r\n \r\n width = 800;\r\n height = 600;\r\n \r\n nodes: DeploymentNode[] = [\r\n { id: '1', type: 'server', x: 100, y: 100, width: 120, height: 80, label: 'Web Server' },\r\n { id: '2', type: 'database', x: 400, y: 100, width: 100, height: 100, label: 'Database' },\r\n { id: '3', type: 'service', x: 250, y: 300, width: 150, height: 70, label: 'Message Queue' },\r\n { id: '4', type: 'container', x: 500, y: 300, width: 130, height: 90, label: 'Docker Container' }\r\n ];\r\n\r\n connections: Connection[] = [\r\n { from: '1', to: '2', type: 'communicates' },\r\n { from: '1', to: '3', type: 'depends' },\r\n { from: '3', to: '4', type: 'deploys' }\r\n ];\r\n\r\n private draggedNode: DeploymentNode | null = null;\r\n private dragStartX = 0;\r\n private dragStartY = 0;\r\n private nodeOffsetX = 0;\r\n private nodeOffsetY = 0;\r\n\r\n // Force-directed layout parameters\r\n private readonly REPULSION = 8000; // Repulsion force between nodes\r\n private readonly ATTRACTION = 0.06; // Attraction force along connections\r\n private readonly DAMPING = 0.9; // Velocity damping factor\r\n private readonly MIN_DISTANCE = 150; // Minimum distance between nodes\r\n\r\n ngOnInit() {\r\n const canvas = this.canvasRef.nativeElement;\r\n this.ctx = canvas.getContext('2d')!;\r\n this.draw();\r\n }\r\n\r\n private draw() {\r\n const ctx = this.ctx;\r\n ctx.clearRect(0, 0, this.width, this.height);\r\n \r\n // Draw connections first (under nodes)\r\n this.drawConnections();\r\n \r\n // Draw nodes\r\n this.nodes.forEach(node => this.drawNode(node));\r\n }\r\n\r\n private drawNode(node: DeploymentNode) {\r\n const ctx = this.ctx;\r\n ctx.save();\r\n \r\n // Shadow\r\n ctx.shadowColor = 'rgba(0, 0, 0, 0.2)';\r\n ctx.shadowBlur = 5;\r\n ctx.shadowOffsetX = 2;\r\n ctx.shadowOffsetY = 2;\r\n\r\n // Node shape\r\n ctx.beginPath();\r\n switch (node.type) {\r\n case 'server':\r\n this.drawServer(node);\r\n break;\r\n case 'database':\r\n this.drawDatabase(node);\r\n break;\r\n case 'service':\r\n this.drawService(node);\r\n break;\r\n case 'container':\r\n this.drawContainer(node);\r\n break;\r\n }\r\n \r\n // Label\r\n ctx.fillStyle = '#333';\r\n ctx.font = '12px Arial';\r\n ctx.textAlign = 'center';\r\n ctx.textBaseline = 'middle';\r\n ctx.fillText(node.label, node.x + node.width/2, node.y + node.height/2);\r\n \r\n ctx.restore();\r\n }\r\n\r\n private drawServer(node: DeploymentNode) {\r\n const ctx = this.ctx;\r\n ctx.fillStyle = '#e8f4f8';\r\n ctx.strokeStyle = '#4a90e2';\r\n ctx.lineWidth = 2;\r\n \r\n // Main rectangle\r\n ctx.fillRect(node.x, node.y, node.width, node.height);\r\n ctx.strokeRect(node.x, node.y, node.width, node.height);\r\n \r\n // Server rack lines\r\n for (let i = 1; i < 4; i++) {\r\n const y = node.y + (node.height * i/4);\r\n ctx.beginPath();\r\n ctx.moveTo(node.x, y);\r\n ctx.lineTo(node.x + node.width, y);\r\n ctx.stroke();\r\n }\r\n }\r\n\r\n private drawDatabase(node: DeploymentNode) {\r\n const ctx = this.ctx;\r\n ctx.fillStyle = '#f8e8f4';\r\n ctx.strokeStyle = '#9c27b0';\r\n ctx.lineWidth = 2;\r\n \r\n // Cylinder shape\r\n const cylinderHeight = node.height * 0.8;\r\n const ellipseHeight = node.height * 0.2;\r\n \r\n // Draw cylinder body\r\n ctx.beginPath();\r\n ctx.moveTo(node.x, node.y + ellipseHeight);\r\n ctx.lineTo(node.x, node.y + cylinderHeight);\r\n ctx.bezierCurveTo(\r\n node.x, node.y + node.height,\r\n node.x + node.width, node.y + node.height,\r\n node.x + node.width, node.y + cylinderHeight\r\n );\r\n ctx.lineTo(node.x + node.width, node.y + ellipseHeight);\r\n ctx.fill();\r\n ctx.stroke();\r\n \r\n // Draw top ellipse\r\n ctx.beginPath();\r\n ctx.ellipse(\r\n node.x + node.width/2,\r\n node.y + ellipseHeight,\r\n node.width/2,\r\n ellipseHeight,\r\n 0, 0, 2 * Math.PI\r\n );\r\n ctx.fill();\r\n ctx.stroke();\r\n }\r\n\r\n private drawService(node: DeploymentNode) {\r\n const ctx = this.ctx;\r\n ctx.fillStyle = '#f4f8e8';\r\n ctx.strokeStyle = '#8bc34a';\r\n ctx.lineWidth = 2;\r\n \r\n // Hexagon\r\n const side = node.width/4;\r\n ctx.beginPath();\r\n ctx.moveTo(node.x + side, node.y);\r\n ctx.lineTo(node.x + node.width - side, node.y);\r\n ctx.lineTo(node.x + node.width, node.y + node.height/2);\r\n ctx.lineTo(node.x + node.width - side, node.y + node.height);\r\n ctx.lineTo(node.x + side, node.y + node.height);\r\n ctx.lineTo(node.x, node.y + node.height/2);\r\n ctx.closePath();\r\n ctx.fill();\r\n ctx.stroke();\r\n }\r\n\r\n private drawContainer(node: DeploymentNode) {\r\n const ctx = this.ctx;\r\n ctx.fillStyle = '#f8f0e8';\r\n ctx.strokeStyle = '#ff9800';\r\n ctx.lineWidth = 2;\r\n \r\n // Container shape with docker-like waves\r\n ctx.fillRect(node.x, node.y, node.width, node.height);\r\n ctx.strokeRect(node.x, node.y, node.width, node.height);\r\n \r\n // Wave pattern\r\n const waveHeight = 8;\r\n const waveWidth = node.width/4;\r\n ctx.beginPath();\r\n for (let x = node.x; x < node.x + node.width; x += waveWidth) {\r\n ctx.bezierCurveTo(\r\n x + waveWidth/3, node.y + waveHeight,\r\n x + 2*waveWidth/3, node.y - waveHeight,\r\n x + waveWidth, node.y\r\n );\r\n }\r\n ctx.stroke();\r\n }\r\n\r\n private drawConnections() {\r\n const ctx = this.ctx;\r\n ctx.save();\r\n \r\n this.connections.forEach(conn => {\r\n const fromNode = this.nodes.find(n => n.id === conn.from)!;\r\n const toNode = this.nodes.find(n => n.id === conn.to)!;\r\n \r\n // Calculate connection points using smart routing\r\n const points = this.calculateConnectionPoints(fromNode, toNode);\r\n \r\n ctx.beginPath();\r\n ctx.moveTo(points[0].x, points[0].y);\r\n \r\n // Draw connection line with different styles based on type\r\n switch (conn.type) {\r\n case 'deploys':\r\n ctx.setLineDash([5, 5]);\r\n ctx.strokeStyle = '#4a90e2';\r\n break;\r\n case 'depends':\r\n ctx.setLineDash([]);\r\n ctx.strokeStyle = '#ff9800';\r\n break;\r\n case 'communicates':\r\n ctx.setLineDash([10, 3]);\r\n ctx.strokeStyle = '#8bc34a';\r\n break;\r\n }\r\n \r\n ctx.lineWidth = 2;\r\n \r\n // Draw connection using bezier curves for smooth routing\r\n if (points.length === 4) {\r\n ctx.bezierCurveTo(\r\n points[1].x, points[1].y,\r\n points[2].x, points[2].y,\r\n points[3].x, points[3].y\r\n );\r\n } else {\r\n points.slice(1).forEach(point => {\r\n ctx.lineTo(point.x, point.y);\r\n });\r\n }\r\n \r\n ctx.stroke();\r\n \r\n // Draw arrow\r\n this.drawArrow(points[points.length-2], points[points.length-1]);\r\n });\r\n \r\n ctx.restore();\r\n }\r\n\r\n private calculateConnectionPoints(from: DeploymentNode, to: DeploymentNode) {\r\n // Smart routing algorithm to avoid crossing nodes\r\n const fromCenter = {\r\n x: from.x + from.width/2,\r\n y: from.y + from.height/2\r\n };\r\n const toCenter = {\r\n x: to.x + to.width/2,\r\n y: to.y + to.height/2\r\n };\r\n \r\n // Calculate intermediate points for bezier curve\r\n const dx = toCenter.x - fromCenter.x;\r\n const dy = toCenter.y - fromCenter.y;\r\n const distance = Math.sqrt(dx*dx + dy*dy);\r\n \r\n return [\r\n fromCenter,\r\n {\r\n x: fromCenter.x + dx/3,\r\n y: fromCenter.y + dy/3\r\n },\r\n {\r\n x: fromCenter.x + 2*dx/3,\r\n y: fromCenter.y + 2*dy/3\r\n },\r\n toCenter\r\n ];\r\n }\r\n\r\n private drawArrow(from: {x: number, y: number}, to: {x: number, y: number}) {\r\n const ctx = this.ctx;\r\n const angle = Math.atan2(to.y - from.y, to.x - from.x);\r\n const arrowLength = 10;\r\n \r\n ctx.beginPath();\r\n ctx.moveTo(to.x, to.y);\r\n ctx.lineTo(\r\n to.x - arrowLength * Math.cos(angle - Math.PI/6),\r\n to.y - arrowLength * Math.sin(angle - Math.PI/6)\r\n );\r\n ctx.moveTo(to.x, to.y);\r\n ctx.lineTo(\r\n to.x - arrowLength * Math.cos(angle + Math.PI/6),\r\n to.y - arrowLength * Math.sin(angle + Math.PI/6)\r\n );\r\n ctx.stroke();\r\n }\r\n\r\n onMouseDown(event: MouseEvent) {\r\n const rect = this.canvasRef.nativeElement.getBoundingClientRect();\r\n const x = event.clientX - rect.left;\r\n const y = event.clientY - rect.top;\r\n \r\n // Find clicked node\r\n this.draggedNode = this.nodes.find(node => \r\n x >= node.x && x <= node.x + node.width &&\r\n y >= node.y && y <= node.y + node.height\r\n ) || null;\r\n \r\n if (this.draggedNode) {\r\n this.dragStartX = x;\r\n this.dragStartY = y;\r\n this.nodeOffsetX = x - this.draggedNode.x;\r\n this.nodeOffsetY = y - this.draggedNode.y;\r\n }\r\n }\r\n\r\n onMouseMove(event: MouseEvent) {\r\n if (!this.draggedNode) return;\r\n \r\n const rect = this.canvasRef.nativeElement.getBoundingClientRect();\r\n const x = event.clientX - rect.left;\r\n const y = event.clientY - rect.top;\r\n \r\n this.draggedNode.x = x - this.nodeOffsetX;\r\n this.draggedNode.y = y - this.nodeOffsetY;\r\n \r\n // Keep node within canvas bounds\r\n this.draggedNode.x = Math.max(0, Math.min(this.width - this.draggedNode.width, this.draggedNode.x));\r\n this.draggedNode.y = Math.max(0, Math.min(this.height - this.draggedNode.height, this.draggedNode.y));\r\n \r\n this.draw();\r\n }\r\n\r\n onMouseUp() {\r\n this.draggedNode = null;\r\n }\r\n\r\n autoLayout() {\r\n const iterations = 50;\r\n const nodeVelocities = this.nodes.map(() => ({ x: 0, y: 0 }));\r\n \r\n // Run force-directed layout algorithm\r\n for (let i = 0; i < iterations; i++) {\r\n // Calculate forces\r\n this.nodes.forEach((node1, i) => {\r\n let fx = 0;\r\n let fy = 0;\r\n \r\n // Repulsion between all nodes\r\n this.nodes.forEach((node2, j) => {\r\n if (i === j) return;\r\n \r\n const dx = node2.x - node1.x;\r\n const dy = node2.y - node1.y;\r\n const distance = Math.sqrt(dx*dx + dy*dy);\r\n \r\n if (distance < this.MIN_DISTANCE) {\r\n const force = this.REPULSION / (distance * distance);\r\n fx -= (dx / distance) * force;\r\n fy -= (dy / distance) * force;\r\n }\r\n });\r\n \r\n // Attraction along connections\r\n this.connections.forEach(conn => {\r\n if (conn.from === node1.id || conn.to === node1.id) {\r\n const other = this.nodes.find(n => \r\n n.id === (conn.from === node1.id ? conn.to : conn.from)\r\n )!;\r\n \r\n const dx = other.x - node1.x;\r\n const dy = other.y - node1.y;\r\n const distance = Math.sqrt(dx*dx + dy*dy);\r\n \r\n fx += dx * this.ATTRACTION;\r\n fy += dy * this.ATTRACTION;\r\n }\r\n });\r\n \r\n // Update velocities with damping\r\n nodeVelocities[i].x = (nodeVelocities[i].x + fx) * this.DAMPING;\r\n nodeVelocities[i].y = (nodeVelocities[i].y + fy) * this.DAMPING;\r\n });\r\n \r\n // Update positions\r\n this.nodes.forEach((node, i) => {\r\n node.x += nodeVelocities[i].x;\r\n node.y += nodeVelocities[i].y;\r\n \r\n // Keep nodes within bounds\r\n node.x = Math.max(0, Math.min(this.width - node.width, node.x));\r\n node.y = Math.max(0, Math.min(this.height - node.height, node.y));\r\n });\r\n }\r\n \r\n // Check for overlaps and adjust if necessary\r\n this.resolveOverlaps();\r\n this.draw();\r\n }\r\n\r\n private resolveOverlaps() {\r\n const padding = 20; // Minimum space between nodes\r\n let hasOverlap = true;\r\n let iterations = 0;\r\n const maxIterations = 100;\r\n\r\n while (hasOverlap && iterations < maxIterations) {\r\n hasOverlap = false;\r\n iterations++;\r\n\r\n for (let i = 0; i < this.nodes.length; i++) {\r\n for (let j = i + 1; j < this.nodes.length; j++) {\r\n const node1 = this.nodes[i];\r\n const node2 = this.nodes[j];\r\n\r\n // Check for overlap\r\n if (this.isOverlapping(node1, node2, padding)) {\r\n hasOverlap = true;\r\n \r\n // Calculate overlap resolution vector\r\n const dx = node2.x - node1.x;\r\n const dy = node2.y - node1.y;\r\n const distance = Math.sqrt(dx*dx + dy*dy);\r\n \r\n // Minimum distance needed\r\n const minDistance = Math.sqrt(\r\n Math.pow(node1.width/2 + node2.width/2 + padding, 2) +\r\n Math.pow(node1.height/2 + node2.height/2 + padding, 2)\r\n );\r\n \r\n // Move nodes apart\r\n const moveX = (dx/distance) * (minDistance - distance) / 2;\r\n const moveY = (dy/distance) * (minDistance - distance) / 2;\r\n \r\n node1.x -= moveX;\r\n node1.y -= moveY;\r\n node2.x += moveX;\r\n node2.y += moveY;\r\n \r\n // Keep within bounds\r\n this.nodes.forEach(node => {\r\n node.x = Math.max(0, Math.min(this.width - node.width, node.x));\r\n node.y = Math.max(0, Math.min(this.height - node.height, node.y));\r\n });\r\n }\r\n }\r\n }\r\n }\r\n }\r\n\r\n private isOverlapping(node1: DeploymentNode, node2: DeploymentNode, padding: number): boolean {\r\n return !(\r\n node1.x + node1.width + padding < node2.x ||\r\n node2.x + node2.width + padding < node1.x ||\r\n node1.y + node1.height + padding < node2.y ||\r\n node2.y + node2.height + padding < node1.y\r\n );\r\n }\r\n\r\n // Optional: Add capability to save/load layouts\r\n saveLayout(): string {\r\n return JSON.stringify({\r\n nodes: this.nodes,\r\n connections: this.connections\r\n });\r\n }\r\n\r\n loadLayout(layoutJson: string) {\r\n const layout = JSON.parse(layoutJson);\r\n this.nodes = layout.nodes;\r\n this.connections = layout.connections;\r\n this.draw();\r\n }\r\n}","// ixt-deployment.module.ts\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { IxtDeploymentDiagram } from './ixt-deployment.diagram';\r\n\r\n@NgModule({\r\n declarations: [\r\n IxtDeploymentDiagram\r\n ],\r\n imports: [\r\n CommonModule\r\n ],\r\n exports: [\r\n IxtDeploymentDiagram\r\n ]\r\n})\r\nexport class IxtDeploymentModule { }\r\n\r\n","// ixt-deployment.index.ts\r\nexport * from './ixt-deployment.diagram';\r\nexport * from './ixt-deployment.module';\r\nexport * from './ixt-deployment.types';","// ixt-ebnf.diagram.ts\r\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { Point } from './ixt-ebnf.types';\r\n\r\ninterface Node {\r\n id: string;\r\n x: number;\r\n y: number;\r\n width: number;\r\n height: number;\r\n isDragging: boolean;\r\n type: 'terminal' | 'nonterminal' | 'operator';\r\n label: string;\r\n}\r\n\r\ninterface Edge {\r\n from: string;\r\n to: string;\r\n type: 'sequence' | 'alternative' | 'optional' | 'repetition';\r\n}\r\n\r\n@Component({\r\n selector: 'ixt-ebnf',\r\n template: `\r\n <div class=\"diagram-container\">\r\n <canvas #canvas\r\n (mousedown)=\"onMouseDown($event)\"\r\n (mousemove)=\"onMouseMove($event)\"\r\n (mouseup)=\"onMouseUp()\"\r\n [width]=\"width\"\r\n [height]=\"height\">\r\n </canvas>\r\n <button class=\"auto-layout-btn\" (click)=\"autoLayout()\">Auto Layout</button>\r\n </div>\r\n `,\r\n styles: [`\r\n .diagram-container {\r\n position: relative;\r\n border: 1px solid #ccc;\r\n }\r\n .auto-layout-btn {\r\n position: absolute;\r\n top: 10px;\r\n right: 10px;\r\n padding: 8px 16px;\r\n background: #4a90e2;\r\n color: white;\r\n border: none;\r\n border-radius: 4px;\r\n cursor: pointer;\r\n }\r\n `]\r\n})\r\nexport class IxtEbnfDiagram implements OnInit {\r\n @ViewChild('canvas', { static: true }) canvasRef!: ElementRef<HTMLCanvasElement>;\r\n private ctx!: CanvasRenderingContext2D;\r\n \r\n width = 1200;\r\n height = 800;\r\n \r\n nodes: Node[] = [\r\n // Git command grammar nodes\r\n { id: 'git', x: 50, y: 50, width: 80, height: 40, isDragging: false, type: 'terminal', label: 'git' },\r\n { id: 'command', x: 200, y: 50, width: 120, height: 40, isDragging: false, type: 'nonterminal', label: 'command' },\r\n { id: 'commit', x: 400, y: 50, width: 100, height: 40, isDragging: false, type: 'terminal', label: 'commit' },\r\n { id: 'push', x: 400, y: 150, width: 100, height: 40, isDragging: false, type: 'terminal', label: 'push' },\r\n { id: 'pull', x: 400, y: 250, width: 100, height: 40, isDragging: false, type: 'terminal', label: 'pull' },\r\n { id: 'branch', x: 400, y: 350, width: 100, height: 40, isDragging: false, type: 'terminal', label: 'branch' },\r\n { id: 'options', x: 600, y: 50, width: 120, height: 40, isDragging: false, type: 'nonterminal', label: 'options' },\r\n { id: 'args', x: 800, y: 50, width: 100, height: 40, isDragging: false, type: 'nonterminal', label: 'args' }\r\n ];\r\n\r\n edges: Edge[] = [\r\n { from: 'git', to: 'command', type: 'sequence' },\r\n { from: 'command', to: 'commit', type: 'alternative' },\r\n { from: 'command', to: 'push', type: 'alternative' },\r\n { from: 'command', to: 'pull', type: 'alternative' },\r\n { from: 'command', to: 'branch', type: 'alternative' },\r\n { from: 'commit', to: 'options', type: 'sequence' },\r\n { from: 'options', to: 'args', type: 'optional' }\r\n ];\r\n\r\n private draggedNode: Node | null = null;\r\n private lastX = 0;\r\n private lastY = 0;\r\n\r\n ngOnInit() {\r\n this.ctx = this.canvasRef.nativeElement.getContext('2d')!;\r\n this.draw();\r\n }\r\n\r\n private drawNodes() {\r\n this.nodes.forEach(node => {\r\n this.ctx.beginPath();\r\n \r\n // Different styles for different node types\r\n switch (node.type) {\r\n case 'terminal':\r\n this.ctx.rect(node.x, node.y, node.width, node.height);\r\n break;\r\n case 'nonterminal':\r\n this.roundRect(node.x, node.y, node.width, node.height, 10);\r\n break;\r\n case 'operator':\r\n this.ctx.ellipse(\r\n node.x + node.width/2,\r\n node.y + node.height/2,\r\n node.width/2,\r\n node.height/2,\r\n 0, 0, Math.PI * 2\r\n );\r\n break;\r\n }\r\n \r\n this.ctx.strokeStyle = '#333';\r\n this.ctx.lineWidth = 2;\r\n this.ctx.stroke();\r\n \r\n // Draw label\r\n this.ctx.fillStyle = '#000';\r\n this.ctx.font = '14px Arial';\r\n this.ctx.textAlign = 'center';\r\n this.ctx.textBaseline = 'middle';\r\n this.ctx.fillText(\r\n node.label,\r\n node.x + node.width/2,\r\n node.y + node.height/2\r\n );\r\n });\r\n }\r\n\r\n private drawEdges() {\r\n this.edges.forEach(edge => {\r\n const fromNode = this.nodes.find(n => n.id === edge.from)!;\r\n const toNode = this.nodes.find(n => n.id === edge.to)!;\r\n \r\n // Calculate connection points using smart routing\r\n const points = this.calculateEdgePoints(fromNode, toNode);\r\n \r\n this.ctx.beginPath();\r\n this.ctx.moveTo(points[0].x, points[0].y);\r\n \r\n // Draw curved lines for better aesthetics\r\n if (points.length === 3) {\r\n this.ctx.quadraticCurveTo(\r\n points[1].x, points[1].y,\r\n points[2].x, points[2].y\r\n );\r\n }\r\n \r\n this.ctx.strokeStyle = '#666';\r\n this.ctx.lineWidth = 1.5;\r\n this.ctx.stroke();\r\n \r\n // Draw arrow\r\n this.drawArrow(points[points.length-2], points[points.length-1]);\r\n \r\n // Draw edge type indicator\r\n if (edge.type !== 'sequence') {\r\n const midPoint = this.getMidPoint(points);\r\n this.drawEdgeType(edge.type, midPoint);\r\n }\r\n });\r\n }\r\n\r\n private calculateEdgePoints(from: Node, to: Node) {\r\n // Smart routing algorithm to avoid crossing nodes\r\n const points = [];\r\n const fromCenter = {\r\n x: from.x + from.width/2,\r\n y: from.y + from.height/2\r\n };\r\n const toCenter = {\r\n x: to.x + to.width/2,\r\n y: to.y + to.height/2\r\n };\r\n \r\n // Add intermediate points for better routing\r\n if (Math.abs(fromCenter.y - toCenter.y) > 100) {\r\n points.push(\r\n { x: fromCenter.x + from.width/2, y: fromCenter.y },\r\n { x: (fromCenter.x + toCenter.x)/2, y: fromCenter.y },\r\n { x: (fromCenter.x + toCenter.x)/2, y: toCenter.y },\r\n { x: toCenter.x - to.width/2, y: toCenter.y }\r\n );\r\n } else {\r\n points.push(\r\n { x: fromCenter.x + from.width/2, y: fromCenter.y },\r\n { x: (fromCenter.x + toCenter.x)/2, y: (fromCenter.y + toCenter.y)/2 },\r\n { x: toCenter.x - to.width/2, y: toCenter.y }\r\n );\r\n }\r\n \r\n return points;\r\n }\r\n\r\n private drawArrow(from: {x: number, y: number}, to: {x: number, y: number}) {\r\n const angle = Math.atan2(to.y - from.y, to.x - from.x);\r\n const length = 10;\r\n \r\n this.ctx.beginPath();\r\n this.ctx.moveTo(to.x, to.y);\r\n this.ctx.lineTo(\r\n to.x - length * Math.cos(angle - Math.PI/6),\r\n to.y - length * Math.sin(angle - Math.PI/6)\r\n );\r\n this.ctx.moveTo(to.x, to.y);\r\n this.ctx.lineTo(\r\n to.x - length * Math.cos(angle + Math.PI/6),\r\n to.y - length * Math.sin(angle + Math.PI/6)\r\n );\r\n this.ctx.stroke();\r\n }\r\n\r\n private drawEdgeType(type: string, point: {x: number, y: number}) {\r\n this.ctx.fillStyle = '#fff';\r\n this.ctx.strokeStyle = '#666';\r\n \r\n switch (type) {\r\n case 'alternative':\r\n this.ctx.beginPath();\r\n this.ctx.arc(point.x, point.y, 8, 0, Math.PI * 2);\r\n this.ctx.fill();\r\n this.ctx.stroke();\r\n this.ctx.fillStyle = '#666';\r\n this.ctx.fillText('|', point.x, point.y + 1);\r\n break;\r\n case 'optional':\r\n this.ctx.beginPath();\r\n this.ctx.arc(point.x, point.y, 8, 0, Math.PI * 2);\r\n this.ctx.fill();\r\n this.ctx.stroke();\r\n this.ctx.fillStyle = '#666';\r\n this.ctx.fillText('?', point.x, point.y + 1);\r\n break;\r\n case 'repetition':\r\n this.ctx.beginPath();\r\n this.ctx.arc(point.x, point.y, 8, 0, Math.PI * 2);\r\n this.ctx.fill();\r\n this.ctx.stroke();\r\n this.ctx.fillStyle = '#666';\r\n this.ctx.fillText('*', point.x, point.y + 1);\r\n break;\r\n }\r\n }\r\n\r\n private roundRect(x: number, y: number, width: number, height: number, radius: number) {\r\n this.ctx.beginPath();\r\n this.ctx.moveTo(x + radius, y);\r\n this.ctx.lineTo(x + width - radius, y);\r\n this.ctx.arcTo(x + width, y, x + width, y + radius, radius);\r\n this.ctx.lineTo(x + width, y + height - radius);\r\n this.ctx.arcTo(x + width, y + height, x + width - radius, y + height, radius);\r\n this.ctx.lineTo(x + radius, y + height);\r\n this.ctx.arcTo(x, y + height, x, y + height - radius, radius);\r\n this.ctx.lineTo(x, y + radius);\r\n this.ctx.arcTo(x, y, x + radius, y, radius);\r\n this.ctx.closePath();\r\n }\r\n\r\n onMouseDown(event: MouseEvent) {\r\n const rect = this.canvasRef.nativeElement.getBoundingClientRect();\r\n const x = event.clientX - rect.left;\r\n const y = event.clientY - rect.top;\r\n \r\n this.nodes.forEach(node => {\r\n if (x >= node.x && x <= node.x + node.width &&\r\n y >= node.y && y <= node.y + node.height) {\r\n node.isDragging = true;\r\n this.draggedNode = node;\r\n this.lastX = x;\r\n this.lastY = y;\r\n }\r\n });\r\n }\r\n\r\n onMouseMove(event: MouseEvent) {\r\n if (!this.draggedNode) return;\r\n \r\n const rect = this.canvasRef.nativeElement.getBoundingClientRect();\r\n const x = event.clientX - rect.left;\r\n const y = event.clientY - rect.top;\r\n \r\n const dx = x - this.lastX;\r\n const dy = y - this.lastY;\r\n \r\n this.draggedNode.x += dx;\r\n this.draggedNode.y += dy;\r\n \r\n this.lastX = x;\r\n this.lastY = y;\r\n \r\n this.draw();\r\n }\r\n\r\n onMouseUp() {\r\n if (this.draggedNode) {\r\n this.draggedNode.isDragging = false;\r\n this.draggedNode = null;\r\n }\r\n }\r\n\r\n autoLayout() {\r\n // Force-directed layout with hierarchical constraints\r\n const iterations = 100;\r\n const k = 100; // Spring constant\r\n const c = 200; // Repulsion constant\r\n \r\n for (let i = 0; i < iterations; i++) {\r\n // Calculate forces\r\n this.nodes.forEach(node1 => {\r\n let fx = 0;\r\n let fy = 0;\r\n \r\n // Repulsion between nodes\r\n this.nodes.forEach(node2 => {\r\n if (node1 !== node2) {\r\n const dx = node1.x - node2.x;\r\n const dy = node1.y - node2.y;\r\n const distance = Math.sqrt(dx * dx + dy * dy);\r\n \r\n if (distance < 200) {\r\n fx += (c / (distance * distance)) * dx / distance;\r\n fy += (c / (distance * distance)) * dy / distance;\r\n }\r\n }\r\n });\r\n \r\n // Spring forces for edges\r\n this.edges.forEach(edge => {\r\n if (edge.from === node1.id || edge.to === node1.id) {\r\n const other = this.nodes.find(n => \r\n n.id === (edge.from === node1.id ? edge.to : edge.from)\r\n )!;\r\n \r\n const dx = node1.x - other.x;\r\n const dy = node1.y - other.y;\r\n const distance = Math.sqrt(dx * dx + dy * dy);\r\n \r\n fx -= k * dx / distance;\r\n fy -= k * dy / distance;\r\n }\r\n });\r\n \r\n // Apply forces with damping\r\n const damping = 0.9;\r\n node1.x += fx * damping;\r\n node1.y += fy * damping;\r\n \r\n // Keep nodes within bounds\r\n node1.x = Math.max(node1.width/2, Math.min(this.width - node1.width/2, node1.x));\r\n node1.y = Math.max(node1.height/2, Math.min(this.height - node1.height/2, node1.y));\r\n });\r\n }\r\n }\r\n \r\n private applyHierarchicalConstraints() {\r\n // Group nodes by their levels\r\n const levels: { [key: number]: Node[] } = {};\r\n const visited = new Set<string>();\r\n \r\n const assignLevel = (nodeId: string, level: number) => {\r\n if (visited.has(nodeId)) return;\r\n visited.add(nodeId);\r\n \r\n const node = this.nodes.find(n => n.id === nodeId)!;\r\n levels[level] = levels[level] || [];\r\n levels[level].push(node);\r\n \r\n // Process children\r\n this.edges\r\n .filter(e => e.from === nodeId)\r\n .forEach(e => assignLevel(e.to, level + 1));\r\n };\r\n \r\n // Start with root nodes (nodes with no incoming edges)\r\n const rootNodes = this.nodes.filter(node => \r\n !this.edges.some(e => e.to === node.id)\r\n );\r\n \r\n rootNodes.forEach(node => assignLevel(node.id, 0));\r\n \r\n // Adjust vertical positions based on levels\r\n Object.entries(levels).forEach(([level, nodes]) => {\r\n const levelY = Number(level) * 150 + 50;\r\n const levelWidth = this.width - 100;\r\n const spacing = levelWidth / (nodes.length + 1);\r\n \r\n nodes.forEach((node, index) => {\r\n node.y = levelY;\r\n node.x = spacing * (index + 1);\r\n });\r\n });\r\n }\r\n\r\n private minimizeCrossings() {\r\n // Barycentric method to reduce edge crossings\r\n const levels = this.getLevels();\r\n \r\n for (let i = 1; i < Object.keys(levels).length; i++) {\r\n const currentLevel = levels[i];\r\n const upperLevel = levels[i - 1];\r\n \r\n currentLevel.forEach(node => {\r\n // Calculate barycenter\r\n const incomingEdges = this.edges.filter(e => e.to === node.id);\r\n if (incomingEdges.length > 0) {\r\n const avgX = incomingEdges.reduce((sum, edge) => {\r\n const sourceNode = upperLevel.find(n => n.id === edge.from)!;\r\n return sum + sourceNode.x;\r\n }, 0) / incomingEdges.length;\r\n \r\n node.x = avgX;\r\n }\r\n });\r\n \r\n // Sort nodes horizontally within level\r\n currentLevel.sort((a, b) => a.x - b.x);\r\n \r\n // Space nodes evenly\r\n const levelWidth = this.width - 100;\r\n const spacing = levelWidth / (currentLevel.length + 1);\r\n currentLevel.forEach((node, index) => {\r\n node.x = spacing * (index + 1);\r\n });\r\n }\r\n }\r\n\r\n private getLevels(): { [key: number]: Node[] } {\r\n const levels: { [key: number]: Node[] } = {};\r\n const visited = new Set<string>();\r\n \r\n const getNodeLevel = (nodeId: string): number => {\r\n if (visited.has(nodeId)) return -1;\r\n visited.add(nodeId);\r\n \r\n const incomingEdges = this.edges.filter(e => e.to === nodeId);\r\n if (incomingEdges.length === 0) return 0;\r\n \r\n const parentLevels = incomingEdges.map(e => getNodeLevel(e.from));\r\n return Math.max(...parentLevels) + 1;\r\n };\r\n \r\n this.nodes.forEach(node => {\r\n visited.clear();\r\n const level = getNodeLevel(node.id);\r\n levels[level] = levels[level] || [];\r\n levels[level].push(node);\r\n });\r\n \r\n return levels;\r\n }\r\n\r\n // Add export functionality\r\n exportLayout() {\r\n const layout = {\r\n nodes: this.nodes.map(node => ({\r\n id: node.id,\r\n x: node.x,\r\n y: node.y,\r\n type: node.type,\r\n label: node.label\r\n })),\r\n edges: this.edges\r\n };\r\n \r\n return JSON.stringify(layout, null, 2);\r\n }\r\n\r\n // Add import functionality\r\n importLayout(layoutStr: string) {\r\n try {\r\n const layout = JSON.parse(layoutStr);\r\n \r\n // Update node positions\r\n layout.nodes.forEach((importedNode: any) => {\r\n const node = this.nodes.find(n => n.id === importedNode.id);\r\n if (node) {\r\n node.x = importedNode.x;\r\n node.y = importedNode.y;\r\n }\r\n });\r\n \r\n this.draw();\r\n } catch (error) {\r\n console.error('Failed to import layout:', error);\r\n }\r\n }\r\n\r\n // Add zoom functionality\r\n private scale = 1;\r\n \r\n zoomIn() {\r\n this.scale = Math.min(this.scale * 1.2, 3);\r\n this.applyZoom();\r\n }\r\n \r\n zoomOut() {\r\n this.scale = Math.max(this.scale / 1.2, 0.3);\r\n this.applyZoom();\r\n }\r\n \r\n private applyZoom() {\r\n this.ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n this.ctx.clearRect(0, 0, this.width, this.height);\r\n this.ctx.setTransform(this.scale, 0, 0, this.scale, 0, 0);\r\n this.draw();\r\n }\r\n\r\n // Add node selection and highlighting\r\n private selectedNode: Node | null = null;\r\n \r\n selectNode(event: MouseEvent) {\r\n const rect = this.canvasRef.nativeElement.getBoundingClientRect();\r\n const x = (event.clientX - rect.left) / this.scale;\r\n const y = (event.clientY - rect.top) / this.scale;\r\n \r\n this.selectedNode = null;\r\n \r\n for (const node of this.nodes) {\r\n if (x >= node.x && x <= node.x + node.width &&\r\n y >= node.y && y <= node.y + node.height) {\r\n this.selectedNode = node;\r\n break;\r\n }\r\n }\r\n \r\n this.draw();\r\n }\r\n \r\n private drawSelectedNode() {\r\n if (!this.selectedNode) return;\r\n \r\n this.ctx.strokeStyle = '#4a90e2';\r\n this.ctx.lineWidth = 3;\r\n this.ctx.strokeRect(\r\n this.selectedNode.x - 2,\r\n this.selectedNode.y - 2,\r\n this.selectedNode.width + 4,\r\n this.selectedNode.height + 4\r\n );\r\n }\r\n\r\n // Override the original draw method to include selection\r\n private draw() {\r\n this.ctx.clearRect(0, 0, this.width / this.scale, this.height / this.scale);\r\n this.drawEdges();\r\n this.drawNodes();\r\n if (this.selectedNode) {\r\n this.drawSelectedNode();\r\n }\r\n }\r\n\r\n private getMidPoint(points: Point[]): Point {\r\n if (!points || points.length === 0) {\r\n return { x: 0, y: 0 };\r\n }\r\n \r\n if (points.length === 1) {\r\n return points[0];\r\n }\r\n \r\n const midIndex = Math.floor((points.length - 1) / 2);\r\n \r\n if (points.length % 2 === 0) {\r\n // Even number of points - average the two middle points\r\n const point1 = points[midIndex];\r\n const point2 = points[midIndex + 1];\r\n return {\r\n x: (point1.x + point2.x) / 2,\r\n y: (point1.y + point2.y) / 2\r\n };\r\n } else {\r\n // Odd number of points - return the middle point\r\n return points[midIndex];\r\n }\r\n }\r\n\r\n private getPointOnCurve(points: Point[], t: number): Point {\r\n if (points.length === 2) {\r\n // Linear interpolation\r\n return {\r\n x: points[0].x + (points[1].x - points[0].x) * t,\r\n y: points[0].y + (points[1].y - points[0].y) * t\r\n };\r\n } else if (points.length === 3) {\r\n // Quadratic bezier\r\n const mt = 1 - t;\r\n return {\r\n x: mt * mt * points[0].x + 2 * mt * t * points[1].x + t * t * points[2].x,\r\n y: mt * mt * points[0].y + 2 * mt * t * points[1].y + t * t * points[2].y\r\n };\r\n } else if (points.length === 4) {\r\n // Cubic bezier\r\n const mt = 1 - t;\r\n return {\r\n x: mt * mt * mt * points[0].x + 3 * mt * mt * t * points[1].x + \r\n 3 * mt * t * t * points[2].x + t * t * t * points[3].x,\r\n y: mt * mt * mt * points[0].y + 3 * mt * mt * t * points[1].y + \r\n 3 * mt * t * t * points[2].y + t * t * t * points[3].y\r\n };\r\n }\r\n // Fall back to linear interpolation between first and last points\r\n return this.getPointOnCurve([points[0], points[points.length - 1]], t);\r\n }\r\n}","// ixt-ebnf.module.ts\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { IxtEbnfDiagram } from './ixt-ebnf.diagram';\r\n\r\n@NgModule({\r\n declarations: [\r\n IxtEbnfDiagram\r\n ],\r\n imports: [\r\n CommonModule\r\n ],\r\n exports: [\r\n IxtEbnfDiagram\r\n ]\r\n})\r\nexport class IxtEbnfModule {}\r\n\r\n","// ixt-ebnf.types.ts\r\n\r\n/**\r\n * Represents the type of node in the EBNF diagram\r\n */\r\nexport type NodeType = 'terminal' | 'nonterminal' | 'operator';\r\n\r\n/**\r\n * Represents the type of edge connection in the EBNF diagram\r\n */\r\nexport type EdgeType = 'sequence' | 'alternative' | 'optional' | 'repetition';\r\n\r\n/**\r\n * Represents a position in the 2D space\r\n */\r\nexport interface Point {\r\n x: number;\r\n y: number;\r\n}\r\n\r\n/**\r\n * Represents the dimensions of a node\r\n */\r\nexport interface Dimensions {\r\n width: number;\r\n height: number;\r\n}\r\n\r\n/**\r\n * Represents a node in the EBNF diagram\r\n */\r\nexport interface EbnfNode extends Point, Dimensions {\r\n id: string;\r\n label: string;\r\n type: NodeType;\r\n isDragging: boolean;\r\n selected?: boolean;\r\n data?: Record<string, any>; // Optional custom data\r\n}\r\n\r\n/**\r\n * Represents an edge connecting two nodes in the EBNF diagram\r\n */\r\nexport interface EbnfEdge {\r\n id: string;\r\n from: string;\r\n to: string;\r\n type: EdgeType;\r\n label?: string;\r\n points?: Point[]; // Control points for edge routing\r\n selected?: boolean;\r\n}\r\n\r\n/**\r\n * Configuration options for the EBNF diagram\r\n */\r\nexport interface EbnfConfig {\r\n width: number;\r\n height: number;\r\n nodePadding: number;\r\n levelSpacing: number;\r\n nodeSpacing: number;\r\n edgeRadius: number;\r\n fontSize: number;\r\n fontFamily: string;\r\n colors: EbnfColors;\r\n animation: EbnfAnimationConfig;\r\n}\r\n\r\n/**\r\n * Color configuration for the diagram\r\n */\r\nexport interface EbnfColors {\r\n terminal: {\r\n fill: string;\r\n stroke: string;\r\n text: string;\r\n };\r\n nonterminal: {\r\n fill: string;\r\n stroke: string;\r\n text: string;\r\n };\r\n operator: {\r\n fill: string;\r\n stroke: string;\r\n text: string;\r\n };\r\n edge: {\r\n line: string;\r\n text: string;\r\n arrow: string;\r\n };\r\n selection: {\r\n fill: string;\r\n stroke: string;\r\n };\r\n}\r\n\r\n/**\r\n * Animation configuration\r\n */\r\nexport interface EbnfAnimationConfig {\r\n duration: number;\r\n easing: 'linear' | 'easeIn' | 'easeOut' | 'easeInOut';\r\n}\r\n\r\n/**\r\n * Layout options for the diagram\r\n */\r\nexport interface LayoutOptions {\r\n type: 'hierarchical' | 'force-directed' | 'radial';\r\n direction?: 'LR' | 'RL' | 'TB' | 'BT';\r\n alignGrid?: boolean;\r\n minimizeCrossings?: boolean;\r\n nodeSpacing?: number;\r\n rankSpacing?: number;\r\n}\r\n\r\n/**\r\n * Complete diagram state\r\n */\r\nexport interface DiagramState {\r\n nodes: EbnfNode[];\r\n edges: EbnfEdge[];\r\n config: EbnfConfig;\r\n layout: LayoutOptions;\r\n selectedItems: {\r\n nodes: string[];\r\n edges: string[];\r\n };\r\n}\r\n\r\n/**\r\n * Event types for diagram interactions\r\n */\r\nexport type DiagramEventType = \r\n | 'nodeClick'\r\n | 'nodeDoubleClick'\r\n | 'nodeDragStart'\r\n | 'nodeDrag'\r\n | 'nodeDragEnd'\r\n | 'edgeClick'\r\n | 'canvasClick'\r\n | 'selectionChange'\r\n | 'layoutChange';\r\n\r\n/**\r\n * Base event interface for diagram events\r\n */\r\nexport interface DiagramEvent {\r\n type: DiagramEventType;\r\n timestamp: number;\r\n}\r\n\r\n/**\r\n * Node-specific event interface\r\n */\r\nexport interface NodeEvent extends DiagramEvent {\r\n node: EbnfNode;\r\n position: Point;\r\n}\r\n\r\n/**\r\n * Edge-specific event interface\r\n */\r\nexport interface EdgeEvent extends DiagramEvent {\r\n edge: EbnfEdge;\r\n position: Point;\r\n}\r\n\r\n/**\r\n * Selection change event interface\r\n */\r\nexport interface SelectionChangeEvent extends DiagramEvent {\r\n selectedNodes: string[];\r\n selectedEdges: string[];\r\n previousSelection: {\r\n nodes: string[];\r\n edges: string[];\r\n };\r\n}\r\n\r\n/**\r\n * Layout change event interface\r\n */\r\nexport interface LayoutChangeEvent extends DiagramEvent {\r\n previousLayout: LayoutOptions;\r\n newLayout: LayoutOptions;\r\n}\r\n\r\n/**\r\n * View state for handling zoom and pan\r\n */\r\nexport interface ViewState {\r\n scale: number;\r\n translation: Point;\r\n bounds: {\r\n minX: number;\r\n minY: number;\r\n maxX: number;\r\n maxY: number;\r\n };\r\n}\r\n\r\n/**\r\n * Service interface for the EBNF diagram\r\n */\r\nexport interface IxtEbnfService {\r\n getLayout(): DiagramState;\r\n updateLayout(options: Partial<LayoutOptions>): void;\r\n addNode(node: Omit<EbnfNode, 'x' | 'y'>): EbnfNode;\r\n removeNode(nodeId: string): void;\r\n addEdge(edge: Omit<EbnfEdge, 'id'>): EbnfEdge;\r\n removeEdge(edgeId: string): void;\r\n selectItems(nodes: string[], edges: string[]): void;\r\n exportDiagram(): string;\r\n importDiagram(data: string): void;\r\n getViewState(): ViewState;\r\n setViewState(state: Partial<ViewState>): void;\r\n}","// ixt-ebnf.index.ts\r\nexport * from './ixt-ebnf.diagram';\r\nexport * from './ixt-ebnf.module';\r\n\r\n// Optional: You might also want interfaces for the component\r\n// ixt-ebnf.types.ts\r\nexport interface EbnfNode {\r\n id: string;\r\n x: number;\r\n y: number;\r\n width: number;\r\n height: number;\r\n isDragging: boolean;\r\n type: 'terminal' | 'nonterminal' | 'operator';\r\n label: string;\r\n}\r\n\r\nexport interface EbnfEdge {\r\n from: string;\r\n to: string;\r\n type: 'sequence' | 'alternative' | 'optional' | 'repetition';\r\n}\r\n\r\nexport interface EbnfLayout {\r\n nodes: EbnfNode[];\r\n edges: EbnfEdge[];\r\n}\r\n\r\n// Update ixt-ebnf.index.ts to include types\r\nexport * from './ixt-ebnf.types';","// ixt-flow-diagram.component.ts\r\nimport { Component, ElementRef, OnInit, ViewChild, AfterViewInit } from '@angular/core';\r\n\r\ninterface FlowNode {\r\n id: string;\r\n x: number;\r\n y: number;\r\n width: number;\r\n height: number;\r\n type: 'rectangle' | 'diamond' | 'circle';\r\n label: string;\r\n isDragging: boolean;\r\n}\r\n\r\ninterface FlowEdge {\r\n from: string;\r\n to: string;\r\n label?: string;\r\n}\r\n\r\ninterface Point {\r\n x: number;\r\n y: number;\r\n}\r\n\r\n@Component({\r\n selector: 'ixt-flow',\r\n template: `\r\n <div class=\"flow-diagram-container\">\r\n <canvas #canvas \r\n (mousedown)=\"onMouseDown($event)\"\r\n (mousemove)=\"onMouseMove($event)\"\r\n (mouseup)=\"onMouseUp()\"\r\n width=\"1200\" \r\n height=\"800\">\r\n </canvas>\r\n <button (click)=\"autoLayout()\" class=\"auto-layout-btn\">Auto Layout</button>\r\n </div>\r\n `,\r\n styles: [`\r\n .flow-diagram-container {\r\n position: relative;\r\n border: 1px solid #ccc;\r\n }\r\n .auto-layout-btn {\r\n position: absolute;\r\n top: 10px;\r\n right: 10px;\r\n padding: 8px 16px;\r\n background: #4CAF50;\r\n color: white;\r\n border: none;\r\n border-radius: 4px;\r\n cursor: pointer;\r\n }\r\n .auto-layout-btn:hover {\r\n background: #45a049;\r\n }\r\n `]\r\n})\r\nexport class IxtFlowDiagram implements OnInit, AfterViewInit {\r\n @ViewChild('canvas') canvasRef!: ElementRef<HTMLCanvasElement>;\r\n private ctx!: CanvasRenderingContext2D;\r\n private nodes: FlowNode[] = [];\r\n private edges: FlowEdge[] = [];\r\n private selectedNode: FlowNode | null = null;\r\n private dragOffset: Point = { x: 0, y: 0 };\r\n\r\n // Force-directed layout parameters\r\n private readonly REPULSION = 8000; // Node repulsion force\r\n private readonly ATTRACTION = 0.1; // Edge attraction force\r\n private readonly DAMPING = 0.9; // Velocity damping\r\n private readonly MIN_DISTANCE = 150; // Minimum distance between nodes\r\n\r\n constructor() {\r\n // Initialize sample deployment pipeline\r\n this.initializeGraph();\r\n }\r\n\r\n ngOnInit(): void {}\r\n\r\n ngAfterViewInit(): void {\r\n const canvas = this.canvasRef.nativeElement;\r\n this.ctx = canvas.getContext('2d')!;\r\n this.draw();\r\n }\r\n\r\n private initializeGraph(): void {\r\n // Initialize nodes with random positions\r\n this.nodes = [\r\n { id: 'source', x: 100, y: 100, width: 120, height: 60, type: 'rectangle', label: 'Source Code', isDragging: false },\r\n { id: 'build', x: 300, y: 100, width: 120, height: 60, type: 'rectangle', label: 'Build', isDragging: false },\r\n { id: 'test', x: 500, y: 100, width: 100, height: 100, type: 'diamond', label: 'Tests', isDragging: false },\r\n { id: 'staging', x: 700, y: 100, width: 120, height: 60, type: 'rectangle', label: 'Staging', isDragging: false },\r\n { id: 'approval', x: 900, y: 100, width: 80, height: 80, type: 'circle', label: 'Approval', isDragging: false },\r\n { id: 'prod', x: 1100, y: 100, width: 120, height: 60, type: 'rectangle', label: 'Production', isDragging: false }\r\n ];\r\n\r\n // Define relationships\r\n this.edges = [\r\n { from: 'source', to: 'build', label: 'commit' },\r\n { from: 'build', to: 'test', label: 'artifact' },\r\n { from: 'test', to: 'staging', label: 'passed' },\r\n { from: 'staging', to: 'approval', label: 'deploy' },\r\n { from: 'approval', to: 'prod', label: 'approved' }\r\n ];\r\n }\r\n\r\n private draw(): void {\r\n const canvas = this.canvasRef.nativeElement;\r\n this.ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n \r\n // Draw edges first (so they appear behind nodes)\r\n this.edges.forEach(edge => this.drawEdge(edge));\r\n \r\n // Draw nodes\r\n this.nodes.forEach(node => this.drawNode(node));\r\n }\r\n\r\n private drawNode(node: FlowNode): void {\r\n this.ctx.save();\r\n this.ctx.fillStyle = node.isDragging ? '#e0e0e0' : '#ffffff';\r\n this.ctx.strokeStyle = '#333333';\r\n this.ctx.lineWidth = 2;\r\n\r\n switch (node.type) {\r\n case 'rectangle':\r\n this.ctx.beginPath();\r\n this.ctx.rect(node.x, node.y, node.width, node.height);\r\n break;\r\n case 'diamond':\r\n this.ctx.beginPath();\r\n this.ctx.moveTo(node.x + node.width / 2, node.y);\r\n this.ctx.lineTo(node.x + node.width, node.y + node.height / 2);\r\n this.ctx.lineTo(node.x + node.width / 2, node.y + node.height);\r\n this.ctx.lineTo(node.x, node.y + node.height / 2);\r\n this.ctx.closePath();\r\n break;\r\n case 'circle':\r\n this.ctx.beginPath();\r\n this.ctx.arc(\r\n node.x + node.width / 2,\r\n node.y + node.height / 2,\r\n Math.min(node.width, node.height) / 2,\r\n 0,\r\n Math.PI * 2\r\n );\r\n break;\r\n }\r\n\r\n this.ctx.fill();\r\n this.ctx.stroke();\r\n\r\n // Draw label\r\n this.ctx.fillStyle = '#000000';\r\n this.ctx.font = '14px Arial';\r\n this.ctx.textAlign = 'center';\r\n this.ctx.textBaseline = 'middle';\r\n this.ctx.fillText(\r\n node.label,\r\n node.x + node.width / 2,\r\n node.y + node.height / 2\r\n );\r\n\r\n this.ctx.restore();\r\n }\r\n\r\n private drawEdge(edge: FlowEdge): void {\r\n const fromNode = this.nodes.find(n => n.id === edge.from)!;\r\n const toNode = this.nodes.find(n => n.id === edge.to)!;\r\n\r\n // Calculate edge points using smart routing\r\n const points = this.calculateEdgePoints(fromNode, toNode);\r\n \r\n this.ctx.save();\r\n this.ctx.strokeStyle = '#666666';\r\n this.ctx.lineWidth = 2;\r\n \r\n // Draw path\r\n this.ctx.beginPath();\r\n this.ctx.moveTo(points[0].x, points[0].y);\r\n \r\n // Draw curved path using bezier curves\r\n if (points.length === 4) {\r\n this.ctx.bezierCurveTo(\r\n points[1].x, points[1].y,\r\n points[2].x, points[2].y,\r\n points[3].x, points[3].y\r\n );\r\n }\r\n \r\n this.ctx.stroke();\r\n\r\n // Draw arrow\r\n this.drawArrow(points[points.length - 2], points[points.length - 1]);\r\n\r\n // Draw label if exists\r\n if (edge.label) {\r\n const midPoint = this.getMidPoint(points);\r\n this.ctx.fillStyle = '#000000';\r\n this.ctx.font = '12px Arial';\r\n this.ctx.textAlign = 'center';\r\n this.ctx.textBaseline = 'middle';\r\n this.ctx.fillText(edge.label, midPoint.x, midPoint.y - 10);\r\n }\r\n\r\n this.ctx.restore();\r\n }\r\n\r\n private calculateEdgePoints(from: FlowNode, to: FlowNode): Point[] {\r\n const fromCenter = {\r\n x: from.x + from.width / 2,\r\n y: from.y + from.height / 2\r\n };\r\n \r\n const toCenter = {\r\n x: to.x + to.width / 2,\r\n y: to.y + to.height / 2\r\n };\r\n\r\n // Calculate control points for bezier curve\r\n const dx = toCenter.x - fromCenter.x;\r\n const dy = toCenter.y - fromCenter.y;\r\n const distance = Math.sqrt(dx * dx + dy * dy);\r\n \r\n const control1 = {\r\n x: fromCenter.x + dx / 3,\r\n y: fromCenter.y + dy / 3\r\n };\r\n \r\n const control2 = {\r\n x: fromCenter.x + 2 * dx / 3,\r\n y: fromCenter.y + 2 * dy / 3\r\n };\r\n\r\n return [fromCenter, control1, control2, toCenter];\r\n }\r\n\r\n private drawArrow(from: Point, to: Point): void {\r\n const headLength = 10;\r\n const angle = Math.atan2(to.y - from.y, to.x - from.x);\r\n \r\n this.ctx.beginPath();\r\n this.ctx.moveTo(to.x, to.y);\r\n this.ctx.lineTo(\r\n to.x - headLength * Math.cos(angle - Math.PI / 6),\r\n to.y - headLength * Math.sin(angle - Math.PI / 6)\r\n );\r\n this.ctx.moveTo(to.x, to.y);\r\n this.ctx.lineTo(\r\n to.x - headLength * Math.cos(angle + Math.PI / 6),\r\n to.y - headLength * Math.sin(angle + Math.PI / 6)\r\n );\r\n this.ctx.stroke();\r\n }\r\n\r\n private getMidPoint(points: Point[]): Point {\r\n const mid = Math.floor(points.length / 2);\r\n return points[mid];\r\n }\r\n\r\n // Mouse event handlers\r\n onMouseDown(event: MouseEvent): void {\r\n const rect = this.canvasRef.nativeElement.getBoundingClientRect();\r\n const x = event.clientX - rect.left;\r\n const y = event.clientY - rect.top;\r\n\r\n // Find clicked node\r\n this.selectedNode = this.nodes.find(node =>\r\n x >= node.x && x <= node.x + node.width &&\r\n y >= node.y && y <= node.y + node.height\r\n ) || null;\r\n\r\n if (this.selectedNode) {\r\n this.selectedNode.isDragging = true;\r\n this.dragOffset = {\r\n x: x - this.selectedNode.x,\r\n y: y - this.selectedNode.y\r\n };\r\n }\r\n }\r\n\r\n onMouseMove(event: MouseEvent): void {\r\n if (this.selectedNode?.isDragging) {\r\n const rect = this.canvasRef.nativeElement.getBoundingClientRect();\r\n const x = event.clientX - rect.left;\r\n const y = event.clientY - rect.top;\r\n\r\n this.selectedNode.x = x - this.dragOffset.x;\r\n this.selectedNode.y = y - this.dragOffset.y;\r\n\r\n this.draw();\r\n }\r\n }\r\n\r\n onMouseUp(): void {\r\n if (this.selectedNode) {\r\n this.selectedNode.isDragging = false;\r\n this.selectedNode = null;\r\n }\r\n }\r\n\r\n // Auto layout implementation using force-directed algorithm\r\n autoLayout(): void {\r\n const iterations = 100;\r\n const velocities = this.nodes.map(() => ({ x: 0, y: 0 }));\r\n\r\n for (let i = 0; i < iterations; i++) {\r\n // Calculate forces\r\n this.nodes.forEach((node1, i) => {\r\n velocities[i] = { x: 0, y: 0 };\r\n\r\n // Repulsion forces between nodes\r\n this.nodes.forEach((node2, j) => {\r\n if (i !== j) {\r\n const dx = node2.x - node1.x;\r\n const dy = node2.y - node1.y;\r\n const distance = Math.sqrt(dx * dx + dy * dy);\r\n \r\n if (distance < this.MIN_DISTANCE) {\r\n const force = this.REPULSION / (distance * distance);\r\n velocities[i].x -= (dx / distance) * force;\r\n velocities[i].y -= (dy / distance) * force;\r\n }\r\n }\r\n });\r\n\r\n // Attraction forces along edges\r\n this.edges.forEach(edge => {\r\n if (edge.from === node1.id) {\r\n const node2 = this.nodes.find(n => n.id === edge.to)!;\r\n const dx = node2.x - node1.x;\r\n const dy = node2.y - node1.y;\r\n const distance = Math.sqrt(dx * dx + dy * dy);\r\n \r\n velocities[i].x += dx * this.ATTRACTION;\r\n velocities[i].y += dy * this.ATTRACTION;\r\n }\r\n });\r\n });\r\n\r\n // Apply velocities with damping\r\n this.nodes.forEach((node, i) => {\r\n node.x += velocities[i].x * this.DAMPING;\r\n node.y += velocities[i].y * this.DAMPING;\r\n });\r\n }\r\n\r\n this.draw();\r\n }\r\n}","// ixt-flow.module.ts\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { IxtFlowDiagram } from './ixt-flow.diagram';\r\n\r\n@NgModule({\r\n declarations: [\r\n IxtFlowDiagram\r\n ],\r\n imports: [\r\n CommonModule\r\n ],\r\n exports: [\r\n IxtFlowDiagram\r\n ],\r\n providers: []\r\n})\r\nexport class IxtFlowModule {\r\n static forRoot() {\r\n return {\r\n ngModule: IxtFlowModule,\r\n providers: []\r\n };\r\n }\r\n \r\n static forChild() {\r\n return {\r\n ngModule: IxtFlowModule,\r\n providers: []\r\n };\r\n }\r\n}\r\n\r\n","// ixt-flow.index.ts\r\nexport * from './ixt-flow.module';\r\nexport * from './ixt-flow.diagram';\r\n\r\n// You might also want to export these interfaces for external use\r\nexport interface FlowNode {\r\n id: string;\r\n x: number;\r\n y: number;\r\n width: number;\r\n height: number;\r\n type: 'rectangle' | 'diamond' | 'circle';\r\n label: string;\r\n isDragging: boolean;\r\n}\r\n\r\nexport interface FlowEdge {\r\n from: string;\r\n to: string;\r\n label?: string;\r\n}\r\n\r\n// export interface Point {\r\n// x: number;\r\n// y: number;\r\n// }\r\n\r\n// Optional: Add configuration interface if you want to allow customization\r\nexport interface IxtFlowConfig {\r\n canvasWidth?: number;\r\n canvasHeight?: number;\r\n nodeDefaults?: {\r\n width: number;\r\n height: number;\r\n padding: number;\r\n };\r\n layout?: {\r\n repulsion: number;\r\n attraction: number;\r\n damping: number;\r\n minDistance: number;\r\n };\r\n style?: {\r\n nodeFill: string;\r\n nodeStroke: string;\r\n edgeColor: string;\r\n textColor: string;\r\n fontFamily: string;\r\n fontSize: number;\r\n };\r\n}","// ixt-gannt.diagram.ts\r\nimport { Component, OnInit, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\r\n\r\ninterface FlightPuck {\r\n id: string;\r\n startTime: Date;\r\n endTime: Date;\r\n aircraft: number;\r\n fromStation: string;\r\n toStation: string;\r\n x: number;\r\n y: number;\r\n width: number;\r\n}\r\n\r\n@Component({\r\n selector: 'gannt-diagram',\r\n template: `\r\n <div class=\"scheduler-container\" \r\n (mousemove)=\"onMouseMove($event)\"\r\n (mouseup)=\"onMouseUp()\">\r\n <canvas #schedulerCanvas\r\n [width]=\"canvasWidth\"\r\n [height]=\"canvasHeight\"\r\n (mousedown)=\"onMouseDown($event)\">\r\n </canvas>\r\n </div>\r\n `,\r\n styles: [`\r\n .scheduler-container {\r\n width: 100%;\r\n height: 600px;\r\n overflow: auto;\r\n position: relative;\r\n background: #f5f5f5;\r\n }\r\n canvas {\r\n cursor: default;\r\n }\r\n `]\r\n})\r\nexport class IxtGanntDiagram implements OnInit, AfterViewInit {\r\n @ViewChild('schedulerCanvas') canvasRef!: ElementRef<HTMLCanvasElement>;\r\n \r\n private ctx!: CanvasRenderingContext2D;\r\n private flights: FlightPuck[] = [];\r\n \r\n // Canvas dimensions\r\n canvasWidth = 2400; // 24 hours * 100 pixels per hour\r\n canvasHeight = 500; // 5 aircraft lanes * 100 pixels height\r\n \r\n // Layout constants\r\n private readonly HOUR_WIDTH = 100;\r\n private readonly LANE_HEIGHT = 100;\r\n private readonly MIN_FLIGHT_DURATION = 60; // 1 hour in minutes\r\n private readonly MAX_FLIGHT_DURATION = 240; // 4 hours in minutes\r\n private readonly MIN_GROUND_TIME = 30; // 30 minutes between flights\r\n \r\n // Drag state\r\n private isDragging = false;\r\n private selectedPuck: FlightPuck | null = null;\r\n private dragOffsetX = 0;\r\n private dragOffsetY = 0;\r\n private isResizing = false;\r\n private resizeEdge: 'start' | 'end' | null = null;\r\n\r\n // Sample airports for domestic routes\r\n private airports = ['ORD', 'LAX', 'SFO', 'EWR', 'DEN', 'IAH', 'DFW'];\r\n\r\n constructor() {\r\n this.generateSampleFlights();\r\n }\r\n\r\n ngOnInit(): void {}\r\n\r\n ngAfterViewInit(): void {\r\n this.ctx = this.canvasRef.nativeElement.getContext('2d')!;\r\n this.draw();\r\n }\r\n\r\n private generateSampleFlights(): void {\r\n // Generate sample flights for each aircraft\r\n for (let aircraft = 0; aircraft < 5; aircraft++) {\r\n let startTime = new Date();\r\n startTime.setHours(6, 0, 0, 0); // Start at 6 AM\r\n \r\n // Generate 2-3 flights per aircraft\r\n const numFlights = 2 + Math.floor(Math.random() * 2);\r\n \r\n for (let i = 0; i < numFlights; i++) {\r\n const duration = 60 + Math.floor(Math.random() * 180); // 1-4 hours\r\n const fromStation = this.airports[Math.floor(Math.random() * this.airports.length)];\r\n let toStation;\r\n do {\r\n toStation = this.airports[Math.floor(Math.random() * this.airports.length)];\r\n } while (toStation === fromStation);\r\n\r\n const endTime = new Date(startTime.getTime() + duration * 60000);\r\n \r\n this.flights.push({\r\n id: `${aircraft}-${i}`,\r\n startTime: new Date(startTime),\r\n endTime: new Date(endTime),\r\n aircraft,\r\n fromStation,\r\n toStation,\r\n x: this.timeToX(startTime),\r\n y: aircraft * this.LANE_HEIGHT,\r\n width: this.calculateWidth(startTime, endTime)\r\n });\r\n\r\n // Add ground time for next flight\r\n startTime = new Date(endTime.getTime() + this.MIN_GROUND_TIME * 60000);\r\n }\r\n }\r\n }\r\n\r\n private timeToX(time: Date): number {\r\n const hours = time.getHours() + time.getMinutes() / 60;\r\n return hours * this.HOUR_WIDTH;\r\n }\r\n\r\n private calculateWidth(start: Date, end: Date): number {\r\n const durationHours = (end.getTime() - start.getTime()) / (1000 * 60 * 60);\r\n return durationHours * this.HOUR_WIDTH;\r\n }\r\n\r\n private draw(): void {\r\n this.ctx.clearRect(0, 0, this.canvasWidth, this.canvasHeight);\r\n this.drawGrid();\r\n this.drawTimeline();\r\n this.drawFlights();\r\n }\r\n\r\n private drawGrid(): void {\r\n this.ctx.strokeStyle = '#ddd';\r\n this.ctx.lineWidth = 1;\r\n\r\n // Draw horizontal lines (aircraft lanes)\r\n for (let i = 0; i <= 5; i++) {\r\n const y = i * this.LANE_HEIGHT;\r\n this.ctx.beginPath();\r\n this.ctx.moveTo(0, y);\r\n this.ctx.lineTo(this.canvasWidth, y);\r\n this.ctx.stroke();\r\n }\r\n\r\n // Draw vertical lines (hour markers)\r\n for (let i = 0; i <= 24; i++) {\r\n const x = i * this.HOUR_WIDTH;\r\n this.ctx.beginPath();\r\n this.ctx.moveTo(x, 0);\r\n this.ctx.lineTo(x, this.canvasHeight);\r\n this.ctx.stroke();\r\n }\r\n }\r\n\r\n private drawTimeline(): void {\r\n this.ctx.fillStyle = '#333';\r\n this.ctx.font = '12px Arial';\r\n this.ctx.textAlign = 'center';\r\n\r\n for (let i = 0; i <= 24; i++) {\r\n const x = i * this.HOUR_WIDTH;\r\n const timeStr = i === 0 || i === 24 ? '12 MN' : \r\n i === 12 ? '12 NN' :\r\n i > 12 ? `${i-12} PM` : `${i} AM`;\r\n this.ctx.fillText(timeStr, x, 20);\r\n }\r\n }\r\n\r\n private drawFlights(): void {\r\n this.flights.forEach(flight => {\r\n // Draw flight puck\r\n this.ctx.fillStyle = '#4a90e2';\r\n this.ctx.strokeStyle = '#2171c7';\r\n this.ctx.lineWidth = 2;\r\n \r\n const puckHeight = 60;\r\n const y = flight.y + (this.LANE_HEIGHT - puckHeight) / 2;\r\n \r\n // Draw rounded rectangle\r\n this.ctx.beginPath();\r\n this.ctx.roundRect(flight.x, y, flight.width, puckHeight, 10);\r\n this.ctx.fill();\r\n this.ctx.stroke();\r\n\r\n // Draw flight information\r\n this.ctx.fillStyle = 'white';\r\n this.ctx.font = '12px Arial';\r\n this.ctx.textAlign = 'center';\r\n \r\n const startTime = flight.startTime.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n const endTime = flight.endTime.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n const flightInfo = `${flight.fromStation} - ${flight.toStation}`;\r\n \r\n this.ctx.fillText(flightInfo, flight.x + flight.width/2, y + puckHeight/2);\r\n this.ctx.fillText(`${startTime} - ${endTime}`, flight.x + flight.width/2, y + puckHeight/2 + 15);\r\n });\r\n }\r\n\r\n onMouseDown(event: MouseEvent): void {\r\n const rect = this.canvasRef.nativeElement.getBoundingClientRect();\r\n const x = event.clientX - rect.left;\r\n const y = event.clientY - rect.top;\r\n\r\n // Check if clicked on a flight puck\r\n const clickedPuck = this.findClickedPuck(x, y);\r\n if (clickedPuck) {\r\n this.selectedPuck = clickedPuck;\r\n this.isDragging = true;\r\n this.dragOffsetX = x - clickedPuck.x;\r\n this.dragOffsetY = y - clickedPuck.y;\r\n }\r\n }\r\n\r\n onMouseMove(event: MouseEvent): void {\r\n if (!this.isDragging || !this.selectedPuck) return;\r\n\r\n const rect = this.canvasRef.nativeElement.getBoundingClientRect();\r\n const x = event.clientX - rect.left - this.dragOffsetX;\r\n const y = event.clientY - rect.top - this.dragOffsetY;\r\n\r\n // Snap to lanes\r\n const newAircraft = Math.floor((y + this.LANE_HEIGHT/2) / this.LANE_HEIGHT);\r\n if (newAircraft >= 0 && newAircraft < 5) {\r\n this.selectedPuck.aircraft = newAircraft;\r\n this.selectedPuck.y = newAircraft * this.LANE_HEIGHT;\r\n }\r\n\r\n // Update x position (time)\r\n const minX = 0;\r\n const maxX = this.canvasWidth - this.selectedPuck.width;\r\n this.selectedPuck.x = Math.max(minX, Math.min(x, maxX));\r\n\r\n // Check for conflicts\r\n if (this.hasConflict(this.selectedPuck)) {\r\n // Revert position if conflict detected\r\n this.selectedPuck.x = this.timeToX(this.selectedPuck.startTime);\r\n } else {\r\n // Update times based on new position\r\n const hourOffset = this.selectedPuck.x / this.HOUR_WIDTH;\r\n const newStartTime = new Date();\r\n newStartTime.setHours(Math.floor(hourOffset));\r\n newStartTime.setMinutes((hourOffset % 1) * 60);\r\n this.selectedPuck.startTime = newStartTime;\r\n this.selectedPuck.endTime = new Date(newStartTime.getTime() + \r\n (this.selectedPuck.width / this.HOUR_WIDTH) * 60 * 60 * 1000);\r\n }\r\n\r\n this.draw();\r\n }\r\n\r\n onMouseUp(): void {\r\n this.isDragging = false;\r\n this.selectedPuck = null;\r\n this.resizeEdge = null;\r\n }\r\n\r\n private findClickedPuck(x: number, y: number): FlightPuck | null {\r\n return this.flights.find(flight => \r\n x >= flight.x && x <= flight.x + flight.width &&\r\n y >= flight.y && y <= flight.y + this.LANE_HEIGHT\r\n ) || null;\r\n }\r\n\r\n private hasConflict(puck: FlightPuck): boolean {\r\n return this.flights.some(flight => {\r\n if (flight === puck) return false;\r\n if (flight.aircraft !== puck.aircraft) return false;\r\n\r\n const puckStart = puck.x / this.HOUR_WIDTH;\r\n const puckEnd = (puck.x + puck.width) / this.HOUR_WIDTH;\r\n const flightStart = flight.x / this.HOUR_WIDTH;\r\n const flightEnd = (flight.x + flight.width) / this.HOUR_WIDTH;\r\n\r\n // Check if there's less than minimum ground time between flights\r\n return !(puckEnd + (this.MIN_GROUND_TIME / 60) <= flightStart || \r\n flightEnd + (this.MIN_GROUND_TIME / 60) <= puckStart);\r\n });\r\n }\r\n}","// ixt-gannt.module.ts\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { IxtGanntDiagram } from './gannt.diagram';\r\n\r\n@NgModule({\r\n declarations: [\r\n IxtGanntDiagram\r\n ],\r\n imports: [\r\n CommonModule\r\n ],\r\n exports: [\r\n IxtGanntDiagram\r\n ]\r\n})\r\nexport class IxtGanntModule { }","\r\n\r\n// ixt-gannt.index.ts\r\nexport * from './gannt.diagram';\r\nexport * from './gannt.module';","import { Component, ElementRef, ViewChild, AfterViewInit, OnDestroy } from '@angular/core';\r\nimport { fromEvent, Subscription } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\ninterface NetworkNode {\r\n id: string;\r\n label: string;\r\n type: 'service' | 'database' | 'loadbalancer' | 'gateway' | 'cache';\r\n x: number;\r\n y: number;\r\n width: number;\r\n height: number;\r\n vx: number; // velocity X for force-directed layout\r\n vy: number; // velocity Y for force-directed layout\r\n}\r\n\r\ninterface NetworkEdge {\r\n from: string;\r\n to: string;\r\n type: 'sync' | 'async' | 'depends';\r\n}\r\n\r\n@Component({\r\n selector: 'ixt-network-diagram',\r\n template: `\r\n <div class=\"diagram-container\">\r\n <canvas #canvas \r\n [width]=\"width\" \r\n [height]=\"height\"\r\n (mousedown)=\"onMouseDown($event)\"\r\n (mousemove)=\"onMouseMove($event)\"\r\n (mouseup)=\"onMouseUp()\">\r\n </canvas>\r\n <button (click)=\"applyForceDirectedLayout()\" \r\n class=\"layout-button\">\r\n Auto Layout\r\n </button>\r\n </div>\r\n `,\r\n styles: [`\r\n .diagram-container {\r\n position: relative;\r\n border: 1px solid #ccc;\r\n margin: 20px;\r\n }\r\n .layout-button {\r\n position: absolute;\r\n top: 10px;\r\n right: 10px;\r\n padding: 8px 16px;\r\n background: #4a90e2;\r\n color: white;\r\n border: none;\r\n border-radius: 4px;\r\n cursor: pointer;\r\n }\r\n .layout-button:hover {\r\n background: #357abd;\r\n }\r\n `]\r\n})\r\nexport class IxtNetworkDiagram implements AfterViewInit, OnDestroy {\r\n @ViewChild('canvas') canvasRef!: ElementRef<HTMLCanvasElement>;\r\n \r\n private ctx!: CanvasRenderingContext2D;\r\n private animationFrameId: number = 0;\r\n private isDragging: boolean = false;\r\n private selectedNode: NetworkNode | null = null;\r\n private mouseOffset = { x: 0, y: 0 };\r\n \r\n width = 1200;\r\n height = 800;\r\n \r\n // Sample network configuration\r\n nodes: NetworkNode[] = [\r\n { id: 'api', label: 'API Gateway', type: 'gateway', x: 200, y: 200, width: 120, height: 60, vx: 0, vy: 0 },\r\n { id: 'auth', label: 'Auth Service', type: 'service', x: 400, y: 150, width: 120, height: 60, vx: 0, vy: 0 },\r\n { id: 'users', label: 'User Service', type: 'service', x: 600, y: 200, width: 120, height: 60, vx: 0, vy: 0 },\r\n { id: 'userdb', label: 'User DB', type: 'database', x: 800, y: 200, width: 100, height: 60, vx: 0, vy: 0 },\r\n { id: 'cache', label: 'Redis Cache', type: 'cache', x: 400, y: 300, width: 100, height: 60, vx: 0, vy: 0 },\r\n { id: 'lb', label: 'Load Balancer', type: 'loadbalancer', x: 200, y: 100, width: 120, height: 60, vx: 0, vy: 0 }\r\n ];\r\n\r\n edges: NetworkEdge[] = [\r\n { from: 'lb', to: 'api', type: 'sync' },\r\n { from: 'api', to: 'auth', type: 'sync' },\r\n { from: 'api', to: 'users', type: 'sync' },\r\n { from: 'users', to: 'userdb', type: 'sync' },\r\n { from: 'auth', to: 'cache', type: 'async' },\r\n { from: 'users', to: 'cache', type: 'async' }\r\n ];\r\n\r\n private subscriptions = new Subscription();\r\n\r\n ngAfterViewInit() {\r\n const canvas = this.canvasRef.nativeElement;\r\n this.ctx = canvas.getContext('2d')!;\r\n \r\n // Set up high DPI canvas\r\n const dpr = window.devicePixelRatio || 1;\r\n canvas.width = this.width * dpr;\r\n canvas.height = this.height * dpr;\r\n canvas.style.width = `${this.width}px`;\r\n canvas.style.height = `${this.height}px`;\r\n this.ctx.scale(dpr, dpr);\r\n \r\n this.draw();\r\n }\r\n\r\n ngOnDestroy() {\r\n if (this.animationFrameId) {\r\n cancelAnimationFrame(this.animationFrameId);\r\n }\r\n this.subscriptions.unsubscribe();\r\n }\r\n\r\n private draw() {\r\n this.ctx.clearRect(0, 0, this.width, this.height);\r\n \r\n // Draw edges first (so they appear under nodes)\r\n this.drawEdges();\r\n \r\n // Draw nodes\r\n this.nodes.forEach(node => this.drawNode(node));\r\n \r\n this.animationFrameId = requestAnimationFrame(() => this.draw());\r\n }\r\n\r\n private drawNode(node: NetworkNode) {\r\n const { x, y, width, height, label, type } = node;\r\n \r\n // Draw shadow\r\n this.ctx.shadowColor = 'rgba(0, 0, 0, 0.2)';\r\n this.ctx.shadowBlur = 10;\r\n this.ctx.shadowOffsetX = 3;\r\n this.ctx.shadowOffsetY = 3;\r\n \r\n // Draw node background\r\n this.ctx.beginPath();\r\n this.ctx.roundRect(x, y, width, height, 8);\r\n \r\n // Different colors for different node types\r\n const colors = {\r\n service: '#4a90e2',\r\n database: '#50b83c',\r\n loadbalancer: '#8c4a9e',\r\n gateway: '#f5a623',\r\n cache: '#e2725b'\r\n };\r\n \r\n this.ctx.fillStyle = colors[type];\r\n this.ctx.fill();\r\n \r\n // Reset shadow\r\n this.ctx.shadowColor = 'transparent';\r\n \r\n // Draw node label\r\n this.ctx.fillStyle = 'white';\r\n this.ctx.font = '14px Arial';\r\n this.ctx.textAlign = 'center';\r\n this.ctx.textBaseline = 'middle';\r\n this.ctx.fillText(label, x + width/2, y + height/2);\r\n }\r\n\r\n private drawEdges() {\r\n this.edges.forEach(edge => {\r\n const fromNode = this.nodes.find(n => n.id === edge.from)!;\r\n const toNode = this.nodes.find(n => n.id === edge.to)!;\r\n \r\n // Calculate edge points using smart routing\r\n const points = this.calculateEdgePoints(fromNode, toNode);\r\n \r\n this.ctx.beginPath();\r\n this.ctx.moveTo(points[0].x, points[0].y);\r\n \r\n // Draw curved lines for a more professional look\r\n if (points.length === 3) {\r\n this.ctx.quadraticCurveTo(\r\n points[1].x, points[1].y,\r\n points[2].x, points[2].y\r\n );\r\n }\r\n \r\n // Style based on edge type\r\n this.ctx.strokeStyle = edge.type === 'async' ? '#999' : '#666';\r\n this.ctx.setLineDash(edge.type === 'async' ? [5, 5] : []);\r\n this.ctx.lineWidth = 2;\r\n this.ctx.stroke();\r\n \r\n // Draw arrow\r\n this.drawArrow(points[points.length-2], points[points.length-1]);\r\n });\r\n }\r\n\r\n private calculateEdgePoints(from: NetworkNode, to: NetworkNode) {\r\n // Smart edge routing to avoid node intersections\r\n const startPoint = {\r\n x: from.x + from.width/2,\r\n y: from.y + from.height/2\r\n };\r\n \r\n const endPoint = {\r\n x: to.x + to.width/2,\r\n y: to.y + to.height/2\r\n };\r\n \r\n // Calculate control point for curved lines\r\n const controlPoint = {\r\n x: (startPoint.x + endPoint.x) / 2,\r\n y: (startPoint.y + endPoint.y) / 2\r\n };\r\n \r\n // Adjust control point based on node positions\r\n if (Math.abs(from.y - to.y) < Math.max(from.height, to.height)) {\r\n controlPoint.y -= 50; // Curve upward if nodes are at similar heights\r\n }\r\n \r\n return [startPoint, controlPoint, endPoint];\r\n }\r\n\r\n private drawArrow(from: {x: number, y: number}, to: {x: number, y: number}) {\r\n const angle = Math.atan2(to.y - from.y, to.x - from.x);\r\n const arrowLength = 10;\r\n \r\n this.ctx.beginPath();\r\n this.ctx.moveTo(\r\n to.x - arrowLength * Math.cos(angle - Math.PI/6),\r\n to.y - arrowLength * Math.sin(angle - Math.PI/6)\r\n );\r\n this.ctx.lineTo(to.x, to.y);\r\n this.ctx.lineTo(\r\n to.x - arrowLength * Math.cos(angle + Math.PI/6),\r\n to.y - arrowLength * Math.sin(angle + Math.PI/6)\r\n );\r\n this.ctx.stroke();\r\n }\r\n\r\n onMouseDown(event: MouseEvent) {\r\n const rect = this.canvasRef.nativeElement.getBoundingClientRect();\r\n const x = event.clientX - rect.left;\r\n const y = event.clientY - rect.top;\r\n \r\n // Check if we clicked on a node\r\n this.selectedNode = this.nodes.find(node => \r\n x >= node.x && x <= node.x + node.width &&\r\n y >= node.y && y <= node.y + node.height\r\n ) || null;\r\n \r\n if (this.selectedNode) {\r\n this.isDragging = true;\r\n this.mouseOffset.x = x - this.selectedNode.x;\r\n this.mouseOffset.y = y - this.selectedNode.y;\r\n }\r\n }\r\n\r\n onMouseMove(event: MouseEvent) {\r\n if (this.isDragging && this.selectedNode) {\r\n const rect = this.canvasRef.nativeElement.getBoundingClientRect();\r\n const x = event.clientX - rect.left;\r\n const y = event.clientY - rect.top;\r\n \r\n this.selectedNode.x = x - this.mouseOffset.x;\r\n this.selectedNode.y = y - this.mouseOffset.y;\r\n \r\n // Keep node within canvas bounds\r\n this.selectedNode.x = Math.max(0, Math.min(this.width - this.selectedNode.width, this.selectedNode.x));\r\n this.selectedNode.y = Math.max(0, Math.min(this.height - this.selectedNode.height, this.selectedNode.y));\r\n }\r\n }\r\n\r\n onMouseUp() {\r\n this.isDragging = false;\r\n this.selectedNode = null;\r\n }\r\n\r\n applyForceDirectedLayout() {\r\n const simulation = {\r\n alpha: 1,\r\n alphaMin: 0.001,\r\n alphaDecay: 0.0228,\r\n velocityDecay: 0.4,\r\n linkDistance: 200,\r\n linkStrength: 1,\r\n repulsion: -400,\r\n iterations: 300\r\n };\r\n\r\n const animate = () => {\r\n if (simulation.alpha > simulation.alphaMin && simulation.iterations > 0) {\r\n this.calculateForces(simulation);\r\n simulation.alpha *= 1 - simulation.alphaDecay;\r\n simulation.iterations--;\r\n requestAnimationFrame(animate);\r\n }\r\n };\r\n\r\n requestAnimationFrame(animate);\r\n }\r\n\r\n private calculateForces(simulation: any) {\r\n // Apply forces between all node pairs\r\n for (let i = 0; i < this.nodes.length; i++) {\r\n for (let j = i + 1; j < this.nodes.length; j++) {\r\n const nodeA = this.nodes[i];\r\n const nodeB = this.nodes[j];\r\n \r\n const dx = nodeB.x - nodeA.x;\r\n const dy = nodeB.y - nodeA.y;\r\n const distance = Math.sqrt(dx * dx + dy * dy);\r\n \r\n if (distance === 0) continue;\r\n \r\n // Repulsive force between all nodes\r\n const force = simulation.repulsion / (distance * distance);\r\n const forceX = (dx / distance) * force;\r\n const forceY = (dy / distance) * force;\r\n \r\n nodeA.vx -= forceX;\r\n nodeA.vy -= forceY;\r\n nodeB.vx += forceX;\r\n nodeB.vy += forceY;\r\n }\r\n }\r\n \r\n // Apply attractive forces along edges\r\n this.edges.forEach(edge => {\r\n const source = this.nodes.find(n => n.id === edge.from)!;\r\n const target = this.nodes.find(n => n.id === edge.to)!;\r\n \r\n const dx = target.x - source.x;\r\n const dy = target.y - source.y;\r\n const distance = Math.sqrt(dx * dx + dy * dy);\r\n \r\n if (distance === 0) return;\r\n \r\n const force = (distance - simulation.linkDistance) * simulation.linkStrength;\r\n const forceX = (dx / distance) * force;\r\n const forceY = (dy / distance) * force;\r\n \r\n source.vx += forceX;\r\n source.vy += forceY;\r\n target.vx -= forceX;\r\n target.vy -= forceY;\r\n });\r\n \r\n // Update positions\r\n this.nodes.forEach(node => {\r\n node.vx *= simulation.velocityDecay;\r\n node.vy *= simulation.velocityDecay;\r\n \r\n node.x += node.vx;\r\n node.y += node.vy;\r\n \r\n // Constrain to canvas bounds\r\n node.x = Math.max(0, Math.min(this.width - node.width, node.x));\r\n node.y = Math.max(0, Math.min(this.height - node.height, node.y));\r\n });\r\n }\r\n}","// ixt-network.module.ts\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { IxtNetworkDiagram } from './ixt-network.diagram';\r\n\r\n@NgModule({\r\n declarations: [\r\n IxtNetworkDiagram\r\n ],\r\n imports: [\r\n CommonModule\r\n ],\r\n exports: [\r\n IxtNetworkDiagram\r\n ]\r\n})\r\nexport class IxtNetworkModule { }","// ixt-network.index.ts\r\nexport * from './ixt-network.diagram';\r\nexport * from './ixt-network.module';\r\n\r\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\n\r\ninterface SankeyNode {\r\n name: string;\r\n value: number;\r\n}\r\n\r\ninterface SankeyLink {\r\n source: number;\r\n target: number;\r\n value: number;\r\n}\r\n\r\n@Component({\r\n selector: 'ixt-sankey-diagram',\r\n template: `\r\n <div class=\"sankey-container\">\r\n <canvas #sankeyCanvas></canvas>\r\n </div>\r\n `,\r\n styles: [`\r\n .sankey-container {\r\n width: 800px;\r\n height: 600px;\r\n }\r\n canvas {\r\n width: 100%;\r\n height: 100%;\r\n }\r\n `]\r\n})\r\nexport class IxtSankeyDiagram implements OnInit {\r\n @ViewChild('sankeyCanvas', { static: true }) canvas!: ElementRef<HTMLCanvasElement>;\r\n private ctx!: CanvasRenderingContext2D;\r\n\r\n // Sample data\r\n private nodes: SankeyNode[] = [\r\n { name: 'Total Energy', value: 1000 },\r\n { name: 'Residential', value: 300 },\r\n { name: 'Commercial', value: 400 },\r\n { name: 'Industrial', value: 300 },\r\n { name: 'Electricity', value: 450 },\r\n { name: 'Natural Gas', value: 350 },\r\n { name: 'Oil', value: 200 }\r\n ];\r\n\r\n private links: SankeyLink[] = [\r\n { source: 0, target: 1, value: 300 },\r\n { source: 0, target: 2, value: 400 },\r\n { source: 0, target: 3, value: 300 },\r\n { source: 1, target: 4, value: 200 },\r\n { source: 1, target: 5, value: 100 },\r\n { source: 2, target: 4, value: 250 },\r\n { source: 2, target: 5, value: 150 },\r\n { source: 3, target: 5, value: 100 },\r\n { source: 3, target: 6, value: 200 }\r\n ];\r\n\r\n private readonly PADDING = 50;\r\n private readonly NODE_WIDTH = 20;\r\n private readonly NODE_SPACING = 50;\r\n private readonly COLORS = [\r\n '#1f77b4', '#ff7f0e', '#2ca02c', '#d62728', \r\n '#9467bd', '#8c564b', '#e377c2'\r\n ];\r\n\r\n ngOnInit() {\r\n this.initializeCanvas();\r\n this.drawSankey();\r\n }\r\n\r\n private initializeCanvas() {\r\n const canvas = this.canvas.nativeElement;\r\n this.ctx = canvas.getContext('2d')!;\r\n\r\n // Handle high DPI displays\r\n const dpr = window.devicePixelRatio || 1;\r\n canvas.width = canvas.offsetWidth * dpr;\r\n canvas.height = canvas.offsetHeight * dpr;\r\n this.ctx.scale(dpr, dpr);\r\n }\r\n\r\n private drawSankey() {\r\n const canvas = this.canvas.nativeElement;\r\n const width = canvas.offsetWidth;\r\n const height = canvas.offsetHeight;\r\n\r\n // Calculate node positions\r\n const nodeColumns = this.calculateNodeColumns();\r\n const nodePositions = this.calculateNodePositions(nodeColumns, width, height);\r\n\r\n // Draw links\r\n this.links.forEach((link, index) => {\r\n const sourcePos = nodePositions[link.source];\r\n const targetPos = nodePositions[link.target];\r\n \r\n const sourceY = sourcePos.y + (sourcePos.height / 2);\r\n const targetY = targetPos.y + (targetPos.height / 2);\r\n \r\n this.drawLink(\r\n sourcePos.x + this.NODE_WIDTH,\r\n sourceY,\r\n targetPos.x,\r\n targetY,\r\n link.value,\r\n this.COLORS[index % this.COLORS.length]\r\n );\r\n });\r\n\r\n // Draw nodes\r\n nodePositions.forEach((pos, index) => {\r\n this.drawNode(\r\n pos.x,\r\n pos.y,\r\n this.NODE_WIDTH,\r\n pos.height,\r\n this.nodes[index].name,\r\n this.COLORS[index % this.COLORS.length]\r\n );\r\n });\r\n }\r\n\r\n private calculateNodeColumns(): number[] {\r\n const columns: number[] = new Array(this.nodes.length).fill(0);\r\n const visited = new Set<number>();\r\n \r\n const assignColumn = (nodeIndex: number, column: number) => {\r\n if (!visited.has(nodeIndex)) {\r\n columns[nodeIndex] = Math.max(columns[nodeIndex], column);\r\n visited.add(nodeIndex);\r\n \r\n this.links\r\n .filter(link => link.source === nodeIndex)\r\n .forEach(link => assignColumn(link.target, column + 1));\r\n }\r\n };\r\n\r\n assignColumn(0, 0);\r\n return columns;\r\n }\r\n\r\n private calculateNodePositions(columns: number[], width: number, height: number) {\r\n const maxColumn = Math.max(...columns);\r\n const columnWidth = (width - 2 * this.PADDING) / maxColumn;\r\n \r\n const positions = this.nodes.map((node, index) => {\r\n const x = this.PADDING + columns[index] * columnWidth;\r\n const nodeHeight = (node.value / this.nodes[0].value) * \r\n (height - 2 * this.PADDING);\r\n \r\n return {\r\n x,\r\n y: (height - nodeHeight) / 2,\r\n height: nodeHeight\r\n };\r\n });\r\n\r\n return positions;\r\n }\r\n\r\n private drawNode(x: number, y: number, width: number, height: number, \r\n label: string, color: string) {\r\n this.ctx.fillStyle = color;\r\n this.ctx.fillRect(x, y, width, height);\r\n \r\n // Draw label\r\n this.ctx.fillStyle = '#000';\r\n this.ctx.font = '12px Arial';\r\n this.ctx.textAlign = 'right';\r\n this.ctx.textBaseline = 'middle';\r\n this.ctx.fillText(label, x - 5, y + height / 2);\r\n }\r\n\r\n private drawLink(x1: number, y1: number, x2: number, y2: number, \r\n value: number, color: string) {\r\n const controlPoint1X = x1 + (x2 - x1) / 3;\r\n const controlPoint2X = x1 + 2 * (x2 - x1) / 3;\r\n \r\n this.ctx.beginPath();\r\n this.ctx.moveTo(x1, y1);\r\n this.ctx.bezierCurveTo(\r\n controlPoint1X, y1,\r\n controlPoint2X, y2,\r\n x2, y2\r\n );\r\n \r\n this.ctx.strokeStyle = color;\r\n this.ctx.lineWidth = Math.max(1, value / 20);\r\n this.ctx.stroke();\r\n }\r\n}","\r\n// ixt-sankey.module.ts\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { IxtSankeyDiagram } from './ixt-sankey.diagram';\r\n\r\n@NgModule({\r\n declarations: [\r\n IxtSankeyDiagram\r\n ],\r\n imports: [\r\n CommonModule\r\n ],\r\n exports: [\r\n IxtSankeyDiagram\r\n ]\r\n})\r\nexport class IxtSankeyModule { }","// ixt-sankey.index.ts\r\nexport * from './ixt-sankey.diagram';\r\nexport * from './ixt-sankey.module';\r\n","// ixt-wireframe-diagram.ts\r\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\n\r\ninterface WireframeShape {\r\n id: string;\r\n type: string;\r\n x: number;\r\n y: number;\r\n width: number;\r\n height: number;\r\n text?: string;\r\n layer: number;\r\n properties?: any;\r\n}\r\n\r\ninterface Point {\r\n x: number;\r\n y: number;\r\n}\r\n\r\n@Component({\r\n selector: 'ixt-wireframe',\r\n template: `\r\n <div class=\"wireframe-container\">\r\n <!-- Left Toolbar -->\r\n <div class=\"toolbar\">\r\n <div class=\"shape-palette\">\r\n <div *ngFor=\"let shape of availableShapes\" \r\n class=\"shape-item\"\r\n draggable=\"true\"\r\n (dragstart)=\"onDragStart($event, shape)\">\r\n {{ shape.name }}\r\n </div>\r\n </div>\r\n </div>\r\n\r\n <!-- Main Canvas Area -->\r\n <div class=\"canvas-container\">\r\n <!-- Top Ruler -->\r\n <canvas #topRuler class=\"ruler top-ruler\"></canvas>\r\n \r\n <!-- Left Ruler -->\r\n <canvas #leftRuler class=\"ruler left-ruler\"></canvas>\r\n \r\n <!-- Main Canvas -->\r\n <div class=\"canvas-wrapper\">\r\n <canvas #mainCanvas\r\n (mousedown)=\"onMouseDown($event)\"\r\n (mousemove)=\"onMouseMove($event)\"\r\n (mouseup)=\"onMouseUp($event)\"\r\n (wheel)=\"onWheel($event)\">\r\n </canvas>\r\n </div>\r\n </div>\r\n\r\n <!-- Controls -->\r\n <div class=\"controls\">\r\n <button (click)=\"toggleGrid()\">Toggle Grid</button>\r\n <button (click)=\"toggleSnap()\">Toggle Snap</button>\r\n <button (click)=\"resetZoom()\">Reset Zoom</button>\r\n <div class=\"alignment-controls\">\r\n <button (click)=\"alignSelected('left')\">Align Left</button>\r\n <button (click)=\"alignSelected('center')\">Align Center</button>\r\n <button (click)=\"alignSelected('right')\">Align Right</button>\r\n <button (click)=\"alignSelected('top')\">Align Top</button>\r\n <button (click)=\"alignSelected('middle')\">Align Middle</button>\r\n <button (click)=\"alignSelected('bottom')\">Align Bottom</button>\r\n </div>\r\n </div>\r\n </div>\r\n `,\r\n styles: [`\r\n .wireframe-container {\r\n display: flex;\r\n height: 100%;\r\n }\r\n\r\n .toolbar {\r\n width: 200px;\r\n border-right: 1px solid #ccc;\r\n padding: 10px;\r\n }\r\n\r\n .canvas-container {\r\n flex: 1;\r\n position: relative;\r\n }\r\n\r\n .ruler {\r\n position: absolute;\r\n background: #f5f5f5;\r\n }\r\n\r\n .top-ruler {\r\n height: 20px;\r\n left: 20px;\r\n right: 0;\r\n }\r\n\r\n .left-ruler {\r\n width: 20px;\r\n top: 20px;\r\n bottom: 0;\r\n }\r\n\r\n .canvas-wrapper {\r\n position: absolute;\r\n top: 20px;\r\n left: 20px;\r\n right: 0;\r\n bottom: 0;\r\n overflow: hidden;\r\n }\r\n\r\n .controls {\r\n position: absolute;\r\n top: 10px;\r\n right: 10px;\r\n z-index: 100;\r\n }\r\n\r\n .shape-item {\r\n padding: 8px;\r\n margin: 4px;\r\n border: 1px solid #ccc;\r\n cursor: move;\r\n }\r\n `]\r\n})\r\nexport class IxtWireframeDiagram implements OnInit {\r\n @ViewChild('mainCanvas', { static: true }) mainCanvas!: ElementRef<HTMLCanvasElement>;\r\n @ViewChild('topRuler', { static: true }) topRuler!: ElementRef<HTMLCanvasElement>;\r\n @ViewChild('leftRuler', { static: true }) leftRuler!: ElementRef<HTMLCanvasElement>;\r\n\r\n private ctx!: CanvasRenderingContext2D;\r\n private shapes: WireframeShape[] = [];\r\n private selectedShapes: Set<string> = new Set();\r\n private isDragging = false;\r\n private dragStart: Point = { x: 0, y: 0 };\r\n private dragOffset: Point = { x: 0, y: 0 };\r\n private scale = 1;\r\n private panOffset: Point = { x: 0, y: 0 };\r\n private showGrid = true;\r\n private snapEnabled = false;\r\n private gridSize = 20;\r\n\r\n availableShapes = [\r\n { name: 'Button', type: 'button', defaultWidth: 100, defaultHeight: 30 },\r\n { name: 'Text Field', type: 'textfield', defaultWidth: 200, defaultHeight: 30 },\r\n { name: 'Checkbox', type: 'checkbox', defaultWidth: 20, defaultHeight: 20 },\r\n { name: 'Radio Button', type: 'radio', defaultWidth: 20, defaultHeight: 20 },\r\n { name: 'Select', type: 'select', defaultWidth: 200, defaultHeight: 30 },\r\n { name: 'Table', type: 'table', defaultWidth: 400, defaultHeight: 300 },\r\n { name: 'Panel', type: 'panel', defaultWidth: 300, defaultHeight: 200 },\r\n { name: 'Dialog', type: 'dialog', defaultWidth: 400, defaultHeight: 300 },\r\n { name: 'Menu', type: 'menu', defaultWidth: 150, defaultHeight: 200 },\r\n { name: 'Tree', type: 'tree', defaultWidth: 200, defaultHeight: 400 }\r\n ];\r\n\r\n ngOnInit() {\r\n this.initializeCanvas();\r\n this.initializeRulers();\r\n this.draw();\r\n }\r\n\r\n private initializeCanvas() {\r\n const canvas = this.mainCanvas.nativeElement;\r\n this.ctx = canvas.getContext('2d')!;\r\n this.resizeCanvas();\r\n window.addEventListener('resize', () => this.resizeCanvas());\r\n }\r\n\r\n private resizeCanvas() {\r\n const canvas = this.mainCanvas.nativeElement;\r\n const container = canvas.parentElement!;\r\n canvas.width = container.clientWidth;\r\n canvas.height = container.clientHeight;\r\n this.draw();\r\n }\r\n\r\n private initializeRulers() {\r\n // Initialize top ruler\r\n const topRuler = this.topRuler.nativeElement;\r\n const topCtx = topRuler.getContext('2d')!;\r\n topRuler.width = this.mainCanvas.nativeElement.width;\r\n topRuler.height = 20;\r\n\r\n // Initialize left ruler\r\n const leftRuler = this.leftRuler.nativeElement;\r\n const leftCtx = leftRuler.getContext('2d')!;\r\n leftRuler.width = 20;\r\n leftRuler.height = this.mainCanvas.nativeElement.height;\r\n\r\n this.drawRulers();\r\n }\r\n\r\n private drawRulers() {\r\n // Draw top ruler\r\n const topCtx = this.topRuler.nativeElement.getContext('2d')!;\r\n topCtx.clearRect(0, 0, this.topRuler.nativeElement.width, this.topRuler.nativeElement.height);\r\n\r\n // Draw left ruler\r\n const leftCtx = this.leftRuler.nativeElement.getContext('2d')!;\r\n leftCtx.clearRect(0, 0, this.leftRuler.nativeElement.width, this.leftRuler.nativeElement.height);\r\n\r\n // Draw measurements on rulers\r\n // ... (implementation for drawing ruler measurements)\r\n }\r\n\r\n private draw() {\r\n this.ctx.clearRect(0, 0, this.mainCanvas.nativeElement.width, this.mainCanvas.nativeElement.height);\r\n\r\n if (this.showGrid) {\r\n this.drawGrid();\r\n }\r\n\r\n this.shapes.forEach(shape => this.drawShape(shape));\r\n }\r\n\r\n private drawGrid() {\r\n const canvas = this.mainCanvas.nativeElement;\r\n this.ctx.strokeStyle = '#eee';\r\n this.ctx.lineWidth = 1;\r\n\r\n // Draw vertical lines\r\n for (let x = 0; x < canvas.width; x += this.gridSize) {\r\n this.ctx.beginPath();\r\n this.ctx.moveTo(x, 0);\r\n this.ctx.lineTo(x, canvas.height);\r\n this.ctx.stroke();\r\n }\r\n\r\n // Draw horizontal lines\r\n for (let y = 0; y < canvas.height; y += this.gridSize) {\r\n this.ctx.beginPath();\r\n this.ctx.moveTo(0, y);\r\n this.ctx.lineTo(canvas.width, y);\r\n this.ctx.stroke();\r\n }\r\n }\r\n\r\n private drawShape(shape: WireframeShape) {\r\n const isSelected = this.selectedShapes.has(shape.id);\r\n\r\n this.ctx.save();\r\n this.ctx.scale(this.scale, this.scale);\r\n this.ctx.translate(this.panOffset.x, this.panOffset.y);\r\n\r\n // Draw shape based on type\r\n switch (shape.type) {\r\n case 'button':\r\n this.drawButton(shape, isSelected);\r\n break;\r\n case 'textfield':\r\n this.drawTextField(shape, isSelected);\r\n break;\r\n // ... (implement other shape drawing methods)\r\n }\r\n\r\n this.ctx.restore();\r\n }\r\n\r\n private drawButton(shape: WireframeShape, isSelected: boolean) {\r\n this.ctx.fillStyle = '#f0f0f0';\r\n this.ctx.strokeStyle = isSelected ? '#0066ff' : '#000';\r\n this.ctx.lineWidth = isSelected ? 2 : 1;\r\n\r\n this.ctx.beginPath();\r\n this.ctx.roundRect(shape.x, shape.y, shape.width, shape.height, 5);\r\n this.ctx.fill();\r\n this.ctx.stroke();\r\n\r\n if (shape.text) {\r\n this.ctx.fillStyle = '#000';\r\n this.ctx.textAlign = 'center';\r\n this.ctx.textBaseline = 'middle';\r\n this.ctx.fillText(shape.text, shape.x + shape.width / 2, shape.y + shape.height / 2);\r\n }\r\n }\r\n\r\n private drawTextField(shape: WireframeShape, isSelected: boolean) {\r\n this.ctx.fillStyle = '#fff';\r\n this.ctx.strokeStyle = isSelected ? '#0066ff' : '#000';\r\n this.ctx.lineWidth = isSelected ? 2 : 1;\r\n\r\n this.ctx.beginPath();\r\n this.ctx.rect(shape.x, shape.y, shape.width, shape.height);\r\n this.ctx.fill();\r\n this.ctx.stroke();\r\n\r\n if (shape.text) {\r\n this.ctx.fillStyle = '#000';\r\n this.ctx.textAlign = 'left';\r\n this.ctx.textBaseline = 'middle';\r\n this.ctx.fillText(shape.text, shape.x + 5, shape.y + shape.height / 2);\r\n }\r\n }\r\n\r\n onDragStart(event: DragEvent, shape: any) {\r\n event.dataTransfer?.setData('text/plain', shape.type);\r\n }\r\n\r\n onMouseDown(event: MouseEvent) {\r\n const pos = this.getCanvasPosition(event);\r\n this.isDragging = true;\r\n this.dragStart = pos;\r\n\r\n // Check if clicked on a shape\r\n const clickedShape = this.findShapeAtPosition(pos);\r\n if (clickedShape) {\r\n if (!event.ctrlKey) {\r\n this.selectedShapes.clear();\r\n }\r\n this.selectedShapes.add(clickedShape.id);\r\n this.dragOffset = {\r\n x: pos.x - clickedShape.x,\r\n y: pos.y - clickedShape.y\r\n };\r\n } else {\r\n this.selectedShapes.clear();\r\n }\r\n\r\n this.draw();\r\n }\r\n\r\n onMouseMove(event: MouseEvent) {\r\n if (!this.isDragging) return;\r\n\r\n const pos = this.getCanvasPosition(event);\r\n const dx = pos.x - this.dragStart.x;\r\n const dy = pos.y - this.dragStart.y;\r\n\r\n if (this.selectedShapes.size > 0) {\r\n this.shapes.forEach(shape => {\r\n if (this.selectedShapes.has(shape.id)) {\r\n shape.x += dx;\r\n shape.y += dy;\r\n\r\n if (this.snapEnabled) {\r\n shape.x = Math.round(shape.x / this.gridSize) * this.gridSize;\r\n shape.y = Math.round(shape.y / this.gridSize) * this.gridSize;\r\n }\r\n }\r\n });\r\n } else {\r\n // Pan the canvas\r\n this.panOffset.x += dx;\r\n this.panOffset.y += dy;\r\n }\r\n\r\n this.dragStart = pos;\r\n this.draw();\r\n }\r\n\r\n onMouseUp(_event: MouseEvent) { // Add underscore to indicate unused parameter\r\n this.isDragging = false;\r\n }\r\n\r\n onWheel(event: WheelEvent) {\r\n event.preventDefault();\r\n const pos = this.getCanvasPosition(event);\r\n\r\n // Calculate zoom\r\n const delta = event.deltaY > 0 ? 0.9 : 1.1;\r\n const newScale = this.scale * delta;\r\n\r\n // Limit zoom range\r\n if (newScale >= 0.1 && newScale <= 5) {\r\n this.scale = newScale;\r\n\r\n // Adjust pan offset to zoom towards mouse position\r\n this.panOffset.x = pos.x - (pos.x - this.panOffset.x) * delta;\r\n this.panOffset.y = pos.y - (pos.y - this.panOffset.y) * delta;\r\n\r\n this.draw();\r\n }\r\n }\r\n\r\n private getCanvasPosition(event: MouseEvent): Point {\r\n const rect = this.mainCanvas.nativeElement.getBoundingClientRect();\r\n return {\r\n x: (event.clientX - rect.left) / this.scale - this.panOffset.x,\r\n y: (event.clientY - rect.top) / this.scale - this.panOffset.y\r\n };\r\n }\r\n\r\n private findShapeAtPosition(pos: Point): WireframeShape | null {\r\n // Search shapes in reverse order to find top-most shape first\r\n for (let i = this.shapes.length - 1; i >= 0; i--) {\r\n const shape = this.shapes[i];\r\n if (pos.x >= shape.x && pos.x <= shape.x + shape.width &&\r\n pos.y >= shape.y && pos.y <= shape.y + shape.height) {\r\n return shape;\r\n }\r\n }\r\n return null;\r\n }\r\n\r\n toggleGrid() {\r\n this.showGrid = !this.showGrid;\r\n this.draw();\r\n }\r\n\r\n toggleSnap() {\r\n this.snapEnabled = !this.snapEnabled;\r\n }\r\n\r\n resetZoom() {\r\n this.scale = 1;\r\n this.panOffset = { x: 0, y: 0 };\r\n this.draw();\r\n }\r\n\r\n\r\n alignSelected(alignment: string) {\r\n if (this.selectedShapes.size < 2) return;\r\n\r\n const selectedShapes = this.shapes.filter(s => this.selectedShapes.has(s.id));\r\n\r\n switch (alignment) {\r\n case 'left':\r\n const leftMost = Math.min(...selectedShapes.map(s => s.x));\r\n selectedShapes.forEach(s => s.x = leftMost);\r\n break;\r\n case 'center':\r\n const centerX = selectedShapes.reduce((acc, s) => acc + s.x + s.width / 2, 0) / selectedShapes.length;\r\n selectedShapes.forEach(s => s.x = centerX - s.width / 2);\r\n break;\r\n case 'right':\r\n const rightMost = Math.max(...selectedShapes.map(s => s.x + s.width));\r\n selectedShapes.forEach(s => s.x = rightMost - s.width);\r\n break;\r\n case 'top':\r\n const topMost = Math.min(...selectedShapes.map(s => s.y));\r\n selectedShapes.forEach(s => s.y = topMost);\r\n break;\r\n case 'middle':\r\n const centerY = selectedShapes.reduce((acc, s) => acc + s.y + s.height / 2, 0) / selectedShapes.length;\r\n selectedShapes.forEach(s => s.y = centerY - s.height / 2);\r\n break;\r\n case 'bottom':\r\n const bottomMost = Math.max(...selectedShapes.map(s => s.y + s.height));\r\n selectedShapes.forEach(s => s.y = bottomMost - s.height);\r\n break;\r\n }\r\n\r\n this.draw();\r\n }\r\n\r\n // Add shape when dropped from palette\r\n onDrop(event: DragEvent) {\r\n event.preventDefault();\r\n const shapeType = event.dataTransfer?.getData('text/plain');\r\n const pos = this.getCanvasPosition(event as unknown as MouseEvent);\r\n\r\n if (shapeType) {\r\n const template = this.availableShapes.find(s => s.type === shapeType);\r\n if (template) {\r\n const newShape: WireframeShape = {\r\n id: `shape-${Date.now()}`,\r\n type: shapeType,\r\n x: pos.x,\r\n y: pos.y,\r\n width: template.defaultWidth,\r\n height: template.defaultHeight,\r\n text: '',\r\n layer: this.shapes.length,\r\n properties: {}\r\n };\r\n\r\n this.shapes.push(newShape);\r\n this.selectedShapes.clear();\r\n this.selectedShapes.add(newShape.id);\r\n this.draw();\r\n }\r\n }\r\n }\r\n\r\n // Handle text editing for shapes\r\n onDoubleClick(event: MouseEvent) {\r\n const pos = this.getCanvasPosition(event);\r\n const shape = this.findShapeAtPosition(pos);\r\n\r\n if (shape) {\r\n const text = prompt('Enter text:', shape.text);\r\n if (text !== null) {\r\n shape.text = text;\r\n this.draw();\r\n }\r\n }\r\n }\r\n\r\n // Resize selected shapes\r\n private initializeResizeHandles() {\r\n const handleSize = 8;\r\n const handles = [\r\n { cursor: 'nw-resize', x: 0, y: 0 },\r\n { cursor: 'n-resize', x: 0.5, y: 0 },\r\n { cursor: 'ne-resize', x: 1, y: 0 },\r\n { cursor: 'w-resize', x: 0, y: 0.5 },\r\n { cursor: 'e-resize', x: 1, y: 0.5 },\r\n { cursor: 'sw-resize', x: 0, y: 1 },\r\n { cursor: 's-resize', x: 0.5, y: 1 },\r\n { cursor: 'se-resize', x: 1, y: 1 }\r\n ];\r\n\r\n this.selectedShapes.forEach(id => {\r\n const shape = this.shapes.find(s => s.id === id);\r\n if (shape) {\r\n handles.forEach(handle => {\r\n const x = shape.x + shape.width * handle.x - handleSize / 2;\r\n const y = shape.y + shape.height * handle.y - handleSize / 2;\r\n\r\n this.ctx.fillStyle = '#fff';\r\n this.ctx.strokeStyle = '#0066ff';\r\n this.ctx.fillRect(x, y, handleSize, handleSize);\r\n this.ctx.strokeRect(x, y, handleSize, handleSize);\r\n });\r\n }\r\n });\r\n }\r\n\r\n // Layer management\r\n bringToFront() {\r\n if (this.selectedShapes.size === 0) return;\r\n\r\n const maxLayer = Math.max(...this.shapes.map(s => s.layer));\r\n this.shapes.forEach(shape => {\r\n if (this.selectedShapes.has(shape.id)) {\r\n shape.layer = maxLayer + 1;\r\n }\r\n });\r\n\r\n this.sortShapesByLayer();\r\n this.draw();\r\n }\r\n\r\n sendToBack() {\r\n if (this.selectedShapes.size === 0) return;\r\n\r\n const minLayer = Math.min(...this.shapes.map(s => s.layer));\r\n this.shapes.forEach(shape => {\r\n if (this.selectedShapes.has(shape.id)) {\r\n shape.layer = minLayer - 1;\r\n }\r\n });\r\n\r\n this.sortShapesByLayer();\r\n this.draw();\r\n }\r\n\r\n private sortShapesByLayer() {\r\n this.shapes.sort((a, b) => a.layer - b.layer);\r\n }\r\n\r\n // Save and load functionality\r\n saveToJSON(): string {\r\n return JSON.stringify({\r\n shapes: this.shapes,\r\n scale: this.scale,\r\n panOffset: this.panOffset,\r\n showGrid: this.showGrid,\r\n snapEnabled: this.snapEnabled\r\n });\r\n }\r\n\r\n loadFromJSON(json: string) {\r\n try {\r\n const data = JSON.parse(json);\r\n this.shapes = data.shapes;\r\n this.scale = data.scale;\r\n this.panOffset = data.panOffset;\r\n this.showGrid = data.showGrid;\r\n this.snapEnabled = data.snapEnabled;\r\n this.selectedShapes.clear();\r\n this.draw();\r\n } catch (error) {\r\n console.error('Error loading wireframe:', error);\r\n }\r\n }\r\n\r\n // Export functionality\r\n exportAsPNG(): string {\r\n return this.mainCanvas.nativeElement.toDataURL('image/png');\r\n }\r\n\r\n // Undo/Redo support\r\n private undoStack: any[] = [];\r\n private redoStack: any[] = [];\r\n\r\n private saveState() {\r\n this.undoStack.push(this.saveToJSON());\r\n this.redoStack = [];\r\n }\r\n\r\n undo() {\r\n if (this.undoStack.length > 0) {\r\n const currentState = this.saveToJSON();\r\n this.redoStack.push(currentState);\r\n const previousState = this.undoStack.pop()!;\r\n this.loadFromJSON(previousState);\r\n }\r\n }\r\n\r\n redo() {\r\n if (this.redoStack.length > 0) {\r\n const currentState = this.saveToJSON();\r\n this.undoStack.push(currentState);\r\n const nextState = this.redoStack.pop()!;\r\n this.loadFromJSON(nextState);\r\n }\r\n }\r\n}","// ixt-wireframe.module.ts\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { IxtWireframeDiagram } from './ixt-wireframe.diagram';\r\n\r\n@NgModule({\r\n declarations: [\r\n IxtWireframeDiagram\r\n ],\r\n imports: [\r\n CommonModule,\r\n FormsModule,\r\n DragDropModule\r\n ],\r\n exports: [\r\n IxtWireframeDiagram\r\n ],\r\n providers: []\r\n})\r\nexport class IxtWireframeModule {\r\n // If you need to do any module-level configuration, you can use the forRoot pattern\r\n static forRoot() {\r\n return {\r\n ngModule: IxtWireframeModule,\r\n providers: [\r\n // Add any providers that should be singleton across the app\r\n ]\r\n };\r\n }\r\n}\r\n\r\n// Optional: Add configuration types if needed\r\nexport interface IxtWireframeConfig {\r\n gridSize?: number;\r\n snapThreshold?: number;\r\n defaultShapes?: Array<{\r\n name: string;\r\n type: string;\r\n defaultWidth: number;\r\n defaultHeight: number;\r\n }>;\r\n maxUndoSteps?: number;\r\n}\r\n\r\n// Optional: Add service interfaces if needed\r\nexport interface IxtWireframeService {\r\n saveTemplate(name: string, template: any): Promise<void>;\r\n loadTemplate(name: string): Promise<any>;\r\n listTemplates(): Promise<string[]>;\r\n}","// ixt-wireframe.index.ts\r\nexport * from './ixt-wireframe.module';\r\nexport * from './ixt-wireframe.diagram';\r\n\r\n","// ixt-layer-manager.component.ts\r\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\r\n\r\nexport interface Layer {\r\n id: string;\r\n name: string;\r\n visible: boolean;\r\n fillColor: string;\r\n strokeColor: string;\r\n strokeStyle: 'solid' | 'dashed' | 'dotted';\r\n order: number;\r\n}\r\n\r\n@Component({\r\n selector: 'ixt-layer-manager',\r\n templateUrl: './ixt-layer-manager.component.html',\r\n styleUrls: ['./ixt-layer-manager.component.scss']\r\n})\r\nexport class IxtLayerManagerComponent implements OnInit {\r\n @Input() layers: Layer[] = [];\r\n @Output() layerChange = new EventEmitter<Layer[]>();\r\n @Output() layerOrderChange = new EventEmitter<Layer[]>();\r\n\r\n selectedLayer: Layer | null = null;\r\n showColorPicker = false;\r\n activeProperty: 'fill' | 'stroke' | null = null;\r\n showStrokeStylePicker = false;\r\n strokeStyles: Array<Layer['strokeStyle']> = ['solid', 'dashed', 'dotted'];\r\n\r\n ngOnInit(): void {\r\n this.sortLayers();\r\n }\r\n\r\n sortLayers(): void {\r\n this.layers.sort((a, b) => a.order - b.order);\r\n }\r\n\r\n onDrop(event: CdkDragDrop<Layer[]>): void {\r\n moveItemInArray(this.layers, event.previousIndex, event.currentIndex);\r\n this.layers.forEach((layer, index) => {\r\n layer.order = index;\r\n });\r\n this.layerOrderChange.emit(this.layers);\r\n }\r\n\r\n toggleVisibility(layer: Layer): void {\r\n layer.visible = !layer.visible;\r\n this.layerChange.emit(this.layers);\r\n }\r\n\r\n openColorPicker(layer: Layer, property: 'fill' | 'stroke'): void {\r\n this.selectedLayer = layer;\r\n this.activeProperty = property;\r\n this.showColorPicker = true;\r\n }\r\n\r\n openStrokeStylePicker(layer: Layer): void {\r\n this.selectedLayer = layer;\r\n this.showStrokeStylePicker = true;\r\n }\r\n\r\n onColorSelect(color: string): void {\r\n if (this.selectedLayer && this.activeProperty) {\r\n if (this.activeProperty === 'fill') {\r\n this.selectedLayer.fillColor = color;\r\n } else {\r\n this.selectedLayer.strokeColor = color;\r\n }\r\n this.layerChange.emit(this.layers);\r\n }\r\n }\r\n\r\n onStrokeStyleSelect(style: Layer['strokeStyle']): void {\r\n if (this.selectedLayer) {\r\n this.selectedLayer.strokeStyle = style;\r\n this.layerChange.emit(this.layers);\r\n this.closeStrokeStylePicker();\r\n }\r\n }\r\n\r\n closeColorPicker(): void {\r\n this.showColorPicker = false;\r\n this.selectedLayer = null;\r\n this.activeProperty = null;\r\n }\r\n\r\n closeStrokeStylePicker(): void {\r\n this.showStrokeStylePicker = false;\r\n this.selectedLayer = null;\r\n }\r\n}\r\n","<!-- ixt-layer-manager.component.html -->\r\n<div class=\"layer-manager\">\r\n <div class=\"manager-header\">\r\n <div class=\"header-content\">\r\n <span class=\"header-icon\">⟰</span>\r\n <h2>Layers</h2>\r\n </div>\r\n </div>\r\n\r\n <div class=\"layer-list\" cdkDropList (cdkDropListDropped)=\"onDrop($event)\">\r\n <div class=\"layer-puck\" *ngFor=\"let layer of layers\" cdkDrag>\r\n <div class=\"drag-handle\">⋮</div>\r\n \r\n <span class=\"layer-name\">{{ layer.name }}</span>\r\n \r\n <div class=\"layer-controls\">\r\n <button class=\"control-btn\" (click)=\"openColorPicker(layer, 'fill')\">\r\n <span class=\"icon\" [style.color]=\"layer.fillColor\">●</span>\r\n </button>\r\n <button class=\"control-btn\" (click)=\"openColorPicker(layer, 'stroke')\">\r\n <span class=\"icon\" [style.color]=\"layer.strokeColor\">○</span>\r\n </button>\r\n <button class=\"control-btn\" (click)=\"openStrokeStylePicker(layer)\">\r\n <span class=\"icon\" [ngClass]=\"layer.strokeStyle\">─</span>\r\n </button>\r\n <button class=\"control-btn\" (click)=\"toggleVisibility(layer)\">\r\n <span class=\"icon\">{{ layer.visible ? '👁' : '👁‍🗨' }}</span>\r\n </button>\r\n </div>\r\n </div>\r\n </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { IxtLayerManagerComponent } from './ixt-layer-manager.component';\r\n\r\n@NgModule({\r\n declarations: [IxtLayerManagerComponent],\r\n imports: [\r\n CommonModule,\r\n DragDropModule\r\n ],\r\n exports: [IxtLayerManagerComponent]\r\n})\r\nexport class IxtLayerManagerModule { }\r\n","// ixt-layer-manager.index.ts\r\nexport * from './ixt-layer-manager.component';\r\nexport * from './ixt-layer-manager.module';\r\n\r\nexport interface Layer {\r\n id: string;\r\n name: string;\r\n visible: boolean;\r\n fillColor: string;\r\n strokeColor: string;\r\n strokeStyle: 'solid' | 'dashed' | 'dotted';\r\n order: number;\r\n}","import { Holiday } from \"./holiday.interface\";\r\n\r\n export abstract class HolidayCalculator {\r\n abstract getHolidays(year: number): Holiday[];\r\n \r\n protected nthWeekdayOfMonth(year: number, month: number, weekday: number, n: number): Date {\r\n const date = new Date(year, month, 1);\r\n while (date.getDay() !== weekday) {\r\n date.setDate(date.getDate() + 1);\r\n }\r\n date.setDate(date.getDate() + (n - 1) * 7);\r\n return date;\r\n }\r\n \r\n protected lastWeekdayOfMonth(year: number, month: number, weekday: number): Date {\r\n const date = new Date(year, month + 1, 0);\r\n while (date.getDay() !== weekday) {\r\n date.setDate(date.getDate() - 1);\r\n }\r\n return date;\r\n }\r\n }\r\n \r\n","import { Holiday } from '../models/holiday.interface';\r\nimport { HolidayCalculator } from '../models/holiday-calculator';\r\n\r\nexport class USAHolidayCalculator extends HolidayCalculator {\r\n getHolidays(year: number): Holiday[] {\r\n return [\r\n { name: \"New Year's Day\", date: new Date(year, 0, 1), type: 'federal' },\r\n { name: \"Martin Luther King Jr. Day\", date: this.nthWeekdayOfMonth(year, 0, 1, 3), type: 'federal' },\r\n { name: \"Presidents Day\", date: this.nthWeekdayOfMonth(year, 1, 1, 3), type: 'federal' },\r\n { name: \"Easter\", date: this.calculateEaster(year), type: 'federal' },\r\n { name: \"Memorial Day\", date: this.lastWeekdayOfMonth(year, 4, 1), type: 'federal' },\r\n { name: \"Independence Day\", date: new Date(year, 6, 4), type: 'federal' },\r\n { name: \"Labor Day\", date: this.nthWeekdayOfMonth(year, 8, 1, 1), type: 'federal' },\r\n { name: \"Columbus Day\", date: this.nthWeekdayOfMonth(year, 9, 1, 2), type: 'federal' },\r\n { name: \"Veterans Day\", date: new Date(year, 10, 11), type: 'federal' },\r\n { name: \"Thanksgiving\", date: this.nthWeekdayOfMonth(year, 10, 4, 4), type: 'federal' },\r\n { name: \"Christmas\", date: new Date(year, 11, 25), type: 'federal' }\r\n ];\r\n }\r\n\r\n private calculateEaster(year: number): Date {\r\n const a = year % 19;\r\n const b = Math.floor(year / 100);\r\n const c = year % 100;\r\n const d = Math.floor(b / 4);\r\n const e = b % 4;\r\n const f = Math.floor((b + 8) / 25);\r\n const g = Math.floor((b - f + 1) / 3);\r\n const h = (19 * a + b - d - g + 15) % 30;\r\n const i = Math.floor(c / 4);\r\n const k = c % 4;\r\n const l = (32 + 2 * e + 2 * i - h - k) % 7;\r\n const m = Math.floor((a + 11 * h + 22 * l) / 451);\r\n const month = Math.floor((h + l - 7 * m + 114) / 31) - 1;\r\n const day = ((h + l - 7 * m + 114) % 31) + 1;\r\n \r\n return new Date(year, month, day);\r\n }\r\n}","import { Holiday } from \"../models/holiday.interface\";\r\nimport { HolidayCalculator } from '../models/holiday-calculator';\r\n\r\nexport class IndianHolidayCalculator extends HolidayCalculator {\r\n getHolidays(year: number): Holiday[] {\r\n return [\r\n { name: \"Diwali\", date: this.calculateDiwali(year), type: 'cultural' },\r\n { name: \"Holi\", date: this.calculateHoli(year), type: 'cultural' },\r\n { name: \"Republic Day\", date: new Date(year, 0, 26), type: 'cultural' },\r\n { name: \"Independence Day\", date: new Date(year, 7, 15), type: 'cultural' }\r\n ];\r\n }\r\n \r\n private calculateDiwali(year: number): Date {\r\n // Placeholder - needs proper lunar calendar calculation\r\n return new Date(year, 9, 24);\r\n }\r\n \r\n private calculateHoli(year: number): Date {\r\n // Placeholder - needs proper lunar calendar calculation\r\n return new Date(year, 2, 8);\r\n }\r\n }","import { Holiday } from \"../models/holiday.interface\";\r\nimport { HolidayCalculator } from '../models/holiday-calculator';\r\n\r\nexport class IslamicHolidayCalculator extends HolidayCalculator {\r\n getHolidays(year: number): Holiday[] {\r\n // Note: Islamic holidays follow lunar calendar - this needs more complex calculation\r\n return [\r\n { name: \"Eid al-Fitr\", date: this.calculateEidAlFitr(year), type: 'religious' },\r\n { name: \"Eid al-Adha\", date: this.calculateEidAlAdha(year), type: 'religious' },\r\n { name: \"Islamic New Year\", date: this.calculateIslamicNewYear(year), type: 'religious' }\r\n ];\r\n }\r\n \r\n private calculateEidAlFitr(year: number): Date {\r\n // Placeholder - needs proper Islamic calendar calculation\r\n return new Date(year, 5, 15);\r\n }\r\n \r\n private calculateEidAlAdha(year: number): Date {\r\n // Placeholder - needs proper Islamic calendar calculation\r\n return new Date(year, 7, 22);\r\n }\r\n \r\n private calculateIslamicNewYear(year: number): Date {\r\n // Placeholder - needs proper Islamic calendar calculation\r\n return new Date(year, 8, 1);\r\n }\r\n }\r\n \r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { CalendarDay } from './ixt-calendar.interfaces';\r\nimport { USAHolidayCalculator } from './calculators/usa-holidays';\r\nimport { IndianHolidayCalculator } from './calculators/indian-holidays';\r\nimport { IslamicHolidayCalculator } from './calculators/islamic-holidays';\r\nimport { Holiday } from './models/holiday.interface';\r\n\r\n@Component({\r\n selector: 'ixt-calendar',\r\n templateUrl: './ixt-calendar.component.html',\r\n styleUrls: ['./ixt-calendar.component.scss']\r\n})\r\nexport class IxtCalendarComponent implements OnInit {\r\n private holidayCalculators = [\r\n new USAHolidayCalculator(),\r\n new IslamicHolidayCalculator(),\r\n new IndianHolidayCalculator()\r\n ];\r\n\r\n months = [\r\n 'January', 'February', 'March', 'April', 'May', 'June',\r\n 'July', 'August', 'September', 'October', 'November', 'December'\r\n ];\r\n \r\n weekDays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n calendarDays: CalendarDay[] = [];\r\n monthControl = new FormControl(0);\r\n yearControl = new FormControl(new Date().getFullYear());\r\n\r\n private holidays: Holiday[] = [];\r\n\r\n ngOnInit() {\r\n this.monthControl.valueChanges.subscribe(() => this.generateCalendar());\r\n this.yearControl.valueChanges.subscribe(() => {\r\n this.updateHolidays();\r\n this.generateCalendar();\r\n });\r\n this.updateHolidays();\r\n this.generateCalendar();\r\n }\r\n\r\n private updateHolidays() {\r\n this.holidays = this.holidayCalculators.flatMap(\r\n calc => calc.getHolidays(this.yearControl.value!)\r\n );\r\n }\r\n\r\n generateCalendar() {\r\n const year = this.yearControl.value!;\r\n const month = this.monthControl.value!;\r\n const firstDay = new Date(year, month, 1);\r\n const lastDay = new Date(year, month + 1, 0);\r\n \r\n this.calendarDays = [];\r\n \r\n // Add padding days from previous month\r\n for (let i = 0; i < firstDay.getDay(); i++) {\r\n const date = new Date(year, month, -i);\r\n this.calendarDays.unshift(this.createCalendarDay(date));\r\n }\r\n \r\n // Add days of current month\r\n for (let date = new Date(firstDay); date <= lastDay; date.setDate(date.getDate() + 1)) {\r\n this.calendarDays.push(this.createCalendarDay(new Date(date)));\r\n }\r\n \r\n // Add padding days from next month\r\n const remainingDays = 42 - this.calendarDays.length;\r\n for (let i = 1; i <= remainingDays; i++) {\r\n const date = new Date(year, month + 1, i);\r\n this.calendarDays.push(this.createCalendarDay(date));\r\n }\r\n }\r\n\r\n private createCalendarDay(date: Date): CalendarDay {\r\n return {\r\n date,\r\n isWeekend: date.getDay() === 0 || date.getDay() === 6,\r\n holidays: this.holidays.filter(h => \r\n h.date.getDate() === date.getDate() && \r\n h.date.getMonth() === date.getMonth()\r\n )\r\n };\r\n }\r\n\r\n previousMonth() {\r\n if (this.monthControl.value === 0) {\r\n this.monthControl.setValue(11);\r\n this.yearControl.setValue(this.yearControl.value! - 1);\r\n } else {\r\n this.monthControl.setValue(this.monthControl.value! - 1);\r\n }\r\n }\r\n\r\n nextMonth() {\r\n if (this.monthControl.value === 11) {\r\n this.monthControl.setValue(0);\r\n this.yearControl.setValue(this.yearControl.value! + 1);\r\n } else {\r\n this.monthControl.setValue(this.monthControl.value! + 1);\r\n }\r\n }\r\n\r\n validateYear() {\r\n const year = this.yearControl.value!;\r\n if (year < 0) this.yearControl.setValue(0);\r\n if (year > 2100) this.yearControl.setValue(2100);\r\n }\r\n}","<div class=\"calendar-container\">\r\n <div class=\"calendar-controls\">\r\n <button (click)=\"previousMonth()\">&lt;</button>\r\n <select [formControl]=\"monthControl\">\r\n <option *ngFor=\"let month of months; let i = index\" [value]=\"i\">\r\n {{month}}\r\n </option>\r\n </select>\r\n <input \r\n type=\"number\" \r\n [formControl]=\"yearControl\"\r\n [min]=\"0\"\r\n [max]=\"2100\"\r\n (blur)=\"validateYear()\"\r\n >\r\n <button (click)=\"nextMonth()\">&gt;</button>\r\n </div>\r\n \r\n <div class=\"calendar-grid\">\r\n <div class=\"weekday-header\" *ngFor=\"let day of weekDays\">{{day}}</div>\r\n <div \r\n *ngFor=\"let day of calendarDays\" \r\n class=\"calendar-day\"\r\n [class.weekend]=\"day.isWeekend\"\r\n [class.holiday]=\"day.holidays.length > 0\"\r\n >\r\n <div class=\"date\">{{day.date.getDate()}}</div>\r\n <div class=\"holiday-name\" *ngFor=\"let holiday of day.holidays\">\r\n {{holiday.name}}\r\n </div>\r\n </div>\r\n </div>\r\n </div>\r\n ","// ixt-calendar.module.ts\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { IxtCalendarComponent } from './ixt-calendar.component';\r\n\r\n@NgModule({\r\n declarations: [IxtCalendarComponent],\r\n imports: [CommonModule, ReactiveFormsModule],\r\n exports: [IxtCalendarComponent]\r\n})\r\nexport class IxtCalendarModule { }","// ixt-calendar.index.ts\r\nexport * from './ixt-calendar.component';\r\nexport * from './ixt-calendar.module';\r\n\r\nexport interface CalendarDay {\r\n date: Date;\r\n isWeekend: boolean;\r\n holidays: Holiday[];\r\n}\r\n\r\nexport interface Holiday {\r\n name: string;\r\n date: Date;\r\n type: 'federal' | 'religious' | 'cultural';\r\n}\r\n\r\nexport * from './calculators/usa-holidays';\r\nexport * from './calculators/indian-holidays';\r\nexport * from './calculators/islamic-holidays';","// Create the GeoJSON processing service (geo-processing.service.ts)\r\nimport { Injectable } from '@angular/core';\r\nimport { Feature, LineString, GeoJsonProperties, Geometry } from 'geojson';\r\nimport * as d3 from 'd3';\r\nimport { GeoFeatureProperties, GeoProcessingOptions } from './geo.types';\r\n\r\n@Injectable({\r\n providedIn: 'root'\r\n})\r\nexport class GeoProcessingService {\r\n processFeatures(features: Feature[], options: GeoProcessingOptions = {}): Feature[] {\r\n let processedFeatures = [...features];\r\n\r\n // Apply route interpolation if needed\r\n if (options.interpolateRoutes) {\r\n processedFeatures = this.interpolateRoutes(processedFeatures, {\r\n pointsPerRoute: options.pointsPerRoute,\r\n minPoints: options.minPointsPerRoute\r\n });\r\n }\r\n\r\n // Apply filtering if expression provided\r\n if (options.filterExpression) {\r\n processedFeatures = this.filterFeatures(processedFeatures, options.filterExpression);\r\n }\r\n\r\n return processedFeatures;\r\n }\r\n\r\n private interpolateRoutes(\r\n features: Feature[],\r\n options: { pointsPerRoute?: number; minPoints?: number } = {}\r\n ): Feature[] {\r\n const minPoints = options.minPoints || 5;\r\n\r\n return features.map(feature => {\r\n if (feature.geometry.type !== 'LineString') {\r\n return feature;\r\n }\r\n\r\n const line = feature.geometry as LineString;\r\n const coordinates = line.coordinates;\r\n\r\n if (coordinates.length !== 2) {\r\n return feature;\r\n }\r\n\r\n const start = coordinates[0] as [number, number];\r\n const end = coordinates[1] as [number, number];\r\n const route = d3.geoInterpolate(start, end);\r\n\r\n // Calculate distance and points\r\n const distance = d3.geoDistance(start, end) * 3959; // Earth radius in miles\r\n const pointsPer5Miles = Math.ceil(distance / 5);\r\n const numPoints = Math.max(minPoints, options.pointsPerRoute || pointsPer5Miles);\r\n\r\n const newCoordinates = Array.from({ length: numPoints }, (_, i) => {\r\n const t = i / (numPoints - 1);\r\n return route(t);\r\n });\r\n\r\n return {\r\n ...feature,\r\n geometry: {\r\n ...line,\r\n coordinates: newCoordinates\r\n }\r\n };\r\n });\r\n }\r\n\r\n private filterFeatures(features: Feature[], expression: string): Feature[] {\r\n const filterFn = this.createFilterFunction(expression);\r\n \r\n return features.filter(feature => {\r\n try {\r\n return filterFn ? filterFn(feature) : true;\r\n } catch (e) {\r\n console.error('Error applying filter to feature:', e);\r\n return true;\r\n }\r\n });\r\n }\r\n\r\n private createFilterFunction(expression: string): Function | null {\r\n if (!expression) return null;\r\n \r\n try {\r\n return new Function('feature', `\r\n try {\r\n const properties = feature.properties;\r\n return ${expression};\r\n } catch (e) {\r\n console.error('Filter expression error:', e);\r\n return true;\r\n }\r\n `);\r\n } catch (e) {\r\n console.error('Error creating filter function:', e);\r\n return null;\r\n }\r\n }\r\n\r\n // private createFilterFunction(): Function | null {\r\n // if (!this.filterExpression) return null;\r\n\r\n // console.log('Creating filter with expression:', this.filterExpression);\r\n\r\n // return new Function('feature', `\r\n // try {\r\n // const properties = feature.properties;\r\n // //console.log('Evaluating:', properties);\r\n // return ${this.filterExpression};\r\n // } catch (e) {\r\n // console.error('Filter expression error:', e);\r\n // return true; // If there's an error, include the feature\r\n // }\r\n // `);\r\n // }\r\n}","// map-error.service.ts\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\nexport interface MapError {\r\n code: MapErrorCode;\r\n message: string;\r\n timestamp: Date;\r\n context?: any;\r\n}\r\n\r\nexport enum MapErrorCode {\r\n INITIALIZATION_FAILED = 'INIT_FAILED',\r\n PROJECTION_FAILED = 'PROJ_FAILED',\r\n DATA_LOAD_FAILED = 'DATA_LOAD_FAILED',\r\n SELECTION_FAILED = 'SELECT_FAILED',\r\n INVALID_DIMENSIONS = 'INVALID_DIMS'\r\n}\r\n\r\n@Injectable({\r\n providedIn: 'root'\r\n})\r\nexport class MapErrorService {\r\n private errorSubject = new BehaviorSubject<MapError | null>(null);\r\n private retryAttemptsMap = new Map<string, number>();\r\n \r\n readonly maxRetryAttempts = 3;\r\n readonly errors$ = this.errorSubject.asObservable();\r\n\r\n reportError(code: MapErrorCode, message: string, context?: any): void {\r\n const error: MapError = {\r\n code,\r\n message,\r\n timestamp: new Date(),\r\n context\r\n };\r\n this.errorSubject.next(error);\r\n console.error(`Map Error [${code}]:`, message, context);\r\n }\r\n\r\n clearError(): void {\r\n this.errorSubject.next(null);\r\n }\r\n\r\n shouldRetry(operationKey: string): boolean {\r\n const attempts = this.retryAttemptsMap.get(operationKey) || 0;\r\n if (attempts < this.maxRetryAttempts) {\r\n this.retryAttemptsMap.set(operationKey, attempts + 1);\r\n return true;\r\n }\r\n return false;\r\n }\r\n\r\n resetRetryCount(operationKey: string): void {\r\n this.retryAttemptsMap.delete(operationKey);\r\n }\r\n}\r\n\r\n","// map.service.ts\r\nimport { Injectable } from '@angular/core';\r\nimport * as d3 from 'd3';\r\nimport { GeoProjection, GeoPath } from 'd3';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { MapError, MapErrorCode, MapErrorService } from './map-error.service';\r\n\r\nexport interface MapDimensions {\r\n width: number;\r\n height: number;\r\n}\r\n\r\nexport interface MapState {\r\n projection: GeoProjection;\r\n pathGenerator: GeoPath;\r\n dimensions: MapDimensions;\r\n}\r\n\r\n@Injectable({\r\n providedIn: 'root'\r\n})\r\nexport class MapService {\r\n private projection!: GeoProjection;\r\n private pathGenerator!: GeoPath;\r\n private selectedElementSource = new BehaviorSubject<SVGPathElement | null>(null);\r\n private dimensions = new BehaviorSubject<MapDimensions>({ width: 800, height: 600 });\r\n\r\n readonly selectedElement$ = this.selectedElementSource.asObservable();\r\n readonly dimensions$ = this.dimensions.asObservable();\r\n\r\n private errorSubject = new BehaviorSubject<MapError | null>(null);\r\n private retryAttemptsMap = new Map<string, number>();\r\n \r\n readonly maxRetryAttempts = 3;\r\n readonly errors$ = this.errorSubject.asObservable();\r\n\r\n constructor(private errorService: MapErrorService) {}\r\n\r\n\r\n initializeProjection(width: number, height: number): { projection: GeoProjection; pathGenerator: d3.GeoPath } {\r\n try {\r\n if (width <= 0 || height <= 0) {\r\n throw new Error('Invalid dimensions');\r\n }\r\n\r\n this.projection = d3.geoMercator()\r\n .fitSize([width, height], {\r\n type: 'Sphere'\r\n });\r\n\r\n this.pathGenerator = d3.geoPath().projection(this.projection);\r\n\r\n return {\r\n projection: this.projection,\r\n pathGenerator: this.pathGenerator\r\n };\r\n } catch (error) {\r\n this.errorService.reportError(\r\n MapErrorCode.INITIALIZATION_FAILED,\r\n 'Failed to initialize map projection',\r\n { width, height, error }\r\n );\r\n throw error;\r\n }\r\n }\r\n \r\n getProjection(): GeoProjection {\r\n return this.projection;\r\n }\r\n\r\n getPathGenerator(): GeoPath {\r\n return this.pathGenerator;\r\n }\r\n\r\n getDimensions(): MapDimensions {\r\n return this.dimensions.value;\r\n }\r\n\r\n setSelection(element: SVGPathElement | null): void {\r\n const previousElement = this.selectedElementSource.value;\r\n \r\n if (previousElement) {\r\n d3.select(previousElement)\r\n .attr('stroke', d3.select(previousElement).attr('data-original-stroke'))\r\n .attr('stroke-width', '1');\r\n }\r\n\r\n this.selectedElementSource.next(element);\r\n }\r\n\r\n clearSelection(): void {\r\n this.setSelection(null);\r\n }\r\n\r\n getBaseDimension(value: string | number): number {\r\n if (typeof value === 'number') return value;\r\n const num = parseFloat(value);\r\n return isNaN(num) ? 800 : num;\r\n }\r\n\r\n reportError(code: MapErrorCode, message: string, context?: any): void {\r\n const error: MapError = {\r\n code,\r\n message,\r\n timestamp: new Date(),\r\n context\r\n };\r\n this.errorSubject.next(error);\r\n console.error(`Map Error [${code}]:`, message, context);\r\n }\r\n\r\n clearError(): void {\r\n this.errorSubject.next(null);\r\n }\r\n\r\n shouldRetry(operationKey: string): boolean {\r\n const attempts = this.retryAttemptsMap.get(operationKey) || 0;\r\n if (attempts < this.maxRetryAttempts) {\r\n this.retryAttemptsMap.set(operationKey, attempts + 1);\r\n return true;\r\n }\r\n return false;\r\n }\r\n\r\n resetRetryCount(operationKey: string): void {\r\n this.retryAttemptsMap.delete(operationKey);\r\n }\r\n}","// layer-render.service.ts\r\nimport { Injectable } from '@angular/core';\r\nimport * as d3 from 'd3';\r\nimport { Feature, GeoJsonProperties, Geometry } from 'geojson';\r\nimport { MapService } from './map.service';\r\n\r\nexport interface LayerRenderOptions {\r\n stroke: string;\r\n fill: string;\r\n}\r\n\r\n@Injectable({\r\n providedIn: 'root'\r\n})\r\nexport class LayerRenderService {\r\n constructor(private mapService: MapService) {}\r\n\r\n createLayer(\r\n container: d3.Selection<any, any, any, any>,\r\n features: Feature[],\r\n options: LayerRenderOptions,\r\n eventHandlers: {\r\n onClick: (event: MouseEvent, datum: any) => void;\r\n onMouseOver: (event: MouseEvent) => void;\r\n onMouseOut: (event: MouseEvent) => void;\r\n onMouseMove: (event: MouseEvent) => void;\r\n }\r\n ): d3.Selection<any, any, any, any> {\r\n const layerGroup = container\r\n .append('g')\r\n .attr('class', 'map-layer');\r\n\r\n return layerGroup\r\n .selectAll('path')\r\n .data(features)\r\n .enter()\r\n .append('path')\r\n .attr('d', (datum) => this.mapService.getPathGenerator()(datum) || '')\r\n .attr('stroke', options.stroke)\r\n .attr('fill', options.fill)\r\n .attr('stroke-width', '1')\r\n .attr('data-original-fill', options.fill)\r\n .attr('data-original-stroke', options.stroke)\r\n .attr('vector-effect', 'non-scaling-stroke')\r\n .style('cursor', 'pointer')\r\n .on('click', eventHandlers.onClick)\r\n .on('mouseover', eventHandlers.onMouseOver)\r\n .on('mouseout', eventHandlers.onMouseOut)\r\n .on('mousemove', eventHandlers.onMouseMove);\r\n }\r\n}","// layer-event.service.ts\r\nimport { Injectable } from '@angular/core';\r\nimport { MapService } from './map.service';\r\nimport * as d3 from 'd3';\r\n\r\nexport interface LayerEventHandlers {\r\n onClick: (event: MouseEvent, datum: any) => void;\r\n onMouseOver: (event: MouseEvent) => void;\r\n onMouseOut: () => void;\r\n onMouseMove: (event: MouseEvent) => void;\r\n}\r\n\r\n\r\n@Injectable({\r\n providedIn: 'root'\r\n})\r\nexport class LayerEventService {\r\n private hoveredElement: SVGPathElement | null = null;\r\n\r\n constructor(private mapService: MapService) {}\r\n\r\n handleClick(event: MouseEvent, mapRef: any): void {\r\n event.stopPropagation();\r\n const clickedPath = event.currentTarget as SVGPathElement;\r\n \r\n if (clickedPath === mapRef['selectedElement']) {\r\n mapRef.setSelection(null);\r\n this.applyHoverEffect(clickedPath, false);\r\n } else {\r\n if (mapRef['selectedElement']) {\r\n this.applyHoverEffect(mapRef['selectedElement'], false);\r\n }\r\n mapRef.setSelection(clickedPath);\r\n this.applyHoverEffect(clickedPath, true);\r\n }\r\n }\r\n\r\n handleMouseOver(event: MouseEvent, mapRef: any): void {\r\n event.stopPropagation();\r\n const currentPath = event.currentTarget as SVGPathElement;\r\n if (currentPath !== mapRef['selectedElement']) {\r\n this.applyHoverEffect(currentPath, true);\r\n this.hoveredElement = currentPath;\r\n }\r\n }\r\n\r\n handleMouseOut(): void {\r\n if (this.hoveredElement) {\r\n this.clearHoverState(this.hoveredElement);\r\n this.hoveredElement = null;\r\n }\r\n }\r\n\r\n private applyHoverEffect(element: SVGPathElement, isHover: boolean): void {\r\n const d3Element = d3.select(element);\r\n const currentFill = element.getAttribute('data-original-fill');\r\n \r\n if (currentFill && currentFill !== 'none') {\r\n d3Element\r\n .attr('fill', currentFill)\r\n .attr('stroke-width', isHover ? '2' : '1');\r\n } else {\r\n d3Element.attr('stroke-width', isHover ? '2' : '1');\r\n }\r\n }\r\n\r\n private clearHoverState(element: SVGPathElement): void {\r\n const d3Element = d3.select(element);\r\n const originalFill = element.getAttribute('data-original-fill');\r\n \r\n d3Element\r\n .attr('fill', originalFill)\r\n .attr('stroke-width', '1');\r\n }\r\n}","// layer-state.service.ts\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\nexport interface LayerState {\r\n hoveredElement: SVGPathElement | null;\r\n selections: d3.Selection<any, any, any, any>[];\r\n}\r\n\r\n@Injectable({\r\n providedIn: 'root'\r\n})\r\nexport class LayerStateService {\r\n private state = new BehaviorSubject<LayerState>({\r\n hoveredElement: null,\r\n selections: []\r\n });\r\n\r\n state$ = this.state.asObservable();\r\n\r\n setHoveredElement(element: SVGPathElement | null): void {\r\n this.updateState({ hoveredElement: element });\r\n }\r\n\r\n addSelection(selection: d3.Selection<any, any, any, any>): void {\r\n const currentState = this.state.value;\r\n this.updateState({\r\n selections: [...currentState.selections, selection]\r\n });\r\n }\r\n\r\n clearSelections(): void {\r\n const currentState = this.state.value;\r\n currentState.selections.forEach(selection => {\r\n if (selection && !selection.empty()) {\r\n selection.remove();\r\n }\r\n });\r\n this.updateState({ selections: [] });\r\n }\r\n\r\n private updateState(partialState: Partial<LayerState>): void {\r\n this.state.next({\r\n ...this.state.value,\r\n ...partialState\r\n });\r\n }\r\n\r\n ngOnDestroy(): void {\r\n this.clearSelections();\r\n this.state.complete();\r\n }\r\n}","import {\r\n Component, Input, Output, EventEmitter, ElementRef, Host,\r\n ChangeDetectionStrategy, ChangeDetectorRef, SimpleChanges\r\n} from '@angular/core';\r\nimport * as d3 from 'd3';\r\nimport { IxtMapComponent } from './ixt-map.component';\r\nimport { GeoProcessingService } from './geo-processing.service';\r\nimport { LayerRenderService } from './layer-render.service';\r\nimport { LayerEventHandlers, LayerEventService } from './layer-event.service';\r\nimport { LayerStateService } from './layer-state.service';\r\nimport { Feature } from 'geojson';\r\n\r\n@Component({\r\n selector: 'ixt-layer',\r\n template: `\r\n<svg:g>\r\n<ng-content></ng-content>\r\n</svg:g>\r\n`,\r\n changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class IxtLayerComponent {\r\n @Input() src: string = '';\r\n @Input() stroke: string = 'black';\r\n @Input() fill: string = 'none';\r\n @Output() click = new EventEmitter<MouseEvent>();\r\n @Output() hover = new EventEmitter<MouseEvent>();\r\n\r\n private initialized = false;\r\n private pathGenerator!: d3.GeoPath;\r\n private filterExpression: string = '';\r\n\r\n constructor(\r\n @Host() private mapComponent: IxtMapComponent,\r\n private elementRef: ElementRef,\r\n private cdr: ChangeDetectorRef,\r\n private geoProcessingService: GeoProcessingService,\r\n private layerRenderService: LayerRenderService,\r\n private layerEventService: LayerEventService,\r\n private layerStateService: LayerStateService\r\n ) { }\r\n\r\n ngOnChanges(changes: SimpleChanges) {\r\n if ((changes['src'] || changes['stroke'] || changes['fill']) && this.initialized) {\r\n this.initializeLayer();\r\n }\r\n }\r\n \r\n ngAfterContentInit() {\r\n const content = this.elementRef.nativeElement.textContent?.trim();\r\n if (content) {\r\n this.filterExpression = content;\r\n }\r\n }\r\n\r\n setProjection(pathGenerator: d3.GeoPath): void {\r\n this.pathGenerator = pathGenerator;\r\n this.initializeLayer();\r\n }\r\n\r\n async initializeLayer(): Promise<void> {\r\n if (this.initialized) return;\r\n if (!this.validateContainer()) return;\r\n\r\n try {\r\n const features = await this.loadGeoJsonData();\r\n const handlers = this.createEventHandlers();\r\n this.renderLayer(features, handlers);\r\n this.initialized = true;\r\n } catch (error) {\r\n console.error('Layer initialization failed:', error);\r\n }\r\n }\r\n\r\n private validateContainer(): boolean {\r\n const container = this.mapComponent.getContainer();\r\n if (!container || !this.pathGenerator) {\r\n console.error('Map container or projection not ready');\r\n return false;\r\n }\r\n return true;\r\n }\r\n\r\n private async loadGeoJsonData(): Promise<Feature[]> {\r\n const data = await d3.json(this.src) as { features: Feature[] };\r\n return this.geoProcessingService.processFeatures(data.features, {\r\n interpolateRoutes: true,\r\n filterExpression: this.filterExpression\r\n });\r\n }\r\n\r\n private async renderLayer(features: any, handlers: any): Promise<void> {\r\n const container = this.mapComponent.getContainer();\r\n const selection = this.layerRenderService.createLayer(\r\n d3.select(container.nativeElement),\r\n features,\r\n { stroke: this.stroke, fill: this.fill },\r\n handlers\r\n );\r\n \r\n this.layerStateService.addSelection(selection);\r\n this.cdr.markForCheck();\r\n }\r\n\r\n private createEventHandlers(): LayerEventHandlers {\r\n return {\r\n onClick: (event: MouseEvent, datum: any) => {\r\n this.layerEventService.handleClick(event, this.mapComponent);\r\n this.click.emit(event);\r\n },\r\n onMouseOver: (event: MouseEvent) => {\r\n this.layerEventService.handleMouseOver(event, this.mapComponent);\r\n this.hover.emit(event);\r\n },\r\n onMouseOut: () => this.layerEventService.handleMouseOut(),\r\n onMouseMove: (event: MouseEvent) => event.stopPropagation()\r\n };\r\n }\r\n\r\n ngOnDestroy(): void {\r\n this.layerStateService.clearSelections();\r\n }\r\n}","import { \r\n Component, Input, ViewChild, ElementRef, ContentChildren, \r\n QueryList, AfterContentInit, OnDestroy, ChangeDetectionStrategy, \r\n ChangeDetectorRef \r\n } from '@angular/core';\r\n import * as d3 from 'd3';\r\n import { IxtLayerComponent } from './ixt-layer.component';\r\n import { GeoProjection, GeoPath } from 'd3';\r\n import { BehaviorSubject, Subscription } from 'rxjs';\r\n import { MapService } from './map.service';\r\n import { MapDimensions, MapSelection, PathSelection, MapContainer } from './map.types';\r\n \r\n @Component({\r\n selector: 'ixt-map',\r\n template: `\r\n <svg #mapSvg\r\n [attr.width]=\"width\"\r\n [attr.height]=\"height\"\r\n [attr.viewBox]=\"getViewBox()\"\r\n style=\"display: block; background: lightgray;\">\r\n <g #mapGroup>\r\n <ng-content></ng-content>\r\n </g>\r\n </svg>\r\n `,\r\n styles: [`\r\n :host {\r\n display: block;\r\n }\r\n svg {\r\n display: block;\r\n }\r\n `],\r\n changeDetection: ChangeDetectionStrategy.OnPush\r\n })\r\n export class IxtMapComponent implements AfterContentInit, OnDestroy {\r\n @Input() width: string | number = 800;\r\n @Input() height: string | number = 600;\r\n @Input() scale: string | number = 1;\r\n @Input() translate: string = '0,0';\r\n \r\n @ViewChild('mapSvg') mapSvg!: ElementRef<SVGSVGElement>;\r\n @ViewChild('mapGroup') mapGroup!: MapContainer;\r\n @ContentChildren(IxtLayerComponent) layers!: QueryList<IxtLayerComponent>;\r\n \r\n private projection!: GeoProjection;\r\n private pathGenerator!: GeoPath;\r\n private selectedElement: SVGPathElement | null = null;\r\n private mapSubscriptions = new Subscription();\r\n\r\n private projectionReady = new BehaviorSubject<boolean>(false);\r\n projectionReady$ = this.projectionReady.asObservable();\r\n\r\n \r\n constructor(\r\n private cdr: ChangeDetectorRef,\r\n private mapService: MapService\r\n ) {}\r\n \r\n private getDimensions(): MapDimensions {\r\n return {\r\n width: this.mapService.getBaseDimension(this.width),\r\n height: this.mapService.getBaseDimension(this.height),\r\n scale: Number(this.scale),\r\n translate: this.translate\r\n };\r\n }\r\n \r\n getViewBox(): string {\r\n const { width, height } = this.getDimensions();\r\n return `0 0 ${width} ${height}`;\r\n }\r\n \r\n private initializeMap(): void {\r\n const dimensions = this.getDimensions();\r\n const { projection, pathGenerator } = this.mapService.initializeProjection(\r\n dimensions.width,\r\n dimensions.height\r\n );\r\n \r\n this.projection = projection;\r\n this.pathGenerator = pathGenerator;\r\n this.projectionReady.next(true);\r\n \r\n if (this.mapGroup) {\r\n const mapSelection = d3.select<SVGGElement, unknown>(this.mapGroup.nativeElement);\r\n mapSelection.on('click', () => this.clearSelection());\r\n }\r\n \r\n setTimeout(() => {\r\n this.layers.forEach(layer => {\r\n layer.setProjection(this.pathGenerator);\r\n });\r\n });\r\n }\r\n \r\n getContainer(): MapContainer {\r\n return this.mapGroup;\r\n }\r\n \r\n getPathGenerator(): GeoPath {\r\n return this.pathGenerator;\r\n }\r\n \r\n clearSelection(): void {\r\n if (this.selectedElement) {\r\n d3.select<SVGPathElement, unknown>(this.selectedElement)\r\n .attr('stroke', function(this: SVGPathElement) {\r\n return this.getAttribute('data-original-stroke') || '';\r\n })\r\n .attr('stroke-width', '1');\r\n this.selectedElement = null;\r\n this.cdr.markForCheck();\r\n }\r\n }\r\n \r\n setSelection(element: SVGPathElement | null): void {\r\n this.clearSelection();\r\n if (element) {\r\n this.selectedElement = element;\r\n this.cdr.markForCheck();\r\n }\r\n }\r\n \r\n ngAfterContentInit(): void {\r\n this.initializeMap();\r\n \r\n this.mapSubscriptions.add(\r\n this.layers.changes.subscribe(() => {\r\n this.initializeMap();\r\n this.cdr.markForCheck();\r\n })\r\n );\r\n }\r\n \r\n ngOnDestroy(): void {\r\n this.mapSubscriptions.unsubscribe();\r\n this.selectedElement = null;\r\n this.projection = null as any;\r\n this.pathGenerator = null as any;\r\n }\r\n }","// Export all public components from the ixt-map module\r\nexport * from './ixt-map.component';\r\nexport * from './ixt-layer.component';\r\n// Include any additional exports, such as services or interfaces, if they are part of the module\r\n","import { Component, ElementRef, HostListener, Input, ViewChild } from '@angular/core';\r\n\r\n@Component({\r\n selector: 'ixt-split-pane',\r\n template: `\r\n <div class=\"split-container\">\r\n <div class=\"first-panel\" [style.flexBasis.%]=\"firstPanelSize\">\r\n <ng-content select=\".left-pane\"></ng-content>\r\n </div>\r\n <div #divider class=\"divider\" (mousedown)=\"startResize($event)\">\r\n </div>\r\n <div class=\"second-panel\" [style.flexBasis.%]=\"100 - firstPanelSize\">\r\n <ng-content select=\".right-pane\"></ng-content>\r\n </div>\r\n </div>\r\n `,\r\n styles: [`\r\n :host {\r\n display: flex;\r\n flex: 1;\r\n min-height: 0;\r\n min-width: 0;\r\n font-family: 'Segoe UI', -apple-system, BlinkMacSystemFont, Roboto, 'Helvetica Neue', Arial, sans-serif;\r\n font-size: 14px;\r\n color: #2c3e50;\r\n -webkit-font-smoothing: antialiased;\r\n -moz-osx-font-smoothing: grayscale;\r\n }\r\n\r\n .split-container {\r\n display: flex;\r\n flex: 1;\r\n min-height: 0;\r\n min-width: 0;\r\n background: #ffffff;\r\n border: 1px solid #e0e4e8;\r\n border-radius: 4px;\r\n }\r\n\r\n .first-panel, .second-panel {\r\n display: flex;\r\n flex: 1;\r\n min-height: 0;\r\n min-width: 0;\r\n overflow: auto;\r\n background: white;\r\n padding: 16px;\r\n\r\n /* Table styles for your file list */\r\n ::ng-deep {\r\n table {\r\n width: 100%;\r\n border-collapse: collapse;\r\n }\r\n\r\n th {\r\n text-align: left;\r\n font-weight: 500;\r\n color: #546e7a;\r\n padding: 8px 16px;\r\n border-bottom: 2px solid #e0e4e8;\r\n font-size: 13px;\r\n text-transform: uppercase;\r\n letter-spacing: 0.5px;\r\n }\r\n\r\n td {\r\n padding: 12px 16px;\r\n border-bottom: 1px solid #f0f2f5;\r\n color: #37474f;\r\n font-size: 14px;\r\n }\r\n\r\n tr:hover {\r\n background-color: #f8fafc;\r\n }\r\n }\r\n\r\n /* Scrollbar styling */\r\n &::-webkit-scrollbar {\r\n width: 8px;\r\n height: 8px;\r\n }\r\n\r\n &::-webkit-scrollbar-track {\r\n background: #f5f6f8;\r\n border-radius: 4px;\r\n }\r\n\r\n &::-webkit-scrollbar-thumb {\r\n background: #dde1e6;\r\n border-radius: 4px;\r\n &:hover {\r\n background: #c7ccd1;\r\n }\r\n }\r\n }\r\n\r\n .divider {\r\n display: flex;\r\n justify-content: center;\r\n width: 16px;\r\n flex-shrink: 0;\r\n cursor: col-resize;\r\n background: transparent;\r\n transition: background-color 0.2s;\r\n\r\n &:hover {\r\n background: #f5f6f8;\r\n .divider-line {\r\n background: #c7ccd1;\r\n }\r\n }\r\n }\r\n\r\n .divider {\r\n width: 6px;\r\n background: #ccc;\r\n cursor: col-resize;\r\n flex-shrink: 0;\r\n border-left: 1px solid #b4b4b4;\r\n border-right: 1px solid #b4b4b4;\r\n\r\n &:hover {\r\n background: #999;\r\n }\r\n }\r\n\r\n `]\r\n})\r\nexport class IxtSplitPaneComponent {\r\n firstPanelSize = 50; // default size\r\n isDragging = false;\r\n startPosition = 0;\r\n startSize = 0;\r\n @ViewChild('divider') divider!: ElementRef;\r\n\r\n startResize(e: MouseEvent) {\r\n this.isDragging = true;\r\n this.startPosition = e.pageX;\r\n this.startSize = this.firstPanelSize;\r\n document.addEventListener('mousemove', this.resize.bind(this));\r\n document.addEventListener('mouseup', this.stopResize.bind(this));\r\n }\r\n\r\n @HostListener('window:mousemove', ['$event'])\r\n resize(e: MouseEvent) {\r\n if (!this.isDragging) return;\r\n const containerRect = this.divider.nativeElement.parentElement.getBoundingClientRect();\r\n const difference = e.pageX - this.startPosition;\r\n let newSize = this.startSize + (difference / containerRect.width * 100);\r\n newSize = Math.max(0, Math.min(100, newSize));\r\n this.firstPanelSize = newSize;\r\n }\r\n\r\n stopResize() {\r\n this.isDragging = false;\r\n document.removeEventListener('mousemove', this.resize.bind(this));\r\n document.removeEventListener('mouseup', this.stopResize.bind(this));\r\n }\r\n}","// ixt-split-pane.module.ts\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { IxtSplitPaneComponent } from './ixt-split-pane.component';\r\n\r\n@NgModule({\r\n declarations: [\r\n IxtSplitPaneComponent\r\n ],\r\n imports: [\r\n CommonModule\r\n ],\r\n exports: [\r\n IxtSplitPaneComponent\r\n ]\r\n})\r\nexport class IxtSplitPaneModule { }\r\n","// public-api.ts (or index.ts)\r\nexport * from './ixt-split-pane.component';\r\nexport * from './ixt-split-pane.module';","import { Component, Input, forwardRef, OnInit, Type } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, FormControl } from '@angular/forms';\r\nimport { IxtDialogService } from '../../../ixt-dialog/ixt-dialog.service';\r\nimport { MatrixEditor, MatrixEditorConfig } from '../editor.interface';\r\n\r\n@Component({\r\n selector: 'airport-code-editor',\r\n template: `\r\n <div class=\"editor-container\">\r\n <input\r\n type=\"text\"\r\n [formControl]=\"inputControl\"\r\n class=\"w-24 px-2 py-1 border rounded\"\r\n [class.border-red-500]=\"hasError\"\r\n [attr.maxlength]=\"config?.['maxLength'] || 3\"\r\n (blur)=\"onTouched()\"\r\n />\r\n <div *ngIf=\"hasError\" class=\"text-red-500 text-sm mt-1\">\r\n {{ errorMessage }}\r\n </div>\r\n </div>\r\n `,\r\n styles: [`\r\n .editor-container {\r\n position: relative;\r\n }\r\n `],\r\n providers: [\r\n {\r\n provide: NG_VALUE_ACCESSOR,\r\n useExisting: forwardRef(() => AirportCodeEditorComponent),\r\n multi: true\r\n }\r\n ]\r\n})\r\nexport class AirportCodeEditorComponent implements ControlValueAccessor, OnInit, MatrixEditor {\r\n @Input() config?: MatrixEditorConfig;\r\n @Input() existingCodes: string[] = [];\r\n @Input() field: string = 'code';\r\n\r\n inputControl = new FormControl('');\r\n hasError = false;\r\n errorMessage = '';\r\n\r\n // MatrixEditor implementation\r\n component: Type<any> = AirportCodeEditorComponent;\r\n\r\n // ControlValueAccessor implementations\r\n public onChanged: (value: string) => void = () => {};\r\n public onTouched: () => void = () => {};\r\n\r\n constructor(private dialogService: IxtDialogService) {}\r\n\r\n ngOnInit() {\r\n this.setupValueChanges();\r\n }\r\n\r\n // MatrixEditor methods\r\n getEditConfig(): MatrixEditorConfig {\r\n return {\r\n existingValues: this.existingCodes,\r\n maxLength: 3,\r\n pattern: /^[A-Z]+$/\r\n };\r\n }\r\n\r\n getDefaultValue(): string {\r\n return '';\r\n }\r\n\r\n validate(value: any): boolean {\r\n if (!value) return false;\r\n const code = String(value).toUpperCase();\r\n if (code.length !== 3) return false;\r\n if (!/^[A-Z]+$/.test(code)) return false;\r\n if (this.existingCodes.includes(code)) return false;\r\n return true;\r\n }\r\n\r\n format(value: any): string {\r\n return value ? String(value).toUpperCase() : '';\r\n }\r\n\r\n private async setupValueChanges() {\r\n this.inputControl.valueChanges.subscribe(async value => {\r\n if (value !== null) {\r\n const upperValue = value.toUpperCase();\r\n if (upperValue !== value) {\r\n this.inputControl.setValue(upperValue, { emitEvent: false });\r\n }\r\n if (await this.validateValue(upperValue)) {\r\n console.log('Editor emitting code change:', upperValue);\r\n this.onChanged(upperValue);\r\n }\r\n }\r\n });\r\n }\r\n\r\n private async validateValue(value: string): Promise<boolean> {\r\n this.hasError = false;\r\n this.errorMessage = '';\r\n\r\n if (!value) return false;\r\n\r\n if (value.length !== (this.config?.['maxLength'] || 3)) {\r\n this.hasError = true;\r\n this.errorMessage = `Code must be exactly ${this.config?.['maxLength'] || 3} characters`;\r\n return false;\r\n }\r\n\r\n const pattern = this.config?.['pattern'] || /^[A-Z]+$/;\r\n if (!pattern.test(value)) {\r\n this.hasError = true;\r\n this.errorMessage = 'Only letters are allowed';\r\n return false;\r\n }\r\n\r\n if (this.config?.existingValues?.includes(value)) {\r\n this.hasError = true;\r\n this.errorMessage = 'This code already exists';\r\n // await this.dialogService.warning(\r\n // `The code \"${value}\" already exists. Please enter a different code.`,\r\n // 'Duplicate Code'\r\n // );\r\n return false;\r\n }\r\n\r\n return true;\r\n }\r\n\r\n // ControlValueAccessor interface implementation\r\n writeValue(value: string): void {\r\n console.log('AirportCodeEditor writeValue:', value);\r\n this.inputControl.setValue(value, { emitEvent: false });\r\n }\r\n\r\n registerOnChange(fn: (value: string) => void): void {\r\n console.log('AirportCodeEditor registerOnChange');\r\n this.onChanged = fn;\r\n }\r\n\r\n registerOnTouched(fn: () => void): void {\r\n this.onTouched = fn;\r\n }\r\n\r\n setDisabledState(isDisabled: boolean): void {\r\n if (isDisabled) {\r\n this.inputControl.disable();\r\n } else {\r\n this.inputControl.enable();\r\n }\r\n }\r\n}","// src/components/ixt-matrix/matrix-editors/binary-editor/binary-editor.component.ts\r\nimport { Component, Input, forwardRef, Output, EventEmitter, Type } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, FormControl } from '@angular/forms';\r\nimport { MatrixEditor, MatrixEditorConfig } from '../editor.interface';\r\n\r\ninterface BinaryConfig extends MatrixEditorConfig {\r\n trueValue?: any;\r\n falseValue?: any;\r\n trueDisplay?: string;\r\n falseDisplay?: string;\r\n rowData?: any;\r\n rowIndex?: number;\r\n}\r\n\r\ninterface SelectionEvent {\r\n selected: boolean;\r\n rowData?: any;\r\n rowIndex?: number;\r\n}\r\n\r\n@Component({\r\n selector: 'binary-editor',\r\n template: `\r\n <div class=\"editor-container\">\r\n <input\r\n type=\"checkbox\"\r\n [formControl]=\"inputControl\"\r\n [checked]=\"isChecked\"\r\n (change)=\"onCheckboxChange($event)\"\r\n class=\"w-4 h-4 rounded border-gray-300\"\r\n />\r\n <span *ngIf=\"showLabel\" class=\"ml-2\">\r\n {{ isChecked ? config.trueDisplay : config.falseDisplay }}\r\n </span>\r\n </div>\r\n `,\r\n providers: [\r\n {\r\n provide: NG_VALUE_ACCESSOR,\r\n useExisting: forwardRef(() => BinaryEditorComponent),\r\n multi: true\r\n }\r\n ]\r\n})\r\nexport class BinaryEditorComponent implements ControlValueAccessor, MatrixEditor {\r\n @Input() config: BinaryConfig = {};\r\n @Output() selectionChange = new EventEmitter<SelectionEvent>();\r\n\r\n inputControl = new FormControl<boolean | null>(false);\r\n component: Type<any> = BinaryEditorComponent;\r\n showLabel = false;\r\n isChecked = false;\r\n\r\n private onChange: (value: any) => void = () => { };\r\n private onTouch: () => void = () => { };\r\n\r\n constructor() {\r\n this.setupDefaults();\r\n this.isChecked = false;\r\n }\r\n\r\n ngOnInit() {\r\n this.setupDefaults();\r\n this.setupValueChanges();\r\n }\r\n\r\n private setupDefaults() {\r\n this.config = {\r\n trueValue: true,\r\n falseValue: false,\r\n trueDisplay: 'True',\r\n falseDisplay: 'False',\r\n ...this.config\r\n };\r\n }\r\n\r\n private setupValueChanges(): void {\r\n this.inputControl.valueChanges.subscribe((checked: boolean | null) => {\r\n if (checked !== null) {\r\n const value = checked ? this.config.trueValue : this.config.falseValue;\r\n this.isChecked = checked;\r\n this.onChange(value);\r\n\r\n this.selectionChange.emit({\r\n selected: checked,\r\n rowData: this.config.rowData,\r\n rowIndex: this.config.rowIndex\r\n });\r\n }\r\n });\r\n }\r\n\r\n onCheckboxChange(event: Event) {\r\n const checkbox = event.target as HTMLInputElement;\r\n this.inputControl.setValue(checkbox.checked);\r\n this.onTouch();\r\n }\r\n\r\n getEditConfig(): BinaryConfig {\r\n return {\r\n trueValue: this.config.trueValue || true,\r\n falseValue: this.config.falseValue || false,\r\n trueDisplay: this.config.trueDisplay || 'True',\r\n falseDisplay: this.config.falseDisplay || 'False'\r\n };\r\n }\r\n\r\n writeValue(value: any): void {\r\n const checked = value === this.config.trueValue;\r\n this.isChecked = checked;\r\n this.inputControl.setValue(checked, { emitEvent: false });\r\n }\r\n\r\n registerOnChange(fn: any): void {\r\n this.onChange = fn;\r\n }\r\n\r\n registerOnTouched(fn: any): void {\r\n this.onTouch = fn;\r\n }\r\n\r\n setDisabledState(isDisabled: boolean): void {\r\n if (isDisabled) {\r\n this.inputControl.disable();\r\n } else {\r\n this.inputControl.enable();\r\n }\r\n }\r\n}","// src/components/ixt-matrix/matrix-editors/coordinate/coordinate-editor.component.ts\r\nimport { Component, Input, forwardRef, OnInit, Type } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, FormControl } from '@angular/forms';\r\nimport { IxtDialogService } from '../../../ixt-dialog/ixt-dialog.service';\r\nimport { MatrixEditor, MatrixEditorConfig } from '../editor.interface';\r\n\r\n@Component({\r\n selector: 'coordinate-editor',\r\n template: `\r\n <div class=\"editor-container\">\r\n\r\n <input\r\n type=\"number\"\r\n step=\"any\"\r\n [min]=\"config?.['type'] === 'lat' ? -90 : -180\"\r\n [max]=\"config?.['type'] === 'lat' ? 90 : 180\"\r\n [formControl]=\"inputControl\"\r\n class=\"w-24 px-2 py-1 border rounded\"\r\n [class.border-red-500]=\"hasError\"\r\n [placeholder]=\"config?.['type'] === 'lat' ? '(-90 to 90)' : '(-180 to 180)'\"\r\n (blur)=\"onBlur()\"\r\n />\r\n <div *ngIf=\"hasError\" class=\"text-red-500 text-sm mt-1\">\r\n {{ errorMessage }}\r\n </div>\r\n </div>`,\r\n providers: [\r\n {\r\n provide: NG_VALUE_ACCESSOR,\r\n useExisting: forwardRef(() => CoordinateEditorComponent),\r\n multi: true\r\n }\r\n ]\r\n})\r\nexport class CoordinateEditorComponent implements ControlValueAccessor, OnInit, MatrixEditor {\r\n @Input() config?: MatrixEditorConfig;\r\n\r\n inputControl = new FormControl('');\r\n hasError = false;\r\n errorMessage = '';\r\n\r\n // MatrixEditor implementation\r\n component: Type<any> = CoordinateEditorComponent;\r\n\r\n private onChange: (value: number) => void = () => { };\r\n private onTouch: () => void = () => { };\r\n\r\n constructor(private dialogService: IxtDialogService) { }\r\n\r\n ngOnInit() {\r\n this.setupValueChanges();\r\n }\r\n\r\n getEditConfig(): MatrixEditorConfig {\r\n return {\r\n type: this.config?.['type'] || 'lat'\r\n };\r\n }\r\n\r\n validate(value: any): boolean {\r\n const num = Number(value);\r\n const isLat = this.config?.['type'] === 'lat';\r\n return isLat ? (num >= -90 && num <= 90) : (num >= -180 && num <= 180);\r\n }\r\n\r\n // private setupValueChanges() {\r\n // this.inputControl.valueChanges.subscribe(value => {\r\n // if (value !== null) {\r\n // // Convert string to number for validation\r\n // const numValue = Number(value);\r\n // if (this.validateValue(numValue)) {\r\n // this.onChange(numValue);\r\n // }\r\n // }\r\n // });\r\n // }\r\n\r\n setupValueChanges() {\r\n this.inputControl.valueChanges.subscribe(value => {\r\n if (value !== null) {\r\n const numValue = Number(value);\r\n if (!isNaN(numValue) && this.validateValue(numValue)) {\r\n this.onChange(numValue);\r\n } else {\r\n // Reset to last valid value or empty\r\n this.inputControl.setValue('', {emitEvent: false});\r\n }\r\n }\r\n });\r\n }\r\n\r\n private validateValue(value: number): boolean {\r\n this.hasError = false;\r\n this.errorMessage = '';\r\n\r\n if (isNaN(value)) {\r\n this.hasError = true;\r\n this.errorMessage = 'Must be a valid number';\r\n return false;\r\n }\r\n\r\n const isLat = this.config?.['type'] === 'lat';\r\n const min = isLat ? -90 : -180;\r\n const max = isLat ? 90 : 180;\r\n\r\n if (value < min || value > max) {\r\n this.hasError = true;\r\n this.errorMessage = `Must be between ${min} and ${max}`;\r\n return false;\r\n }\r\n\r\n return true;\r\n }\r\n\r\n // ControlValueAccessor methods\r\n writeValue(value: number): void {\r\n this.inputControl.setValue(value?.toString() || '', { emitEvent: false });\r\n }\r\n\r\n registerOnChange(fn: any): void {\r\n this.onChange = fn;\r\n }\r\n\r\n registerOnTouched(fn: any): void {\r\n this.onTouch = fn;\r\n }\r\n\r\n onBlur(): void {\r\n this.onTouch();\r\n }\r\n}","// src/components/ixt-matrix/index.ts\r\n// Fix these import paths to match your folder structure\r\nexport * from './ixt-table.component';\r\nexport * from './ixt-table.interfaces';\r\nexport * from './ixt-table.module';\r\nexport interface MatrixNode {\r\n [key: string]: any;\r\n children?: MatrixNode[];\r\n}\r\nexport * from './editors/airport-code/airport-code-editor.component';\r\nexport * from './editors/binary-editor/binary-editor.component';\r\nexport * from './editors/coordinate/coordinate-editor.component';\r\n","\r\n// src/components/ixt-matrix/services/pagination/pagination.service.ts\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { PageSize, PaginationState } from './pagination.model';\r\n\r\n@Injectable({\r\n providedIn: 'root'\r\n})\r\nexport class PaginationService {\r\n private readonly DEFAULT_PAGE_SIZES: PageSize[] = [\r\n { value: 10, label: '10' },\r\n { value: 100, label: '100' },\r\n { value: 'all', label: 'All' }\r\n ];\r\n\r\n private readonly MINIMUM_ROWS_FOR_PAGINATION = 50;\r\n\r\n private state = new BehaviorSubject<PaginationState>({\r\n currentPage: 1,\r\n pageSize: 10,\r\n totalItems: 0\r\n });\r\n\r\n public state$ = this.state.asObservable();\r\n\r\n public initialize(totalItems: number): void {\r\n this.updateState({\r\n currentPage: 1,\r\n pageSize: 10,\r\n totalItems\r\n });\r\n }\r\n\r\n public shouldShowPagination(): boolean {\r\n return this.state.getValue().totalItems > this.MINIMUM_ROWS_FOR_PAGINATION;\r\n }\r\n\r\n public getCurrentPage(): number {\r\n return this.state.getValue().currentPage;\r\n }\r\n\r\n public getPageSize(): number | 'all' {\r\n return this.state.getValue().pageSize;\r\n }\r\n\r\n public getPageSizes(): PageSize[] {\r\n return this.DEFAULT_PAGE_SIZES;\r\n }\r\n\r\n public getTotalPages(): number {\r\n const { totalItems, pageSize } = this.state.getValue();\r\n if (pageSize === 'all' || totalItems <= this.MINIMUM_ROWS_FOR_PAGINATION) {\r\n return 1;\r\n }\r\n return Math.ceil(totalItems / +pageSize);\r\n }\r\n\r\n public getVisiblePages(): number[] {\r\n const totalPages = this.getTotalPages();\r\n const currentPage = this.getCurrentPage();\r\n\r\n if (totalPages <= 1) return [];\r\n\r\n const pages: number[] = [1];\r\n const WINDOW_SIZE = 4;\r\n\r\n let start = Math.max(2, currentPage - WINDOW_SIZE);\r\n let end = Math.min(totalPages - 1, currentPage + WINDOW_SIZE);\r\n\r\n if (start > 2) {\r\n pages.push(-1);\r\n }\r\n\r\n for (let i = start; i <= end; i++) {\r\n pages.push(i);\r\n }\r\n\r\n if (end < totalPages - 1) {\r\n pages.push(-1);\r\n }\r\n\r\n if (totalPages > 1) {\r\n pages.push(totalPages);\r\n }\r\n\r\n return pages;\r\n }\r\n\r\n public onPageChange(page: number): void {\r\n const totalPages = this.getTotalPages();\r\n if (page >= 1 && page <= totalPages) {\r\n this.updateState({\r\n ...this.state.getValue(),\r\n currentPage: page\r\n });\r\n }\r\n }\r\n\r\n public onPageSizeChange(newSize: number | 'all'): void {\r\n this.updateState({\r\n ...this.state.getValue(),\r\n pageSize: newSize,\r\n currentPage: 1\r\n });\r\n }\r\n\r\n public getPaginatedData<T>(data: T[]): T[] {\r\n const { pageSize, currentPage } = this.state.getValue();\r\n\r\n if (pageSize === 'all' || data.length <= this.MINIMUM_ROWS_FOR_PAGINATION) {\r\n return data;\r\n }\r\n\r\n const start = (currentPage - 1) * (+pageSize);\r\n const end = start + (+pageSize);\r\n return data.slice(start, end);\r\n }\r\n\r\n private updateState(newState: Partial<PaginationState>): void {\r\n this.state.next({\r\n ...this.state.getValue(),\r\n ...newState\r\n });\r\n }\r\n}","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { FormControl } from '@angular/forms';\r\nimport { FilterState, FilterOperator, FilterControls } from './filter.model';\r\nimport { ColumnConfig } from '../../ixt-table.interfaces';\r\n\r\n@Injectable({\r\n providedIn: 'root'\r\n})\r\nexport class FilterService {\r\n private activeFilters = new Map<string, FilterState>();\r\n private filterControls = new Map<string, FilterControls>();\r\n private activeFilterColumn?: string;\r\n private showFilters = false;\r\n\r\n private filtersChanged = new BehaviorSubject<Map<string, FilterState>>(new Map());\r\n public filtersChanged$ = this.filtersChanged.asObservable();\r\n\r\n public initializeFilter(field: string, config: ColumnConfig): void {\r\n const controls: FilterControls = {\r\n value: new FormControl('')\r\n };\r\n\r\n if (config.type === 'number') {\r\n // Fix: Explicitly type the FormControl\r\n controls.operator = new FormControl<string>('=', { nonNullable: true });\r\n }\r\n\r\n this.filterControls.set(field, controls);\r\n }\r\n\r\n \r\n public getFilterControl(field: string): FormControl | undefined {\r\n return this.filterControls.get(field)?.value;\r\n }\r\n\r\n public getOperatorControl(field: string): FormControl<string> | undefined {\r\n return this.filterControls.get(field)?.operator;\r\n }\r\n\r\n public onFilterChange(field: string, value: any, config?: ColumnConfig): void {\r\n if (value || value === 0) {\r\n const defaultOperator: FilterOperator = config?.type === 'number' ? 'equals' : 'contains';\r\n const operator = this.getOperatorControl(field)?.value || defaultOperator;\r\n\r\n this.activeFilters.set(field, {\r\n field,\r\n operator: operator as FilterOperator,\r\n value: config?.type === 'number' ? Number(value) : value\r\n });\r\n } else {\r\n this.activeFilters.delete(field);\r\n }\r\n\r\n this.filtersChanged.next(this.activeFilters);\r\n }\r\n\r\n public onOperatorChange(field: string): void {\r\n const currentValue = this.getFilterControl(field)?.value;\r\n if (currentValue || currentValue === 0) {\r\n this.onFilterChange(field, currentValue);\r\n }\r\n }\r\n\r\n public clearAllFilters(): void {\r\n this.activeFilters.clear();\r\n this.filterControls.forEach(controls => {\r\n controls.value.reset();\r\n controls.operator?.reset('=');\r\n });\r\n this.filtersChanged.next(this.activeFilters);\r\n }\r\n\r\n public toggleFilters(column: string): void {\r\n if (this.activeFilterColumn === column) {\r\n this.activeFilterColumn = undefined;\r\n this.showFilters = false;\r\n } else {\r\n this.activeFilterColumn = column;\r\n this.showFilters = true;\r\n }\r\n }\r\n\r\n public matchesFilter(item: any, filter: FilterState): boolean {\r\n if (item === undefined || item === null) return false;\r\n\r\n // Handle numeric comparisons\r\n if (typeof item === 'number' || !isNaN(Number(item))) {\r\n const numValue = Number(item);\r\n const numFilterValue = Number(filter.value);\r\n return this.handleNumericComparison(numValue, numFilterValue, filter.operator);\r\n }\r\n\r\n // String handling\r\n const itemValue = String(item).toLowerCase();\r\n const filterValue = String(filter.value).toLowerCase();\r\n\r\n switch (filter.operator) {\r\n case 'startsWith':\r\n return itemValue.startsWith(filterValue);\r\n case 'equals':\r\n return itemValue === filterValue;\r\n case '!=':\r\n return itemValue !== filterValue;\r\n default:\r\n return itemValue.includes(filterValue);\r\n }\r\n }\r\n\r\n private handleNumericComparison(numValue: number, numFilterValue: number, operator: FilterOperator): boolean {\r\n switch (operator) {\r\n case '>': return numValue > numFilterValue;\r\n case '<': return numValue < numFilterValue;\r\n case '>=': return numValue >= numFilterValue;\r\n case '<=': return numValue <= numFilterValue;\r\n case '!=': return numValue !== numFilterValue;\r\n case 'equals': return numValue === numFilterValue;\r\n default: return false;\r\n }\r\n }\r\n\r\n public get isShowingFilters(): boolean {\r\n return this.showFilters;\r\n }\r\n\r\n public get activeColumn(): string | undefined {\r\n return this.activeFilterColumn;\r\n }\r\n\r\n public getActiveFilters(): Map<string, FilterState> {\r\n return this.activeFilters;\r\n }\r\n\r\n public hasActiveFilters(): boolean {\r\n return this.activeFilters.size > 0;\r\n }\r\n}","// src/components/ixt-matrix/services/sort/sort.service.ts\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { SortState, SortDirection } from './sort.model';\r\n\r\n@Injectable({\r\n providedIn: 'root'\r\n})\r\nexport class SortService {\r\n private readonly initialState: SortState = {\r\n column: null,\r\n direction: null\r\n };\r\n\r\n private state = new BehaviorSubject<SortState>(this.initialState);\r\n public state$ = this.state.asObservable();\r\n\r\n public toggleSort(column: string): void {\r\n const currentState = this.state.getValue();\r\n let newDirection: SortDirection = null;\r\n\r\n if (currentState.column === column) {\r\n // Cycle through: null -> asc -> desc -> null\r\n if (currentState.direction === null) {\r\n newDirection = 'asc';\r\n } else if (currentState.direction === 'asc') {\r\n newDirection = 'desc';\r\n } else {\r\n newDirection = null;\r\n }\r\n } else {\r\n // New column, start with ascending\r\n newDirection = 'asc';\r\n }\r\n\r\n this.state.next({\r\n column: newDirection ? column : null,\r\n direction: newDirection\r\n });\r\n }\r\n\r\n public getSortIcon(column: string): string {\r\n const { column: sortColumn, direction } = this.state.getValue();\r\n \r\n if (sortColumn !== column) {\r\n return 'unfold_more';\r\n }\r\n return direction === 'asc' ? 'arrow_upward' : 'arrow_downward';\r\n }\r\n\r\n public sortData<T>(data: T[]): T[] {\r\n const { column, direction } = this.state.getValue();\r\n \r\n if (!column || !direction) {\r\n return data;\r\n }\r\n\r\n return [...data].sort((a, b) => {\r\n const aVal = a[column as keyof T];\r\n const bVal = b[column as keyof T];\r\n\r\n if (aVal == null) return 1;\r\n if (bVal == null) return -1;\r\n\r\n let comparison: number;\r\n if (typeof aVal === 'string') {\r\n comparison = String(aVal).toLowerCase().localeCompare(String(bVal).toLowerCase());\r\n } else {\r\n comparison = aVal < bVal ? -1 : (aVal > bVal ? 1 : 0);\r\n }\r\n\r\n return direction === 'asc' ? comparison : -comparison;\r\n });\r\n }\r\n\r\n public clearSort(): void {\r\n this.state.next(this.initialState);\r\n }\r\n\r\n public getCurrentSort(): SortState {\r\n return this.state.getValue();\r\n }\r\n\r\n public isColumnSorted(column: string): boolean {\r\n return this.state.getValue().column === column;\r\n }\r\n\r\n public getSortDirection(column: string): SortDirection {\r\n const { column: sortColumn, direction } = this.state.getValue();\r\n return sortColumn === column ? direction : null;\r\n }\r\n}","// src/components/ixt-matrix/services/selection/selection.service.ts\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { SelectionState } from './selection.model';\r\n\r\n@Injectable({\r\n providedIn: 'root'\r\n})\r\nexport class SelectionService {\r\n private state = new BehaviorSubject<SelectionState>({\r\n selectedRows: new Set<number>(),\r\n allSelected: false\r\n });\r\n\r\n public state$ = this.state.asObservable();\r\n\r\n public selectRow(index: number, selected: boolean = true): void {\r\n const currentState = this.state.getValue();\r\n const newSelectedRows = new Set(currentState.selectedRows);\r\n\r\n if (selected) {\r\n newSelectedRows.add(index);\r\n } else {\r\n newSelectedRows.delete(index);\r\n }\r\n\r\n this.state.next({\r\n selectedRows: newSelectedRows,\r\n allSelected: currentState.allSelected\r\n });\r\n }\r\n\r\n public toggleAllRows(selected: boolean, totalRows: number): void {\r\n const newSelectedRows = new Set<number>();\r\n\r\n if (selected) {\r\n // Add all row indices\r\n for (let i = 0; i < totalRows; i++) {\r\n newSelectedRows.add(i);\r\n }\r\n }\r\n\r\n this.state.next({\r\n selectedRows: newSelectedRows,\r\n allSelected: selected\r\n });\r\n }\r\n\r\n public clearSelection(): void {\r\n this.state.next({\r\n selectedRows: new Set<number>(),\r\n allSelected: false\r\n });\r\n }\r\n\r\n public getSelectedRows(): Set<number> {\r\n return this.state.getValue().selectedRows;\r\n }\r\n\r\n public isSelected(index: number): boolean {\r\n return this.state.getValue().selectedRows.has(index);\r\n }\r\n\r\n public isAllSelected(): boolean {\r\n return this.state.getValue().allSelected;\r\n }\r\n\r\n public getSelectedCount(): number {\r\n return this.state.getValue().selectedRows.size;\r\n }\r\n\r\n public setSelectedRows(indices: number[]): void {\r\n const newSelectedRows = new Set(indices);\r\n this.state.next({\r\n selectedRows: newSelectedRows,\r\n allSelected: false // Reset all selected state when manually setting rows\r\n });\r\n }\r\n\r\n public isPartiallySelected(totalRows: number): boolean {\r\n const selectedCount = this.getSelectedCount();\r\n return selectedCount > 0 && selectedCount < totalRows;\r\n }\r\n}","// src/components/ixt-matrix/services/edit/edit.service.ts\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { FormControl } from '@angular/forms';\r\nimport { EditState, RowChanges, EditEvent } from './edit.model';\r\nimport { ColumnConfig } from '../../ixt-table.interfaces';\r\n\r\n@Injectable({\r\n providedIn: 'root'\r\n})\r\nexport class EditService {\r\n private readonly initialState: EditState = {\r\n editingRows: new Set<number>(),\r\n newRows: [],\r\n rowChanges: new Map<number, RowChanges>(),\r\n editControls: new Map<string, FormControl>()\r\n };\r\n\r\n private state = new BehaviorSubject<EditState>(this.initialState);\r\n public state$ = this.state.asObservable();\r\n\r\n private getDefaultValueForType(type: string | any): any {\r\n switch (type) {\r\n case 'number':\r\n return 0;\r\n case 'enum':\r\n return '';\r\n case 'text':\r\n default:\r\n return '';\r\n }\r\n }\r\n\r\n public addNewRow(columnConfigs: Record<string, ColumnConfig>): void {\r\n const newRow: any = {};\r\n if (columnConfigs) {\r\n Object.entries(columnConfigs).forEach(([field, config]) => {\r\n newRow[field] = this.getDefaultValueForType(config.type);\r\n });\r\n }\r\n\r\n const currentState = this.state.getValue();\r\n const newRows = [...currentState.newRows];\r\n newRows.unshift(newRow);\r\n\r\n // Start editing the new row\r\n const editingRows = new Set(currentState.editingRows);\r\n editingRows.add(-newRows.length);\r\n\r\n this.state.next({\r\n ...currentState,\r\n newRows,\r\n editingRows\r\n });\r\n }\r\n\r\n public startEditing(rowIndex: number): void {\r\n const currentState = this.state.getValue();\r\n const editingRows = new Set(currentState.editingRows);\r\n editingRows.add(rowIndex);\r\n\r\n this.state.next({\r\n ...currentState,\r\n editingRows\r\n });\r\n }\r\n\r\n public cancelEditing(rowIndex: number): void {\r\n const currentState = this.state.getValue();\r\n const editingRows = new Set(currentState.editingRows);\r\n const rowChanges = new Map(currentState.rowChanges);\r\n\r\n editingRows.delete(rowIndex);\r\n rowChanges.delete(rowIndex);\r\n\r\n this.state.next({\r\n ...currentState,\r\n editingRows,\r\n rowChanges\r\n });\r\n }\r\n\r\n public onValueChange(event: EditEvent): void {\r\n const { rowIndex, field, value } = event;\r\n const currentState = this.state.getValue();\r\n const rowChanges = new Map(currentState.rowChanges);\r\n\r\n let changes = rowChanges.get(rowIndex) || {};\r\n changes = { ...changes, [field]: value };\r\n rowChanges.set(rowIndex, changes);\r\n\r\n this.state.next({\r\n ...currentState,\r\n rowChanges\r\n });\r\n }\r\n\r\n public getEditControl(rowIndex: number, field: string): FormControl {\r\n const key = `${rowIndex}-${field}`;\r\n const currentState = this.state.getValue();\r\n let control = currentState.editControls.get(key);\r\n\r\n if (!control) {\r\n control = new FormControl('');\r\n const editControls = new Map(currentState.editControls);\r\n editControls.set(key, control);\r\n\r\n this.state.next({\r\n ...currentState,\r\n editControls\r\n });\r\n }\r\n\r\n return control;\r\n }\r\n\r\n public saveChanges(data: any[]): any[] {\r\n const currentState = this.state.getValue();\r\n const updatedData = [...data];\r\n\r\n // Apply changes to existing rows\r\n currentState.rowChanges.forEach((changes, rowIndex) => {\r\n if (rowIndex >= 0) {\r\n updatedData[rowIndex] = {\r\n ...updatedData[rowIndex],\r\n ...changes\r\n };\r\n }\r\n });\r\n\r\n // Add new rows\r\n if (currentState.newRows.length) {\r\n // Apply any changes to new rows\r\n const processedNewRows = currentState.newRows.map((row, index) => {\r\n const changes = currentState.rowChanges.get(-index - 1);\r\n return changes ? { ...row, ...changes } : row;\r\n });\r\n\r\n updatedData.unshift(...processedNewRows);\r\n }\r\n\r\n // Reset state\r\n this.state.next(this.initialState);\r\n\r\n return updatedData;\r\n }\r\n\r\n public isNewRow(index: number): boolean {\r\n return index < this.state.getValue().newRows.length;\r\n }\r\n\r\n public isEditing(rowIndex: number): boolean {\r\n return this.state.getValue().editingRows.has(rowIndex);\r\n }\r\n\r\n public hasChanges(): boolean {\r\n const currentState = this.state.getValue();\r\n return currentState.rowChanges.size > 0 || currentState.newRows.length > 0;\r\n }\r\n\r\n public getNewRows(): any[] {\r\n return this.state.getValue().newRows;\r\n }\r\n\r\n public getRowChanges(rowIndex: number): RowChanges | undefined {\r\n return this.state.getValue().rowChanges.get(rowIndex);\r\n }\r\n\r\n public getRowIndex(displayIndex: number): number {\r\n return displayIndex - this.state.getValue().newRows.length;\r\n }\r\n\r\n public clearEditing(): void {\r\n this.state.next(this.initialState);\r\n }\r\n}","import { ChangeDetectorRef, Component, Input, OnInit, TemplateRef, ViewChild, Type } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { ColumnConfig, FilterOperator, FilterState, MatrixNode, PageSize, RowChanges } from './ixt-table.interfaces';\r\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\r\nimport { IxtDialogService } from '../ixt-dialog/ixt-dialog.index';\r\nimport { PaginationService } from './services/pagination.service';\r\nimport { FilterService } from './services/filter/filter.service';\r\nimport { SortService } from './services/sort/sort.service';\r\nimport { SelectionService } from './services/selection/selection.service';\r\nimport { EditService } from './services/edit/edit.service';\r\nimport { MatrixEditor } from './editors/editor.interface';\r\nimport { AirportCodeEditorComponent, CoordinateEditorComponent } from './ixt-table.index';\r\n\r\nexport type SortDirection = 'asc' | 'desc' | null;\r\n\r\n@Component({\r\n selector: 'ixt-table',\r\n templateUrl: './ixt-table.component.html',\r\n styleUrls: ['./ixt-table.component.scss']\r\n})\r\nexport class IxtTableComponent implements OnInit {\r\n @Input() data: MatrixNode[] = [];\r\n @Input() columnConfigs?: Record<string, ColumnConfig>;\r\n @ViewChild('noData') noDataTemplate!: TemplateRef<any>;\r\n @ViewChild('customEditorTpl') customEditorTpl!: TemplateRef<any>;\r\n\r\n columns: string[] = [];\r\n pageSizeControl = new FormControl<number | 'all'>(10);\r\n readonly AirportCodeEditorComponent = AirportCodeEditorComponent;\r\n readonly CoordinateEditorComponent = CoordinateEditorComponent;\r\n\r\n constructor(\r\n private dialogService: IxtDialogService,\r\n private changeDetectorRef: ChangeDetectorRef,\r\n private paginationService: PaginationService,\r\n private filterService: FilterService,\r\n private sortService: SortService,\r\n private selectionService: SelectionService,\r\n private editService: EditService \r\n ) { }\r\n\r\n ngOnInit() {\r\n this.columns = this.getColumns(this.data);\r\n\r\n // Initialize pagination\r\n this.paginationService.initialize(this.data.length);\r\n\r\n // Initialize filters\r\n if (this.columnConfigs) {\r\n Object.entries(this.columnConfigs).forEach(([field, config]) => {\r\n this.filterService.initializeFilter(field, config);\r\n\r\n // Get the control from service and subscribe to changes\r\n const control = this.filterService.getFilterControl(field);\r\n if (control) {\r\n control.valueChanges.pipe(\r\n debounceTime(config.debounceTime || 300),\r\n distinctUntilChanged()\r\n ).subscribe(value => {\r\n this.filterService.onFilterChange(field, value, config);\r\n });\r\n }\r\n });\r\n }\r\n\r\n // Subscribe to filter changes\r\n this.filterService.filtersChanged$.subscribe(() => {\r\n this.changeDetectorRef.markForCheck();\r\n });\r\n\r\n // Subscribe to pagination changes\r\n this.paginationService.state$.subscribe(() => {\r\n this.changeDetectorRef.markForCheck();\r\n });\r\n\r\n // Subscribe to page size changes\r\n this.pageSizeControl.valueChanges.subscribe(value => {\r\n if (value) {\r\n this.paginationService.onPageSizeChange(value);\r\n }\r\n });\r\n }\r\n\r\n // edit logic start\r\n addNewRow(): void {\r\n this.editService.addNewRow(this.columnConfigs || {});\r\n }\r\n\r\n cancelEditing(rowIndex: number): void {\r\n this.editService.cancelEditing(rowIndex);\r\n }\r\n\r\n getEditorComponent(type: any): MatrixEditor | null {\r\n console.log('getEditorComponent called with:', {\r\n type,\r\n isCoordinate: type === CoordinateEditorComponent,\r\n isAirport: type === AirportCodeEditorComponent\r\n });\r\n\r\n if (type === AirportCodeEditorComponent) {\r\n return new AirportCodeEditorComponent(this.dialogService);\r\n }\r\n if (type === CoordinateEditorComponent) {\r\n return new CoordinateEditorComponent(this.dialogService);\r\n }\r\n return null;\r\n }\r\n\r\n getEditorType(type: any): string {\r\n console.log('getEditorType called with:', {\r\n type,\r\n isString: typeof type === 'string',\r\n isCoordinate: type === CoordinateEditorComponent,\r\n isAirport: type === AirportCodeEditorComponent\r\n });\r\n\r\n if (typeof type === 'string') {\r\n return type;\r\n }\r\n if (type === AirportCodeEditorComponent || type === CoordinateEditorComponent) {\r\n console.log('Returning custom for editor type');\r\n return 'custom';\r\n }\r\n console.log('Falling back to text type');\r\n return 'text';\r\n }\r\n\r\n getEditControl(rowIndex: number, field: string): FormControl {\r\n return this.editService.getEditControl(rowIndex, field);\r\n }\r\n\r\n getRowIndex(displayIndex: number): number {\r\n return this.editService.getRowIndex(displayIndex);\r\n }\r\n\r\n get hasChanges(): boolean {\r\n return this.editService.hasChanges();\r\n }\r\n\r\n isEditing(index: number): boolean {\r\n return this.editService.isEditing(index);\r\n }\r\n\r\n isNewRow(displayIndex: number): boolean {\r\n return this.editService.isNewRow(displayIndex);\r\n }\r\n\r\n get newRowsLength(): number {\r\n return this.editService.getNewRows().length;\r\n }\r\n\r\n onValueChange(rowIndex: number, field: string, value: any): void {\r\n this.editService.onValueChange({ rowIndex, field, value });\r\n }\r\n\r\n saveChanges(): void {\r\n this.data = this.editService.saveChanges(this.data);\r\n this.changeDetectorRef.markForCheck();\r\n }\r\n\r\n startEditing(rowIndex: number): void {\r\n this.editService.startEditing(rowIndex);\r\n }\r\n // edit logic end\r\n\r\n // filter logic start\r\n get activeFilterColumn(): string | undefined {\r\n return this.filterService.activeColumn;\r\n }\r\n\r\n getFilterControl(col: string): FormControl<any> {\r\n return this.filterService.getFilterControl(col)!;\r\n }\r\n\r\n getOperatorControl(col: string): FormControl<string> {\r\n return this.filterService.getOperatorControl(col)!;\r\n }\r\n\r\n onOperatorChange(field: string): void {\r\n this.filterService.onOperatorChange(field);\r\n }\r\n\r\n get showFilters(): boolean {\r\n return this.filterService.isShowingFilters;\r\n }\r\n\r\n toggleFilters(col: string): void {\r\n this.filterService.toggleFilters(col);\r\n }\r\n // filter logic end\r\n \r\n // pagination logic start\r\n get currentPage(): number {\r\n return this.paginationService.getCurrentPage();\r\n }\r\n\r\n onPageChange(page: number): void {\r\n this.paginationService.onPageChange(page);\r\n }\r\n\r\n onPageSizeChange(size: number | 'all'): void {\r\n this.paginationService.onPageSizeChange(size);\r\n }\r\n\r\n get paginatedData(): MatrixNode[] {\r\n // Start with combined data\r\n let allData = [...this.editService.getNewRows(), ...this.data];\r\n \r\n // Apply filters\r\n if (this.filterService.hasActiveFilters()) {\r\n const activeFilters = this.filterService.getActiveFilters();\r\n const filteredExisting = this.data.filter(item =>\r\n Array.from(activeFilters.values()).every(filter =>\r\n this.filterService.matchesFilter(item[filter.field], filter)\r\n )\r\n );\r\n allData = [...this.editService.getNewRows(), ...filteredExisting];\r\n }\r\n \r\n // Apply sorting\r\n allData = this.sortService.sortData(allData);\r\n \r\n // Apply pagination\r\n return this.paginationService.getPaginatedData(allData);\r\n }\r\n\r\n get pageSizes(): PageSize[] {\r\n return this.paginationService.getPageSizes();\r\n }\r\n\r\n get showPagination(): boolean {\r\n return this.paginationService.shouldShowPagination();\r\n }\r\n\r\n get totalPages(): number {\r\n return this.paginationService.getTotalPages();\r\n }\r\n\r\n get visiblePages(): number[] {\r\n return this.paginationService.getVisiblePages();\r\n }\r\n // pagination logic end\r\n\r\n // selection logic start\r\n get allSelected(): boolean {\r\n return this.selectionService.isAllSelected();\r\n }\r\n\r\n set allSelected(value: boolean) {\r\n this.selectionService.toggleAllRows(value, this.data.length);\r\n }\r\n\r\n getSelectedRows(): MatrixNode[] {\r\n return Array.from(this.selectionService.getSelectedRows())\r\n .map(index => this.data[index])\r\n .filter(row => row !== undefined);\r\n }\r\n\r\n get hasSelectedRows(): boolean {\r\n return this.selectionService.getSelectedCount() > 0;\r\n }\r\n\r\n isRowSelected(index: number): boolean {\r\n return this.selectionService.isSelected(index);\r\n }\r\n\r\n selectRow(index: number, selected = true): void {\r\n this.selectionService.selectRow(index, selected);\r\n }\r\n\r\n setSelectedRows(indices: number[]): void {\r\n this.selectionService.setSelectedRows(indices);\r\n }\r\n\r\n toggleAllRows(selected: boolean): void {\r\n this.selectionService.toggleAllRows(selected, this.data.length);\r\n }\r\n // selection logic end\r\n\r\n // sort logic start\r\n getSortIcon(column: string): string {\r\n return this.sortService.getSortIcon(column);\r\n }\r\n\r\n toggleSort(column: string): void {\r\n this.sortService.toggleSort(column);\r\n }\r\n // sort logic end\r\n\r\n // i/o logic start\r\n formatCoordinate(value: number): string {\r\n return value.toFixed(1);\r\n }\r\n\r\n getCodes(data: MatrixNode[]): string[] {\r\n if (!data) return [];\r\n return data.map(row => row['code']?.toString() || '');\r\n }\r\n // i/o logic end\r\n\r\n // config logic start\r\n getColumns(data: MatrixNode[]): string[] {\r\n if (!data?.length) return [];\r\n const firstRow = data[0];\r\n return Object.keys(firstRow);\r\n }\r\n\r\n get hasData(): boolean {\r\n return !!this.data?.length;\r\n }\r\n // config logic end\r\n}","<div class=\"ixt-table__toolbar\">\r\n <button class=\"ixt-table__action-button\" (click)=\"addNewRow()\">\r\n <span class=\"material-icons\">add</span>\r\n </button>\r\n <button class=\"ixt-table__action-button\" [disabled]=\"!hasChanges && newRowsLength === 0\" (click)=\"saveChanges()\">\r\n <span class=\"material-icons\">save</span>\r\n </button>\r\n</div>\r\n\r\n<ng-container *ngIf=\"hasData; else noData\">\r\n <div class=\"ixt-table\">\r\n <!-- Header -->\r\n <div class=\"ixt-table__header\">\r\n <div class=\"ixt-table__cell\">\r\n <binary-editor\r\n [config]=\"{ rowIndex: -1 }\"\r\n [(ngModel)]=\"allSelected\"\r\n (selectionChange)=\"toggleAllRows($event.selected)\">\r\n </binary-editor>\r\n </div>\r\n <div class=\"ixt-table__cell\" *ngFor=\"let col of columns\" [class.ixt-table__cell--first]=\"col === columns[0]\">\r\n <div class=\"ixt-table__cell-content\">\r\n {{columnConfigs?.[col]?.label || col}}\r\n <div class=\"ixt-table__cell-actions\">\r\n <button class=\"ixt-table__sort-toggle\" (click)=\"toggleSort(col)\">\r\n <span class=\"material-icons\">{{getSortIcon(col)}}</span>\r\n </button>\r\n <button class=\"ixt-table__filter-toggle\" (click)=\"toggleFilters(col)\">\r\n <span class=\"material-icons\">filter_alt</span>\r\n </button>\r\n </div>\r\n </div>\r\n </div>\r\n <div class=\"ixt-table__cell\">Actions</div>\r\n </div>\r\n\r\n <!-- Filter Row -->\r\n <div class=\"ixt-table__header\" *ngIf=\"showFilters\">\r\n <div class=\"ixt-table__cell\"></div>\r\n <div class=\"ixt-table__cell\" *ngFor=\"let col of columns\" [class.ixt-table__cell--first]=\"col === columns[0]\">\r\n <ng-container *ngIf=\"activeFilterColumn === col && columnConfigs?.[col]\">\r\n <ng-container [ngSwitch]=\"getEditorType(columnConfigs?.[col]?.type)\">\r\n <!-- Text Filter -->\r\n <input *ngSwitchCase=\"'text'\" [formControl]=\"getFilterControl(col)\"\r\n [placeholder]=\"columnConfigs?.[col]?.placeholder || ''\" class=\"ixt-table__filter-input\">\r\n\r\n <!-- Number Filter -->\r\n <div *ngSwitchCase=\"'number'\" class=\"ixt-table__number-filter\">\r\n <select [formControl]=\"getOperatorControl(col)\" (change)=\"onOperatorChange(col)\">\r\n <option value=\"=\">=</option>\r\n <option value=\">\">&gt;</option>\r\n <option value=\"<\">&lt;</option>\r\n <option value=\">=\">&gt;=</option>\r\n <option value=\"<=\">&lt;=</option>\r\n <option value=\"!=\">!=</option>\r\n </select>\r\n <input type=\"number\" [formControl]=\"getFilterControl(col)\"\r\n [placeholder]=\"columnConfigs?.[col]?.placeholder || ''\" class=\"ixt-table__filter-input\">\r\n </div>\r\n\r\n <!-- Enum Filter -->\r\n <div *ngSwitchCase=\"'enum'\">\r\n <select [formControl]=\"getFilterControl(col)\" class=\"ixt-table__filter-input\">\r\n <option value=\"\">All</option>\r\n <option *ngFor=\"let opt of columnConfigs?.[col]?.enumValues\" [value]=\"opt.value\">\r\n {{opt.label}}\r\n </option>\r\n </select>\r\n </div>\r\n </ng-container>\r\n </ng-container>\r\n </div>\r\n <div class=\"ixt-table__cell\"></div>\r\n </div>\r\n\r\n <!-- Data Rows -->\r\n <div class=\"ixt-table__row\" *ngFor=\"let row of paginatedData; let i = index\" \r\n [class.ixt-table__row--selected]=\"isRowSelected(getRowIndex(i))\">\r\n <div class=\"ixt-table__cell\">\r\n <binary-editor\r\n [config]=\"{ rowIndex: getRowIndex(i), rowData: row }\"\r\n [ngModel]=\"isRowSelected(getRowIndex(i))\"\r\n (selectionChange)=\"selectRow(getRowIndex(i), $event.selected)\">\r\n </binary-editor>\r\n </div>\r\n <div class=\"ixt-table__cell\" *ngFor=\"let col of columns\" [class.ixt-table__cell--first]=\"col === columns[0]\">\r\n <ng-container *ngIf=\"isNewRow(i) || isEditing(getRowIndex(i)); else displayValue\">\r\n <ng-container [ngSwitch]=\"getEditorType(columnConfigs?.[col]?.type)\">\r\n <!-- Text Input -->\r\n <input *ngSwitchCase=\"'text'\" type=\"text\" [ngModel]=\"row[col]\"\r\n (ngModelChange)=\"onValueChange(getRowIndex(i), col, $event)\">\r\n\r\n <!-- Number Input -->\r\n <input *ngSwitchCase=\"'number'\" type=\"number\" [ngModel]=\"row[col]\"\r\n (ngModelChange)=\"onValueChange(getRowIndex(i), col, $event)\">\r\n\r\n <!-- Enum Select -->\r\n <select *ngSwitchCase=\"'enum'\" [ngModel]=\"row[col]\"\r\n (ngModelChange)=\"onValueChange(getRowIndex(i), col, $event)\">\r\n <option *ngFor=\"let opt of columnConfigs?.[col]?.enumValues\" [ngValue]=\"opt.value\">\r\n {{opt.label}}\r\n </option>\r\n </select>\r\n\r\n <!-- Custom Editor -->\r\n <ng-container *ngSwitchCase=\"'custom'\">\r\n <ng-container *ngTemplateOutlet=\"customEditorTpl; context: {\r\n $implicit: getEditorComponent(columnConfigs?.[col]?.type),\r\n row: row,\r\n col: col,\r\n index: i,\r\n control: getEditControl(getRowIndex(i), col)\r\n }\">\r\n </ng-container>\r\n </ng-container>\r\n </ng-container>\r\n </ng-container>\r\n \r\n <ng-template #displayValue>\r\n <ng-container [ngSwitch]=\"columnConfigs?.[col]?.type\">\r\n <ng-container *ngSwitchCase=\"CoordinateEditorComponent\">\r\n {{formatCoordinate(row[col])}}\r\n </ng-container>\r\n <ng-container *ngSwitchDefault>\r\n {{row[col]}}\r\n </ng-container>\r\n </ng-container>\r\n </ng-template>\r\n </div>\r\n \r\n <div class=\"ixt-table__cell\">\r\n <ng-container *ngIf=\"!isNewRow(i) && !isEditing(getRowIndex(i))\">\r\n <button class=\"ixt-table__action-button\" (click)=\"startEditing(getRowIndex(i))\">\r\n <span class=\"material-icons\">edit</span>\r\n </button>\r\n </ng-container>\r\n <ng-container *ngIf=\"isNewRow(i) || isEditing(getRowIndex(i))\">\r\n <button class=\"ixt-table__action-button\" (click)=\"cancelEditing(getRowIndex(i))\">\r\n <span class=\"material-icons\">close</span>\r\n </button>\r\n </ng-container>\r\n </div>\r\n </div>\r\n\r\n <!-- Pagination -->\r\n <div class=\"ixt-table__footer\" *ngIf=\"showPagination\">\r\n <div class=\"ixt-table__pagination\">\r\n <div class=\"ixt-table__page-size\">\r\n <select [formControl]=\"pageSizeControl\">\r\n <option *ngFor=\"let size of pageSizes\" [value]=\"size.value\">\r\n {{size.label}}\r\n </option>\r\n </select>\r\n rows per page\r\n </div>\r\n <div class=\"ixt-table__controls\">\r\n <button (click)=\"onPageChange(1)\" [disabled]=\"currentPage === 1\">\r\n <span class=\"material-icons\">first_page</span>\r\n </button>\r\n <button (click)=\"onPageChange(currentPage - 1)\" [disabled]=\"currentPage === 1\">\r\n <span class=\"material-icons\">chevron_left</span>\r\n </button>\r\n <button *ngFor=\"let page of visiblePages\" [class.active]=\"page === currentPage\" \r\n [class.ellipsis]=\"page === -1\" [disabled]=\"page === -1\" \r\n (click)=\"onPageChange(page)\">\r\n {{page === -1 ? '...' : page}}\r\n </button>\r\n <button (click)=\"onPageChange(currentPage + 1)\" [disabled]=\"currentPage === totalPages\">\r\n <span class=\"material-icons\">chevron_right</span>\r\n </button>\r\n <button (click)=\"onPageChange(totalPages)\" [disabled]=\"currentPage === totalPages\">\r\n <span class=\"material-icons\">last_page</span>\r\n </button>\r\n </div>\r\n </div>\r\n </div>\r\n </div>\r\n</ng-container>\r\n\r\n<!-- Custom Editor Template -->\r\n<ng-template #customEditorTpl let-editor let-row=\"row\" let-col=\"col\" let-index=\"index\" let-control=\"control\">\r\n <coordinate-editor\r\n *ngIf=\"editor?.component === CoordinateEditorComponent\"\r\n [formControl]=\"control\"\r\n [config]=\"{\r\n type: col === 'lat' ? 'lat' : 'lon'\r\n }\">\r\n </coordinate-editor>\r\n\r\n <airport-code-editor \r\n *ngIf=\"editor?.component === AirportCodeEditorComponent\"\r\n [formControl]=\"control\"\r\n [config]=\"editor.getEditConfig()\"\r\n [existingCodes]=\"getCodes(data)\">\r\n </airport-code-editor>\r\n</ng-template>\r\n\r\n<!-- No Data Template -->\r\n<ng-template #noData>\r\n <div class=\"ixt-table__empty\">\r\n No data available\r\n </div>\r\n</ng-template>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { IxtTableComponent } from './ixt-table.component';\r\nimport { AirportCodeEditorComponent } from './editors/airport-code/airport-code-editor.component';\r\nimport { CoordinateEditorComponent } from './editors/coordinate/coordinate-editor.component';\r\nimport { BinaryEditorComponent } from './editors/binary-editor/binary-editor.component';\r\n\r\n\r\n@NgModule({\r\n declarations: [\r\n IxtTableComponent,\r\n AirportCodeEditorComponent,\r\n CoordinateEditorComponent,\r\n BinaryEditorComponent\r\n ],\r\n imports: [\r\n CommonModule,\r\n FormsModule, // Make sure this is here\r\n ReactiveFormsModule,\r\n MatIconModule,\r\n MatAutocompleteModule\r\n ],\r\n exports: [IxtTableComponent]\r\n})\r\nexport class IxtTableModule { }","// File: src/public-api.ts\r\nexport * from './components/ixt-table/ixt-table.interfaces';\r\n\r\n// Core UI Components\r\nexport * from './components/ixt-button/ixt-button.index';\r\nexport * from './components/ixt-dialog/ixt-dialog.index';\r\nexport * from './components/ixt-tabset/ixt-tabset.index';\r\nexport * from './components/ixt-panel/ixt-panel.index';\r\nexport * from './components/ixt-menu/ixt-menu.index';\r\nexport * from './components/ixt-tree/ixt-tree.index';\r\nexport * from './components/ixt-accordian/ixt-accordian.index';\r\n\r\n// Canvas & Viewport Components\r\nexport * from './components/ixt-canvas/ixt-canvas.index';\r\nexport * from './components/ixt-viewport/ixt-viewport.index';\r\n\r\n// Form Components\r\nexport * from './components/ixt-expression-builder/ixt-expression-builder.index';\r\n\r\n// Diagram Components\r\nexport * from './components/ixt-diagram/ixt-diagram.index';\r\nexport * from './components/ixt-diagram/types/clazz/ixt-clazz.index';\r\nexport * from './components/ixt-diagram/types/deployment/ixt-deployment.index';\r\nexport * from './components/ixt-diagram/types/EBNF/ixt.ebnf.index';\r\nexport * from './components/ixt-diagram/types/flow/ixt-flow.index';\r\nexport * from './components/ixt-diagram/types/gannt/gannt.index';\r\nexport * from './components/ixt-diagram/types/network/ixt-network.index';\r\nexport * from './components/ixt-diagram/types/sankey/ixt-sankey.index';\r\nexport * from './components/ixt-diagram/types/wireframe/ixt-wireframe.index';\r\n\r\n// Layer Management\r\nexport * from './components/ixt-layer-manager/ixt-layer-manager.index';\r\n\r\n// Calendar Component\r\nexport * from './components/ixt-calendar/ixt-calendar.index';\r\n\r\n// Map Component\r\nexport * from './components/ixt-map/ixt-map.index';\r\n\r\n// Split Pane Component\r\nexport * from './components/ixt-splitpane/index';\r\n\r\n// Add to src/public-api.ts\r\nexport * from './components/theme/theme.types';\r\nexport * from './components/theme/theme.colors';\r\n\r\n// In ixtlan/src/public-api.ts\r\nexport * from './components/ixt-table/ixt-table.module';\r\nexport * from './components/ixt-table/ixt-table.component';\r\nexport * from './components/ixt-table/ixt-table.interfaces';\r\n\r\n// In src/public-api.ts, add:\r\nexport interface TableConfig {\r\n columns: {\r\n [key: string]: {\r\n title: string;\r\n type?: string;\r\n sortable?: boolean; \r\n filterable?: boolean;\r\n }\r\n };\r\n sortable?: boolean;\r\n filterable?: boolean;\r\n pageSize?: number;\r\n}","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1","i2","i3","i1.MapErrorService","i1.MapService","i1.IxtMapComponent","i2.GeoProcessingService","i3.LayerRenderService","i4.LayerEventService","i5.LayerStateService","i1.IxtDialogService","i2.PaginationService","i3.FilterService","i4.SortService","i5.SelectionService","i6.EditService","i7","i8","i9.AirportCodeEditorComponent","i10.CoordinateEditorComponent","i11.BinaryEditorComponent"],"mappings":"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"}
|       --- LICENSE: This software is proprietary and confidential. It is intended for personal use only and may not be copied, modified, or distributed without explicit, written permission from the author.
|       --- README.md: # Ixtlan Angular Component Library This library contains reusable Angular components, starting with a configurable data table component. ## Development Setup ### Building the Library From the ixtlan project root: ```bash ng build ``` The build output will be in `dist/ixtlan/`. ### Development with GeoView To develop the library while testing it in GeoView: 1. Build the library first: ```bash cd /path/to/ixtlan ng build ``` 2. Link the built library: ```bash cd dist/ixtlan npm link ``` 3. Link from GeoView: ```bash cd /path/to/geoview npm link ixtlan ``` Now you can import components from the library: ```typescript import { IxtTableModule } from 'ixtlan'; @NgModule({ imports: [ IxtTableModule, // ... ] }) export class AppModule { } ``` ### Making Changes When you make changes to the library: 1. Rebuild the library: ```bash cd /path/to/ixtlan ng build ``` 2. Changes will be automatically available to GeoView through the npm link. ### Unlinking To remove the development links: 1. In GeoView: ```bash npm unlink ixtlan ``` 2. In Ixtlan: ```bash cd dist/ixtlan npm unlink ``` ## Using the Library ### IxtTable Component Import the module: ```typescript import { IxtTableModule } from 'ixtlan'; ``` Basic usage in template: ```html <ixt-table [data]="yourData" [columns]="yourColumns"> </ixt-table> ``` Configure columns: ```typescript import { IxtTableColumn } from 'ixtlan'; columns: IxtTableColumn[] = [ { field: 'name', header: 'Name' }, { field: 'age', header: 'Age' } ]; ``` ### Project Structure ``` ixtlan/ ├── src/ │ ├── components/ │ │ └── ixt-table/ │ │ ├── ixt-table.component.ts │ │ ├── ixt-table.component.html │ │ ├── ixt-table.component.scss │ │ ├── ixt-table.interfaces.ts │ │ ├── ixt-table.module.ts │ │ └── ixt-table.index.ts │ └── public-api.ts ├── package.json └── ng-package.json ```
|       --- index.d.ts: /** * Generated bundle index. Do not edit. */ /// <amd-module name="@dvanauken/ixtlan" /> export * from './public-api';
|       --- public-api.d.ts: export * from './components/ixt-table/ixt-table.interfaces'; export * from './components/ixt-button/ixt-button.index'; export * from './components/ixt-dialog/ixt-dialog.index'; export * from './components/ixt-tabset/ixt-tabset.index'; export * from './components/ixt-panel/ixt-panel.index'; export * from './components/ixt-menu/ixt-menu.index'; export * from './components/ixt-tree/ixt-tree.index'; export * from './components/ixt-accordian/ixt-accordian.index'; export * from './components/ixt-canvas/ixt-canvas.index'; export * from './components/ixt-viewport/ixt-viewport.index'; export * from './components/ixt-expression-builder/ixt-expression-builder.index'; export * from './components/ixt-diagram/ixt-diagram.index'; export * from './components/ixt-diagram/types/clazz/ixt-clazz.index'; export * from './components/ixt-diagram/types/deployment/ixt-deployment.index'; export * from './components/ixt-diagram/types/EBNF/ixt.ebnf.index'; export * from './components/ixt-diagram/types/flow/ixt-flow.index'; export * from './components/ixt-diagram/types/gannt/gannt.index'; export * from './components/ixt-diagram/types/network/ixt-network.index'; export * from './components/ixt-diagram/types/sankey/ixt-sankey.index'; export * from './components/ixt-diagram/types/wireframe/ixt-wireframe.index'; export * from './components/ixt-layer-manager/ixt-layer-manager.index'; export * from './components/ixt-calendar/ixt-calendar.index'; export * from './components/ixt-map/ixt-map.index'; export * from './components/ixt-splitpane/index'; export * from './components/theme/theme.types'; export * from './components/theme/theme.colors'; export * from './components/ixt-table/ixt-table.module'; export * from './components/ixt-table/ixt-table.component'; export * from './components/ixt-table/ixt-table.interfaces'; export interface TableConfig { columns: { [key: string]: { title: string; type?: string; sortable?: boolean; filterable?: boolean; }; }; sortable?: boolean; filterable?: boolean; pageSize?: number; }
\-- src
    +-- app
    |   +-- accordion
    |   |   --- accordion.data.ts: import { Injectable } from '@angular/core'; import { AccordionPanel } from '../../components/ixt-accordian/ixt-accordian.component'; @Injectable({ providedIn: 'root' }) export class AccordianDataService { getAccordianPanels(): AccordionPanel[] { return [ { title: 'Section 1', content: 'Content for section 1', isOpen: false }, { title: 'Section 2', content: 'Content for section 2', isOpen: false }, { title: 'Section 3', content: 'Content for section 3', isOpen: false } ]; } }
    |   +-- dialog
    |   |   --- ixt-dialog.handler.ts: <empty file>
    |   +-- expression
    |   |   --- ixt-expression.helper.ts: // src/app/expression/ixt-expression.helper.ts import { Injectable } from '@angular/core'; // Add this import { Expression, ExpressionGroup } from '../../components/ixt-expression-builder/ixt-expression-builder.interfaces'; @Injectable() export class IxtExpressionHelper { convertToJsonLogic(group: ExpressionGroup): any { if (group.children.length === 0) return {}; const logic: any = { [group.operator]: group.children.map((child: Expression | ExpressionGroup) => { if (child.type === 'group') { return this.convertToJsonLogic(child); } if (child.type === 'expression') { if (child.operator === 'in' || child.operator === 'not_in') { return { [child.operator === 'in' ? 'in' : '!in']: [ { var: child.field }, child.values || [] ] }; } return { [child.operator]: [ { var: child.field }, child.value ] }; } return {}; }) }; return logic; } }
    |   |   --- ixt-expression.provider.ts: // src/app/expression/ixt-expression.provider.ts import { Injectable } from '@angular/core'; // Add this import { Expression, ExpressionGroup } from '../../components/ixt-expression-builder/ixt-expression-builder.interfaces'; import { IxtExpressionHelper } from './ixt-expression.helper'; @Injectable() // Add this export class IxtExpressionProvider { expressionGroup: ExpressionGroup = { type: 'group', operator: 'and', children: [] }; expressionJsonLogic: any = {}; constructor(private helper: IxtExpressionHelper) {} onExpressionGroupChange(group: ExpressionGroup): void { this.expressionGroup = group; this.expressionJsonLogic = this.helper.convertToJsonLogic(group); } }
    |   +-- form
    |   |   --- ixt-employee-form.handler.ts: // src/app/form/ixt-employee-form.handler.ts import { Injectable } from '@angular/core'; import { IxtEmployeeFormProvider } from './ixt-employee-form.provider'; import { IxtDialogService } from '../../components/ixt-dialog/ixt-dialog.service'; import { EmployeeForm } from './ixt-employee-form.provider'; @Injectable() export class IxtEmployeeFormHandler { constructor( private provider: IxtEmployeeFormProvider, private dialogService: IxtDialogService ) {} async submitForm() { const form = this.provider.getCurrentForm(); // Validate form if (!this.validateForm(form)) { // this.dialogService.show({ // title: 'Validation Error', // message: 'Please fill in all required fields.', // type: DialogType.Error, // okText: 'OK', // showCancel: false, // isModal: true // }); return; } try { // Simulate API call await this.saveEmployee(form); // this.dialogService.show({ // title: 'Success', // message: 'Employee information saved successfully!', // type: DialogType.Success, // okText: 'OK', // showCancel: false, // isModal: true // }); this.provider.resetForm(); } catch (error) { // this.dialogService.show({ // title: 'Error', // message: 'Failed to save employee information. Please try again.', // type: DialogType.Error, // okText: 'OK', // showCancel: false, // isModal: true // }); } } confirmDelete(employeeId: number) { // this.dialogService.show({ // title: 'Confirm Delete', // message: 'Are you sure you want to delete this employee record?', // type: DialogType.Question, // okText: 'Yes', // cancelText: 'No', // showCancel: true, // isModal: true // }); } updateField(field: keyof EmployeeForm, value: any) { this.provider.updateForm({ [field]: value }); } private validateForm(form: EmployeeForm): boolean { return !!( form.firstName && form.lastName && form.email && form.department && form.position && form.hireDate ); } private async saveEmployee(form: EmployeeForm): Promise<void> { // Simulate API call return new Promise((resolve, reject) => { setTimeout(() => { // Simulate 90% success rate if (Math.random() > 0.1) { resolve(); } else { reject(new Error('Failed to save employee')); } }, 1000); }); } showUnsavedChangesDialog(): Promise<boolean> { return new Promise((resolve) => { // this.dialogService.show({ // title: 'Unsaved Changes', // message: 'You have unsaved changes. Do you want to continue?', // type: DialogType.Warning, // okText: 'Yes', // cancelText: 'No', // showCancel: true, // isModal: true // }); }); } resetForm() { // this.dialogService.show({ // title: 'Confirm Reset', // message: 'Are you sure you want to reset the form? All unsaved changes will be lost.', // type: DialogType.Warning, // okText: 'Yes', // cancelText: 'No', // showCancel: true, // isModal: true // }); } }
    |   |   --- ixt-employee-form.provider.ts: // src/app/form/ixt-employee-form.provider.ts import { Injectable } from '@angular/core'; import { BehaviorSubject } from 'rxjs'; export interface EmployeeForm { id?: number; firstName: string; lastName: string; email: string; phone: string; department: string; position: string; hireDate: Date; // Add any other employee fields you need } @Injectable() export class IxtEmployeeFormProvider { private formState = new BehaviorSubject<EmployeeForm>({ firstName: '', lastName: '', email: '', phone: '', department: '', position: '', hireDate: new Date() }); formState$ = this.formState.asObservable(); updateForm(form: Partial<EmployeeForm>) { this.formState.next({ ...this.formState.value, ...form }); } resetForm() { this.formState.next({ firstName: '', lastName: '', email: '', phone: '', department: '', position: '', hireDate: new Date() }); } getCurrentForm(): EmployeeForm { return this.formState.value; } }
    |   +-- layer
    |   |   --- ixt-layer.manager.ts: // src/app/layer/ixt-layer.manager.ts import { Injectable } from '@angular/core'; import { Layer } from '../../components/ixt-layer-manager/ixt-layer-manager.component'; @Injectable({ providedIn: 'root' // Makes it a singleton service available app-wide }) export class IxtLayerManager { onLayerChange(layers: any[]) { console.log('Layers updated:', layers); // Implement your layer update logic here } onLayerOrderChange(layers: any[]) { console.log('Layer order changed:', layers); // Implement your layer order update logic here } }
    |   |   --- ixt-layer.provider.ts: // src/app/layer/ixt-layer.provider.ts import { Injectable } from '@angular/core'; import { Layer } from '../../components/ixt-layer-manager/ixt-layer-manager.component'; @Injectable({ providedIn: 'root' // Makes it a singleton service available app-wide }) export class IxtLayerProvider { mapLayers: Layer[] = [ { id: 'layer1', name: 'Base Map', visible: true, fillColor: '#e3e3e3', strokeColor: '#666666', strokeStyle: 'solid' as const, order: 0 }, { id: 'layer2', name: 'Roads', visible: true, fillColor: '#ffffff', strokeColor: '#333333', strokeStyle: 'solid' as const, order: 1 }, { id: 'layer3', name: 'Points of Interest', visible: true, fillColor: '#ff4444', strokeColor: '#cc0000', strokeStyle: 'dotted' as const, order: 2 } ]; }
    |   +-- menu
    |   |   --- ixt-menu.provider.ts: // ixt-menu.provider.ts import { Injectable } from '@angular/core'; @Injectable({ providedIn: 'root' }) export class IxtMenuProvider { }
    |   +-- table
    |   |   --- ixt-table.provider.ts: // src/app/matrix/ixt-table.provider.ts import { Injectable } from '@angular/core'; import { HttpClient } from '@angular/common/http'; import { Observable } from 'rxjs'; import { IxtDialogService } from './../../components/ixt-dialog/ixt-dialog.service'; import { AirportCodeEditorComponent, ColumnConfigs, CoordinateEditorComponent } from './../../components/ixt-table/ixt-table.index'; @Injectable({ providedIn: 'root' }) export class IxtTableProvider { constructor( private http: HttpClient, private dialogService: IxtDialogService ) {} getColumnConfigs(): ColumnConfigs { return { code: { type: AirportCodeEditorComponent as any, field: 'code', editable: true, label: 'IATA Code' }, region: { type: 'text', field: 'region', label: 'Region', editable: true }, name: { type: 'text', field: 'name', label: 'Name', editable: true }, city: { type: 'text', field: 'city', label: 'City', editable: true }, country: { type: 'text', field: 'country', label: 'Country', editable: true }, lat: { type: CoordinateEditorComponent, field: 'lat', label: 'LAT', editable: true }, lon: { type: CoordinateEditorComponent, field: 'lon', label: 'LON', editable: true } }; } getAirportData(): Observable<any[]> { return this.http.get<any[]>('assets/Airport.json'); } getAirportColumnConfigs(): ColumnConfigs { return this.getColumnConfigs(); } }
    |   +-- tree
    |   |   --- ixt-tree.handler.ts: // src/app/tree/ixt-tree.handler.ts import { Injectable } from '@angular/core'; import { TreeNode } from '../../components/ixt-tree/ixt-tree.component'; @Injectable({ providedIn: 'root' }) export class IxtTreeHandler { onNodeExpanded(node: TreeNode): void { console.log('Node expanded:', node); } onNodeCollapsed(node: TreeNode): void { console.log('Node collapsed:', node); } onNodeSelected(node: TreeNode): void { console.log('Node selected:', node); } }
    |   |   --- ixt-tree.provider.ts: // src/app/tree/ixt-tree.provider.ts import { Injectable } from '@angular/core'; import { TreeNode } from '../../components/ixt-tree/ixt-tree.component'; @Injectable({ providedIn: 'root' }) export class IxtTreeProvider { treeData: TreeNode[] = [ { id: '1', label: 'Project Files', children: [ { id: '1.1', label: 'src', children: [ { id: '1.1.1', label: 'app', children: [ { id: '1.1.1.1', label: 'components' }, { id: '1.1.1.2', label: 'services' } ] }, { id: '1.1.2', label: 'assets' } ] }, { id: '1.2', label: 'config', children: [ { id: '1.2.1', label: 'tsconfig.json' }, { id: '1.2.2', label: 'package.json' } ] } ] } ]; }
    |   --- app.component.html: <main> <nav> <ixt-tabset title="Employee Form"> <ixt-tab title="Tab 1"> <ixt-tree [nodes]="treeProvider.treeData" (nodeExpanded)="treeHandler.onNodeExpanded($event)" (nodeCollapsed)="treeHandler.onNodeCollapsed($event)" (nodeSelected)="treeHandler.onNodeSelected($event)"> </ixt-tree> </ixt-tab> <ixt-tab title="Tab 2"> <ixt-accordian [panels]="accordionPanels" [allowMultiple]="true"> </ixt-accordian> </ixt-tab> </ixt-tabset> </nav> <header> <ixt-menu src="./../assets/menu.json" brandName="Your Brand" brandLogo="./../assets/logo.png" brandLink="/" variant="default" [showSearch]="true" searchPlaceholder="Search products..." (searchSubmitted)="onSearch($event)"> </ixt-menu> </header> <section> <ixt-tabset> <ixt-tab title="diagrams"> <ixt-tabset> <ixt-tab title="Clazz"> <ixt-clazz></ixt-clazz> </ixt-tab> <ixt-tab title="Sequence"> <ixt-diagram></ixt-diagram> </ixt-tab> <ixt-tab title="viewport"> <ixt-viewport></ixt-viewport> </ixt-tab> <ixt-tab title="cavas"> <ixt-canvas></ixt-canvas> </ixt-tab> <ixt-tab title="EBNF"> <ixt-ebnf></ixt-ebnf> </ixt-tab> <ixt-tab title="ERD"> <ixt-erd></ixt-erd> </ixt-tab> <ixt-tab title="Network"> <ixt-network></ixt-network> </ixt-tab> <ixt-tab title="Flow"> <ixt-flow></ixt-flow> </ixt-tab> <ixt-tab title="Gannt"> <gannt-diagram></gannt-diagram> </ixt-tab> <ixt-tab title="Sankey"> <ixt-sankey></ixt-sankey> </ixt-tab> <ixt-tab title="Wireframe"> <ixt-wireframe></ixt-wireframe> </ixt-tab> </ixt-tabset> </ixt-tab> <ixt-tab title="D3 Geo"> <ixt-map [width]="'100%'" [height]="'80%'" scale="1" translate="0,0"> <ixt-layer src="./../assets/countries.geojson" stroke="black" fill="gray"></ixt-layer> <ixt-layer src="./../assets/flights.minified.geojson" stroke="red" fill="none" (click)="select($event)"> properties.airlineIata === 'F9' </ixt-layer> <ixt-layer src="./../assets/flights.minified.geojson" stroke="green" fill="none" (click)="select($event)"> properties.airlineIata === 'NK' </ixt-layer> <ixt-layer src="./../assets/lakes.geojson" stroke="black" fill="blue" (click)="select($event)"></ixt-layer> <ixt-layer src="./../assets/rivers.geojson" stroke="purple" fill="none" (hover)="highlight($event)"></ixt-layer> </ixt-map> </ixt-tab> <ixt-tab title="Buttons"> <div class="button-showcase"> <!-- Size Variants --> <div class="section"> <h4>Size Variants</h4> <div class="button-row"> <ixt-button variant="primary" size="sm">Small</ixt-button> <ixt-button variant="primary" size="md">Medium</ixt-button> <ixt-button variant="primary" size="lg">Large</ixt-button> </div> </div> <!-- Theme Variants --> <div class="section"> <h4>Theme Variants</h4> <div class="button-row"> <div class="theme"> <h5>Base Theme</h5> <div class="button-row"> <ixt-button variant="primary">Primary</ixt-button> <ixt-button variant="secondary">Secondary</ixt-button> <ixt-button variant="danger">Danger</ixt-button> </div> </div> <div class="theme"> <h5>United Theme</h5> <div class="button-row"> <ixt-button variant="primary" [theme]="unitedThemeColors">Primary</ixt-button> <ixt-button variant="secondary" [theme]="unitedThemeColors">Secondary</ixt-button> <ixt-button variant="danger" [theme]="unitedThemeColors">Danger</ixt-button> </div> </div> </div> </div> <!-- Examples --> <div class="section"> <h4>Examples</h4> <div class="button-row"> <ixt-button *ngFor="let button of buttonDemos" [variant]="button.variant" [size]="button.size || 'md'" [theme]="button.theme || baseThemeColors" [disabled]="button.disabled" (onClick)="handleButtonClick(button.label)"> <span *ngIf="button.prefix" prefix>{{button.prefix}}</span> {{button.label}} <span *ngIf="button.suffix" suffix>{{button.suffix}}</span> </ixt-button> </div> </div> </div> </ixt-tab> <!-- Dialog Example --> <ixt-tab title="Dialog Example"> <div class="dialog-demo-container flex flex-col gap-4 p-4"> <!-- Service-based dialogs --> <div class="flex flex-col gap-2"> <h3 class="text-lg font-semibold">Service-based Dialogs</h3> <div class="flex flex-wrap gap-2"> <button (click)="showSuccessDialog()" class="px-4 py-2 bg-green-500 text-white rounded"> Success Dialog </button> </div> </div> </div> </ixt-tab> <ixt-tab title="Employee Form"> <form class="form-grid"> <h3>Personal Information</h3> <div class="field"> <label>First Name</label> <input type="text" [(ngModel)]="formData.firstName" name="firstName"> </div> <div class="field"> <label>Last Name</label> <input type="text" [(ngModel)]="formData.lastName" name="lastName"> </div> <div class="field"> <label>Email</label> <input type="email" [(ngModel)]="formData.email" name="email"> </div> <h3>Employment Details</h3> <div class="field"> <label>Department</label> <input type="text" [(ngModel)]="formData.department" name="department"> </div> <div class="field"> <label>Position</label> <input type="text" [(ngModel)]="formData.position" name="position"> </div> <div class="field"> <label>Start Date</label> <input type="date" [(ngModel)]="formData.hireDate" name="hireDate"> </div> <div class="actions"> <button type="button" (click)="employeeFormHandler.submitForm()">Save</button> <button type="button" (click)="employeeFormHandler.resetForm()">Cancel</button> </div> </form> </ixt-tab> <ixt-tab title="Calendar"> <ixt-calendar></ixt-calendar> </ixt-tab> <ixt-tab title="Standard Table"> <ixt-table [data]="tableAirportData" [columnConfigs]="tableColumnConfigs" *ngIf="tableAirportData.length"> </ixt-table> </ixt-tab> <ixt-tab title="IxtSplitPane"> <ixt-split-pane> <div class="left-pane"> <h2>Left</h2> </div> <div class="right-pane"> <h2>Right</h2> </div> </ixt-split-pane> </ixt-tab> <ixt-tab title="Panels"> <h2>Examples</h2> <div class="ixt-panel-container"> <div class="panel-grid"> <ixt-panel title="Basic Panel"> <div class="panel-content"> This is a basic panel with default settings (bordered=true, elevated=false) </div> </ixt-panel> <ixt-panel title="Elevated Panel" [elevated]="true" caption="With caption text"> <div class="panel-content"> This panel has elevation enabled, creating a shadow effect </div> </ixt-panel> <ixt-panel title="No Border Panel" [bordered]="false" [padding]="true"> <div class="panel-content"> This panel has borders disabled but keeps padding </div> </ixt-panel> <ixt-panel [bordered]="false" [padding]="false" [elevated]="false"> <div class="panel-content"> A minimal panel without title, borders, elevation or padding </div> </ixt-panel> </div> </div> </ixt-tab> </ixt-tabset> </section> <aside> <ixt-layer-manager [layers]="layerProvider.mapLayers" (layerChange)="layerManager.onLayerChange($event)" (layerOrderChange)="layerManager.onLayerOrderChange($event)"> </ixt-layer-manager> </aside> <footer>Footer</footer> </main> <app-lunch-form></app-lunch-form>
    |   --- app.component.ts: import { Component, ViewChild, AfterViewInit } from '@angular/core'; import { IxtLayerProvider } from './layer/ixt-layer.provider'; import { IxtLayerManager } from './layer/ixt-layer.manager'; import { IxtTreeProvider } from './tree/ixt-tree.provider'; import { IxtTreeHandler } from './tree/ixt-tree.handler'; import { IxtExpressionProvider } from './expression/ixt-expression.provider'; import { IxtExpressionHelper } from './expression/ixt-expression.helper'; import { IxtEmployeeFormProvider } from './form/ixt-employee-form.provider'; import { IxtEmployeeFormHandler } from './form/ixt-employee-form.handler'; import { IxtTableProvider } from './table/ixt-table.provider'; import { IxtMenuProvider } from './menu/ixt-menu.provider'; import { AccordianDataService } from './accordion/accordion.data'; import { IxtDialogService } from './../components/ixt-dialog/ixt-dialog.service'; import { firstValueFrom } from 'rxjs'; import { NgForm } from '@angular/forms'; import { LunchFormComponent } from './lunch-form.component'; import { ThemeVariant, ThemeColors } from './../components/theme/theme.types'; import { baseThemeColors, unitedThemeColors } from './../components/theme/theme.colors'; // Add to existing AppComponent class export interface ButtonDemo { label: string; variant: ThemeVariant; size?: 'sm' | 'md' | 'lg'; theme?: ThemeColors; disabled: boolean; prefix?: string; suffix?: string; } @Component({ selector: 'app-root', templateUrl: './app.component.html', styleUrls: ['./app.component.scss'], providers: [ IxtLayerProvider, IxtLayerManager, IxtTreeProvider, IxtTreeHandler, IxtExpressionProvider, IxtExpressionHelper, IxtEmployeeFormProvider, IxtEmployeeFormHandler, IxtTableProvider, IxtMenuProvider ] }) export class AppComponent implements AfterViewInit { @ViewChild(LunchFormComponent, { static: true }) lunchForm!: LunchFormComponent; protected baseThemeColors = baseThemeColors; protected unitedThemeColors = unitedThemeColors; formData = this.employeeFormProvider.getCurrentForm(); tableAirportData: any[] = []; tableColumnConfigs = this.tableProvider.getAirportColumnConfigs(); accordionPanels = this.accordianDataService.getAccordianPanels(); constructor( private dialog: IxtDialogService, public layerProvider: IxtLayerProvider, public layerManager: IxtLayerManager, public treeProvider: IxtTreeProvider, public treeHandler: IxtTreeHandler, public expressionProvider: IxtExpressionProvider, public expressionHelper: IxtExpressionHelper, public employeeFormProvider: IxtEmployeeFormProvider, public employeeFormHandler: IxtEmployeeFormHandler, public tableProvider: IxtTableProvider, public menuProvider: IxtMenuProvider, private accordianDataService: AccordianDataService ) { } ngOnInit() { this.tableProvider.getAirportData().subscribe(data => { this.tableAirportData = data; }); } ngAfterViewInit() { } select(event: Event): void { console.log('Selected:', event); } highlight(event: Event): void { console.log('Highlighted:', event); } onSearch(searchTerm: string) { console.log('Search term:', searchTerm); } // Dialog examples using improved service ------------------------------------------------------ async showSuccessDialog() { console.log('Starting dialog test'); await this.dialog.success('Success123!', 'Success Dialog 456'); console.log('Dialog completed'); } buttonDemos: ButtonDemo[] = [ { label: 'Submit Form', variant: 'primary', size: 'lg', suffix: '→', disabled: false }, { label: 'Cancel', variant: 'secondary', size: 'lg', disabled: false }, { label: 'Delete Record', variant: 'danger', prefix: '⚠️', disabled: false }, { label: 'United Theme', variant: 'primary', theme: unitedThemeColors, size: 'lg', disabled: false }, { label: 'Processing...', variant: 'primary', disabled: true }, { label: 'View Details', variant: 'info', size: 'sm', disabled: false } ]; handleButtonClick(label: string) { console.log(`Button clicked: ${label}`); } }
    |   --- app.module.ts: import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core'; import { BrowserModule } from '@angular/platform-browser'; import { BrowserAnimationsModule } from '@angular/platform-browser/animations'; import { FormsModule, ReactiveFormsModule } from '@angular/forms'; import { HttpClientModule } from '@angular/common/http'; import { RouterModule } from '@angular/router'; // Import components individually since library isn't published yet import { IxtButtonModule } from './../components/ixt-button/ixt-button.module'; import { IxtDialogModule } from './../components/ixt-dialog/ixt-dialog.module'; import { IxtTableModule } from './../components/ixt-table/ixt-table.module'; import { IxtTabsetModule } from './../components/ixt-tabset/ixt-tabset.module'; // Fixed name import { IxtTabComponent } from './../components/ixt-tabset/ixt-tab.component'; // Added individual component import { IxtPanelModule } from './../components/ixt-panel/ixt-panel.module'; import { IxtMenuModule } from './../components/ixt-menu/ixt-menu.module'; import { IxtTreeModule } from './../components/ixt-tree/ixt-tree.module'; import { IxtAccordianModule } from './../components/ixt-accordian/ixt-accordian.module'; // Fixed path import { IxtCanvasModule } from './../components/ixt-canvas/ixt-canvas.module'; import { IxtViewportModule } from './../components/ixt-viewport/ixt-viewport.module'; import { IxtExpressionBuilderModule } from './../components/ixt-expression-builder/ixt-expression-builder.module'; import { IxtMapModule } from './../components/ixt-map/ixt-map.module'; import { IxtLayerModule } from './../components/ixt-map/ixt-layer.module'; import { IxtLayerManagerModule } from './../components/ixt-layer-manager/ixt-layer-manager.module'; import { IxtSplitPaneModule } from './../components/ixt-splitpane/ixt-split-pane.module'; import { IxtCalendarModule } from './../components/ixt-calendar/ixt-calendar.module'; // Diagram Modules import { IxtDiagramModule } from './../components/ixt-diagram/ixt-diagram.module'; import { IxtClazzModule } from './../components/ixt-diagram/types/clazz/ixt-clazz.module'; import { IxtDeploymentModule } from './../components/ixt-diagram/types/deployment/ixt-deployment.module'; import { IxtEbnfModule } from './../components/ixt-diagram/types/EBNF/ixt-ebnf.module'; // Fixed path import { IxtFlowModule } from './../components/ixt-diagram/types/flow/ixt-flow.module'; import { IxtGanntModule } from './../components/ixt-diagram/types/gannt/gannt.module'; import { IxtNetworkModule } from './../components/ixt-diagram/types/network/ixt-network.module'; import { IxtSankeyModule } from './../components/ixt-diagram/types/sankey/ixt-sankey.module'; import { IxtWireframeModule } from './../components/ixt-diagram/types/wireframe/ixt-wireframe.module'; // Components import { AppComponent } from './app.component'; import { LunchFormComponent } from './lunch-form.component'; // Providers import { IxtEmployeeFormHandler } from './form/ixt-employee-form.handler'; import { IxtEmployeeFormProvider } from './form/ixt-employee-form.provider'; import { IxtExpressionHelper } from './expression/ixt-expression.helper'; import { IxtExpressionProvider } from './expression/ixt-expression.provider'; import { IxtLayerManager } from './layer/ixt-layer.manager'; import { IxtLayerProvider } from './layer/ixt-layer.provider'; import { IxtTreeHandler } from './tree/ixt-tree.handler'; import { IxtTableProvider } from './table/ixt-table.provider'; import { IxtTreeProvider } from './tree/ixt-tree.provider'; @NgModule({ declarations: [ AppComponent, LunchFormComponent ], imports: [ // Angular Core Modules BrowserModule, BrowserAnimationsModule, FormsModule, ReactiveFormsModule, HttpClientModule, RouterModule.forRoot([]), // Ixtlan Modules IxtAccordianModule, IxtButtonModule, IxtCalendarModule, IxtCanvasModule, IxtDialogModule, IxtDiagramModule, IxtExpressionBuilderModule, IxtLayerModule, // Added Layer module IxtLayerManagerModule, IxtMapModule, IxtMenuModule, IxtPanelModule, IxtSplitPaneModule, IxtTableModule, IxtTreeModule, IxtTabsetModule, IxtViewportModule, // Diagram Type Modules IxtClazzModule, IxtDeploymentModule, IxtEbnfModule, IxtFlowModule, IxtGanntModule, IxtNetworkModule, IxtSankeyModule, IxtWireframeModule ], providers: [ IxtEmployeeFormHandler, IxtEmployeeFormProvider, IxtExpressionHelper, IxtExpressionProvider, IxtLayerManager, IxtLayerProvider, IxtTreeHandler, IxtTreeProvider, IxtTableProvider ], schemas: [ CUSTOM_ELEMENTS_SCHEMA // Added schema for custom elements ], bootstrap: [AppComponent] }) export class AppModule { }
    |   --- lunch-form.component.html: <button (click)="showLunchOrderDialog()" class="place-order px-4 py-2 rounded"> Place Lunch Order </button> <ng-template #lunchOrderTemplate> <form #orderForm="ngForm"> <div class="space-y-4"> <div class="form-group"> <label class="block text-sm font-medium text-gray-700">Sandwich:</label> <select name="sandwich" [(ngModel)]="orderData.sandwich" required #sandwichField="ngModel" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm" > <option value="">Select a sandwich</option> <option>grilled cheese</option> <option>roast beef</option> <option>hamburger</option> </select> <div *ngIf="sandwichField.invalid && sandwichField.touched" class="text-red-500 text-sm"> Please select a sandwich </div> </div> <div class="form-group"> <label class="block text-sm font-medium text-gray-700">Side:</label> <select name="side" [(ngModel)]="orderData.side" required #sideField="ngModel" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm" > <option value="">Select a side</option> <option>French fries</option> <option>Onion Rings</option> <option>Salad</option> </select> <div *ngIf="sideField.invalid && sideField.touched" class="text-red-500 text-sm"> Please select a side </div> </div> <div class="form-group"> <label class="block text-sm font-medium text-gray-700">Drink:</label> <select name="drink" [(ngModel)]="orderData.drink" required #drinkField="ngModel" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm" > <option value="">Select a drink</option> <option>Coke</option> <option>Coffee</option> <option>Juice</option> </select> <div *ngIf="drinkField.invalid && drinkField.touched" class="text-red-500 text-sm"> Please select a drink </div> </div> <div class="form-group"> <label class="block text-sm font-medium text-gray-700">Name for order:</label> <input name="customerName" [(ngModel)]="orderData.customerName" required minlength="2" #nameField="ngModel" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm" placeholder="Enter your name" > <div *ngIf="nameField.invalid && nameField.touched" class="text-red-500 text-sm"> Please enter a name (minimum 2 characters) </div> </div> <div class="form-group"> <label>Takeout?</label> <div> <input type="checkbox" name="isTakeout" [(ngModel)]="orderData.isTakeout" > </div> </div> <!-- Debug info during development --> <div class="mt-4 text-sm text-gray-500"> Form Valid: {{orderForm.valid}} <br> Form Values: {{orderData | json}} </div> </div> </form> </ng-template>
    |   --- lunch-form.component.ts: import { Component, ViewChild, TemplateRef, OnInit, EventEmitter, Output } from '@angular/core'; import { NgForm } from '@angular/forms'; import { IxtDialogService } from './../components/ixt-dialog/ixt-dialog.service'; import { firstValueFrom } from 'rxjs'; interface LunchOrder { sandwich: string; side: string; drink: string; customerName: string; isTakeout: boolean; } @Component({ selector: 'app-lunch-form', templateUrl: './lunch-form.component.html', styleUrls: ['./lunch-form.component.scss'], }) export class LunchFormComponent implements OnInit { @Output() init = new EventEmitter<LunchFormComponent>(); @ViewChild('lunchOrderTemplate') lunchOrderTemplate!: TemplateRef<any>; @ViewChild('orderForm') orderForm!: NgForm; orderData: LunchOrder = { sandwich: '', side: '', drink: '', customerName: '', isTakeout: false }; constructor(private dialogService: IxtDialogService) { } ngOnInit(): void { this.init.emit(this); } private getFormData(): LunchOrder { return { sandwich: this.orderData.sandwich, // Bound to the "Sandwich" field side: this.orderData.side, // Bound to the "Side" field drink: this.orderData.drink, // Bound to the "Drink" field customerName: this.orderData.customerName, // Bound to the "Name for order" field isTakeout: this.orderData.isTakeout, // Bound to the "Takeout?" checkbox }; } private resetForm(): void { // Reset the form fields to default values this.orderData = { sandwich: '', side: '', drink: '', customerName: '', isTakeout: false, }; // Reset the form state if it exists if (this.orderForm) { this.orderForm.resetForm(this.orderData); } } public showLunchOrderDialog(): Promise<{ status: 'OK' | 'Cancel'; data?: LunchOrder }> { // Reset form data and state this.resetForm(); return new Promise((resolve) => { // this.dialogService.template('Lunch Order', this.lunchOrderTemplate, { // buttons: [ // { // text: 'Place Order', // action: () => { // if (this.orderForm?.valid) { // const formData = this.getFormData(); // Get the form data // resolve({ status: 'OK', data: formData }); // Resolve with structured success result // return formData; // Required by the dialogService to process the action // } else { // this.dialogService.warning('Please fill out all required fields'); // return false; // Prevent dialog from closing if validation fails // } // }, // close: true, // Ensure dialog closes // }, // { // text: 'Cancel', // action: () => { // resolve({ status: 'Cancel' }); // Resolve with cancel status // }, // close: true, // Ensure dialog closes // }, // ], // }).subscribe({ // complete: () => { // console.log('Dialog closed'); // Ensure the dialog completes properly // }, // }); }); } }
    +-- assets
    |   --- .gitkeep: <empty file>
    |   --- logo.png: <image file>
    |   --- logo2.png: <image file>
    +-- components
    |   +-- ixt-table
    |   |   +-- editors
    |   |   |   +-- airport-code
    |   |   |   |   --- airport-code-editor.component.ts: import { Component, Input, forwardRef, OnInit, Type } from '@angular/core'; import { ControlValueAccessor, NG_VALUE_ACCESSOR, FormControl } from '@angular/forms'; import { IxtDialogService } from '../../../ixt-dialog/ixt-dialog.service'; import { MatrixEditor, MatrixEditorConfig } from '../editor.interface'; @Component({ selector: 'airport-code-editor', template: ` <div class="editor-container"> <input type="text" [formControl]="inputControl" class="w-24 px-2 py-1 border rounded" [class.border-red-500]="hasError" [attr.maxlength]="config?.['maxLength'] || 3" (blur)="onTouched()" /> <div *ngIf="hasError" class="text-red-500 text-sm mt-1"> {{ errorMessage }} </div> </div> `, styles: [` .editor-container { position: relative; } `], providers: [ { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AirportCodeEditorComponent), multi: true } ] }) export class AirportCodeEditorComponent implements ControlValueAccessor, OnInit, MatrixEditor { @Input() config?: MatrixEditorConfig; @Input() existingCodes: string[] = []; @Input() field: string = 'code'; inputControl = new FormControl(''); hasError = false; errorMessage = ''; // MatrixEditor implementation component: Type<any> = AirportCodeEditorComponent; // ControlValueAccessor implementations public onChanged: (value: string) => void = () => {}; public onTouched: () => void = () => {}; constructor(private dialogService: IxtDialogService) {} ngOnInit() { this.setupValueChanges(); } // MatrixEditor methods getEditConfig(): MatrixEditorConfig { return { existingValues: this.existingCodes, maxLength: 3, pattern: /^[A-Z]+$/ }; } getDefaultValue(): string { return ''; } validate(value: any): boolean { if (!value) return false; const code = String(value).toUpperCase(); if (code.length !== 3) return false; if (!/^[A-Z]+$/.test(code)) return false; if (this.existingCodes.includes(code)) return false; return true; } format(value: any): string { return value ? String(value).toUpperCase() : ''; } private async setupValueChanges() { this.inputControl.valueChanges.subscribe(async value => { if (value !== null) { const upperValue = value.toUpperCase(); if (upperValue !== value) { this.inputControl.setValue(upperValue, { emitEvent: false }); } if (await this.validateValue(upperValue)) { console.log('Editor emitting code change:', upperValue); this.onChanged(upperValue); } } }); } private async validateValue(value: string): Promise<boolean> { this.hasError = false; this.errorMessage = ''; if (!value) return false; if (value.length !== (this.config?.['maxLength'] || 3)) { this.hasError = true; this.errorMessage = `Code must be exactly ${this.config?.['maxLength'] || 3} characters`; return false; } const pattern = this.config?.['pattern'] || /^[A-Z]+$/; if (!pattern.test(value)) { this.hasError = true; this.errorMessage = 'Only letters are allowed'; return false; } if (this.config?.existingValues?.includes(value)) { this.hasError = true; this.errorMessage = 'This code already exists'; // await this.dialogService.warning( // `The code "${value}" already exists. Please enter a different code.`, // 'Duplicate Code' // ); return false; } return true; } // ControlValueAccessor interface implementation writeValue(value: string): void { console.log('AirportCodeEditor writeValue:', value); this.inputControl.setValue(value, { emitEvent: false }); } registerOnChange(fn: (value: string) => void): void { console.log('AirportCodeEditor registerOnChange'); this.onChanged = fn; } registerOnTouched(fn: () => void): void { this.onTouched = fn; } setDisabledState(isDisabled: boolean): void { if (isDisabled) { this.inputControl.disable(); } else { this.inputControl.enable(); } } }
    |   |   |   +-- binary-editor
    |   |   |   |   --- binary-editor.component.ts: // src/components/ixt-matrix/matrix-editors/binary-editor/binary-editor.component.ts import { Component, Input, forwardRef, Output, EventEmitter, Type } from '@angular/core'; import { ControlValueAccessor, NG_VALUE_ACCESSOR, FormControl } from '@angular/forms'; import { MatrixEditor, MatrixEditorConfig } from '../editor.interface'; interface BinaryConfig extends MatrixEditorConfig { trueValue?: any; falseValue?: any; trueDisplay?: string; falseDisplay?: string; rowData?: any; rowIndex?: number; } interface SelectionEvent { selected: boolean; rowData?: any; rowIndex?: number; } @Component({ selector: 'binary-editor', template: ` <div class="editor-container"> <input type="checkbox" [formControl]="inputControl" [checked]="isChecked" (change)="onCheckboxChange($event)" class="w-4 h-4 rounded border-gray-300" /> <span *ngIf="showLabel" class="ml-2"> {{ isChecked ? config.trueDisplay : config.falseDisplay }} </span> </div> `, providers: [ { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => BinaryEditorComponent), multi: true } ] }) export class BinaryEditorComponent implements ControlValueAccessor, MatrixEditor { @Input() config: BinaryConfig = {}; @Output() selectionChange = new EventEmitter<SelectionEvent>(); inputControl = new FormControl<boolean | null>(false); component: Type<any> = BinaryEditorComponent; showLabel = false; isChecked = false; private onChange: (value: any) => void = () => { }; private onTouch: () => void = () => { }; constructor() { this.setupDefaults(); this.isChecked = false; } ngOnInit() { this.setupDefaults(); this.setupValueChanges(); } private setupDefaults() { this.config = { trueValue: true, falseValue: false, trueDisplay: 'True', falseDisplay: 'False', ...this.config }; } private setupValueChanges(): void { this.inputControl.valueChanges.subscribe((checked: boolean | null) => { if (checked !== null) { const value = checked ? this.config.trueValue : this.config.falseValue; this.isChecked = checked; this.onChange(value); this.selectionChange.emit({ selected: checked, rowData: this.config.rowData, rowIndex: this.config.rowIndex }); } }); } onCheckboxChange(event: Event) { const checkbox = event.target as HTMLInputElement; this.inputControl.setValue(checkbox.checked); this.onTouch(); } getEditConfig(): BinaryConfig { return { trueValue: this.config.trueValue || true, falseValue: this.config.falseValue || false, trueDisplay: this.config.trueDisplay || 'True', falseDisplay: this.config.falseDisplay || 'False' }; } writeValue(value: any): void { const checked = value === this.config.trueValue; this.isChecked = checked; this.inputControl.setValue(checked, { emitEvent: false }); } registerOnChange(fn: any): void { this.onChange = fn; } registerOnTouched(fn: any): void { this.onTouch = fn; } setDisabledState(isDisabled: boolean): void { if (isDisabled) { this.inputControl.disable(); } else { this.inputControl.enable(); } } }
    |   |   |   +-- coordinate
    |   |   |   |   --- coordinate-editor.component.ts: // src/components/ixt-matrix/matrix-editors/coordinate/coordinate-editor.component.ts import { Component, Input, forwardRef, OnInit, Type } from '@angular/core'; import { ControlValueAccessor, NG_VALUE_ACCESSOR, FormControl } from '@angular/forms'; import { IxtDialogService } from '../../../ixt-dialog/ixt-dialog.service'; import { MatrixEditor, MatrixEditorConfig } from '../editor.interface'; @Component({ selector: 'coordinate-editor', template: ` <div class="editor-container"> <input type="number" step="any" [min]="config?.['type'] === 'lat' ? -90 : -180" [max]="config?.['type'] === 'lat' ? 90 : 180" [formControl]="inputControl" class="w-24 px-2 py-1 border rounded" [class.border-red-500]="hasError" [placeholder]="config?.['type'] === 'lat' ? '(-90 to 90)' : '(-180 to 180)'" (blur)="onBlur()" /> <div *ngIf="hasError" class="text-red-500 text-sm mt-1"> {{ errorMessage }} </div> </div>`, providers: [ { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => CoordinateEditorComponent), multi: true } ] }) export class CoordinateEditorComponent implements ControlValueAccessor, OnInit, MatrixEditor { @Input() config?: MatrixEditorConfig; inputControl = new FormControl(''); hasError = false; errorMessage = ''; // MatrixEditor implementation component: Type<any> = CoordinateEditorComponent; private onChange: (value: number) => void = () => { }; private onTouch: () => void = () => { }; constructor(private dialogService: IxtDialogService) { } ngOnInit() { this.setupValueChanges(); } getEditConfig(): MatrixEditorConfig { return { type: this.config?.['type'] || 'lat' }; } validate(value: any): boolean { const num = Number(value); const isLat = this.config?.['type'] === 'lat'; return isLat ? (num >= -90 && num <= 90) : (num >= -180 && num <= 180); } // private setupValueChanges() { // this.inputControl.valueChanges.subscribe(value => { // if (value !== null) { // // Convert string to number for validation // const numValue = Number(value); // if (this.validateValue(numValue)) { // this.onChange(numValue); // } // } // }); // } setupValueChanges() { this.inputControl.valueChanges.subscribe(value => { if (value !== null) { const numValue = Number(value); if (!isNaN(numValue) && this.validateValue(numValue)) { this.onChange(numValue); } else { // Reset to last valid value or empty this.inputControl.setValue('', {emitEvent: false}); } } }); } private validateValue(value: number): boolean { this.hasError = false; this.errorMessage = ''; if (isNaN(value)) { this.hasError = true; this.errorMessage = 'Must be a valid number'; return false; } const isLat = this.config?.['type'] === 'lat'; const min = isLat ? -90 : -180; const max = isLat ? 90 : 180; if (value < min || value > max) { this.hasError = true; this.errorMessage = `Must be between ${min} and ${max}`; return false; } return true; } // ControlValueAccessor methods writeValue(value: number): void { this.inputControl.setValue(value?.toString() || '', { emitEvent: false }); } registerOnChange(fn: any): void { this.onChange = fn; } registerOnTouched(fn: any): void { this.onTouch = fn; } onBlur(): void { this.onTouch(); } }
    |   |   |   --- DatePickerComponent.ts: // matrix-editors/date-picker.component.ts import { Component, Input, Output, EventEmitter } from '@angular/core'; @Component({ selector: 'ixt-date-picker', template: ` <input type="date" [value]="value | date:'yyyy-MM-dd'" (change)="onChange($event)" class="ixt-date-picker__input"> `, styles: [` .ixt-date-picker__input { width: 100%; padding: 4px; border: 1px solid #ddd; border-radius: 4px; } `] }) export class DatePickerComponent { @Input() value: Date | null = null; @Output() valueChange = new EventEmitter<Date>(); onChange(event: Event) { const value = (event.target as HTMLInputElement).value; this.valueChange.emit(new Date(value)); } }
    |   |   |   --- color.editor.ts: <empty file>
    |   |   |   --- date.editor.ts: import { Injectable } from "@angular/core"; import { MatrixEditor } from "./editor.interface"; import { formatDate } from "@angular/common"; import { DatePickerComponent } from "./DatePickerComponent"; // matrix-editors/date.editor.ts @Injectable() export class DateEditor implements MatrixEditor { component = DatePickerComponent; getEditConfig() { return { format: 'yyyy-MM-dd', showTimeSelect: false }; } format(value: Date): string { return formatDate(value, 'shortDate', 'en-US'); } }
    |   |   |   --- editor.interface.ts: import { Type } from "@angular/core"; export interface MatrixEditorConfig { existingValues?: any[]; validators?: any[]; field?: string; [key: string]: any; } export interface MatrixEditor { component: Type<any>; getEditConfig(): any; validate?(value: any): boolean; format?(value: any): string; getDefaultValue?(): any; }
    |   |   +-- services
    |   |   |   +-- edit
    |   |   |   |   --- edit.model.ts: // src/components/ixt-matrix/services/edit/edit.model.ts import { FormControl } from '@angular/forms'; export interface RowChanges { [key: string]: any; } export interface EditState { editingRows: Set<number>; newRows: any[]; rowChanges: Map<number, RowChanges>; editControls: Map<string, FormControl>; } export interface EditEvent { rowIndex: number; field: string; value: any; }
    |   |   |   |   --- edit.service.ts: // src/components/ixt-matrix/services/edit/edit.service.ts import { Injectable } from '@angular/core'; import { BehaviorSubject } from 'rxjs'; import { FormControl } from '@angular/forms'; import { EditState, RowChanges, EditEvent } from './edit.model'; import { ColumnConfig } from '../../ixt-table.interfaces'; @Injectable({ providedIn: 'root' }) export class EditService { private readonly initialState: EditState = { editingRows: new Set<number>(), newRows: [], rowChanges: new Map<number, RowChanges>(), editControls: new Map<string, FormControl>() }; private state = new BehaviorSubject<EditState>(this.initialState); public state$ = this.state.asObservable(); private getDefaultValueForType(type: string | any): any { switch (type) { case 'number': return 0; case 'enum': return ''; case 'text': default: return ''; } } public addNewRow(columnConfigs: Record<string, ColumnConfig>): void { const newRow: any = {}; if (columnConfigs) { Object.entries(columnConfigs).forEach(([field, config]) => { newRow[field] = this.getDefaultValueForType(config.type); }); } const currentState = this.state.getValue(); const newRows = [...currentState.newRows]; newRows.unshift(newRow); // Start editing the new row const editingRows = new Set(currentState.editingRows); editingRows.add(-newRows.length); this.state.next({ ...currentState, newRows, editingRows }); } public startEditing(rowIndex: number): void { const currentState = this.state.getValue(); const editingRows = new Set(currentState.editingRows); editingRows.add(rowIndex); this.state.next({ ...currentState, editingRows }); } public cancelEditing(rowIndex: number): void { const currentState = this.state.getValue(); const editingRows = new Set(currentState.editingRows); const rowChanges = new Map(currentState.rowChanges); editingRows.delete(rowIndex); rowChanges.delete(rowIndex); this.state.next({ ...currentState, editingRows, rowChanges }); } public onValueChange(event: EditEvent): void { const { rowIndex, field, value } = event; const currentState = this.state.getValue(); const rowChanges = new Map(currentState.rowChanges); let changes = rowChanges.get(rowIndex) || {}; changes = { ...changes, [field]: value }; rowChanges.set(rowIndex, changes); this.state.next({ ...currentState, rowChanges }); } public getEditControl(rowIndex: number, field: string): FormControl { const key = `${rowIndex}-${field}`; const currentState = this.state.getValue(); let control = currentState.editControls.get(key); if (!control) { control = new FormControl(''); const editControls = new Map(currentState.editControls); editControls.set(key, control); this.state.next({ ...currentState, editControls }); } return control; } public saveChanges(data: any[]): any[] { const currentState = this.state.getValue(); const updatedData = [...data]; // Apply changes to existing rows currentState.rowChanges.forEach((changes, rowIndex) => { if (rowIndex >= 0) { updatedData[rowIndex] = { ...updatedData[rowIndex], ...changes }; } }); // Add new rows if (currentState.newRows.length) { // Apply any changes to new rows const processedNewRows = currentState.newRows.map((row, index) => { const changes = currentState.rowChanges.get(-index - 1); return changes ? { ...row, ...changes } : row; }); updatedData.unshift(...processedNewRows); } // Reset state this.state.next(this.initialState); return updatedData; } public isNewRow(index: number): boolean { return index < this.state.getValue().newRows.length; } public isEditing(rowIndex: number): boolean { return this.state.getValue().editingRows.has(rowIndex); } public hasChanges(): boolean { const currentState = this.state.getValue(); return currentState.rowChanges.size > 0 || currentState.newRows.length > 0; } public getNewRows(): any[] { return this.state.getValue().newRows; } public getRowChanges(rowIndex: number): RowChanges | undefined { return this.state.getValue().rowChanges.get(rowIndex); } public getRowIndex(displayIndex: number): number { return displayIndex - this.state.getValue().newRows.length; } public clearEditing(): void { this.state.next(this.initialState); } }
    |   |   |   +-- filter
    |   |   |   |   --- filter.model.ts: // src/components/ixt-matrix/services/filter/filter.model.ts import { FormControl } from '@angular/forms'; export type FilterOperator = 'equals' | 'startsWith' | 'contains' | 'between' | '>' | '<' | '>=' | '<=' | '!='; export interface FilterState { field: string; operator: FilterOperator; value: any; secondaryValue?: any; } export interface FilterControls { value: FormControl; operator?: FormControl<string>; }
    |   |   |   |   --- filter.service.ts: import { Injectable } from '@angular/core'; import { BehaviorSubject, Observable } from 'rxjs'; import { FormControl } from '@angular/forms'; import { FilterState, FilterOperator, FilterControls } from './filter.model'; import { ColumnConfig } from '../../ixt-table.interfaces'; @Injectable({ providedIn: 'root' }) export class FilterService { private activeFilters = new Map<string, FilterState>(); private filterControls = new Map<string, FilterControls>(); private activeFilterColumn?: string; private showFilters = false; private filtersChanged = new BehaviorSubject<Map<string, FilterState>>(new Map()); public filtersChanged$ = this.filtersChanged.asObservable(); public initializeFilter(field: string, config: ColumnConfig): void { const controls: FilterControls = { value: new FormControl('') }; if (config.type === 'number') { // Fix: Explicitly type the FormControl controls.operator = new FormControl<string>('=', { nonNullable: true }); } this.filterControls.set(field, controls); } public getFilterControl(field: string): FormControl | undefined { return this.filterControls.get(field)?.value; } public getOperatorControl(field: string): FormControl<string> | undefined { return this.filterControls.get(field)?.operator; } public onFilterChange(field: string, value: any, config?: ColumnConfig): void { if (value || value === 0) { const defaultOperator: FilterOperator = config?.type === 'number' ? 'equals' : 'contains'; const operator = this.getOperatorControl(field)?.value || defaultOperator; this.activeFilters.set(field, { field, operator: operator as FilterOperator, value: config?.type === 'number' ? Number(value) : value }); } else { this.activeFilters.delete(field); } this.filtersChanged.next(this.activeFilters); } public onOperatorChange(field: string): void { const currentValue = this.getFilterControl(field)?.value; if (currentValue || currentValue === 0) { this.onFilterChange(field, currentValue); } } public clearAllFilters(): void { this.activeFilters.clear(); this.filterControls.forEach(controls => { controls.value.reset(); controls.operator?.reset('='); }); this.filtersChanged.next(this.activeFilters); } public toggleFilters(column: string): void { if (this.activeFilterColumn === column) { this.activeFilterColumn = undefined; this.showFilters = false; } else { this.activeFilterColumn = column; this.showFilters = true; } } public matchesFilter(item: any, filter: FilterState): boolean { if (item === undefined || item === null) return false; // Handle numeric comparisons if (typeof item === 'number' || !isNaN(Number(item))) { const numValue = Number(item); const numFilterValue = Number(filter.value); return this.handleNumericComparison(numValue, numFilterValue, filter.operator); } // String handling const itemValue = String(item).toLowerCase(); const filterValue = String(filter.value).toLowerCase(); switch (filter.operator) { case 'startsWith': return itemValue.startsWith(filterValue); case 'equals': return itemValue === filterValue; case '!=': return itemValue !== filterValue; default: return itemValue.includes(filterValue); } } private handleNumericComparison(numValue: number, numFilterValue: number, operator: FilterOperator): boolean { switch (operator) { case '>': return numValue > numFilterValue; case '<': return numValue < numFilterValue; case '>=': return numValue >= numFilterValue; case '<=': return numValue <= numFilterValue; case '!=': return numValue !== numFilterValue; case 'equals': return numValue === numFilterValue; default: return false; } } public get isShowingFilters(): boolean { return this.showFilters; } public get activeColumn(): string | undefined { return this.activeFilterColumn; } public getActiveFilters(): Map<string, FilterState> { return this.activeFilters; } public hasActiveFilters(): boolean { return this.activeFilters.size > 0; } }
    |   |   |   +-- selection
    |   |   |   |   --- selection.model.ts: // src/components/ixt-matrix/services/selection/selection.model.ts export interface SelectionState { selectedRows: Set<number>; allSelected: boolean; }
    |   |   |   |   --- selection.service.ts: // src/components/ixt-matrix/services/selection/selection.service.ts import { Injectable } from '@angular/core'; import { BehaviorSubject } from 'rxjs'; import { SelectionState } from './selection.model'; @Injectable({ providedIn: 'root' }) export class SelectionService { private state = new BehaviorSubject<SelectionState>({ selectedRows: new Set<number>(), allSelected: false }); public state$ = this.state.asObservable(); public selectRow(index: number, selected: boolean = true): void { const currentState = this.state.getValue(); const newSelectedRows = new Set(currentState.selectedRows); if (selected) { newSelectedRows.add(index); } else { newSelectedRows.delete(index); } this.state.next({ selectedRows: newSelectedRows, allSelected: currentState.allSelected }); } public toggleAllRows(selected: boolean, totalRows: number): void { const newSelectedRows = new Set<number>(); if (selected) { // Add all row indices for (let i = 0; i < totalRows; i++) { newSelectedRows.add(i); } } this.state.next({ selectedRows: newSelectedRows, allSelected: selected }); } public clearSelection(): void { this.state.next({ selectedRows: new Set<number>(), allSelected: false }); } public getSelectedRows(): Set<number> { return this.state.getValue().selectedRows; } public isSelected(index: number): boolean { return this.state.getValue().selectedRows.has(index); } public isAllSelected(): boolean { return this.state.getValue().allSelected; } public getSelectedCount(): number { return this.state.getValue().selectedRows.size; } public setSelectedRows(indices: number[]): void { const newSelectedRows = new Set(indices); this.state.next({ selectedRows: newSelectedRows, allSelected: false // Reset all selected state when manually setting rows }); } public isPartiallySelected(totalRows: number): boolean { const selectedCount = this.getSelectedCount(); return selectedCount > 0 && selectedCount < totalRows; } }
    |   |   |   +-- sort
    |   |   |   |   --- sort.model.ts: // src/components/ixt-matrix/services/sort/sort.model.ts export type SortDirection = 'asc' | 'desc' | null; export interface SortState { column: string | null; direction: SortDirection; }
    |   |   |   |   --- sort.service.ts: // src/components/ixt-matrix/services/sort/sort.service.ts import { Injectable } from '@angular/core'; import { BehaviorSubject } from 'rxjs'; import { SortState, SortDirection } from './sort.model'; @Injectable({ providedIn: 'root' }) export class SortService { private readonly initialState: SortState = { column: null, direction: null }; private state = new BehaviorSubject<SortState>(this.initialState); public state$ = this.state.asObservable(); public toggleSort(column: string): void { const currentState = this.state.getValue(); let newDirection: SortDirection = null; if (currentState.column === column) { // Cycle through: null -> asc -> desc -> null if (currentState.direction === null) { newDirection = 'asc'; } else if (currentState.direction === 'asc') { newDirection = 'desc'; } else { newDirection = null; } } else { // New column, start with ascending newDirection = 'asc'; } this.state.next({ column: newDirection ? column : null, direction: newDirection }); } public getSortIcon(column: string): string { const { column: sortColumn, direction } = this.state.getValue(); if (sortColumn !== column) { return 'unfold_more'; } return direction === 'asc' ? 'arrow_upward' : 'arrow_downward'; } public sortData<T>(data: T[]): T[] { const { column, direction } = this.state.getValue(); if (!column || !direction) { return data; } return [...data].sort((a, b) => { const aVal = a[column as keyof T]; const bVal = b[column as keyof T]; if (aVal == null) return 1; if (bVal == null) return -1; let comparison: number; if (typeof aVal === 'string') { comparison = String(aVal).toLowerCase().localeCompare(String(bVal).toLowerCase()); } else { comparison = aVal < bVal ? -1 : (aVal > bVal ? 1 : 0); } return direction === 'asc' ? comparison : -comparison; }); } public clearSort(): void { this.state.next(this.initialState); } public getCurrentSort(): SortState { return this.state.getValue(); } public isColumnSorted(column: string): boolean { return this.state.getValue().column === column; } public getSortDirection(column: string): SortDirection { const { column: sortColumn, direction } = this.state.getValue(); return sortColumn === column ? direction : null; } }
    |   |   |   --- pagination.model.ts: // src/components/ixt-matrix/services/pagination/pagination.model.ts export interface PaginationState { currentPage: number; pageSize: number | 'all'; totalItems: number; } export interface PageSize { value: number | 'all'; label: string; }
    |   |   |   --- pagination.service.ts: // src/components/ixt-matrix/services/pagination/pagination.service.ts import { Injectable } from '@angular/core'; import { BehaviorSubject, Observable } from 'rxjs'; import { PageSize, PaginationState } from './pagination.model'; @Injectable({ providedIn: 'root' }) export class PaginationService { private readonly DEFAULT_PAGE_SIZES: PageSize[] = [ { value: 10, label: '10' }, { value: 100, label: '100' }, { value: 'all', label: 'All' } ]; private readonly MINIMUM_ROWS_FOR_PAGINATION = 50; private state = new BehaviorSubject<PaginationState>({ currentPage: 1, pageSize: 10, totalItems: 0 }); public state$ = this.state.asObservable(); public initialize(totalItems: number): void { this.updateState({ currentPage: 1, pageSize: 10, totalItems }); } public shouldShowPagination(): boolean { return this.state.getValue().totalItems > this.MINIMUM_ROWS_FOR_PAGINATION; } public getCurrentPage(): number { return this.state.getValue().currentPage; } public getPageSize(): number | 'all' { return this.state.getValue().pageSize; } public getPageSizes(): PageSize[] { return this.DEFAULT_PAGE_SIZES; } public getTotalPages(): number { const { totalItems, pageSize } = this.state.getValue(); if (pageSize === 'all' || totalItems <= this.MINIMUM_ROWS_FOR_PAGINATION) { return 1; } return Math.ceil(totalItems / +pageSize); } public getVisiblePages(): number[] { const totalPages = this.getTotalPages(); const currentPage = this.getCurrentPage(); if (totalPages <= 1) return []; const pages: number[] = [1]; const WINDOW_SIZE = 4; let start = Math.max(2, currentPage - WINDOW_SIZE); let end = Math.min(totalPages - 1, currentPage + WINDOW_SIZE); if (start > 2) { pages.push(-1); } for (let i = start; i <= end; i++) { pages.push(i); } if (end < totalPages - 1) { pages.push(-1); } if (totalPages > 1) { pages.push(totalPages); } return pages; } public onPageChange(page: number): void { const totalPages = this.getTotalPages(); if (page >= 1 && page <= totalPages) { this.updateState({ ...this.state.getValue(), currentPage: page }); } } public onPageSizeChange(newSize: number | 'all'): void { this.updateState({ ...this.state.getValue(), pageSize: newSize, currentPage: 1 }); } public getPaginatedData<T>(data: T[]): T[] { const { pageSize, currentPage } = this.state.getValue(); if (pageSize === 'all' || data.length <= this.MINIMUM_ROWS_FOR_PAGINATION) { return data; } const start = (currentPage - 1) * (+pageSize); const end = start + (+pageSize); return data.slice(start, end); } private updateState(newState: Partial<PaginationState>): void { this.state.next({ ...this.state.getValue(), ...newState }); } }
    |   |   --- ixt-table.component.html: <div class="ixt-table__toolbar"> <button class="ixt-table__action-button" (click)="addNewRow()"> <span class="material-icons">add</span> </button> <button class="ixt-table__action-button" [disabled]="!hasChanges && newRowsLength === 0" (click)="saveChanges()"> <span class="material-icons">save</span> </button> </div> <ng-container *ngIf="hasData; else noData"> <div class="ixt-table"> <!-- Header --> <div class="ixt-table__header"> <div class="ixt-table__cell"> <binary-editor [config]="{ rowIndex: -1 }" [(ngModel)]="allSelected" (selectionChange)="toggleAllRows($event.selected)"> </binary-editor> </div> <div class="ixt-table__cell" *ngFor="let col of columns" [class.ixt-table__cell--first]="col === columns[0]"> <div class="ixt-table__cell-content"> {{columnConfigs?.[col]?.label || col}} <div class="ixt-table__cell-actions"> <button class="ixt-table__sort-toggle" (click)="toggleSort(col)"> <span class="material-icons">{{getSortIcon(col)}}</span> </button> <button class="ixt-table__filter-toggle" (click)="toggleFilters(col)"> <span class="material-icons">filter_alt</span> </button> </div> </div> </div> <div class="ixt-table__cell">Actions</div> </div> <!-- Filter Row --> <div class="ixt-table__header" *ngIf="showFilters"> <div class="ixt-table__cell"></div> <div class="ixt-table__cell" *ngFor="let col of columns" [class.ixt-table__cell--first]="col === columns[0]"> <ng-container *ngIf="activeFilterColumn === col && columnConfigs?.[col]"> <ng-container [ngSwitch]="getEditorType(columnConfigs?.[col]?.type)"> <!-- Text Filter --> <input *ngSwitchCase="'text'" [formControl]="getFilterControl(col)" [placeholder]="columnConfigs?.[col]?.placeholder || ''" class="ixt-table__filter-input"> <!-- Number Filter --> <div *ngSwitchCase="'number'" class="ixt-table__number-filter"> <select [formControl]="getOperatorControl(col)" (change)="onOperatorChange(col)"> <option value="=">=</option> <option value=">">&gt;</option> <option value="<">&lt;</option> <option value=">=">&gt;=</option> <option value="<=">&lt;=</option> <option value="!=">!=</option> </select> <input type="number" [formControl]="getFilterControl(col)" [placeholder]="columnConfigs?.[col]?.placeholder || ''" class="ixt-table__filter-input"> </div> <!-- Enum Filter --> <div *ngSwitchCase="'enum'"> <select [formControl]="getFilterControl(col)" class="ixt-table__filter-input"> <option value="">All</option> <option *ngFor="let opt of columnConfigs?.[col]?.enumValues" [value]="opt.value"> {{opt.label}} </option> </select> </div> </ng-container> </ng-container> </div> <div class="ixt-table__cell"></div> </div> <!-- Data Rows --> <div class="ixt-table__row" *ngFor="let row of paginatedData; let i = index" [class.ixt-table__row--selected]="isRowSelected(getRowIndex(i))"> <div class="ixt-table__cell"> <binary-editor [config]="{ rowIndex: getRowIndex(i), rowData: row }" [ngModel]="isRowSelected(getRowIndex(i))" (selectionChange)="selectRow(getRowIndex(i), $event.selected)"> </binary-editor> </div> <div class="ixt-table__cell" *ngFor="let col of columns" [class.ixt-table__cell--first]="col === columns[0]"> <ng-container *ngIf="isNewRow(i) || isEditing(getRowIndex(i)); else displayValue"> <ng-container [ngSwitch]="getEditorType(columnConfigs?.[col]?.type)"> <!-- Text Input --> <input *ngSwitchCase="'text'" type="text" [ngModel]="row[col]" (ngModelChange)="onValueChange(getRowIndex(i), col, $event)"> <!-- Number Input --> <input *ngSwitchCase="'number'" type="number" [ngModel]="row[col]" (ngModelChange)="onValueChange(getRowIndex(i), col, $event)"> <!-- Enum Select --> <select *ngSwitchCase="'enum'" [ngModel]="row[col]" (ngModelChange)="onValueChange(getRowIndex(i), col, $event)"> <option *ngFor="let opt of columnConfigs?.[col]?.enumValues" [ngValue]="opt.value"> {{opt.label}} </option> </select> <!-- Custom Editor --> <ng-container *ngSwitchCase="'custom'"> <ng-container *ngTemplateOutlet="customEditorTpl; context: { $implicit: getEditorComponent(columnConfigs?.[col]?.type), row: row, col: col, index: i, control: getEditControl(getRowIndex(i), col) }"> </ng-container> </ng-container> </ng-container> </ng-container> <ng-template #displayValue> <ng-container [ngSwitch]="columnConfigs?.[col]?.type"> <ng-container *ngSwitchCase="CoordinateEditorComponent"> {{formatCoordinate(row[col])}} </ng-container> <ng-container *ngSwitchDefault> {{row[col]}} </ng-container> </ng-container> </ng-template> </div> <div class="ixt-table__cell"> <ng-container *ngIf="!isNewRow(i) && !isEditing(getRowIndex(i))"> <button class="ixt-table__action-button" (click)="startEditing(getRowIndex(i))"> <span class="material-icons">edit</span> </button> </ng-container> <ng-container *ngIf="isNewRow(i) || isEditing(getRowIndex(i))"> <button class="ixt-table__action-button" (click)="cancelEditing(getRowIndex(i))"> <span class="material-icons">close</span> </button> </ng-container> </div> </div> <!-- Pagination --> <div class="ixt-table__footer" *ngIf="showPagination"> <div class="ixt-table__pagination"> <div class="ixt-table__page-size"> <select [formControl]="pageSizeControl"> <option *ngFor="let size of pageSizes" [value]="size.value"> {{size.label}} </option> </select> rows per page </div> <div class="ixt-table__controls"> <button (click)="onPageChange(1)" [disabled]="currentPage === 1"> <span class="material-icons">first_page</span> </button> <button (click)="onPageChange(currentPage - 1)" [disabled]="currentPage === 1"> <span class="material-icons">chevron_left</span> </button> <button *ngFor="let page of visiblePages" [class.active]="page === currentPage" [class.ellipsis]="page === -1" [disabled]="page === -1" (click)="onPageChange(page)"> {{page === -1 ? '...' : page}} </button> <button (click)="onPageChange(currentPage + 1)" [disabled]="currentPage === totalPages"> <span class="material-icons">chevron_right</span> </button> <button (click)="onPageChange(totalPages)" [disabled]="currentPage === totalPages"> <span class="material-icons">last_page</span> </button> </div> </div> </div> </div> </ng-container> <!-- Custom Editor Template --> <ng-template #customEditorTpl let-editor let-row="row" let-col="col" let-index="index" let-control="control"> <coordinate-editor *ngIf="editor?.component === CoordinateEditorComponent" [formControl]="control" [config]="{ type: col === 'lat' ? 'lat' : 'lon' }"> </coordinate-editor> <airport-code-editor *ngIf="editor?.component === AirportCodeEditorComponent" [formControl]="control" [config]="editor.getEditConfig()" [existingCodes]="getCodes(data)"> </airport-code-editor> </ng-template> <!-- No Data Template --> <ng-template #noData> <div class="ixt-table__empty"> No data available </div> </ng-template>
    |   |   --- ixt-table.component.ts: import { ChangeDetectorRef, Component, Input, OnInit, TemplateRef, ViewChild, Type } from '@angular/core'; import { FormControl } from '@angular/forms'; import { ColumnConfig, FilterOperator, FilterState, MatrixNode, PageSize, RowChanges } from './ixt-table.interfaces'; import { debounceTime, distinctUntilChanged } from 'rxjs/operators'; import { IxtDialogService } from '../ixt-dialog/ixt-dialog.index'; import { PaginationService } from './services/pagination.service'; import { FilterService } from './services/filter/filter.service'; import { SortService } from './services/sort/sort.service'; import { SelectionService } from './services/selection/selection.service'; import { EditService } from './services/edit/edit.service'; import { MatrixEditor } from './editors/editor.interface'; import { AirportCodeEditorComponent, CoordinateEditorComponent } from './ixt-table.index'; export type SortDirection = 'asc' | 'desc' | null; @Component({ selector: 'ixt-table', templateUrl: './ixt-table.component.html', styleUrls: ['./ixt-table.component.scss'] }) export class IxtTableComponent implements OnInit { @Input() data: MatrixNode[] = []; @Input() columnConfigs?: Record<string, ColumnConfig>; @ViewChild('noData') noDataTemplate!: TemplateRef<any>; @ViewChild('customEditorTpl') customEditorTpl!: TemplateRef<any>; columns: string[] = []; pageSizeControl = new FormControl<number | 'all'>(10); readonly AirportCodeEditorComponent = AirportCodeEditorComponent; readonly CoordinateEditorComponent = CoordinateEditorComponent; constructor( private dialogService: IxtDialogService, private changeDetectorRef: ChangeDetectorRef, private paginationService: PaginationService, private filterService: FilterService, private sortService: SortService, private selectionService: SelectionService, private editService: EditService ) { } ngOnInit() { this.columns = this.getColumns(this.data); // Initialize pagination this.paginationService.initialize(this.data.length); // Initialize filters if (this.columnConfigs) { Object.entries(this.columnConfigs).forEach(([field, config]) => { this.filterService.initializeFilter(field, config); // Get the control from service and subscribe to changes const control = this.filterService.getFilterControl(field); if (control) { control.valueChanges.pipe( debounceTime(config.debounceTime || 300), distinctUntilChanged() ).subscribe(value => { this.filterService.onFilterChange(field, value, config); }); } }); } // Subscribe to filter changes this.filterService.filtersChanged$.subscribe(() => { this.changeDetectorRef.markForCheck(); }); // Subscribe to pagination changes this.paginationService.state$.subscribe(() => { this.changeDetectorRef.markForCheck(); }); // Subscribe to page size changes this.pageSizeControl.valueChanges.subscribe(value => { if (value) { this.paginationService.onPageSizeChange(value); } }); } // edit logic start addNewRow(): void { this.editService.addNewRow(this.columnConfigs || {}); } cancelEditing(rowIndex: number): void { this.editService.cancelEditing(rowIndex); } getEditorComponent(type: any): MatrixEditor | null { console.log('getEditorComponent called with:', { type, isCoordinate: type === CoordinateEditorComponent, isAirport: type === AirportCodeEditorComponent }); if (type === AirportCodeEditorComponent) { return new AirportCodeEditorComponent(this.dialogService); } if (type === CoordinateEditorComponent) { return new CoordinateEditorComponent(this.dialogService); } return null; } getEditorType(type: any): string { console.log('getEditorType called with:', { type, isString: typeof type === 'string', isCoordinate: type === CoordinateEditorComponent, isAirport: type === AirportCodeEditorComponent }); if (typeof type === 'string') { return type; } if (type === AirportCodeEditorComponent || type === CoordinateEditorComponent) { console.log('Returning custom for editor type'); return 'custom'; } console.log('Falling back to text type'); return 'text'; } getEditControl(rowIndex: number, field: string): FormControl { return this.editService.getEditControl(rowIndex, field); } getRowIndex(displayIndex: number): number { return this.editService.getRowIndex(displayIndex); } get hasChanges(): boolean { return this.editService.hasChanges(); } isEditing(index: number): boolean { return this.editService.isEditing(index); } isNewRow(displayIndex: number): boolean { return this.editService.isNewRow(displayIndex); } get newRowsLength(): number { return this.editService.getNewRows().length; } onValueChange(rowIndex: number, field: string, value: any): void { this.editService.onValueChange({ rowIndex, field, value }); } saveChanges(): void { this.data = this.editService.saveChanges(this.data); this.changeDetectorRef.markForCheck(); } startEditing(rowIndex: number): void { this.editService.startEditing(rowIndex); } // edit logic end // filter logic start get activeFilterColumn(): string | undefined { return this.filterService.activeColumn; } getFilterControl(col: string): FormControl<any> { return this.filterService.getFilterControl(col)!; } getOperatorControl(col: string): FormControl<string> { return this.filterService.getOperatorControl(col)!; } onOperatorChange(field: string): void { this.filterService.onOperatorChange(field); } get showFilters(): boolean { return this.filterService.isShowingFilters; } toggleFilters(col: string): void { this.filterService.toggleFilters(col); } // filter logic end // pagination logic start get currentPage(): number { return this.paginationService.getCurrentPage(); } onPageChange(page: number): void { this.paginationService.onPageChange(page); } onPageSizeChange(size: number | 'all'): void { this.paginationService.onPageSizeChange(size); } get paginatedData(): MatrixNode[] { // Start with combined data let allData = [...this.editService.getNewRows(), ...this.data]; // Apply filters if (this.filterService.hasActiveFilters()) { const activeFilters = this.filterService.getActiveFilters(); const filteredExisting = this.data.filter(item => Array.from(activeFilters.values()).every(filter => this.filterService.matchesFilter(item[filter.field], filter) ) ); allData = [...this.editService.getNewRows(), ...filteredExisting]; } // Apply sorting allData = this.sortService.sortData(allData); // Apply pagination return this.paginationService.getPaginatedData(allData); } get pageSizes(): PageSize[] { return this.paginationService.getPageSizes(); } get showPagination(): boolean { return this.paginationService.shouldShowPagination(); } get totalPages(): number { return this.paginationService.getTotalPages(); } get visiblePages(): number[] { return this.paginationService.getVisiblePages(); } // pagination logic end // selection logic start get allSelected(): boolean { return this.selectionService.isAllSelected(); } set allSelected(value: boolean) { this.selectionService.toggleAllRows(value, this.data.length); } getSelectedRows(): MatrixNode[] { return Array.from(this.selectionService.getSelectedRows()) .map(index => this.data[index]) .filter(row => row !== undefined); } get hasSelectedRows(): boolean { return this.selectionService.getSelectedCount() > 0; } isRowSelected(index: number): boolean { return this.selectionService.isSelected(index); } selectRow(index: number, selected = true): void { this.selectionService.selectRow(index, selected); } setSelectedRows(indices: number[]): void { this.selectionService.setSelectedRows(indices); } toggleAllRows(selected: boolean): void { this.selectionService.toggleAllRows(selected, this.data.length); } // selection logic end // sort logic start getSortIcon(column: string): string { return this.sortService.getSortIcon(column); } toggleSort(column: string): void { this.sortService.toggleSort(column); } // sort logic end // i/o logic start formatCoordinate(value: number): string { return value.toFixed(1); } getCodes(data: MatrixNode[]): string[] { if (!data) return []; return data.map(row => row['code']?.toString() || ''); } // i/o logic end // config logic start getColumns(data: MatrixNode[]): string[] { if (!data?.length) return []; const firstRow = data[0]; return Object.keys(firstRow); } get hasData(): boolean { return !!this.data?.length; } // config logic end }
    |   |   --- ixt-table.index.ts: // src/components/ixt-matrix/index.ts // Fix these import paths to match your folder structure export * from './ixt-table.component'; export * from './ixt-table.interfaces'; export * from './ixt-table.module'; export interface MatrixNode { [key: string]: any; children?: MatrixNode[]; } export * from './editors/airport-code/airport-code-editor.component'; export * from './editors/binary-editor/binary-editor.component'; export * from './editors/coordinate/coordinate-editor.component';
    |   |   --- ixt-table.interfaces.ts: // File: src/components/ixt-table/ixt-table.interfaces.ts import { Type } from "@angular/core"; import { MatrixEditor } from "./editors/editor.interface"; export interface MatrixNode { code?: string; // Add this property [key: string]: any; } export interface PageSize { value: number | 'all'; label: string; } export type FilterOperator = 'equals' | 'startsWith' | 'contains' | 'between' | '>' | '<' | '>=' | '<=' | '!='; export interface FilterState { field: string; operator: FilterOperator; value: any; secondaryValue?: any; } export interface ColumnConfig { type: 'text' | 'number' | 'enum' | Type<MatrixEditor> | MatrixEditor; field: string; label?: string; operator?: FilterOperator; enumValues?: { value: any, label: string }[]; placeholder?: string; debounceTime?: number; editable?: boolean; config?: any; } export interface RowChanges { [key: string]: any; } export type ColumnConfigs = Record<string, ColumnConfig>;
    |   |   --- ixt-table.module.ts: import { NgModule } from '@angular/core'; import { CommonModule } from '@angular/common'; import { FormsModule, ReactiveFormsModule } from '@angular/forms'; import { MatIconModule } from '@angular/material/icon'; import { MatAutocompleteModule } from '@angular/material/autocomplete'; import { IxtTableComponent } from './ixt-table.component'; import { AirportCodeEditorComponent } from './editors/airport-code/airport-code-editor.component'; import { CoordinateEditorComponent } from './editors/coordinate/coordinate-editor.component'; import { BinaryEditorComponent } from './editors/binary-editor/binary-editor.component'; @NgModule({ declarations: [ IxtTableComponent, AirportCodeEditorComponent, CoordinateEditorComponent, BinaryEditorComponent ], imports: [ CommonModule, FormsModule, // Make sure this is here ReactiveFormsModule, MatIconModule, MatAutocompleteModule ], exports: [IxtTableComponent] }) export class IxtTableModule { }
    |   |   --- ixt-table.service.ts: import { Injectable } from '@angular/core'; import { BehaviorSubject, combineLatest, Observable } from 'rxjs'; import { map } from 'rxjs/operators'; import { MatrixRow } from './matrix-base.type'; import { PageSize } from './ixt-matrix.interfaces'; export interface PaginationState { currentPage: number; pageSize: number | 'all'; totalPages: number; } @Injectable({ providedIn: 'root' }) export class MatrixDataService { private dataSubject = new BehaviorSubject<MatrixRow[]>([]); private newRowsSubject = new BehaviorSubject<MatrixRow[]>([]); private paginationStateSubject = new BehaviorSubject<PaginationState>({ currentPage: 1, pageSize: 10, totalPages: 1 }); readonly pageSizes: PageSize[] = [ { value: 10, label: '10' }, { value: 100, label: '100' }, { value: 'all', label: 'All' } ]; constructor() { } // Data operations setData(data: MatrixRow[]): void { this.dataSubject.next(data); this.updateTotalPages(); } getData(): Observable<MatrixRow[]> { return this.dataSubject.asObservable(); } // New rows operations addNewRow(row: MatrixRow): void { const currentNewRows = this.newRowsSubject.value; this.newRowsSubject.next([row, ...currentNewRows]); } getNewRows(): Observable<MatrixRow[]> { return this.newRowsSubject.asObservable(); } commitNewRows(): void { const currentData = this.dataSubject.value; const newRows = this.newRowsSubject.value; this.dataSubject.next([...newRows, ...currentData]); this.newRowsSubject.next([]); this.updateTotalPages(); } // Pagination operations setPaginationState(state: Partial<PaginationState>): void { const currentState = this.paginationStateSubject.value; this.paginationStateSubject.next({ ...currentState, ...state }); this.updateTotalPages(); } getPaginationState(): Observable<PaginationState> { return this.paginationStateSubject.asObservable(); } getPaginatedData(): Observable<MatrixRow[]> { return this.combineData().pipe( map(allData => this.paginateData(allData)) ); } private combineData(): Observable<MatrixRow[]> { return combineLatest([ this.dataSubject, this.newRowsSubject ]).pipe( map(([data, newRows]) => [...newRows, ...data]) ); } private paginateData(data: MatrixRow[]): MatrixRow[] { const state = this.paginationStateSubject.value; if (state.pageSize === 'all' || data.length <= 50) { return data; } const start = (state.currentPage - 1) * (+state.pageSize); const end = start + (+state.pageSize); return data.slice(start, end); } private updateTotalPages(): void { const currentState = this.paginationStateSubject.value; const totalItems = this.dataSubject.value.length + this.newRowsSubject.value.length; const totalPages = currentState.pageSize === 'all' || totalItems <= 50 ? 1 : Math.ceil(totalItems / +currentState.pageSize); this.paginationStateSubject.next({ ...currentState, totalPages }); } }
    |   |   --- ixt-table.type.ts: export interface MatrixRow { [key: string]: any; }
    |   \-- theme
    |       +-- styles
    |       |   \-- themes
    |       --- index.ts: // src/components/theme/index.ts export * from './theme.types'; export * from './theme.colors';
    |       --- theme.colors.ts: import { ThemeColors } from "./theme.types"; // src/app/theme/theme.colors.ts export const baseThemeColors: ThemeColors = { primary: { base: '#4169E1', // Royal Blue hover: '#2850c9', active: '#1e40af', text: '#ffffff' }, secondary: { base: '#6c757d', hover: '#5c636a', active: '#4d5154', text: '#ffffff' }, tertiary: { base: '#003057', // Rhapsody Blue (Pantone 289) hover: '#002649', // Darker shade for hover state active: '#001C3B', // Even darker shade for active state text: '#FFFFFF' // White text for contrast }, success: { base: '#28a745', hover: '#218838', active: '#1e7e34', text: '#ffffff' }, danger: { base: '#dc3545', hover: '#c82333', active: '#bd2130', text: '#ffffff' }, warning: { base: '#ffc107', hover: '#e0a800', active: '#d39e00', text: '#000000' }, info: { base: '#17a2b8', hover: '#138496', active: '#117a8b', text: '#ffffff' }, light: { base: '#f8f9fa', hover: '#e2e6ea', active: '#dae0e5', text: '#000000' }, dark: { base: '#343a40', hover: '#23272b', active: '#1d2124', text: '#ffffff' }, default: { base: '#ffffff', hover: '#f8f9fa', active: '#e9ecef', text: '#000000' } }; // src/app/theme/theme.colors.ts export const unitedThemeColors: ThemeColors = { primary: { base: '#0033A0', // United Blue hover: '#00297A', // Darker shade for hover state active: '#002060', // Even darker shade for active state text: '#FFFFFF' // White text for contrast }, secondary: { base: '#6D2077', // Atlantic Amethyst hover: '#5A1A63', // Darker shade for hover state active: '#48154F', // Even darker shade for active state text: '#FFFFFF' // White text for contrast }, tertiary: { base: '#003057', // Rhapsody Blue (Pantone 289) hover: '#002649', // Darker shade for hover state active: '#001C3B', // Even darker shade for active state text: '#FFFFFF' // White text for contrast }, success: { base: '#4CAF50', // Subtle green hover: '#43A047', // Darker shade for hover state active: '#388E3C', // Even darker shade for active state text: '#FFFFFF' // White text for contrast }, warning: { base: '#FF9800', // Warm yellow-orange hover: '#FB8C00', // Darker shade for hover state active: '#F57C00', // Even darker shade for active state text: '#000000' // Black text for readability }, danger: { base: '#E53935', // Tomato red hover: '#D32F2F', // Darker shade for hover state active: '#C62828', // Even darker shade for active state text: '#FFFFFF' // White text for contrast }, info: { base: '#17A2B8', // Standard info blue hover: '#138496', // Darker shade for hover state active: '#117A8B', // Even darker shade for active state text: '#FFFFFF' // White text for contrast }, light: { base: '#F8F9FA', // Light gray hover: '#E2E6EA', // Darker shade for hover state active: '#DAE0E5', // Even darker shade for active state text: '#000000' // Black text for readability }, dark: { base: '#343A40', // Dark gray hover: '#23272B', // Darker shade for hover state active: '#1D2124', // Even darker shade for active state text: '#FFFFFF' // White text for contrast }, default: { base: '#FFFFFF', // White hover: '#F8F9FA', // Light gray for hover state active: '#E9ECEF', // Darker gray for active state text: '#000000' // Black text for readability } };
    |       --- theme.colors.united.ts: <empty file>
    |       --- theme.module.ts: // src/components/theme/theme.module.ts import { NgModule } from '@angular/core'; import { CommonModule } from '@angular/common'; @NgModule({ imports: [CommonModule], exports: [] }) export class ThemeModule {}
    |       --- theme.types.ts: // src/app/theme/theme.types.ts export type ThemeVariant = | 'primary' // Main brand color, key actions | 'secondary' // Supporting color | 'tertiary' | 'success' // Positive actions/states | 'danger' // Errors, destructive actions | 'warning' // Caution states | 'info' // Informational states | 'light' // Light backgrounds | 'dark' // Dark text/backgrounds | 'default'; // Default state export interface ThemeColor { base: string; hover: string; active: string; text: string; } export type ThemeColors = Record<ThemeVariant, ThemeColor>;
    +-- services
    |   --- breadcrumb.service.ts: import { Injectable } from '@angular/core'; import { Router, NavigationEnd, ActivatedRoute } from '@angular/router'; import { filter, map } from 'rxjs/operators'; import { Observable } from 'rxjs'; export interface Breadcrumb { label: string; url: string; } @Injectable({ providedIn: 'root' }) export class BreadcrumbService { breadcrumbs$: Observable<Breadcrumb[]>; constructor(private router: Router, private activatedRoute: ActivatedRoute) { this.breadcrumbs$ = this.router.events.pipe( filter(event => event instanceof NavigationEnd), map(event => { const root = this.activatedRoute.root; return this.createBreadcrumbs(root); }) ); } private createBreadcrumbs(route: ActivatedRoute, url: string = '', breadcrumbs: Breadcrumb[] = []): Breadcrumb[] { const children: ActivatedRoute[] = route.children; if (children.length === 0) { return breadcrumbs; } for (const child of children) { const routeURL: string = child.snapshot.url.map(segment => segment.path).join('/'); if (routeURL !== '') { url += `/${routeURL}`; } const label = child.snapshot.data['breadcrumb']; if (label) { breadcrumbs.push({ label, url }); } return this.createBreadcrumbs(child, url, breadcrumbs); } return breadcrumbs; } }
    --- index.html: <!doctype html> <html> <head> <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet"> <meta charset="utf-8"> <title>Ixtlan Demo</title> <base href="/"> <meta name="viewport" content="width=device-width, initial-scale=1"> <link rel="icon" type="image/x-icon" href="favicon.ico"> </head> <body> <app-root></app-root> </body> </html>
    --- main.ts: import { platformBrowserDynamic } from '@angular/platform-browser-dynamic'; import { AppModule } from './app/app.module'; platformBrowserDynamic().bootstrapModule(AppModule) .catch(err => console.error(err));
    --- public-api.ts: // File: src/public-api.ts export * from './components/ixt-table/ixt-table.interfaces'; // Core UI Components export * from './components/ixt-button/ixt-button.index'; export * from './components/ixt-dialog/ixt-dialog.index'; export * from './components/ixt-tabset/ixt-tabset.index'; export * from './components/ixt-panel/ixt-panel.index'; export * from './components/ixt-menu/ixt-menu.index'; export * from './components/ixt-tree/ixt-tree.index'; export * from './components/ixt-accordian/ixt-accordian.index'; // Canvas & Viewport Components export * from './components/ixt-canvas/ixt-canvas.index'; export * from './components/ixt-viewport/ixt-viewport.index'; // Form Components export * from './components/ixt-expression-builder/ixt-expression-builder.index'; // Diagram Components export * from './components/ixt-diagram/ixt-diagram.index'; export * from './components/ixt-diagram/types/clazz/ixt-clazz.index'; export * from './components/ixt-diagram/types/deployment/ixt-deployment.index'; export * from './components/ixt-diagram/types/EBNF/ixt.ebnf.index'; export * from './components/ixt-diagram/types/flow/ixt-flow.index'; export * from './components/ixt-diagram/types/gannt/gannt.index'; export * from './components/ixt-diagram/types/network/ixt-network.index'; export * from './components/ixt-diagram/types/sankey/ixt-sankey.index'; export * from './components/ixt-diagram/types/wireframe/ixt-wireframe.index'; // Layer Management export * from './components/ixt-layer-manager/ixt-layer-manager.index'; // Calendar Component export * from './components/ixt-calendar/ixt-calendar.index'; // Map Component export * from './components/ixt-map/ixt-map.index'; // Split Pane Component export * from './components/ixt-splitpane/index'; // Add to src/public-api.ts export * from './components/theme/theme.types'; export * from './components/theme/theme.colors'; // In ixtlan/src/public-api.ts export * from './components/ixt-table/ixt-table.module'; export * from './components/ixt-table/ixt-table.component'; export * from './components/ixt-table/ixt-table.interfaces'; // In src/public-api.ts, add: export interface TableConfig { columns: { [key: string]: { title: string; type?: string; sortable?: boolean; filterable?: boolean; } }; sortable?: boolean; filterable?: boolean; pageSize?: number; }
